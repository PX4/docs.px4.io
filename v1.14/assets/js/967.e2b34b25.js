(window.webpackJsonp=window.webpackJsonp||[]).push([[967],{1831:function(t,s,e){"use strict";e.r(s);var a=e(19),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"flight-tasks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flight-tasks"}},[t._v("#")]),t._v(" Flight Tasks")]),t._v(" "),e("p",[e("em",[t._v("Flight Tasks")]),t._v(" are used within "),e("RouterLink",{attrs:{to:"/en/concept/flight_modes.html"}},[t._v("Flight Modes")]),t._v(" to provide specific movement behaviours: e.g. follow me, or flight smoothing.")],1),t._v(" "),e("h2",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),e("p",[t._v("A flight task is a class in the flight task framework derived from the base class "),e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/release/1.14/src/modules/flight_mode_manager/tasks/FlightTask/FlightTask.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("FlightTask"),e("OutboundLink")],1),t._v(". Its goal is to generate setpoints for the controller from arbitrary input data, where each task implements the desired vehicle behavior for a specific mode.\nProgrammers typically override the "),e("code",[t._v("activate()")]),t._v(" and "),e("code",[t._v("update()")]),t._v(" virtual methods by calling the base task's minimal implementation and extending with the implementation of the desired behavior.\nThe "),e("code",[t._v("activate()")]),t._v(" method is called when switching to the task and allows to initialize its state and take over gently from the passed over setpoints the previous task was just applying.")]),t._v(" "),e("p",[e("code",[t._v("update()")]),t._v(" is called on every loop iteration during the execution and contains the core behavior implementation producing setpoints.")]),t._v(" "),e("p",[t._v("By convention tasks are contained in a subfolder of "),e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/tree/release/1.14/src/modules/flight_mode_manager/tasks",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4-Autopilot/src/modules/flight_mode_manager/tasks"),e("OutboundLink")],1),t._v(' named after the task, and the source files are named with the prefix "FlightTask".')]),t._v(" "),e("div",{staticClass:"custom-block note"},[e("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),e("p",[t._v("Video overviews from PX4 developer summits are "),e("a",{attrs:{href:"#video"}},[t._v("provided below")]),t._v(".")])]),t._v(" "),e("h2",{attrs:{id:"creating-a-flight-task"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-flight-task"}},[t._v("#")]),t._v(" Creating a Flight Task")]),t._v(" "),e("p",[t._v("The instructions below might be used to create a task named "),e("em",[t._v("MyTask")]),t._v(":")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Create a directory for the new flight task in "),e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/tree/release/1.14/src/modules/flight_mode_manager/tasks",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4-Autopilot/src/modules/flight_mode_manager/tasks"),e("OutboundLink")],1),t._v(".\nBy convention the directory is named after the task, so we will call it "),e("strong",[t._v("/MyTask")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mkdir PX4-Autopilot/src/modules/flight_mode_manager/tasks/MyTask\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Create empty source code and "),e("em",[t._v("cmake")]),t._v(" files for the new flight task in the "),e("em",[t._v("MyTask")]),t._v(' directory using the prefix "FlightTask":')]),t._v(" "),e("ul",[e("li",[t._v("CMakeLists.txt")]),t._v(" "),e("li",[t._v("FlightTaskMyTask.hpp")]),t._v(" "),e("li",[t._v("FlightTaskMyTask.cpp")])])]),t._v(" "),e("li",[e("p",[t._v("Update "),e("strong",[t._v("CMakeLists.txt")]),t._v(" for the new task")]),t._v(" "),e("ul",[e("li",[t._v("Copy the contents of the "),e("strong",[t._v("CMakeLists.txt")]),t._v(" for another task - e.g. "),e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/release/1.14/src/modules/flight_mode_manager/tasks/Orbit/CMakeLists.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("Orbit/CMakeLists.txt"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("Update the copyright to the current year"),e("div",{staticClass:"language-cmake extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cmake"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("############################################################################")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Copyright (c) 2021 PX4 Development Team. All rights reserved.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("Modify the code to reflect the new task - e.g. replace "),e("code",[t._v("FlightTaskOrbit")]),t._v(" with "),e("code",[t._v("FlightTaskMyTask")]),t._v(".\nThe code will look something like this:"),e("div",{staticClass:"language-cmake extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cmake"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("px4_add_library")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FlightTaskMyTask\n    FlightTaskMyTask.cpp\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FlightTaskMyTask "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v(" FlightTask"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FlightTaskMyTask "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_SOURCE_DIR")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("Update the header file (in this case "),e("strong",[t._v("FlightTaskMyTask.hpp")]),t._v("):\nMost tasks reimplement the virtual methods "),e("code",[t._v("activate()")]),t._v(" and "),e("code",[t._v("update()")]),t._v(", and in this example we also have a private variable.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[t._v("once")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FlightTask.hpp"')])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlightTaskMyTask")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token base-clause"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlightTask")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("FlightTaskMyTask")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("FlightTaskMyTask")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("activate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehicle_local_position_setpoint_s last_setpoint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" _origin_z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Update the cpp file as appropriate.\nThis example provides as simple implementation of "),e("strong",[t._v("FlightTaskMyTask.cpp")]),t._v(" that simply indicates that the task methods are called.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FlightTaskMyTask.hpp"')])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlightTaskMyTask")]),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("activate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehicle_local_position_setpoint_s last_setpoint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" ret "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlightTask")]),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("activate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("last_setpoint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("PX4_INFO")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FlightTaskMyTask activate was called! ret: %d"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ret"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// report if activation was successful")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlightTaskMyTask")]),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("PX4_INFO")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FlightTaskMyTask update was called!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// report update")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Add the new task to the list of tasks to be built in "),e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/release/1.14/src/modules/flight_mode_manager/CMakeLists.txt#L40",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4-Autopilot/src/modules/flight_mode_manager/CMakeLists.txt"),e("OutboundLink")],1),t._v(":")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("list(APPEND flight_tasks_to_add\n   Orbit\n   MyTask\n)\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Update a flight mode to ensure that the task is called.\nUsually a parameter is used to select when a particular flight task should be used.")]),t._v(" "),e("p",[t._v("For example, to enable our new "),e("code",[t._v("MyTask")]),t._v(" in multicopter Position mode:")]),t._v(" "),e("ul",[e("li",[t._v("Update "),e("code",[t._v("MPC_POS_MODE")]),t._v(" ("),e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/release/1.14/src/modules/mc_pos_control/multicopter_position_mode_params.c",target:"_blank",rel:"noopener noreferrer"}},[t._v("multicopter_position_mode_params.c"),e("OutboundLink")],1),t._v(') to add an option for selecting "MyTask" if the parameter has a previously unused value like 5:'),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("...\n * @value 0 Direct velocity\n * @value 3 Smoothed velocity\n * @value 4 Acceleration based\n * @group Multicopter Position Control\n */\nPARAM_DEFINE_INT32(MPC_POS_MODE, 4);\n")])])])]),t._v(" "),e("li",[t._v("Add a case for your new option in the switch for the parameter "),e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/release/1.14/src/modules/flight_mode_manager/FlightModeManager.cpp#L266-L285",target:"_blank",rel:"noopener noreferrer"}},[t._v("FlightModeManager.cpp"),e("OutboundLink")],1),t._v(" to enable the task when "),e("code",[t._v("_param_mpc_pos_mode")]),t._v(" has the right value."),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// manual position control")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_param_mpc_pos_mode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n     error "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("switchTask")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FlightTaskIndex"),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ManualPositionSmoothVel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add case for new task: MyTask")]),t._v("\n     error "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("switchTask")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FlightTaskIndex"),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("MyTask"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),e("p",[t._v("case 4:\n....\n...")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"test-new-flight-task"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#test-new-flight-task"}},[t._v("#")]),t._v(" Test New Flight Task")]),t._v(" "),e("p",[t._v("To test the flight task you need to run the vehicle with the task enabled.\nFor the example above, this means setting the parameter "),e("code",[t._v("MPC_POS_MODE")]),t._v(" to 5, taking off, and switching the vehicle to "),e("RouterLink",{attrs:{to:"/en/flight_modes_mc/position.html"}},[t._v("Position mode")]),t._v(".")],1),t._v(" "),e("div",{staticClass:"custom-block note"},[e("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),e("p",[t._v("The task defined above should only be tested on the simulator. The code doesn't actually create setpoints so the vehicle will not fly.")])]),t._v(" "),e("h2",{attrs:{id:"video"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#video"}},[t._v("#")]),t._v(" Video")]),t._v(" "),e("p",[t._v("The following videos provide an overview of flight tasks in PX4.\nThe first covers the state of the flight task framework in PX4 v1.9.\nThe second is an update, which covers the changes in PX4 v1.11.")]),t._v(" "),e("h4",{attrs:{id:"px4-flight-task-architecture-overview-px4-developer-summit-2019"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#px4-flight-task-architecture-overview-px4-developer-summit-2019"}},[t._v("#")]),t._v(" PX4 Flight Task Architecture Overview (PX4 Developer Summit 2019)")]),t._v(" "),e("p",[t._v("A description of how flight modes work in PX4 v1.9 (Dennis Mannhart, Matthias Grob).")]),t._v(" "),e("p"),e("div",{staticClass:"embed-responsive embed-responsive-16by9"},[e("iframe",{staticClass:"embed-responsive-item youtube-player",attrs:{type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/-dkQG8YLffc",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),e("p"),t._v(" "),e("h4",{attrs:{id:"overview-of-multicopter-control-from-sensors-to-motors-px4-developer-summit-virtual-2020"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview-of-multicopter-control-from-sensors-to-motors-px4-developer-summit-virtual-2020"}},[t._v("#")]),t._v(" Overview of multicopter control from sensors to motors (PX4 Developer Summit Virtual 2020)")]),t._v(" "),e("p"),e("div",{staticClass:"embed-responsive embed-responsive-16by9"},[e("iframe",{staticClass:"embed-responsive-item youtube-player",attrs:{type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/orvng_11ngQ",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),e("p"),t._v(" "),e("p",[t._v("The relevant section of this video is an update of flight tasks in PX4 v11.1 at (9min 20sec).\nThe "),e("a",{attrs:{href:"https://static.sched.com/hosted_files/px4developersummitvirtual2020/1b/PX4%20Developer%20Summit%202020%20-%20Overview%20of%20multicopter%20control%20from%20sensors%20to%20motors.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("slides can be found here (PDF)"),e("OutboundLink")],1),t._v(" - Slides 9 and 12 are relevant.")])])}),[],!1,null,null,null);s.default=n.exports}}]);