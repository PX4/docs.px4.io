(window.webpackJsonp=window.webpackJsonp||[]).push([[1421],{2617:function(a,s,t){"use strict";t.r(s);var e=t(19),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"시뮬레이션-디버깅"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#시뮬레이션-디버깅"}},[a._v("#")]),a._v(" 시뮬레이션 디버깅")]),a._v(" "),t("p",[a._v("호스트 시스템에서 시뮬레이션이 실행 중이므로, 데스크탑 개발 도구를 사용할 수 있습니다.")]),a._v(" "),t("h2",{attrs:{id:"clang-주소-새니타이저-mac-os-linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clang-주소-새니타이저-mac-os-linux"}},[a._v("#")]),a._v(" CLANG 주소 새니타이저(Mac OS, Linux)")]),a._v(" "),t("p",[a._v("Clang 주소 새니타이저는 정렬(버스) 오류 및 분할 오류와 같은 기타 메모리 오류를 찾는 데 도움이 됩니다. 아래 명령은 올바른 컴파일 옵션을 설정합니다.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# only required on first address sanitizer run after a normal build")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("PX4_ASAN")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl jmavsim\n")])])]),t("h2",{attrs:{id:"valgrind"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#valgrind"}},[a._v("#")]),a._v(" Valgrind")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("brew "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" valgrind\n")])])]),t("p",[a._v("또는")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" valgrind\n")])])]),t("p",[a._v("SITL 시뮬레이션 중에 valgrind를 사용하려면:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl_default jmavsim___valgrind\n")])])]),t("h2",{attrs:{id:"launch-gazebo-classic-sitl-without-debugger"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#launch-gazebo-classic-sitl-without-debugger"}},[a._v("#")]),a._v(" Launch Gazebo Classic SITL Without Debugger")]),a._v(" "),t("p",[a._v("By default SITL is launched without a debugger attached when using any simulator backend:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl_default gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl_default gazebo-classic\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl_default jmavsim\n")])])]),t("p",[a._v("For Gazebo Classic (only) you can also start the simulator with a debugger attached. Note however, that you must provide the vehicle type in the simulator target, as shown below:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl_default gazebo-classic_iris_gdb\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl_default gazebo-classic_iris_lldb\n")])])]),t("p",[a._v("This will start the debugger and launch the SITL application with Gazebo and the Iris simulator. 디버거 셸에서 실행을 중지하려면 "),t("code",[a._v("CTRL-C")]),a._v("를 입력합니다.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("Process "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("16529")]),a._v(" stopped\n* thread "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#1: tid = 0x114e6d, 0x00007fff90f4430a libsystem_kernel.dylib`__read_nocancel + 10, name = 'px4', queue = 'com.apple.main-thread', stop reason = signal SIGSTOP")]),a._v("\n    frame "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#0: 0x00007fff90f4430a libsystem_kernel.dylib`__read_nocancel + 10")]),a._v("\nlibsystem_kernel.dylib`__read_nocancel:\n-"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  0x7fff90f4430a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("+1"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("0")]),a._v(">")]),a._v(": jae    0x7fff90f44314            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("+2"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("0")]),a._v(">")]),a._v("\n    0x7fff90f4430c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("+1"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(": movq   %rax, %rdi\n    0x7fff90f4430f "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("+1"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("5")]),a._v(">")]),a._v(": jmp    0x7fff90f3fc53            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" cerror_nocancel\n    0x7fff90f44314 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("+2"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("0")]),a._v(">")]),a._v(": retq\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("lldb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n")])])]),t("p",[a._v("DriverFrameworks 스케줄링이 디버깅 세션을 방해하지 않도록 하려면, "),t("code",[a._v("SIGCONT")]),a._v("를 LLDB 및 GDB에서 마스킹합니다.")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("lldb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" process handle SIGCONT -n "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v(" -p "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v(" -s "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n")])])]),t("p",[a._v("또는 GDB의 경우:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("(gdb) handle SIGCONT noprint nostop\n")])])]),t("p",[a._v("그 후 lldb 또는 gdb 셸은 일반 세션처럼 작동합니다. LLDB/GDB 문서를 참고하십시오.")]),a._v(" "),t("p",[a._v("마지막 매개변수인 <viewer_model_debugger> 트리플렛은 실제로 빌드 디렉토리에서 make에 전달되므로")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl_default gazebo-classic_iris_gdb\n")])])]),t("p",[a._v("명령은 다음 명령과 같습니다.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl_default   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Configure with cmake")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" -C build/px4_sitl_default classic_iris_gdb\n")])])]),t("p",[a._v("A full list of the available make targets in the build directory can be obtained with:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v("\n")])])]),t("h2",{attrs:{id:"attaching-gdb-to-running-sitl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attaching-gdb-to-running-sitl"}},[a._v("#")]),a._v(" Attaching GDB to running SITL")]),a._v(" "),t("p",[a._v("You can also start your simulation, and "),t("em",[a._v("then")]),a._v(" attach "),t("code",[a._v("gdb")]),a._v(":")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("In one terminal screen enter the command to start your simulation:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl_default gazebo-classic\n")])])]),t("p",[a._v("As the script runs, note the "),t("strong",[a._v("SITL COMMAND:")]),a._v(' output text located right above the large "PX4" text. It will list the location of your px4 bin file for later use.')]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("SITL COMMAND: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<px4 bin file>"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<build dir>"')]),a._v("/etc\n\n______  __   __    ___ \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" ___ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" / /   /   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("_/ /  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" V /   / /"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  __/   /   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("  / /_"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     / /^"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("___  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("_"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("/   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("/     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("_/\n\npx4 starting.\n\nINFO  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("px4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" startup script: /bin/sh etc/init.d-posix/rcS "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\nINFO  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("init"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" found model autostart "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" as "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("SYS_AUTOSTART")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10015")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Open another terminal and type:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -a\n")])])]),t("p",[a._v('You will want to note the PID of the process named "PX4"')]),a._v(" "),t("p",[a._v("(In this example it is 14149)")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("atlas:~/px4/main/PX4-Autopilot$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -a\n    PID TTY          TIME CMD\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1796")]),a._v(" tty2     00:01:59 Xorg\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1836")]),a._v(" tty2     00:00:00 gnome-session-b\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("14027")]),a._v(" pts/1    00:00:00 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("14077")]),a._v(" pts/1    00:00:00 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("14078")]),a._v(" pts/1    00:00:00 cmake\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("14079")]),a._v(" pts/1    00:00:00 ninja\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("14090")]),a._v(" pts/1    00:00:00 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("14091")]),a._v(" pts/1    00:00:00 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("14095")]),a._v(" pts/1    00:01:23 gzserver\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("14149")]),a._v(" pts/1    00:02:48 px4\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("14808")]),a._v(" pts/2    00:00:00 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Then type in the same window")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" gdb "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("px4 bin "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" path "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("from step "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" here"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("예를 들어,")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" gdb /home/atlas/px4/base/PX4-Autopilot/build/px4_sitl_default/bin/px4\n")])])]),t("p",[a._v("Now, you can attach to the PX4 instance by entering the PID noted in step 2.")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("attach "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("PID on px4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("You should now have a GDB interface to debug with.")])])]),a._v(" "),t("h2",{attrs:{id:"컴파일러-최적화"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#컴파일러-최적화"}},[a._v("#")]),a._v(" 컴파일러 최적화")]),a._v(" "),t("p",[a._v("It is possible to suppress compiler optimization for given executables and/or modules (as added by cmake with "),t("code",[a._v("add_executable")]),a._v(" or "),t("code",[a._v("add_library")]),a._v(") when configuring for "),t("code",[a._v("posix_sitl_*")]),a._v(". This can be handy when it is necessary to step through code with a debugger or print variables that would otherwise be optimized out.")]),a._v(" "),t("p",[a._v("To do so, set the environment variable "),t("code",[a._v("PX4_NO_OPTIMIZATION")]),a._v(" to be a semi-colon separated list of regular expressions that match the targets that need to be compiled without optimization. This environment variable is ignored when the configuration isn't "),t("code",[a._v("posix_sitl_*")]),a._v(".")]),a._v(" "),t("p",[a._v("예를 들어,")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("PX4_NO_OPTIMIZATION")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'px4;^modules__uORB;^modules__systemlib$'")]),a._v("\n")])])]),t("p",[a._v("대상의 최적화를 억제합니다: 플랫폼__posix__px4_layer, modules__systemlib, modules__uORB, 예제__px4_simple_app, modules__uORB__uORB \\_tests 및 px4.")]),a._v(" "),t("p",[a._v("The targets that can be matched with these regular expressions can be printed with the command:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" -C build/posix_sitl_* list_cmake_targets\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);