(window.webpackJsonp=window.webpackJsonp||[]).push([[1108],{2161:function(t,s,e){"use strict";e.r(s);var a=e(19),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"adcreport-uorb-message"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adcreport-uorb-message"}},[t._v("#")]),t._v(" AdcReport (UORB message)")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/release/1.14/msg/AdcReport.msg",target:"_blank",rel:"noopener noreferrer"}},[t._v("source file"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[t._v("uint64 timestamp\t\t# time since system "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("microseconds"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nuint32 device_id\t\t# unique device ID "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the sensor that does not change between power cycles\nint16"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" channel_id\t\t# ADC channel IDs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" negative "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" non"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("existent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TODO"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" should be kept same as array index\nint32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" raw_data\t\t# ADC channel raw value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" accept negative value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" valid "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" channel ID is positive\nuint32 resolution\t\t# ADC channel resolution\nfloat32 v_ref\t\t\t# ADC channel voltage reference"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" use to calculate LSB "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("voltage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lsb"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("scale"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("resolution"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);