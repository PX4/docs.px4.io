(window.webpackJsonp=window.webpackJsonp||[]).push([[1239],{2291:function(t,s,e){"use strict";e.r(s);var n=e(19),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"systempower-uorb-message"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#systempower-uorb-message"}},[t._v("#")]),t._v(" SystemPower (UORB message)")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/release/1.14/msg/SystemPower.msg",target:"_blank",rel:"noopener noreferrer"}},[t._v("source file"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[t._v("uint64 timestamp\t\t# time since system "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("microseconds"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfloat32 voltage5v_v\t\t# peripheral "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("V rail voltage\nfloat32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" sensors3v3\t\t# Sensors "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("V3 rail voltage\nuint8 sensors3v3_valid\t\t# Sensors "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("V3 rail voltage was "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bitfield"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nuint8 usb_connected\t\t# USB is connected when "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nuint8 brick_valid\t\t# brick bits power is good when bit "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nuint8 usb_valid \t\t# USB is valid when "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nuint8 servo_valid\t\t# servo power is good when "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nuint8 periph_5v_oc\t\t# peripheral overcurrent when "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nuint8 hipower_5v_oc\t\t# high power peripheral overcurrent when "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nuint8 comp_5v_valid\t\t# "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("V to companion valid\nuint8 can1_gps1_5v_valid\t# "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("V "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" CAN1"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("GPS1 valid\n\nuint8 BRICK1_VALID_SHIFTS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nuint8 BRICK1_VALID_MASK"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nuint8 BRICK2_VALID_SHIFTS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nuint8 BRICK2_VALID_MASK"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nuint8 BRICK3_VALID_SHIFTS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nuint8 BRICK3_VALID_MASK"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nuint8 BRICK4_VALID_SHIFTS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nuint8 BRICK4_VALID_MASK"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);