import{_ as a,c as i,a8 as t,o as n}from"./chunks/framework.BDnHobkS.js";const E=JSON.parse('{"title":"TrajectoryWaypoint (Повідомлення UORB)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/msg_docs/TrajectoryWaypoint.md","filePath":"uk/msg_docs/TrajectoryWaypoint.md"}'),e={name:"uk/msg_docs/TrajectoryWaypoint.md"};function p(l,s,r,o,h,k){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="trajectorywaypoint-повідомлення-uorb" tabindex="-1">TrajectoryWaypoint (Повідомлення UORB) <a class="header-anchor" href="#trajectorywaypoint-повідомлення-uorb" aria-label="Permalink to &quot;TrajectoryWaypoint (Повідомлення UORB)&quot;">​</a></h1><p>Опис траекторії точки маршруту. Див. також Повідомлення Mavlink TRAJECTORY Тема trajectory_waypoint описує кожну точку маршруту, визначену в vehicle_trajectory_waypoint</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/TrajectoryWaypoint.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Waypoint Trajectory description. See also Mavlink TRAJECTORY msg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># The topic trajectory_waypoint describe each waypoint defined in vehicle_trajectory_waypoint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp		# time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] position</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] velocity</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] acceleration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 yaw</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 yaw_speed</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> point_valid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 type</span></span></code></pre></div>`,4)]))}const y=a(e,[["render",p]]);export{E as __pageData,y as default};
