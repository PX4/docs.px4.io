import{_ as a,c as t,a8 as s,j as e,o as n}from"./chunks/framework.BDnHobkS.js";const m=JSON.parse('{"title":"JSBSim Simulation","description":"","frontmatter":{},"headers":[],"relativePath":"zh/sim_jsbsim/index.md","filePath":"zh/sim_jsbsim/index.md"}'),l={name:"zh/sim_jsbsim/index.md"};function o(h,i,r,p,d,c){return n(),t("div",null,i[0]||(i[0]=[s('<h1 id="jsbsim-simulation" tabindex="-1">JSBSim Simulation <a class="header-anchor" href="#jsbsim-simulation" aria-label="Permalink to &quot;JSBSim Simulation&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This simulator is <a href="./../simulation/community_supported_simulators.html">community supported and maintained</a>. It may or may not work with current versions of PX4.</p><p>See <a href="./../dev_setup/dev_env.html">Toolchain Installation</a> for information about the environments and tools supported by the core development team.</p></div><p><a href="http://jsbsim.sourceforge.net/index.html" target="_blank" rel="noreferrer">JSBSim</a> is a open source flight simulator (&quot;flight dynamics model (FDM)&quot;) that runs on Microsoft Windows, Apple Macintosh, Linux, IRIX, Cygwin (Unix on Windows), etc. Its features include: fully configurable aerodynamics and a propulsion system that can model complex flight dynamics of an aircraft. Rotational earth effects are also modeled into the dynamics.</p><p><strong>Supported Vehicles:</strong> Plane, Quadrotor, Hexarotor</p>',4),e("lite-youtube",{videoid:"y5azVNmIVyw",title:"JSBSim with APX4 Software-In-The-Loop Simulation"},null,-1),s(`<div class="info custom-block"><p class="custom-block-title">INFO</p><p>See <a href="./../simulation/">Simulation</a> for general information about simulators, the simulation environment, and simulation configuration (e.g. supported vehicles).</p></div><h2 id="installation-ubuntu-linux" tabindex="-1">Installation (Ubuntu Linux) <a class="header-anchor" href="#installation-ubuntu-linux" aria-label="Permalink to &quot;Installation (Ubuntu Linux)&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>These instructions were tested on Ubuntu 18.04</p></div><ol><li><p>Install the usual <a href="./../dev_setup/dev_env_linux_ubuntu.html">Development Environment on Ubuntu LTS / Debian Linux</a>.</p></li><li><p>Install a JSBSim release from the <a href="https://github.com/JSBSim-Team/jsbsim/releases/tag/Linux" target="_blank" rel="noreferrer">release page</a>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JSBSim-devel_1.1.0.dev1-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">release-numbe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.bionic.amd64.deb</span></span></code></pre></div></li><li><p>(Optional) FlightGear may (optionally) be used for visualisation. To install FlightGear, refer to the <a href="./../sim_flightgear/">FlightGear installation instructions</a>).</p></li></ol><h2 id="running-the-simulation" tabindex="-1">Running the Simulation <a class="header-anchor" href="#running-the-simulation" aria-label="Permalink to &quot;Running the Simulation&quot;">​</a></h2><p>JSBSim SITL simulation can be conveniently run through a <code>make</code> command as shown below:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jsbsim</span></span></code></pre></div><p>This will run both the PX4 SITL instance and the FlightGear UI (for visualization). If you want to run without the FlightGear UI, you can add <code>HEADLESS=1</code> to the front of the <code>make</code> command.</p><p>The supported vehicles and <code>make</code> commands are listed below (click on the links to see the vehicle images).</p><table tabindex="0"><thead><tr><th>Vehicle</th><th>通信</th></tr></thead><tbody><tr><td>Standard Plane</td><td><code>make px4_sitl jsbsim_rascal</code></td></tr><tr><td>Quadrotor</td><td><code>make px4_sitl jsbsim_quadrotor_x</code></td></tr><tr><td>Hexarotor</td><td><code>make px4_sitl jsbsim_hexarotor_x</code></td></tr></tbody></table><p>The commands above launch a single vehicle with the full UI. <em>QGroundControl</em> should be able to automatically connect to the simulated vehicle.</p><h2 id="running-jsbsim-with-ros" tabindex="-1">Running JSBSim with ROS <a class="header-anchor" href="#running-jsbsim-with-ros" aria-label="Permalink to &quot;Running JSBSim with ROS&quot;">​</a></h2><p>To run JSBSim with ROS:</p><ol><li><p>Clone the <code>px4-jsbsim-bridge</code> package into your catkin workspace:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">path_to_catkin_w</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/src</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Auterion/px4-jsbsim-bridge.git</span></span></code></pre></div></li><li><p>Build the <code>jsbsim_bridge</code> catkin package:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catkin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jsbsim_bridge</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You must have already set MAVROS in your workspace (if not, follow the instructions in the <a href="./../ros/mavros_installation.html">MAVROS installation guide</a>).</p></div></li></ol><p>:::</p><ol start="3"><li><p>So start JSBSim through ROS using the launch file as shown:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">roslaunch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jsbsim_bridge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_jsbsim_bridge.launch</span></span></code></pre></div></li></ol><h2 id="更多信息" tabindex="-1">更多信息 <a class="header-anchor" href="#更多信息" aria-label="Permalink to &quot;更多信息&quot;">​</a></h2><ul><li><a href="https://github.com/Auterion/px4-jsbsim-bridge" target="_blank" rel="noreferrer">px4-jsbsim-bridge readme</a></li></ul>`,18)]))}const k=a(l,[["render",o]]);export{m as __pageData,k as default};
