import{_ as t,a}from"./chunks/tune_musicmaker_ansi_output.B_UpIuZ-.js";import{_ as s,c as i,a8 as n,o}from"./chunks/framework.BDnHobkS.js";const g=JSON.parse('{"title":"系统通知提示音","description":"","frontmatter":{},"headers":[],"relativePath":"zh/advanced/system_tunes.md","filePath":"zh/advanced/system_tunes.md"}'),r={name:"zh/advanced/system_tunes.md"};function l(h,e,p,d,c,u){return o(),i("div",null,e[0]||(e[0]=[n(`<h1 id="系统通知提示音" tabindex="-1">系统通知提示音 <a class="header-anchor" href="#系统通知提示音" aria-label="Permalink to &quot;系统通知提示音&quot;">​</a></h1><p>PX4 defines a number of <a href="./../getting_started/tunes.html">standard tones/tunes</a> that are used to provide audio notification for important system states and problems (e.g. system startup, arming success, battery warnings, etc.)</p><p>Tunes are specified using strings (in <a href="http://artscene.textfiles.com/ansimusic/information/ansimtech.txt" target="_blank" rel="noreferrer">ANSI Music notation</a>) and played by code using the <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/lib/tunes" target="_blank" rel="noreferrer">tunes</a> library. The tunes library also contains the list of default system tunes - see <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/lib/tunes/tune_definition.desc" target="_blank" rel="noreferrer">lib/tunes/tune_definition.desc</a>.</p><p>PX4 还有一个模块可以用于播放（测试）默认或用户自定义音乐。</p><p>本主题提供了如何创建您自己的声音并添加/替换系统通知音调/乐曲的通用指导。</p><h2 id="创建乐曲" tabindex="-1">创建乐曲 <a class="header-anchor" href="#创建乐曲" aria-label="Permalink to &quot;创建乐曲&quot;">​</a></h2><p>Tune strings are defined using <a href="http://artscene.textfiles.com/ansimusic/information/ansimtech.txt" target="_blank" rel="noreferrer">ANSI Music notation</a>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>More information about the format can be found in <a href="https://en.wikibooks.org/wiki/QBasic/Appendix#PLAY" target="_blank" rel="noreferrer">QBasic PLAY statement</a> (Wikibooks) and has been reproduced in <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/lib/tunes/tune_definition.desc" target="_blank" rel="noreferrer">tune_definition.desc</a>.</p></div><p>创建新调节的最简单方式是使用音乐编辑器。 这允许您编辑音乐并在您的电脑上播放， 然后导出为 PX4 可以播放的格式。</p><p>ANSI 音乐在 ANSI BBS 系统中很受欢迎，因此最好的编辑工具是 DOS 实用程序。 On Windows, one option is to use <em>Melody Master</em> within <em>Dosbox</em>.</p><p>使用软件的步骤是：</p><ol><li><p>Download <a href="http://www.dosbox.com/" target="_blank" rel="noreferrer">DosBox</a> and install the app</p></li><li><p>Download <a href="ftp://archives.thebbs.org/ansi_utilities/melody21.zip" target="_blank" rel="noreferrer">Melody Master</a> and unzip into a new directory</p></li><li><p>Open the <em>Dosbox</em> console</p></li><li><p>将 Melody 主目录挂载到 DosBox，如下：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">path_to_directory</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">elody21</span></span></code></pre></div></li><li><p>Start <em>Melody Master</em> with the following commands</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">c:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span></span></code></pre></div></li><li><p>You will then have the option to click through a few screens, then press <strong>1</strong> to display <em>Melody Master</em>: <img src="`+t+'" alt="Melody Master 2.1"></p><p>屏幕的下半部分提供了关于键盘快捷键的实用工具（箭头用于移动， 和选择笔记长度的数字等）。</p></li><li><p>当您准备好时保存音乐：</p><ul><li>Press <strong>F2</strong> to give the tune a name and save it in the <em>/Music</em> sub folder of your Melody Master installation.</li><li>Press <strong>F7</strong>, the scroll down the list of output formats on the right to get to ANSI. The file will be exported to the <em>root</em> of the Melody Master directory (with the same name and a file-type specific extension).</li></ul></li><li><p>打开文件。 输出可能看起来像这样：</p><p><img src="'+a+'" alt="ANSI Output from file"></p></li><li><p>The string that can be played in PX4 is the bit between <code>MNT</code> and <code>P64</code>: <code>150L1O3DL16CL32&lt;B&gt;C&lt;AEL16A</code></p></li></ol><h2 id="测试乐曲" tabindex="-1">测试乐曲 <a class="header-anchor" href="#测试乐曲" aria-label="Permalink to &quot;测试乐曲&quot;">​</a></h2><p>When you&#39;re ready to try it out a new tune on PX4, use the <a href="./../modules/modules_system.html#tune-control">tune_control</a> library. For example, to test the tune we &quot;created&quot; above you would enter the following command on a console or shell (e.g. the <a href="./../debug/mavlink_shell.html">MAVLink Shell</a>):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tune_control</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> play</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;150L1O3DL16CL32&lt;B&gt;C&lt;AEL16A&quot;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Out of the box, the <code>tune_control</code> is only present on real hardware (not the simulator).</p></div><h2 id="正在替换已存在的乐曲" tabindex="-1">正在替换已存在的乐曲 <a class="header-anchor" href="#正在替换已存在的乐曲" aria-label="Permalink to &quot;正在替换已存在的乐曲&quot;">​</a></h2><p>Tunes are defined within <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/lib/tunes/tune_definition.desc" target="_blank" rel="noreferrer">tune_definition.desc</a>.</p><p>If you just need to replace an existing tune, then you can replace the file in your own fork, and update the tune strings defined in <code>PX4_DEFINE_TUNE</code>.</p><h2 id="添加新乐曲" tabindex="-1">添加新乐曲 <a class="header-anchor" href="#添加新乐曲" aria-label="Permalink to &quot;添加新乐曲&quot;">​</a></h2><p>待开发</p>',21)]))}const f=s(r,[["render",l]]);export{g as __pageData,f as default};
