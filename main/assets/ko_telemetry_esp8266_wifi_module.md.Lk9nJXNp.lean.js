import{_ as t,a,b as i,c as o,d as r,e as s,f as l,g as n,h as p,i as h,j as d}from"./chunks/esp8266_flashing_ftdi.C_IpcG2S.js";import{_ as c,c as u,a8 as m,o as g}from"./chunks/framework.BDnHobkS.js";const E=JSON.parse('{"title":"ESP8266 WiFi 모듈","description":"","frontmatter":{},"headers":[],"relativePath":"ko/telemetry/esp8266_wifi_module.md","filePath":"ko/telemetry/esp8266_wifi_module.md"}'),f={name:"ko/telemetry/esp8266_wifi_module.md"};function b(k,e,w,P,_,x){return g(),u("div",null,e[0]||(e[0]=[m('<h1 id="esp8266-wifi-모듈" tabindex="-1">ESP8266 WiFi 모듈 <a class="header-anchor" href="#esp8266-wifi-모듈" aria-label="Permalink to &quot;ESP8266 WiFi 모듈&quot;">​</a></h1><p>ESP8266와 유사품은 전체 TCP/IP와 마이크로 컨트롤러 기능을 제공하는 저렴한 Wi-Fi 모듈입니다. 모든 Pixhawk 시리즈 콘트롤러에서 사용 가능합니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>ESP8266 is the <em>defacto</em> default WiFi module for use with <a href="./../flight_controller/pixracer.html">Pixracer</a> (and is usually bundled with it).</p></div><h2 id="구매처" tabindex="-1">구매처 <a class="header-anchor" href="#구매처" aria-label="Permalink to &quot;구매처&quot;">​</a></h2><p>ESP8266 모듈은 여러 곳에서 쉽게 구매할 수 있습니다. 몇 군데의 구매처는 아래에 나열되어 있습니다.</p><p>대부분의 모듈은 3.3V 입력 (전용)을 지원하지만 일부 비행 콘트롤러(예 : Pixhawk 4)는 5V에서 출력됩니다 (호환성을 확인하고 필요한 경우 전압을 낮추어야합니다).</p><p>3.3V 사용 모듈:</p><ul><li><a href="https://www.sparkfun.com/products/13678" target="_blank" rel="noreferrer">WRL-17146</a> (Sparkfun)</li><li><a href="https://us.gearbest.com/boards-shields/pp_009604906563.html" target="_blank" rel="noreferrer">AI Cloud</a> - discontinued (GearBeast)</li></ul><p>5.0V 사용 모듈:</p><ul><li><p><a href="https://www.banggood.com/Wireless-Wifi-to-Uart-Telemetry-Module-With-Antenna-for-Mini-APM-Flight-Controller-p-1065339.html" target="_blank" rel="noreferrer">AI Thinker</a> (Banggood)</p></li><li><p><a href="https://www.banggood.com/MAVLink-Wifi-Bridge-2_4G-Wireless-Wifi-Telemetry-Module-with-Antenna-for-Pixhawk-APM-Flight-Controller-p-1428590.html" target="_blank" rel="noreferrer">AlphaUAVLink</a> (Banggood)</p></li><li><p><a href="https://www.beyondrobotix.com/products/kahuna?utm_source=px4-esp8266-docs" target="_blank" rel="noreferrer">Kahuna</a> (Beyond Robotix)</p><p>A plug and play ESP8266 module.</p><p>The Kahuna comes with a cable to connect directly to the Pixhawk-standard <code>TELEM1</code> or <code>TELEM2</code> ports. It is pre-flashed with the latest firmware, and has a u.fl connector for an external antenna. At most you may need to set the baud rate parameter, which for <code>TELEM1</code> is <code>SER_TEL1_BAUD = 57600 (57600 8N1)</code>. The <a href="https://docs.google.com/document/d/1VyOsp9_q6dIAdYdWuDFcWoqqrNy_vbFMANubZA3Uz5g/edit?pli=1&amp;tab=t.0" target="_blank" rel="noreferrer">User Guide</a> include WiFi setup and other relevant information.</p><p><img src="'+t+'" alt="Kahuna ESP8266 WiFi Module"></p></li></ul><h2 id="px4_config" tabindex="-1">Pixhawk/PX4 Setup &amp; Configuration <a class="header-anchor" href="#px4_config" aria-label="Permalink to &quot;Pixhawk/PX4 Setup &amp; Configuration {#px4_config}&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You <em>may</em> first need to update the radio with PX4-compatible ESP8266 firmware (<a href="#esp8266-flashing-firmware-advanced">see below</a>). 제조 매뉴얼에 업데이트가 필요한 지 확인하십시오.</p></div><p>무료 UART에서 ESP8266을 Pixhawk 시리즈 비행 콘트롤러(예 : Pixracer)에 연결합니다.</p><p>USB로 비행 컨트롤러를 지상국에 연결합니다 (WiFi가 아직 완전히 설정되지 않았으므로).</p><p>Using <em>QGroundControl</em>:</p><ul><li><a href="./../config/firmware.html">Load recent PX4 firmware onto the flight controller</a>.</li><li><a href="./../peripherals/serial_configuration.html">Configure the serial port</a> used to connect the ESP8266. ESP8266에 설정된 값과 일치하려면 전송 속도를 921600으로 설정하여야 합니다.</li><li><a href="./../peripherals/mavlink_peripherals.html">Configure MAVLink</a> on the corresponding serial port in order to receive telemetry and transmit commands over the ESP8266.</li></ul><p>무선 연결용 비행 콘트롤러 직렬 포트를 설정후에는 지상국과 기체간의 물리적 USB 연결을 해제할 수 있습니다.</p><h2 id="esp8266을-통한-qgc-연결" tabindex="-1">ESP8266을 통한 QGC 연결 <a class="header-anchor" href="#esp8266을-통한-qgc-연결" aria-label="Permalink to &quot;ESP8266을 통한 QGC 연결&quot;">​</a></h2><p>이 모듈은 지상국과 기체 연결용 WiFi 핫스팟을 노출합니다.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The settings for the ESP8266 hotspot should be provided with the board (e.g. typically printed on the reverse side of the board or on the packaging).</p><p>일반적인 공장 네트워크 설정은 다음과 같습니다.</p><ul><li><strong>SSID:</strong> PixRacer</li><li><strong>Password:</strong> pixracer</li><li><strong>WiFi Channel:</strong> 11</li><li><strong>UART speed:</strong> 921600</li></ul><p>다른 모듈은 다음과 같은 설정을 사용할 수 있습니다.</p><ul><li><strong>SSID:</strong> IFFRC_xxxxxxxx</li><li><strong>Password:</strong> 12345678</li><li><strong>IP:</strong> 192.168.4.1</li><li><strong>Port:</strong> 6789 (TCP)</li></ul><p>AlphaUILink 및 DOITING의 보드 예는 다음과 같습니다.</p><p><img src="'+a+'" width="250px" alt="AlphaUAVLink - Back"> <img src="'+i+'" width="250px" alt="AlphaUAVLink - Front"> <img src="'+o+'" width="250px" alt="DOITING EPS 12F - Back"> <img src="'+r+'" width="250px" alt="DOITING EPS 12F - Front"></p></div><p>On your wifi-enabled <em>QGroundControl</em> ground station computer/tablet, find and connect to the open wireless network for your ESP8266. On a Windows computer the connection settings for a network with name <strong>Pixracer</strong> and default password <strong>pixracer</strong> point will look like this:</p><p><img src="'+s+'" alt="Windows Network Setup: Connection"><img src="'+l+'" alt="Windows Network Setup: Security"></p><p><em>QGroundControl</em> will automatically connect to the vehicle when the ground station computer is attached to a WiFi access point named &quot;Pixracer&quot;.</p><p>다른 WiFi 이름을 가진 모듈을 사용하는 경우에는, 다음 섹션에 표시된대로 QGroundControl WiFi 연결을 수동으로 설정하여야 합니다.</p><h2 id="비표준-wifi-연결-qgc-설정" tabindex="-1">비표준 WiFi 연결 QGC 설정 <a class="header-anchor" href="#비표준-wifi-연결-qgc-설정" aria-label="Permalink to &quot;비표준 WiFi 연결 QGC 설정&quot;">​</a></h2><p><em>QGroundControl</em> will automatically connect to the vehicle when the ground station computer is attached to the &quot;Pixracer&quot; WiFi access point. 다른 이름의 액세스 포인트에는 사용자 지정 통신 연결을 수동으로 생성하여야 합니다.</p><ol><li>Go to <a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/settings_view/settings_view.html" target="_blank" rel="noreferrer">Application Settings &gt; Comm Links</a></li><li>적절한 설정으로 새 연결을 추가합니다.</li><li>Select the new connection, and click <strong>Connect</strong>.</li><li>이제 기체에 연결되어야 합니다.</li></ol><h2 id="확인" tabindex="-1">확인 <a class="header-anchor" href="#확인" aria-label="Permalink to &quot;확인&quot;">​</a></h2><p>이제 무선 링크를 통해 QGC 컴퓨터에서 HUD 이동을 확인하고, ESP8266 WiFi 브리지에 대한 요약 패널을 볼 수 있습니다 (아래 그림 참조).</p><p><img src="'+n+'" alt="QGC Summary showing Wifi Bridge"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you have any problem connecting, see <a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/troubleshooting/qgc_usage.html" target="_blank" rel="noreferrer">QGC Usage Problems</a>.</p></div><h2 id="esp8266-플래싱-펌웨어-고급" tabindex="-1">ESP8266 플래싱/펌웨어 (고급) <a class="header-anchor" href="#esp8266-플래싱-펌웨어-고급" aria-label="Permalink to &quot;ESP8266 플래싱/펌웨어 (고급)&quot;">​</a></h2><p>다른 제조업체의 ESP8266 모듈에는 사전에 적절한 ESP8266 펌웨어가 설치되어 있지 않을 수 있습니다. 아래 지침은 적절한 버전으로 라디오를 업데이트 방법을 설명합니다.</p><h3 id="사전-빌드-바이너리" tabindex="-1">사전 빌드 바이너리 <a class="header-anchor" href="#사전-빌드-바이너리" aria-label="Permalink to &quot;사전 빌드 바이너리&quot;">​</a></h3><p><a href="http://www.grubba.com/mavesp8266/firmware-1.2.2.bin" target="_blank" rel="noreferrer">MavLink ESP8266 Firmware V 1.2.2</a></p><h3 id="소스-빌드" tabindex="-1">소스 빌드 <a class="header-anchor" href="#소스-빌드" aria-label="Permalink to &quot;소스 빌드&quot;">​</a></h3><p>The <a href="https://github.com/dogmaphobic/mavesp8266" target="_blank" rel="noreferrer">firmware repository</a> contains instructions and all the tools needed for building and flashing the ESP8266 firmware.</p><h3 id="펌웨어-ota-업데이트" tabindex="-1">펌웨어 OTA 업데이트 <a class="header-anchor" href="#펌웨어-ota-업데이트" aria-label="Permalink to &quot;펌웨어 OTA 업데이트&quot;">​</a></h3><p>If you have firmware 1.0.4 or greater installed, you can do the update using the ESP&#39;s <em>Over The Air Update</em> feature. Just connect to its AP WiFi link and browse to: <code>http://192.168.4.1/update</code>. 위에서 다운로드한 펌웨어 파일을 WiFi 모듈에 업로드할 수 있습니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This is the easiest way to update firmware!</p></div><h3 id="esp8266-펌웨어-플래싱" tabindex="-1">ESP8266 펌웨어 플래싱 <a class="header-anchor" href="#esp8266-펌웨어-플래싱" aria-label="Permalink to &quot;ESP8266 펌웨어 플래싱&quot;">​</a></h3><p>Before flashing, make sure you boot the ESP8266 in <em>Flash Mode</em> as described below. If you cloned the <a href="https://github.com/dogmaphobic/mavesp8266" target="_blank" rel="noreferrer">MavESP8266</a> repository, you can build and flash the firmware using the provided <a href="http://platformio.org" target="_blank" rel="noreferrer">PlatformIO</a> tools and environment. If you downloaded the pre-built firmware above, download the <a href="https://github.com/espressif/esptool" target="_blank" rel="noreferrer">esptool</a> utility and use the command line below:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">esptool.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --baud</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 921600</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/your_serial_port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write_flash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0x00000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firmware_xxxxx.bin</span></span></code></pre></div><p>여기서:</p><ul><li><strong>firmware_xxxxx.bin</strong> is the firmware you downloaded above</li><li><strong>your_serial_port</strong> is the name of the serial port where the ESP8266 is connected to (<code>/dev/cu.usbmodem</code> for example)</li></ul><h3 id="펌웨어-플래싱을-위한-배선" tabindex="-1">펌웨어 플래싱을 위한 배선 <a class="header-anchor" href="#펌웨어-플래싱을-위한-배선" aria-label="Permalink to &quot;펌웨어 플래싱을 위한 배선&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Most ESP8266 modules support 3.3 volts (only), while some flight controllers (e.g. Pixhawk 4) output at 5V. 호환성을 확인하고, 필요한 경우 전압을 낮추어야 합니다.</p></div><p>There are various methods for setting the ESP8266 into <em>Flash Mode</em> but not all USB/UART adapters provide all the necessary pins for automatic mode switching. In order to boot the ESP8266 in <em>Flash Mode</em>, the GPIO-0 pin must be set low (GND) and the CH_PD pin must be set high (VCC). 설정 예은 다음과 같습니다.</p><p><img src="'+p+'" alt="esp8266 flashing rig"></p><p>RX, TX, VCC 및 GND가 FTDI 어댑터에서 ESP8266으로 연결되는 케이블을 직접 제작하였습니다. ESP8266에서 GPIO-0 및 CH_PD에 연결된 두 개의 와이어를 여분으로 남겨 두었습니다. 각각 GND 및 VCC에 연결하여 플래시 모드로 부팅 가능합니다.</p><h4 id="esp8266-esp-01-핀배열" tabindex="-1">ESP8266 (ESP-01) 핀배열 <a class="header-anchor" href="#esp8266-esp-01-핀배열" aria-label="Permalink to &quot;ESP8266 (ESP-01) 핀배열&quot;">​</a></h4><p><img src="'+h+'" alt="esp8266 wifi module pinout"></p><h4 id="ftdi-usb-uart-어댑터를-사용한-플래싱-다이어그램" tabindex="-1">FTDI USB / UART 어댑터를 사용한 플래싱 다이어그램 <a class="header-anchor" href="#ftdi-usb-uart-어댑터를-사용한-플래싱-다이어그램" aria-label="Permalink to &quot;FTDI USB / UART 어댑터를 사용한 플래싱 다이어그램&quot;">​</a></h4><p><img src="'+d+'" alt="esp8266 flashing"></p>',54)]))}const y=c(f,[["render",b]]);export{E as __pageData,y as default};
