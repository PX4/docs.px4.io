import{_ as s,c as t,a8 as e,o as n}from"./chunks/framework.BDnHobkS.js";const m=JSON.parse('{"title":"模块参考：仿真","description":"","frontmatter":{},"headers":[],"relativePath":"zh/modules/modules_simulation.md","filePath":"zh/modules/modules_simulation.md"}'),i={name:"zh/modules/modules_simulation.md"};function o(l,a,r,p,u,h){return n(),t("div",null,a[0]||(a[0]=[e(`<h1 id="模块参考-仿真" tabindex="-1">模块参考：仿真 <a class="header-anchor" href="#模块参考-仿真" aria-label="Permalink to &quot;模块参考：仿真&quot;">​</a></h1><h2 id="simulator-sih" tabindex="-1">simulator_sih <a class="header-anchor" href="#simulator-sih" aria-label="Permalink to &quot;simulator_sih&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/simulation/simulator_sih" target="_blank" rel="noreferrer">modules/simulation/simulator_sih</a></p><h3 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p>This module provides a simulator for quadrotors and fixed-wings running fully inside the hardware autopilot.</p><p>This simulator subscribes to &quot;actuator_outputs&quot; which are the actuator pwm signals given by the control allocation module.</p><p>模拟器发布了被真实噪声污染的传感器信号以便在环路中加入状态估计器。</p><h3 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h3><p>模拟器运用矩阵代数方法实现了运动方程。 姿态采用四元数表示。 积分计算采用前向欧拉法。 为避免堆栈溢出，大部分变量在 .hpp 文件中声明为全局变量。</p><p><a id="simulator_sih_usage"></a></p><h3 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>simulator_sih &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div>`,12)]))}const c=s(i,[["render",o]]);export{m as __pageData,c as default};
