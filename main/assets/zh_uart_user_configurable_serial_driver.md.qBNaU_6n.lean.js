import{_ as a,c as i,a8 as e,o as t}from"./chunks/framework.BDnHobkS.js";const c=JSON.parse('{"title":"使串口驱动为用户可配置。","description":"","frontmatter":{},"headers":[],"relativePath":"zh/uart/user_configurable_serial_driver.md","filePath":"zh/uart/user_configurable_serial_driver.md"}'),l={name:"zh/uart/user_configurable_serial_driver.md"};function n(p,s,h,r,d,o){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="使串口驱动为用户可配置。" tabindex="-1">使串口驱动为用户可配置。 <a class="header-anchor" href="#使串口驱动为用户可配置。" aria-label="Permalink to &quot;使串口驱动为用户可配置。&quot;">​</a></h1><p>本主题介绍了如何设置一个串行驱动程序，使其能够被最终用户配置(通过参数) 在飞行控制器板的任何可配置串行端口上运行。</p><h2 id="操作前提" tabindex="-1">操作前提 <a class="header-anchor" href="#操作前提" aria-label="Permalink to &quot;操作前提&quot;">​</a></h2><p>假定驱动程序已经存在，并使用命令语法在shell中启动:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start -d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">serial_port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">baudrate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">param_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>上述命令中：</p><ul><li><code>-d</code>: serial port name.</li><li><code>-b</code>: Baud rate (optional) if the driver supports multiple baud rates. If supported, the driver must allow you to specify the rate as both a bare baudrate and as a parameter name in the form <code>-b p:&lt;param_name&gt;</code> (which can be parsed with <code>px4_get_parameter_value()</code>).<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>See the <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/drivers/gps/gps.cpp#L1023" target="_blank" rel="noreferrer">gps driver</a> for an example.</p></div></li></ul><p>:::</p><h2 id="使驱动程序可配置" tabindex="-1">使驱动程序可配置 <a class="header-anchor" href="#使驱动程序可配置" aria-label="Permalink to &quot;使驱动程序可配置&quot;">​</a></h2><p>使驱动程序可配置：</p><ol><li><p>Create a YAML module configuration file:</p><ul><li><p>Add a new file in the driver&#39;s source directory named <strong>module.yaml</strong></p></li><li><p>Insert the following text and adjust as needed:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">module_name: uLanding Radar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">serial_config:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ulanding_radar start -d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${SERIAL_DEV}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -b p:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${BAUD_PARAM}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      port_config_param:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: SENS_ULAND_CFG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        group: Sensors</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The full documentation of the module configuration file can be found in the <a href="https://github.com/PX4/PX4-Autopilot/blob/main/validation/module_schema.yaml" target="_blank" rel="noreferrer">validation/module_schema.yaml</a> file. This is also used to validate all configuration files in CI.</p></div></li></ul></li></ol><p>:::</p><ol start="2"><li><p>Add the module configuration to the <strong>CMakeLists.txt</strong> file for the driver module:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">px4_add_module(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	MODULE drivers__ulanding</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	MAIN ulanding_radar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	SRCS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		ulanding.cpp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	MODULE_CONFIG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		module.yaml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	)</span></span></code></pre></div></li></ol>`,13)]))}const E=a(l,[["render",n]]);export{c as __pageData,E as default};
