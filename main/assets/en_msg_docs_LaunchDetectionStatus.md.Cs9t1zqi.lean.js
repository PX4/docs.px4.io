import{_ as i,c as a,a8 as t,o as n}from"./chunks/framework.BDnHobkS.js";const d=JSON.parse('{"title":"LaunchDetectionStatus (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"en/msg_docs/LaunchDetectionStatus.md","filePath":"en/msg_docs/LaunchDetectionStatus.md"}'),e={name:"en/msg_docs/LaunchDetectionStatus.md"};function h(l,s,p,k,c,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="launchdetectionstatus-uorb-message" tabindex="-1">LaunchDetectionStatus (UORB message) <a class="header-anchor" href="#launchdetectionstatus-uorb-message" aria-label="Permalink to &quot;LaunchDetectionStatus (UORB message)&quot;">â€‹</a></h1><p>Status of the launch detection state machine (fixed-wing only)</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/LaunchDetectionStatus.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Status of the launch detection state </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">machine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (fixed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wing </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">only</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 STATE_WAITING_FOR_LAUNCH 			</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> # waiting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> launch</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 STATE_LAUNCH_DETECTED_DISABLED_MOTOR 	</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> # launch detected, but keep </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">motor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e.g. because it can</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t spin freely while on catapult)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">uint8 STATE_FLYING 				= 2 # launch detected, use normal takeoff/flying configuration</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">uint8 launch_detection_state</span></span></code></pre></div>`,4)]))}const E=i(e,[["render",h]]);export{d as __pageData,E as default};
