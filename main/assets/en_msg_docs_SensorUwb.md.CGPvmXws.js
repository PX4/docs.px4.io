import{_ as i,c as a,a8 as n,o as t}from"./chunks/framework.BDnHobkS.js";const d=JSON.parse('{"title":"SensorUwb (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"en/msg_docs/SensorUwb.md","filePath":"en/msg_docs/SensorUwb.md"}'),e={name:"en/msg_docs/SensorUwb.md"};function l(p,s,h,k,r,E){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="sensoruwb-uorb-message" tabindex="-1">SensorUwb (UORB message) <a class="header-anchor" href="#sensoruwb-uorb-message" aria-label="Permalink to &quot;SensorUwb (UORB message)&quot;">â€‹</a></h1><p>UWB distance contains the distance information measured by an ultra-wideband positioning system, such as Pozyx or NXP Rddrone.</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/SensorUwb.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># UWB distance contains the distance information measured by an ultra</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wideband positioning system,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># such as Pozyx or NXP Rddrone.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 	timestamp		# time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 	sessionid		# UWB SessionID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 	time_offset		# Time between Ranging Rounds in ms</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 	counter			# Number of Ranges since last Start of Ranging</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint16 	mac			# MAC adress of </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Initiator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (controller)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint16 	mac_dest		# MAC adress of </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Responder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Controlee)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint16 	status			# status feedback #</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 	nlos			# None line of site condition y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 distance		# distance in m to the UWB receiver</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#Angle of arrival, Angle in Degree </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">60..</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; FOV in both axis is </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> degrees</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 aoa_azimuth_dev	# Angle of arrival of first incomming RX msg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 aoa_elevation_dev	# Angle of arrival of first incomming RX msg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 aoa_azimuth_resp	# Angle of arrival of first incomming RX msg at the responder</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 aoa_elevation_resp	# Angle of arrival of first incomming RX msg at the responder</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Figure of merit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the angle measurements</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 aoa_azimuth_fom		# AOA Azimuth FOM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 aoa_elevation_fom		# AOA Elevation FOM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 aoa_dest_azimuth_fom	# AOA Azimuth FOM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 aoa_dest_elevation_fom	# AOA Elevation FOM</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Initiator physical configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 orientation		# Direction the sensor faces from MAV_SENSOR_ORIENTATION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				# Standard configuration is Antennas facing down and azimuth aligened in forward direction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 offset_x		# UWB initiator offset in X </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (NED drone </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 offset_y		# UWB initiator offset in Y </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (NED drone </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 offset_z		# UWB initiator offset in Z </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (NED drone </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,4)]))}const g=i(e,[["render",l]]);export{d as __pageData,g as default};
