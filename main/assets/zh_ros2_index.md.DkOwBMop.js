import{_ as t,c as o,a8 as a,o as i}from"./chunks/framework.BDnHobkS.js";const p=JSON.parse('{"title":"ROS 2","description":"","frontmatter":{},"headers":[],"relativePath":"zh/ros2/index.md","filePath":"zh/ros2/index.md"}'),r={name:"zh/ros2/index.md"};function n(s,e,l,c,d,h){return i(),o("div",null,e[0]||(e[0]=[a('<h1 id="ros-2" tabindex="-1">ROS 2 <a class="header-anchor" href="#ros-2" aria-label="Permalink to &quot;ROS 2&quot;">​</a></h1><p><a href="https://docs.ros.org/en/humble/#" target="_blank" rel="noreferrer">ROS 2</a> is a powerful general purpose robotics library that can be used with the PX4 Autopilot to create powerful drone applications.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Tip The PX4 development team highly recommend that you use/migrate to this version of ROS!</p><p>This is the newest version of <a href="http://www.ros.org/" target="_blank" rel="noreferrer">ROS</a> (Robot Operating System). It significantly improves on ROS &quot;1&quot;, and in particular allows a much deeper and lower-latency integration with PX4.</p></div><p>ROS得益于一个活跃的生态系统，在这个生态系统里，开发者会解决常见的机器人问题，他们也有权使用为Linux编写的其他软件库。 It can be used, for example, for <a href="./../computer_vision/">computer vision</a> solutions.</p><p>ROS 2 enables a very deep integration with PX4, to the extent that you can create flight modes in ROS 2 that are indistinguisable from internal PX4 modes, and directly read from and write to internal uORB topics at high rate. It is recommended (in particular) for control and communication from a companion computer where low latency is important, when leveraging existing libraries from Linux, or when writing new high level flight modes.</p><p>Communication between ROS 2 and PX4 uses middleware that implements the <a href="./../middleware/uxrce_dds.html">XRCE-DDS protocol</a>. This middleware exposes PX4 <a href="./../msg_docs/">uORB messages</a> as ROS 2 messages and types, effectively allowing direct access to PX4 from ROS 2 workflows and nodes. 中间件使用 uORB 消息定义生成代码来序列化和反序列化来处理PX4 的收发消息。 These same message definitions are used in ROS 2 applications to allow the messages to be interpreted.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>ROS 2 can also connect with PX4 using <a href="https://github.com/mavlink/mavros/tree/ros2/mavros" target="_blank" rel="noreferrer">MAVROS</a> instead of XRCE-DDS. This option is supported by the MAVROS project (it is not documented here).</p></div><p>To use the <a href="./../ros2/user_guide.html">ROS 2</a> over XRCE-DDS effectively, you must (at time of writing) have a reasonable understanding of the PX4 internal architecture and conventions, which differ from those used by ROS. 我们计划近期提供ROS 2 API 以对 PX4 的特性进行封装，并举例说明它们的用途。</p><h2 id="topics" tabindex="-1">Topics <a class="header-anchor" href="#topics" aria-label="Permalink to &quot;Topics&quot;">​</a></h2><p>本节的主要主题是：</p><ul><li><a href="./../ros2/user_guide.html">ROS 2 User Guide</a>: A PX4-centric overview of ROS 2, covering installation, setup, and how to build ROS 2 applications that communicate with PX4.</li><li><a href="./../ros2/offboard_control.html">ROS 2 Offboard Control Example</a>: A C++ tutorial examples showing how to do position control in <a href="./../flight_modes/offboard.html">offboard mode</a> from a ROS 2 node.</li><li><a href="./../ros2/multi_vehicle.html">ROS 2 Multi Vehicle Simulation</a>: Instructions for connecting to multipole PX4 simulations via single ROS 2 agent.</li><li><a href="./../ros2/px4_ros2_interface_lib.html">PX4 ROS 2 Interface Library</a>: A C++ library that simplies interacting with PX4 from ROS 2. Can be used to create and register flight modes wrtten using ROS2 and send position estimates from ROS2 applications such as a VIO system.</li></ul><h2 id="更多信息" tabindex="-1">更多信息 <a class="header-anchor" href="#更多信息" aria-label="Permalink to &quot;更多信息&quot;">​</a></h2><ul><li><a href="./../middleware/uxrce_dds.html">XRCE-DDS (PX4-ROS 2/DDS Bridge)</a>: PX4 middleware for connecting to ROS 2.</li></ul>',13)]))}const u=t(r,[["render",n]]);export{p as __pageData,u as default};
