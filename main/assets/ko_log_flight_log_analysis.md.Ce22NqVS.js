import{_ as i,a,b as l,c as t,d as e,e as n}from"./chunks/data_comets_overview.CdOGRg3d.js";import{_ as h,c as p,a8 as r,o}from"./chunks/framework.BDnHobkS.js";const f=JSON.parse('{"title":"비행 로그 분석","description":"","frontmatter":{},"headers":[],"relativePath":"ko/log/flight_log_analysis.md","filePath":"ko/log/flight_log_analysis.md"}'),k={name:"ko/log/flight_log_analysis.md"};function g(d,s,F,c,u,y){return o(),p("div",null,s[0]||(s[0]=[r('<h1 id="비행-로그-분석" tabindex="-1">비행 로그 분석 <a class="header-anchor" href="#비행-로그-분석" aria-label="Permalink to &quot;비행 로그 분석&quot;">​</a></h1><p>This topic provide an overview of the tools and methods that can be used to analyze PX4 flight logs (more detailed topics are linked below in some cases).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><a href="./../getting_started/flight_reporting.html">Flight Reporting</a> explains how to download a log and report/discuss issues about a flight with the development team.</p></div><h2 id="구조-분석" tabindex="-1">구조 분석 <a class="header-anchor" href="#구조-분석" aria-label="Permalink to &quot;구조 분석&quot;">​</a></h2><p>비행 로그를 분석하기 전에 상황 파악이 더 중요합니다.</p><ul><li>오작동 후 분석이 수행되면 로그에 충돌이 캡처 되었습니까 아니면 공중에서 중지 되었습니까?</li><li>모든 컨트롤러가 사건들을 추적 했습니까? 이를 설정하는 가장 쉬운 방법은 자세의 롤 및 피치 속도를 설정 포인트와 비교하는 것입니다.</li><li>센서 데이터가 유효합니까? Was there very strong vibration (a reasonable threshold for strong vibration is anything with a peak-to-peak of more than 2-3 m/s/s).</li><li>If the root cause is not specific to the vehicle make sure to report it with a link to the log file (and video if one exists) on the <a href="https://github.com/PX4/PX4-Autopilot/issues/new" target="_blank" rel="noreferrer">PX4 issue tracker</a>.</li></ul><h2 id="정전-방지" tabindex="-1">정전 방지 <a class="header-anchor" href="#정전-방지" aria-label="Permalink to &quot;정전 방지&quot;">​</a></h2><p>If a log file ends mid-air, two main causes are possible: a power failure <em>or</em> a hard fault of the operating system.</p><p>On autopilots based on the <a href="http://www.st.com/en/microcontrollers/stm32-32-bit-arm-cortex-mcus.html" target="_blank" rel="noreferrer">STM32 series</a>, hard faults are logged to the SD card. These are located on the top level of the SD card and named <em>fault_date.log</em>, e.g. <strong>fault_2017_04_03_00_26_05.log</strong>. You should check for the presence of this file if a flight log ends abruptly.</p><h2 id="분석-도구" tabindex="-1">분석 도구 <a class="header-anchor" href="#분석-도구" aria-label="Permalink to &quot;분석 도구&quot;">​</a></h2><h3 id="flight-review-온라인-도구" tabindex="-1">Flight Review (온라인 도구) <a class="header-anchor" href="#flight-review-온라인-도구" aria-label="Permalink to &quot;Flight Review (온라인 도구)&quot;">​</a></h3><p><a href="http://logs.px4.io" target="_blank" rel="noreferrer">Flight Review</a> is the successor of <em>Log Muncher</em>. It is used in combination with the new <a href="./../dev_log/ulog_file_format.html">ULog</a> logging format.</p><p>주요 기능:</p><ul><li>웹 기반으로 되어 있어며, 일반 사용자에게 적합합니다.</li><li>Users can upload logs through the web interface, and then share report with others (bulk upload is supported using the <a href="https://github.com/PX4/PX4-Autopilot/blob/main/Tools/upload_log.py" target="_blank" rel="noreferrer">upload_log.py</a> script)</li><li>대화형 플롯.</li></ul><p><img src="'+i+'" alt="Flight Review Charts"></p><p>See <a href="./../log/flight_review.html">Log Analysis using Flight Review</a> for an introduction.</p><h3 id="plotjuggler" tabindex="-1">PlotJuggler <a class="header-anchor" href="#plotjuggler" aria-label="Permalink to &quot;PlotJuggler&quot;">​</a></h3><p><a href="https://github.com/facontidavide/PlotJuggler" target="_blank" rel="noreferrer">PlotJuggler</a> is a desktop application that allows users to easily visualize and analyze data expressed in the form of time series. This is one of the best ULog analysis tools as it exposes all information in the log (<a href="#flight-review-online-tool">Flight Review</a>, by comparison, only shows a small subset of the data).</p><p>It supports ULog files (.ulg) since version 2.1.4.</p><p>주요 기능:</p><ul><li>Intuitive drag &amp; drop interface.</li><li>여러 플롯, 탭과 창에서 데이터를 정렬합니다.</li><li>All uORB topics are shown and can be graphed.</li><li>데이터를 정렬 후 &quot;레이아웃&quot; 파일에 저장하고 다시 로드할 수 있습니다.</li><li>Process your data inside <em>PlotJuggler</em> itself, using custom &quot;data transformations&quot;.</li></ul><p>Source code and downloads are available on <a href="https://github.com/facontidavide/PlotJuggler" target="_blank" rel="noreferrer">Github</a>.</p><p><img src="'+a+`" alt="PlotJuggler"></p><p>See <a href="./../log/plotjuggler_log_analysis.html">Log Analysis using Plot Juggler</a> for an introduction.</p><h3 id="pyulog" tabindex="-1">pyulog <a class="header-anchor" href="#pyulog" aria-label="Permalink to &quot;pyulog&quot;">​</a></h3><p><a href="https://github.com/PX4/pyulog" target="_blank" rel="noreferrer">pyulog</a> is a python package to parse ULog files, along with a set of command-line scripts to extract/display ULog information and convert them to other file formats.</p><p>주요 기능:</p><ul><li>ULog 파일을 구문 분석하기위한 Python 라이브러리입니다. 다른 여러 ULog 분석 및 시각화 도구에서 사용하는 기본 라이브러리입니다.</li><li>ULog 정보를 추출/표시하는 스크립트 : <ul><li><em>ulog_info</em>: display information from an ULog file.</li><li><em>ulog_messages</em>: display logged messages from an ULog file.</li><li><em>ulog_params</em>: extract parameters from an ULog file.</li></ul></li><li>ULog 파일을 다른 포맷으로 변환하는 스크립트 : <ul><li><em>ulog2csv</em>: convert ULog to (several) CSV files.</li><li><em>ulog2kml</em>: convert ULog to (several) KML files.</li></ul></li></ul><p>All scripts are installed as system-wide applications (i.e. they be called on the command line - provided Python is installed), and support the <code>-h</code> flag for getting usage instructions. 예:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ulog_info</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usage:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ulog_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-h] [-v] file.ulg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ULog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 파일의</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 정보</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 표시</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">위치</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 인수</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  file.ulg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       ULog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">선택적</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 인수</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -h,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    이</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 도움말</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 메시지를</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 표시하고</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 종료</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -v,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 자세한</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 출력</span></span></code></pre></div><p>Below we see the kind of information exported from a sample file using <em>ulog_info</em>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ulog_info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sample.ulg</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Logging</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0:01:52,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> duration:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0:01:08</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Dropouts:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 4,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> duration:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 62</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ms,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mean:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 29</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ms</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Messages:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sys_name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> time_ref_utc:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ver_hw:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AUAV_X21</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ver_sw:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fd483321a5cf50ead91164356d15aa474643aa73</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (multi </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">id,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> size</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)    number of data points, total bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> actuator_controls_0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                 3269     156912</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> actuator_outputs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">76</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                    1311      99636</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> commander_state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                       678       6102</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> control_state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">122</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                      3268     398696</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cpuload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                               69       1104</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ekf2_innovations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">140</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                   3271     457940</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> estimator_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">309</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                   1311     405099</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sensor_combined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">72</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                    17070    1229040</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sensor_preflight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                   17072     273152</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> telemetry_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                      70       2520</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vehicle_attitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                    6461     232596</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vehicle_attitude_setpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">55</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)           3272     179960</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vehicle_local_position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)              678      83394</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vehicle_rates_setpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)              6448     154752</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vehicle_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                       294      13230</span></span></code></pre></div><h3 id="flightplot" tabindex="-1">FlightPlot <a class="header-anchor" href="#flightplot" aria-label="Permalink to &quot;FlightPlot&quot;">​</a></h3><p><a href="https://github.com/PX4/FlightPlot" target="_blank" rel="noreferrer">FlightPlot</a> is a desktop based tool for log analysis. It can be downloaded from <a href="https://github.com/PX4/FlightPlot/releases" target="_blank" rel="noreferrer">FlightPlot Downloads</a> (Linux, MacOS, Windows).</p><p>주요 기능:</p><ul><li>Java 기반, 다양한 플랫폼 지원.</li><li>직관적인 GUI, 프로그래밍 지식이 필요하지 않습니다.</li><li>신규 및 기존 PX4 로그 형식 (.ulg, .px4log, .bin) 모두 지원</li><li>그래프를 이미지로 저장할 수 있습니다.</li></ul><p><img src="`+l+'" alt="FlightPlot Charts"></p><h3 id="px4tools" tabindex="-1">PX4Tools <a class="header-anchor" href="#px4tools" aria-label="Permalink to &quot;PX4Tools&quot;">​</a></h3><p><a href="https://github.com/dronecrew/px4tools" target="_blank" rel="noreferrer">PX4Tools</a> is a log analysis toolbox for the PX4 autopilot written in Python. The recommended installation procedure is to use <a href="https://conda.io/docs/index.html" target="_blank" rel="noreferrer">anaconda3</a>. See <a href="https://github.com/dronecrew/px4tools" target="_blank" rel="noreferrer">px4tools github page</a> for details.</p><p>주요 기능:</p><ul><li>Easy to share, users can view notebooks on Github (e.g. <a href="https://github.com/jgoppert/lpe-analysis/blob/master/15-09-30%20Kabir%20Log.ipynb" target="_blank" rel="noreferrer">15-09-30 Kabir Log.ipynb</a>)</li><li>Python based, cross platform, works with anaconda 2 and anaconda3</li><li>iPython/jupyter 노트북을 사용하여 분석과 공유가 편리합니다.</li><li>상세한 분석이 가능한 고급 플로팅 기능</li></ul><p><img src="'+t+'" alt="PX4Tools-based analysis"></p><h3 id="mavgcl" tabindex="-1">MAVGCL <a class="header-anchor" href="#mavgcl" aria-label="Permalink to &quot;MAVGCL&quot;">​</a></h3><p><a href="https://github.com/ecmnet/MAVGCL" target="_blank" rel="noreferrer">MAVGCL</a> is an in-flight log analyzer for PX4. 다운로드한 uLog 파일로 오프라인 모드에서도 사용 가능합니다.</p><p>주요 기능:</p><ul><li>MAVLink 메시지 또는 MAVLink를 통한 ULOG 데이터에 기반한 실시간 데이터 수집 (50ms 샘플링, 100ms 롤링 디스플레이)</li><li>메시지 (MAVLink 및 ULog) 및 매개 변수 변경 (MAVLink 전용)으로 주석이 추가 된 타임 차트</li><li>선택한 주요 수치에 대한 XY 분석</li><li>3D보기(차량 및 관찰자 관점)</li><li>MAVLink 검사기 (원시 MAVLink 메시지 보고)</li><li>오프라인 모드 : PX4Log / ULog에서 키 그림 가져오기 (WiFi를 통해 장치에서 파일 또는 마지막 로그)</li><li>Java 기반. macOS 및 Ubuntu에서 작동하는 것으로 알려져 있습니다.</li><li>그리고 더 많은 기능들 ...</li></ul><p><img src="'+e+'" alt="MAVGCL"></p><h3 id="data-comets" tabindex="-1">Data Comets <a class="header-anchor" href="#data-comets" aria-label="Permalink to &quot;Data Comets&quot;">​</a></h3><p><a href="https://github.com/dsaffo/DataComets" target="_blank" rel="noreferrer">Data Comets</a> is a interactive PX4 flight log analysis tool that allows you to encode flight data onto the flight path, filter and brush the data by time - and much more!</p><p>You can use the online version of the tool for small log files (&lt; 32Mb), or run it locally in order to analyze longer flights.</p><p><img src="'+n+'" alt="Data Comets"></p>',51)]))}const C=h(k,[["render",g]]);export{f as __pageData,C as default};
