import{_ as t}from"./chunks/pwm_limit_state_diagram.Dlr73I29.js";import{_ as l,c as a,a8 as e,o}from"./chunks/framework.BDnHobkS.js";const h=JSON.parse('{"title":"Скінченний автомат PWM_limit","description":"","frontmatter":{},"headers":[],"relativePath":"uk/concept/pwm_limit.md","filePath":"uk/concept/pwm_limit.md"}'),r={name:"uk/concept/pwm_limit.md"};function m(n,i,s,p,c,u){return o(),a("div",null,i[0]||(i[0]=[e('<h1 id="скінченнии-автомат-pwm-limit" tabindex="-1">Скінченний автомат PWM_limit <a class="header-anchor" href="#скінченнии-автомат-pwm-limit" aria-label="Permalink to &quot;Скінченний автомат PWM_limit&quot;">​</a></h1><p><code>Скінченний автомат PWM_limit</code> керує виходами ШІМ як функцією входів готового і попередньо готового стану. Забезпечує затримку між твердженням стану &quot;готовності&quot; та нарощуванням тяги при твердженні сигналу готовності.</p><h2 id="короткии-опис" tabindex="-1">Короткий опис <a class="header-anchor" href="#короткии-опис" aria-label="Permalink to &quot;Короткий опис&quot;">​</a></h2><p><strong>Вхідні дані</strong></p><ul><li>готовий: стверджено щоб дозволити небезпечні дії, такі як обертання пропелерів</li><li>попередньо готовий: стверджено щоб дозволити безпечні дії, такі як рух керівних поверхонь</li><li>цей вхід перекриває поточний стан</li><li>ствердження попередньо готового стану негайно примушує до поведінки стану ON незалежно від поточного стану</li><li>відкидання попередньо готового стану повертає поведінку до поточного стану</li></ul><p><strong>Стани</strong></p><ul><li>INIT та OFF <ul><li>ШІМ виходи встановлені у стан неготовності.</li></ul></li><li>RAMP <ul><li>ШІМ виходи нарощуються зі стану неготовності до мінімальних значень.</li></ul></li><li>УВІМК <ul><li>ШІМ виходи встановлюються відповідно до керівних значень.</li></ul></li></ul><h2 id="діаграма-зміну-стану" tabindex="-1">Діаграма зміну стану <a class="header-anchor" href="#діаграма-зміну-стану" aria-label="Permalink to &quot;Діаграма зміну стану&quot;">​</a></h2><p><img src="'+t+'" alt="PWM Limit state machine diagram"></p>',9)]))}const f=l(r,[["render",m]]);export{h as __pageData,f as default};
