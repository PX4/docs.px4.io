import{_ as a,c as i,a8 as t,o as r}from"./chunks/framework.BDnHobkS.js";const u=JSON.parse('{"title":"Прошивка PX4 DroneCAN","description":"","frontmatter":{},"headers":[],"relativePath":"uk/dronecan/px4_cannode_fw.md","filePath":"uk/dronecan/px4_cannode_fw.md"}'),n={name:"uk/dronecan/px4_cannode_fw.md"};function s(o,e,l,h,d,p){return r(),i("div",null,e[0]||(e[0]=[t(`<h1 id="прошивка-px4-dronecan" tabindex="-1">Прошивка PX4 DroneCAN <a class="header-anchor" href="#прошивка-px4-dronecan" aria-label="Permalink to &quot;Прошивка PX4 DroneCAN&quot;">​</a></h1><p>PX4 може працювати як прошивка на багатьох периферійних пристроях DroneCAN. Є кілька переваг цього:</p><ul><li>PX4 has built-in drivers for a <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/drivers" target="_blank" rel="noreferrer">wide range</a> of sensors and peripherals components.</li><li>PX4 має міцну реалізацію драйвера DroneCAN, яка пройшла кілька років полевих випробувань.</li><li>PX4 постійно розвивається. Ви регулярно отримуєте доступ до останніх покращень.</li><li>Код оцінки та керування PX4 дозволяє легко створювати &quot;розумні&quot; канноди, такі як інтегровані модулі AHRS.</li><li>Прошивка повністю відкритого коду (PX4 має ліцензію BSD).</li></ul><h2 id="збірка-прошивки" tabindex="-1">Збірка прошивки <a class="header-anchor" href="#збірка-прошивки" aria-label="Permalink to &quot;Збірка прошивки&quot;">​</a></h2><p>Follow the <a href="./../dev_setup/building_px4.html">PX4 building docs</a> just as you would to build firmware for a flight controller. Device build configurations are stored <a href="https://github.com/PX4/PX4-Autopilot/tree/main/boards" target="_blank" rel="noreferrer">here</a>. After installing the <a href="./../dev_setup/dev_env.html">PX4 toolchain</a>, clone the sources and build. For example, to build for the <a href="./ark_flow.html">Ark Flow</a> target:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ark_can-flow_default</span></span></code></pre></div><p>This will create an output in <strong>build/ark_can-flow_default</strong> named <strong>XX-X.X.XXXXXXXX.uavcan.bin</strong>. Follow the instructions at <a href="./#firmware-update">DroneCAN firmware update</a> to flash the firmware.</p><h2 id="інформація-для-розробників" tabindex="-1">Інформація для розробників <a class="header-anchor" href="#інформація-для-розробників" aria-label="Permalink to &quot;Інформація для розробників&quot;">​</a></h2><p>Цей розділ містить інформацію, яка є актуальною для розробників, які хочуть додати підтримку нового апаратного забезпечення DroneCAN до автопілота PX4.</p><h3 id="встановлення-завантажувача-dronecan" tabindex="-1">Встановлення завантажувача DroneCAN <a class="header-anchor" href="#встановлення-завантажувача-dronecan" aria-label="Permalink to &quot;Встановлення завантажувача DroneCAN&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>DroneCAN devices typically ship with a bootloader pre-installed. Не слід дотримуватися інструкцій у цьому розділі, якщо ви не розробляєте пристрої DroneCAN, або (випадково) пошкодили / видалили свій завантажувач.</p></div><p>Проект PX4 включає стандартний завантажувач DroneCAN для пристроїв STM32.</p><p>Завантажувач займає перших 8-16 КБ флеш-пам&#39;яті і є першим кодом, що виконується при увімкненні живлення. Typically the bootloader performs low-level device initialization, automatically determines the CAN bus baud rate, acts as a <a href="./#node-id-allocation">DroneCAN dynamic node ID client</a> to obtain a unique node ID, and waits for confirmation from the flight controller before proceeding with application boot.</p><p>Цей процес забезпечує можливість відновлення пристрою DroneCAN від недійсного або пошкодженого програмного забезпечення додатка без втручання користувача, а також дозволяє автоматичне оновлення програмного забезпечення.</p><p>Build the bootloader firmware by specifying the same peripheral target with the <code>canbootloader</code> build configuration instead of the <code>default</code> configuration.</p><p>For example, to build for the <a href="./ark_flow.html">Ark Flow</a> target:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ark_can-flow_canbootloader</span></span></code></pre></div><p>The binary can then be flashed to the microcontroller using your favorite SWD/JTAG debugger, such as the <a href="https://black-magic.org/index.html" target="_blank" rel="noreferrer">Black Magic Probe</a>, <a href="https://www.st.com/en/development-tools/st-link-v2.html" target="_blank" rel="noreferrer">ST-Link</a>, or <a href="https://www.segger.com/products/debug-probes/j-link/" target="_blank" rel="noreferrer">Segger JLink</a>.</p><h3 id="налаштування-прошивки" tabindex="-1">Налаштування прошивки <a class="header-anchor" href="#налаштування-прошивки" aria-label="Permalink to &quot;Налаштування прошивки&quot;">​</a></h3><p>Переважно, вбудоване програмне забезпечення периферійних пристроїв працює так само, як і версії програмного забезпечення контролера польоту. However, most modules are disabled - only the sensor drivers, DroneCAN driver, and internal infrastructure (uORB, etc.) are enabled.</p><p>DroneCAN communication is handled by the <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/drivers/uavcannode" target="_blank" rel="noreferrer">uavcannode</a> module. Цей драйвер відповідає за комунікацію з боку виробника - він отримує дані сенсорів/виконавчих пристроїв з uORB, серіалізує їх за допомогою бібліотек DroneCAN та публікує їх по CAN. In the future, this will likely be merged with the <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/drivers/uavcan" target="_blank" rel="noreferrer">uavcan</a> module which handles flight controller side (consumer side) drivers, which receive/deserialize data from the CAN bus and publish them over uORB.</p><p>The build system also produces firmware binaries designed to be flashed through a DroneCAN bootloader via [PX4&#39;s DroneCAN flashing support] or the DroneCAN GUI, in addition to the standard raw binary, ELF, and <code>.px4</code> firmware files.</p>`,22)]))}const k=a(n,[["render",s]]);export{u as __pageData,k as default};
