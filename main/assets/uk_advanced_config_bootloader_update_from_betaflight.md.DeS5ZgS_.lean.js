import{_ as e}from"./chunks/betaflight_configurator.fuFGqv2A.js";import{_ as t,c as s,a8 as l,o}from"./chunks/framework.BDnHobkS.js";const g=JSON.parse('{"title":"Завантаження завантажувача PX4 на системи Betaflight","description":"","frontmatter":{},"headers":[],"relativePath":"uk/advanced_config/bootloader_update_from_betaflight.md","filePath":"uk/advanced_config/bootloader_update_from_betaflight.md"}'),i={name:"uk/advanced_config/bootloader_update_from_betaflight.md"};function n(r,a,p,h,d,c){return o(),s("div",null,a[0]||(a[0]=[l('<h1 id="завантаження-завантажувача-px4-на-системи-betaflight" tabindex="-1">Завантаження завантажувача PX4 на системи Betaflight <a class="header-anchor" href="#завантаження-завантажувача-px4-на-системи-betaflight" aria-label="Permalink to &quot;Завантаження завантажувача PX4 на системи Betaflight&quot;">​</a></h1><p>Ця сторінка документує, як прошивати завантажувач PX4 на плати, які вже мають прошивку Betaflight (наприклад, <a href="./../flight_controller/omnibus_f4_sd.html">OmnibusF4 SD</a> або <a href="./../flight_controller/kakutef7.html">Kakute F7</a>).</p><p>Є три інструменти, які можна використовувати для прошивки завантажувача PX4: <em>Конфігуратор Betaflight</em>, <a href="http://dfu-util.sourceforge.net/" target="_blank" rel="noreferrer">командний рядок dfu-util</a> або графічний інструмент <a href="https://www.st.com/en/development-tools/stsw-stm32080.html" target="_blank" rel="noreferrer">dfuse</a> (тільки для Windows).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><em>Конфігуратор Betaflight</em> є найпростішим використанням, але більш нові версії можуть не підтримувати оновлення завантажувача, який не є частиною Betaflight. Ви можете спробувати це спочатку, але скористайтеся іншими методами, якщо оновлення мікропрограми не працює.</p></div><h2 id="оновлення-завантажувача-в-конфігураторі-betaflight" tabindex="-1">Оновлення завантажувача в конфігураторі Betaflight <a class="header-anchor" href="#оновлення-завантажувача-в-конфігураторі-betaflight" aria-label="Permalink to &quot;Оновлення завантажувача в конфігураторі Betaflight&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p><em>Betaflight Configurator</em> may not support PX4 Bootloader update, as of May 2023. Давні версії повинні працювати, хоча точні версії не відомі.</p></div><p>Для встановлення завантажувача PX4 за допомогою <em>Конфігуратора Betaflight</em>:</p><ol><li><p>Download or build <a href="#bootloader-firmware">bootloader firmware</a> for the board you want to flash.</p></li><li><p>Завантажте або зіберіть <a href="#bootloader-firmware">прошивку завантажувача</a> для плати, яку ви хочете прошивати.</p><p>Якщо ви користуєтеся веб-браузером <em>Chrome</em>, простий крос-платформений альтернативний варіант - встановити конфігуратор як <a href="https://chrome.google.com/webstore/detail/betaflight-configurator/kdaghagfopacdngbohiknlhcocjccjao" target="_blank" rel="noreferrer">розширення звідси</a>.</p></li></ol><p>:::</p><ol start="3"><li><p>Підключіть плату до комп&#39;ютера і запустіть конфігуратор.</p></li><li><p>Натисніть кнопку <strong>Завантажити прошивку [Локально]</strong>. <img src="'+e+`" alt="Betaflight Configurator - Local Firmware"></p></li><li><p>Виберіть бінарний файл завантажувача з файлової системи, а потім прошейте плату.</p></li></ol><p>Тепер ви повинні змогти встановити прошивку PX4 на плату.</p><h2 id="оновлення-завантажувача-через-dfu" tabindex="-1">Оновлення завантажувача через DFU <a class="header-anchor" href="#оновлення-завантажувача-через-dfu" aria-label="Permalink to &quot;Оновлення завантажувача через DFU&quot;">​</a></h2><p>Цей розділ пояснює, як перепрошити завантажувач PX4 за допомогою інструменту <a href="http://dfu-util.sourceforge.net/" target="_blank" rel="noreferrer">dfu-util</a> або графічного інструменту <a href="https://www.st.com/en/development-tools/stsw-stm32080.html" target="_blank" rel="noreferrer">dfuse</a> (тільки для Windows).</p><p>Спершу вам потрібно завантажити або зібрати <a href="#bootloader-firmware">прошивку завантажувача</a> для плати, яку ви хочете прошивати (нижче це зазначено як <code>&lt;target.bin&gt;</code>).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>All of the methods below are safe as the STM32 MCU cannot be bricked! DFU не може бути перезаписано при прошивці і завжди дозволяє встановити нову прошивку, навіть якщо процес прошивки завершиться невдало.</p></div><h3 id="режим-dfu" tabindex="-1">Режим DFU <a class="header-anchor" href="#режим-dfu" aria-label="Permalink to &quot;Режим DFU&quot;">​</a></h3><p>Обидва інструменти вимагають, щоб плата перебувала в режимі DFU. Щоб увійти в режим DFU, утримуйте кнопку завантаження (boot button) натиснутою під час підключення USB-кабеля до вашого комп&#39;ютера. Кнопку можна відпустити після того, як плата буде ввімкнена.</p><h3 id="dfu-util" tabindex="-1">dfu-util <a class="header-anchor" href="#dfu-util" aria-label="Permalink to &quot;dfu-util&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The <a href="./../flight_controller/kakuteh7v2.html">Holybro Kakute H7 v2</a>, <a href="./../flight_controller/kakuteh7.html">Holybro Kakute H7</a> and <a href="./../flight_controller/kakuteh7mini.html">mini</a> flight controllers may require that you first run an additional command to erase flash parameters (in order to fix problems with parameter saving):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dfu-util -a 0 --dfuse-address 0x08000000:force:mass-erase:leave -D build/&lt;target&gt;/&lt;target&gt;.bin</span></span></code></pre></div><p>Ця команда може викликати помилку, яку можна ігнорувати. Після завершення введіть режим DFU ще раз, щоб завершити звичайне оновлення.</p></div><p>Для прошивки загрузчика на контролер польоту:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dfu-util -a 0 --dfuse-address 0x08000000 -D  build/&lt;target&gt;/&lt;target&gt;.bin</span></span></code></pre></div><p>Перезавантажте контролер польоту і дайте йому завантажитися без утримування кнопки завантаження.</p><h3 id="dfuse" tabindex="-1">dfuse <a class="header-anchor" href="#dfuse" aria-label="Permalink to &quot;dfuse&quot;">​</a></h3><p>Керівництво dfuse можна знайти тут: <a href="https://www.st.com/resource/en/user_manual/cd00155676.pdf" target="_blank" rel="noreferrer">https://www.st.com/resource/en/user_manual/cd00155676.pdf</a></p><p>Використовуйте інструмент для прошивки <code>&lt;target&gt;.bin</code> файлу.</p><h2 id="прошивка-завантажувача" tabindex="-1">Прошивка завантажувача <a class="header-anchor" href="#прошивка-завантажувача" aria-label="Permalink to &quot;Прошивка завантажувача&quot;">​</a></h2><p>Інструменти вище прошивають вбудоване програмне забезпечення завантажувача. Прошивка завантажувача може бути побудована для більшості цілей за допомогою звичайного вихідного коду PX4, тоді як для інших цілей можна використовувати вихідний код з репозиторію завантажувача.</p><p>Плати управління політами, які мають цільові PX4-Autopilot <code>make</code> для завантажувача, можуть збудувати завантажувач із вихідного коду PX4-Autopilot. Список контролерів, яких це стосується, можна отримати, виконавши наступну команду <code>make</code> і зазначивши цілі <code>make</code>, які закінчуються на <code>_bootloader</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$make list_config_targets</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>cuav_nora_bootloader</span></span>
<span class="line"><span>cuav_x7pro_bootloader</span></span>
<span class="line"><span>cubepilot_cubeorange_bootloader</span></span>
<span class="line"><span>holybro_durandal-v1_bootloader</span></span>
<span class="line"><span>holybro_kakuteh7_bootloader</span></span>
<span class="line"><span>holybro_kakuteh7v2_bootloader</span></span>
<span class="line"><span>holybro_kakuteh7mini_bootloader</span></span>
<span class="line"><span>matek_h743-mini_bootloader</span></span>
<span class="line"><span>matek_h743-slim_bootloader</span></span>
<span class="line"><span>modalai_fc-v2_bootloader</span></span>
<span class="line"><span>mro_ctrl-zero-classic_bootloader</span></span>
<span class="line"><span>mro_ctrl-zero-h7_bootloader</span></span>
<span class="line"><span>mro_ctrl-zero-h7-oem_bootloader</span></span>
<span class="line"><span>mro_pixracerpro_bootloader</span></span>
<span class="line"><span>px4_fmu-v6u_bootloader</span></span>
<span class="line"><span>px4_fmu-v6x_bootloader</span></span></code></pre></div><p>Щоб створити для цих контролерів польоту, завантажте та створіть <a href="https://github.com/PX4/PX4-Autopilot" target="_blank" rel="noreferrer">джерело PX4-Autopilot</a>, а потім створіть ціль за допомогою таких команд:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">targe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # For example: holybro_kakuteh7mini_bootloader</span></span></code></pre></div><p>Для інших контролерів польоту завантажте репозиторій <a href="https://github.com/PX4/Bootloader" target="_blank" rel="noreferrer">PX4/Bootloader</a> і створіть вихідний код, використовуючи відповідні цілі:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone --recursive  https://github.com/PX4/Bootloader.git</span></span>
<span class="line"><span>cd Bootloader</span></span>
<span class="line"><span>make &lt;target&gt; # For example: omnibusf4sd_bl or kakutef7_bl</span></span></code></pre></div><h2 id="перевстановіть-betaflight" tabindex="-1">Перевстановіть Betaflight <a class="header-anchor" href="#перевстановіть-betaflight" aria-label="Permalink to &quot;Перевстановіть Betaflight&quot;">​</a></h2><p>Для переключення назад на Betaflight:</p><ol><li>Резервне копіювання параметрів PX4. Ви можете зробити це, <a href="./../advanced/parameters_and_configurations.html#exporting-and-loading-parameters">експортуючи</a> їх на SD-карту.</li><li>Натисніть і утримуйте кнопку <strong>завантажувача</strong>, підключивши USB-кабель</li><li>Flash <em>Betaflight</em> as usual with the <em>Betaflight-configurator</em></li></ol>`,36)]))}const b=t(i,[["render",n]]);export{g as __pageData,b as default};
