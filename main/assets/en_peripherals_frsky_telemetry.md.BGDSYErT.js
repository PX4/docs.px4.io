import{_ as t,a as r,b as a}from"./chunks/craft_and_theory_frsky_telemetry_cables.C8yLTOzc.js";import{_ as o}from"./chunks/grau_b_pixracer_frskys.port_connection.B_do80KL.js";import{_ as i}from"./chunks/pixracer_FrSkyTelemetry.D250pKx8.js";import{_ as l,c as n,a8 as s,o as d}from"./chunks/framework.BDnHobkS.js";const v=JSON.parse('{"title":"FrSky Telemetry","description":"","frontmatter":{},"headers":[],"relativePath":"en/peripherals/frsky_telemetry.md","filePath":"en/peripherals/frsky_telemetry.md"}'),c={name:"en/peripherals/frsky_telemetry.md"};function h(p,e,m,u,f,g){return d(),n("div",null,e[0]||(e[0]=[s('<h1 id="frsky-telemetry" tabindex="-1">FrSky Telemetry <a class="header-anchor" href="#frsky-telemetry" aria-label="Permalink to &quot;FrSky Telemetry&quot;">​</a></h1><p>FrSky telemetry allows you to access vehicle <a href="#messages">telemetry/status</a> information on a compatible RC transmitter.</p><p>Available <a href="#messages">telemetry is listed here</a>, and includes: flight mode, battery level, RC signal strength, speed, altitude etc. Some transmitters can additionally provide audible and vibration feedback, which is particularly useful for low battery and other failsafe warnings.</p><p>PX4 supports both <a href="#s_port">S.Port</a> (new) and D (old) FrSky telemetry ports.</p><h2 id="hardware-setup" tabindex="-1">Hardware Setup <a class="header-anchor" href="#hardware-setup" aria-label="Permalink to &quot;Hardware Setup&quot;">​</a></h2><p>FrSky telemetry requires:</p><ul><li>An <a href="#transmitters">FrSky-compatible RC transmitter</a> like the FrSky Taranis X9D Plus.</li><li>An <a href="#receivers">FrSky telemetry-capable receiver</a> like the XSR and X8R.</li><li>A cable to connect the FrSky receiver Smart Port (SPort) to a flight controller UART.</li></ul><p>First <a href="./../getting_started/rc_transmitter_receiver.html#connecting-receivers">connect the receiver for RC channels</a>, e.g. connect the S.Bus ports on the receiver and the flight controller.</p><p>Then set up FrSky telemetry by separately connecting the SPort on the receiver to any free UART on the flight controller, and then <a href="#configure">configure PX4 to run FrSky telemetry on that UART</a>.</p><p>This is done slightly differently, depending on whether the SPort receiver has a pin for an uninverted output, and/or the Pixhawk version.</p><h3 id="pixhawk-fmuv4-and-prior" tabindex="-1">Pixhawk FMUv4 (and prior) <a class="header-anchor" href="#pixhawk-fmuv4-and-prior" aria-label="Permalink to &quot;Pixhawk FMUv4 (and prior)&quot;">​</a></h3><p>For Pixhawk FMUv4 and earlier, UART ports and receiver telemetry ports are typically incompatible (with the exception of <a href="./../flight_controller/pixracer.html">Pixracer</a>).</p><p>Generally SPort receivers have an <em>inverted</em> S.Port signal and you have to use a converter cable to split the S.Port into uninverted TX and RX for connecting to the Pixhawk UART. An example is shown below.</p><p><img src="'+t+'" alt="FrSky-Taranis-Telemetry"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When connecting to an inverted S.Port it is usually cheaper and easier to buy a <a href="#ready_made_cable">ready made cable</a> that contains this adapter and has the appropriate connectors for the autopilot and receiver. Creating a <a href="#diy_cables">DIY cable</a> requires electronics assembly expertise.</p></div><p>If using an S.Port receiver with a pin for <em>uninverted output</em> you can simply attach one of the UART&#39;s TX pins.</p><p>Then <a href="#configure">configure PX4</a>.</p><h3 id="pixhawk-fmuv5-stm32f7-and-later" tabindex="-1">Pixhawk FMUv5/STM32F7 and later <a class="header-anchor" href="#pixhawk-fmuv5-stm32f7-and-later" aria-label="Permalink to &quot;Pixhawk FMUv5/STM32F7 and later&quot;">​</a></h3><p>For Pixhawk FMUv5 and later PX4 can read either inverted (or uninverted) S.Port signals directly - no special cable is required.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>More generally this is true on autopilots with STM32F7 or later (e.g. <a href="./../flight_controller/durandal.html">Durandal</a> has a STM32H7 and can read inverted or uninverted S.Port signals directly).</p></div><p>Simply attach one of the UART&#39;s TX pins to the SPort inverted or uninverted pin (PX4 will auto-detect and handle either type). Then <a href="#configure">configure PX4</a>.</p><p><a id="configure"></a></p><h2 id="px4-configuration" tabindex="-1">PX4 Configuration <a class="header-anchor" href="#px4-configuration" aria-label="Permalink to &quot;PX4 Configuration&quot;">​</a></h2><p><a href="./../peripherals/serial_configuration.html">Configure the serial port</a> on which FrSky will run using <a href="./../advanced_config/parameter_reference.html#TEL_FRSKY_CONFIG">TEL_FRSKY_CONFIG</a>. There is no need to set the baud rate for the port, as this is configured by the driver.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You can use any free UART, but typically <code>TELEM 2</code> is used for FrSky telemetry (except for <a href="./../flight_controller/pixracer.html">Pixracer</a>, which is pre-configured to use the <em>FrSky</em> port by default).</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If the configuration parameter is not available in <em>QGroundControl</em> then you may need to <a href="./../peripherals/serial_configuration.html#parameter_not_in_firmware">add the driver to the firmware</a>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>drivers/telemetry/frsky_telemetry</span></span></code></pre></div></div><p>No further configuration is required; FrSky telemetry auto-starts when connected and detects D or S mode.</p><p><a id="transmitters"></a></p><h2 id="compatible-rc-transmitters" tabindex="-1">Compatible RC Transmitters <a class="header-anchor" href="#compatible-rc-transmitters" aria-label="Permalink to &quot;Compatible RC Transmitters&quot;">​</a></h2><p>You will need an RC transmitter that can receive the telemetry stream (and that is bound to the FrSky receiver).</p><p>Popular alternatives include:</p><ul><li>FrSky Taranis X9D Plus (recommended)</li><li>FrSky Taranis X9D</li><li>FrSky Taranis X9E</li><li>FrSky Taranis Q X7</li><li>Turnigy 9XR Pro</li></ul><p>The above transmitters can display telemetry data without any further configuration. The following section(s) explain how you can customise telemetry display (for example, to create a better UI/UX).</p><h3 id="taranis-luapilot-setup" tabindex="-1">Taranis - LuaPilot Setup <a class="header-anchor" href="#taranis-luapilot-setup" aria-label="Permalink to &quot;Taranis - LuaPilot Setup&quot;">​</a></h3><p>Compatible Taranis receivers (e.g. X9D Plus) running OpenTX 2.1.6 or newer can use the LuaPilot script to modify the displayed telemetry (as shown in the screenshot below).</p><p><img src="'+r+'" alt="Telemetry Screen on the Taranis"></p><p>Instructions for installing the script can be found here: <a href="http://ilihack.github.io/LuaPilot_Taranis_Telemetry/" target="_blank" rel="noreferrer">LuaPilot Taranis Telemetry script &gt; Taranis Setup OpenTX 2.1.6 or newer</a></p><p>If you open the <code>LuaPil.lua</code> script with a text editor, you can edit the configuration. Suggested modifications include:</p><ul><li><code>local BattLevelmAh = -1</code> - Use the battery level calculation from the vehicle</li><li><code>local SayFlightMode = 0</code> - There are no WAV files for the PX4 flight modes</li></ul><p><a id="messages"></a></p><h2 id="telemetry-messages" tabindex="-1">Telemetry Messages <a class="header-anchor" href="#telemetry-messages" aria-label="Permalink to &quot;Telemetry Messages&quot;">​</a></h2><p>FrySky Telemetry can transmit most of the more useful status information from PX4. S-Port and D-Port receivers transmit different sets of messages, as listed in the following sections.</p><p><a id="s_port"></a></p><h3 id="s-port" tabindex="-1">S-Port <a class="header-anchor" href="#s-port" aria-label="Permalink to &quot;S-Port&quot;">​</a></h3><p>S-Port receivers transmit the following messages from PX4 (from <a href="https://github.com/iNavFlight/inav/blob/master/docs/Telemetry.md#available-smartport-sport-sensors" target="_blank" rel="noreferrer">here</a>):</p><ul><li><strong>AccX, AccY, AccZ:</strong> Accelerometer values.</li><li><strong>Alt:</strong> Barometer based altitude, relative to home location.</li><li><strong>Curr:</strong> Actual current consumption (Amps).</li><li><strong>Fuel:</strong> Remaining battery percentage if <code>battery_capacity</code> variable set and variable <code>smartport_fuel_percent = ON</code>, mAh drawn otherwise.</li><li><strong>GAlt:</strong> GPS altitude, sea level is zero.</li><li><strong>GPS:</strong> GPS coordinates.</li><li><strong>GSpd:</strong> Current horizontal ground speed, calculated by GPS.</li><li><strong>Hdg:</strong> Heading (degrees - North is 0°).</li><li><strong>VFAS:</strong> Actual battery voltage value (Voltage FrSky Ampere Sensor).</li><li><strong>VSpd:</strong> Vertical speed (cm/s).</li><li><strong>Tmp1:</strong> <a href="./../flight_modes/#flight-modes">Flight mode</a>, sent as an integer: 18 - Manual, 23 - Altitude, 22 - Position, 27 - Mission, 26 - Hold, 28 - Return, 19 - Acro, 24 0 Offboard, 20 - Stabilized, 25 - Takeoff, 29 - Land, 30 - Follow Me.</li><li><strong>Tmp2:</strong> GPS information. Right-most digit is GPS fix type (0 = none, 2 = 2D, 3 = 3D). Other digits are number of satellites.</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The following &quot;standard&quot; S-Port messages are not supported by PX4: <strong>ASpd</strong>, <strong>A4</strong>.</p></div><h3 id="d-port" tabindex="-1">D-port <a class="header-anchor" href="#d-port" aria-label="Permalink to &quot;D-port&quot;">​</a></h3><p>D-Port receivers transmit the following messages (from <a href="https://github.com/cleanflight/cleanflight/blob/master/docs/Telemetry.md" target="_blank" rel="noreferrer">here</a>):</p><ul><li><strong>AccX, AccY, AccZ:</strong> Accelerometer values.</li><li><strong>Alt:</strong> Barometer based altitude, init level is zero.</li><li><strong>Cels:</strong> Average cell voltage value (battery voltage divided by cell number).</li><li><strong>Curr:</strong> Actual current consumption (Amps).</li><li><strong>Fuel:</strong> Remaining battery percentage if capacity is set, mAh drawn otherwise.</li><li><strong>Date:</strong> Time since powered.</li><li><strong>GAlt:</strong> GPS altitude, sea level is zero.</li><li><strong>GPS:</strong> GPS coordinates.</li><li><strong>GSpd:</strong> Current speed, calculated by GPS.</li><li><strong>Hdg:</strong> Heading (degrees - North is 0°).</li><li><strong>RPM:</strong> Throttle value if armed, otherwise battery capacity. Note that blade number needs to be set to 12 in Taranis.</li><li><strong>Tmp1:</strong> Flight mode (as for S-Port).</li><li><strong>Tmp2:</strong> GPS information (as for S-Port).</li><li><strong>VFAS:</strong> Actual battery voltage value (Voltage FrSky Ampere Sensor).</li><li><strong>Vspd:</strong> Vertical speed (cm/s).</li></ul><p><a id="receivers"></a></p><h2 id="frsky-telemetry-receivers" tabindex="-1">FrSky Telemetry Receivers <a class="header-anchor" href="#frsky-telemetry-receivers" aria-label="Permalink to &quot;FrSky Telemetry Receivers&quot;">​</a></h2><p>Pixhawk/PX4 supports D (old) and S (new) FrSky telemetry. The table belows all FrSky receivers that support telemetry via a D/S.PORT (in theory all of these should work).</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Note that the X series receivers listed below are recommended (e.g. XSR, X8R). The R and G series have not been tested/validated by the test team, but should work.</p></div><table tabindex="0"><thead><tr><th>Receiver</th><th>Range</th><th>Combined output</th><th>Digital telemetry input</th><th>Dimensions</th><th>Weight</th></tr></thead><tbody><tr><td>D4R-II</td><td>1.5km</td><td>CPPM (8)</td><td>D.Port</td><td>40x22.5x6mm</td><td>5.8g</td></tr><tr><td>D8R-XP</td><td>1.5km</td><td>CPPM (8)</td><td>D.Port</td><td>55x25x14mm</td><td>12.4g</td></tr><tr><td>D8R-II Plus</td><td>1.5km</td><td>no</td><td>D.Port</td><td>55x25x14mm</td><td>12.4g</td></tr><tr><td>X4R</td><td>1.5km</td><td>CPPM (8)</td><td>Smart Port</td><td>40x22.5x6mm</td><td>5.8g</td></tr><tr><td>X4R-SB</td><td>1.5km</td><td>S.Bus (16)</td><td>Smart Port</td><td>40x22.5x6mm</td><td>5.8g</td></tr><tr><td>X6R / S6R</td><td>1.5km</td><td>S.Bus (16)</td><td>Smart Port</td><td>47.42×23.84×14.7mm</td><td>15.4g</td></tr><tr><td>X8R / S8R</td><td>1.5km</td><td>S.Bus (16)</td><td>Smart Port</td><td>46.25 x 26.6 x 14.2mm</td><td>16.6g</td></tr><tr><td>XSR / XSR-M</td><td>1.5km</td><td>S.Bus (16) / CPPM (8)</td><td>Smart Port</td><td>26x19.2x5mm</td><td>3.8g</td></tr><tr><td>RX8R</td><td>1.5km</td><td>S.Bus (16)</td><td>Smart Port</td><td>46.25x26.6x14.2mm</td><td>12.1g</td></tr><tr><td>RX8R PRO</td><td>1.5km</td><td>S.Bus (16)</td><td>Smart Port</td><td>46.25x26.6x14.2mm</td><td>12.1g</td></tr><tr><td>R-XSR</td><td>1.5km</td><td>S.Bus (16) / CPPM (8)</td><td>Smart Port</td><td>16x11x5.4mm</td><td>1.5g</td></tr><tr><td>G-RX8</td><td>1.5km</td><td>S.Bus (16)</td><td>Smart Port + integrated vario</td><td>55.26<em>17</em>8mm</td><td>5.8g</td></tr><tr><td>R9</td><td>10km</td><td>S.Bus (16)</td><td>Smart Port</td><td>43.3x26.8x13.9mm</td><td>15.8g</td></tr><tr><td>R9 slim</td><td>10km</td><td>S.Bus (16)</td><td>Smart Port</td><td>43.3x26.8x13.9mm</td><td>15.8g</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The above table originates from <a href="http://www.redsilico.com/frsky-receiver-chart" target="_blank" rel="noreferrer">http://www.redsilico.com/frsky-receiver-chart</a> and FrSky <a href="https://www.frsky-rc.com/product-category/receivers/" target="_blank" rel="noreferrer">product documentation</a>.</p></div><p><a id="ready_made_cable"></a></p><h2 id="ready-made-cables" tabindex="-1">Ready-Made Cables <a class="header-anchor" href="#ready-made-cables" aria-label="Permalink to &quot;Ready-Made Cables&quot;">​</a></h2><p>Ready-made cables for use with Pixhawk FMUv4 and earlier (except for Pixracer) are available from:</p><ul><li><p><a href="http://www.craftandtheoryllc.com/telemetry-cable" target="_blank" rel="noreferrer">Craft and Theory</a>. Versions are available with DF-13 compatible <em>PicoBlade connectors</em> (for FMUv2/3DR Pixhawk, FMUv2/HKPilot32) and <em>JST-GH connectors</em> (for FMUv3/Pixhawk 2 &quot;The Cube&quot; and FMUv4/PixRacer v1).</p><p><a href="http://www.craftandtheoryllc.com/telemetry-cable"><img src="'+a+'" alt="Purchase cable here from Craft and Theory"></a></p></li></ul><p><a id="diy_cables"></a></p><h2 id="diy-cables" tabindex="-1">DIY Cables <a class="header-anchor" href="#diy-cables" aria-label="Permalink to &quot;DIY Cables&quot;">​</a></h2><p>It is possible to create your own adapter cables. You will need connectors that are appropriate for your autopilot (e.g. <em>JST-GH connectors</em> for FMUv3/Pixhawk 2 &quot;The Cube&quot; and FMUv4/PixRacer v1, and DF-13 compatible <em>PicoBlade connectors</em> for older autopilots).</p><p>The Pixracer includes electronics for converting between S.PORT and UART signals, but for other boards you will need a UART to S.PORT adapter. These can be sourced from:</p><ul><li><a href="https://www.frsky-rc.com/product/ful-1/" target="_blank" rel="noreferrer">FrSky FUL-1</a>: <a href="https://www.unmannedtechshop.co.uk/frsky-transmitter-receiver-upgrade-adapter-ful-1/" target="_blank" rel="noreferrer">unmannedtech.co.uk</a></li><li>SPC: <a href="http://www.getfpv.com/frsky-smart-port-converter-cable.html" target="_blank" rel="noreferrer">getfpv.com</a>, <a href="https://www.unmannedtechshop.co.uk/frsky-smart-port-converter-spc/" target="_blank" rel="noreferrer">unmannedtechshop.co.uk</a></li></ul><p>More information about the connections for different boards is given below.</p><h3 id="pixracer-to-s-port-receivers" tabindex="-1">Pixracer to S-port Receivers <a class="header-anchor" href="#pixracer-to-s-port-receivers" aria-label="Permalink to &quot;Pixracer to S-port Receivers&quot;">​</a></h3><p>Connect the Pixracer FrSky TX and RX lines together (solder the wires together) to the X series receiver&#39;s S.port pin. GND need not be attached as this will have been done when attaching to S.Bus (normal RC connection).</p><p>The S-port connection is shown below (using the provided I/O Connector).</p><p><img src="'+o+'" alt="Grau b Pixracer FrSkyS.Port Connection"></p><p><img src="'+i+'" alt="Pixracer FrSkyS.Port Connection"></p><h3 id="pixracer-to-d-port-receivers" tabindex="-1">Pixracer to D-port Receivers <a class="header-anchor" href="#pixracer-to-d-port-receivers" aria-label="Permalink to &quot;Pixracer to D-port Receivers&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The vast majority of users now prefer to use S.PORT.</p></div><p>Connect the Pixracer FrSky TX line (FS out) to the receiver&#39;s RX line. Connect the Pixracer FrSky RX line (FS in) to the receivers TX line. GND need not be connected as this will have been done when attaching to RC/SBus (for normal RC).</p><h3 id="pixhawk-pro" tabindex="-1">Pixhawk Pro <a class="header-anchor" href="#pixhawk-pro" aria-label="Permalink to &quot;Pixhawk Pro&quot;">​</a></h3><p><a href="./../flight_controller/pixhawk3_pro.html">Pixhawk 3 Pro</a> can be connected to TELEM4 (no additional software configuration is needed). You will need to connect via a UART to S.PORT adapter board, or a <a href="#ready_made_cable">ready-made cable</a>.</p><h3 id="pixhawk-fmuv5-and-later" tabindex="-1">Pixhawk FMUv5 and later <a class="header-anchor" href="#pixhawk-fmuv5-and-later" aria-label="Permalink to &quot;Pixhawk FMUv5 and later&quot;">​</a></h3><p>Simply attach one of the UART&#39;s TX pins to the SPort inverted or uninverted pin (PX4 will auto-detect and handle either type).</p><h3 id="other-boards" tabindex="-1">Other Boards <a class="header-anchor" href="#other-boards" aria-label="Permalink to &quot;Other Boards&quot;">​</a></h3><p>Most other boards connect to the receiver for FrSky telemetry via the TELEM2 UART. This includes, for example: <a href="./../flight_controller/pixhawk.html">Pixhawk 1</a>, <a href="./../flight_controller/mro_pixhawk.html">mRo Pixhawk</a>, Pixhawk2.</p><p>You will need to connect via a UART to S.PORT adapter board, or a <a href="#ready_made_cable">ready-made cable</a>.</p><h2 id="additional-information" tabindex="-1">Additional Information <a class="header-anchor" href="#additional-information" aria-label="Permalink to &quot;Additional Information&quot;">​</a></h2><p>For additional information, see the following links:</p><ul><li><a href="https://github.com/Clooney82/MavLink_FrSkySPort/wiki/1.2.-FrSky-Taranis-Telemetry" target="_blank" rel="noreferrer">FrSky Taranis Telemetry</a></li><li><a href="https://www.youtube.com/watch?v=x14DyvOU0Vc" target="_blank" rel="noreferrer">Taranis X9D: Setting Up Telemetry</a> (Video Tutorial)</li><li><a href="https://discuss.px4.io//t/px4-frsky-telemetry-setup-with-pixhawk2-and-x8r-receiver/6362" target="_blank" rel="noreferrer">Px4 FrSky Telemetry Setup with Pixhawk2 and X8R Receiver</a> (DIY Cables)</li></ul>',84)]))}const S=l(c,[["render",h]]);export{v as __pageData,S as default};
