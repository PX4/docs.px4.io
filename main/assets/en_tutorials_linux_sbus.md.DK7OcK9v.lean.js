import{_ as i,a as t}from"./chunks/driver_sbus_signal_inverter_breadboard.DGOJdj4c.js";import{_ as r,c as a,a8 as s,o as n}from"./chunks/framework.BDnHobkS.js";const g=JSON.parse('{"title":"Connecting an RC Receiver to a PX4 Linux-based Autopilot","description":"","frontmatter":{},"headers":[],"relativePath":"en/tutorials/linux_sbus.md","filePath":"en/tutorials/linux_sbus.md"}'),o={name:"en/tutorials/linux_sbus.md"};function l(c,e,u,p,d,h){return n(),a("div",null,e[0]||(e[0]=[s('<h1 id="connecting-an-rc-receiver-to-a-px4-linux-based-autopilot" tabindex="-1">Connecting an RC Receiver to a PX4 Linux-based Autopilot <a class="header-anchor" href="#connecting-an-rc-receiver-to-a-px4-linux-based-autopilot" aria-label="Permalink to &quot;Connecting an RC Receiver to a PX4 Linux-based Autopilot&quot;">​</a></h1><p>This topic shows how to setup a PX4 Linux-based autopilot to connect and use a <a href="./../getting_started/rc_transmitter_receiver.html">supported RC receiver</a> on any serial port.</p><p>For RC types other than S.Bus, you can just connect the receiver directly to the serial ports, or to USB via a USB to TTY serial cable (e.g. like PL2302 USB to Serial TTL converter).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>For an S.Bus receiver (or encoder - e.g. from Futaba, RadioLink, etc.) you will usually need to connect the receiver and device via a <a href="#signal_inverter_circuit">signal inverter circuit</a>, but otherwise the setup is the same.</p></div><p>Then <a href="#start_driver">Start the PX4 RC Driver</a> on the device, as shown below.</p><p><a id="start_driver"></a></p><h2 id="starting-the-driver" tabindex="-1">Starting the Driver <a class="header-anchor" href="#starting-the-driver" aria-label="Permalink to &quot;Starting the Driver&quot;">​</a></h2><p>To start the RC driver on a particular UART (e.g. in this case <code>/dev/ttyS2</code>):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rc_input</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/ttyS2</span></span></code></pre></div><p>For other driver usage information see: <a href="./../modules/modules_driver.html#rc-input">rc_input</a>.</p><p><a id="signal_inverter_circuit"></a></p><h2 id="signal-inverter-circuit-s-bus-only" tabindex="-1">Signal Inverter Circuit (S.Bus only) <a class="header-anchor" href="#signal-inverter-circuit-s-bus-only" aria-label="Permalink to &quot;Signal Inverter Circuit (S.Bus only)&quot;">​</a></h2><p>S.Bus is an <em>inverted</em> UART communication signal.</p><p>While some serial ports/flight controllers can read an inverted UART signal, most require a signal inverter circuit between the receiver and serial port to un-invert the signal.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This circuit is also required to read S.Bus remote control signals through the serial port or USB-to-TTY serial converter.</p></div><p>This section shows how to create an appropriate circuit.</p><h3 id="required-components" tabindex="-1">Required Components <a class="header-anchor" href="#required-components" aria-label="Permalink to &quot;Required Components&quot;">​</a></h3><ul><li>1x NPN transistor (e.g. NPN S9014 TO92)</li><li>1x 10K resistor</li><li>1x 1K resistor</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Any type/model of transistor can be used because the current drain is very low.</p></div><h3 id="circuit-diagram-connections" tabindex="-1">Circuit Diagram/Connections <a class="header-anchor" href="#circuit-diagram-connections" aria-label="Permalink to &quot;Circuit Diagram/Connections&quot;">​</a></h3><p>Connect the components as described below (and shown in the circuit diagram):</p><ul><li>S.Bus signal → 1K resistor → NPN transistor base</li><li>NPN transistor emit → GND</li><li>3.3VCC → 10K resistor → NPN transistor collection → USB-to-TTY rxd</li><li>5.0VCC → S.Bus VCC</li><li>GND → S.Bus GND</li></ul><p><img src="'+i+'" alt="Signal inverter circuit diagram"></p><p>The image below shows the connections on a breadboard.</p><p><img src="'+t+'" alt="Signal inverter breadboard"></p>',25)]))}const b=r(o,[["render",l]]);export{g as __pageData,b as default};
