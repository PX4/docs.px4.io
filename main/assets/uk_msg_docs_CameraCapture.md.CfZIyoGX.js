import{_ as i,c as a,a8 as t,o as e}from"./chunks/framework.BDnHobkS.js";const o=JSON.parse('{"title":"CameraCapture (повідомлення UORB)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/msg_docs/CameraCapture.md","filePath":"uk/msg_docs/CameraCapture.md"}'),n={name:"uk/msg_docs/CameraCapture.md"};function l(h,s,p,k,r,E){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="cameracapture-повідомлення-uorb" tabindex="-1">CameraCapture (повідомлення UORB) <a class="header-anchor" href="#cameracapture-повідомлення-uorb" aria-label="Permalink to &quot;CameraCapture (повідомлення UORB)&quot;">​</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/CameraCapture.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp		# time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp_utc		# Capture time in UTC </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GPS time</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 seq					# Image sequence number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float64 lat					# Latitude in </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">degrees</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (WGS84)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float64 lon					# Longitude in </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">degrees</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (WGS84)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 alt					# </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Altitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (AMSL)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 ground_distance			# Altitude above </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ground</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (meters)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] q					# Attitude of the camera relative to NED earth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fixed frame when using a gimbal, otherwise vehicle attitude</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int8 result					# </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> success, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> failure, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> camera does not provide feedback</span></span></code></pre></div>`,3)]))}const g=i(n,[["render",l]]);export{o as __pageData,g as default};
