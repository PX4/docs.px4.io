import{_ as s,c as a,a8 as i,o as t}from"./chunks/framework.BDnHobkS.js";const u=JSON.parse('{"title":"외부 모듈(별도)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/advanced/out_of_tree_modules.md","filePath":"ko/advanced/out_of_tree_modules.md"}'),n={name:"ko/advanced/out_of_tree_modules.md"};function l(o,e,p,d,r,c){return t(),a("div",null,e[0]||(e[0]=[i(`<h1 id="외부-모듈-별도" tabindex="-1">외부 모듈(별도) <a class="header-anchor" href="#외부-모듈-별도" aria-label="Permalink to &quot;외부 모듈(별도)&quot;">​</a></h1><p>외부 모듈은 개발자가 PX4 펌웨어에 추가(또는 업데이트)하려는 독점 모듈을 관리/그룹화할 수 있는 편리한 메커니즘을 제공합니다. 외부 모듈은 내부 모듈과 같이 사용할 수 있으며, uORB로 내부 모듈과 상호 작용할 수 있습니다.</p><p>PX4 빌드에 외부(&quot;out of tree&quot;) 모듈을 추가하는 방법을 설명합니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>We encourage you to contribute your changes into PX4, where possible!</p></div><h2 id="사용법" tabindex="-1">사용법 <a class="header-anchor" href="#사용법" aria-label="Permalink to &quot;사용법&quot;">​</a></h2><p>외부 모듈을 만들려면:</p><ul><li><p>Create an <em>external directory</em> folder for grouping the external modules:</p><ul><li>This can be located anywhere outside of the <strong>PX4-Autopilot</strong> tree.</li><li>It must have the same structure as <strong>PX4-Autopilot</strong> (i.e. it must contain a directory called <strong>src</strong>).</li><li>Later we refer to this directory using <code>EXTERNAL_MODULES_LOCATION</code>.</li></ul></li><li><p>Copy an existing module (e.g. <strong>examples/px4_simple_app</strong>) to the external directory, or directly create a new module.</p></li><li><p>Rename the module (including <code>MODULE</code> in <strong>CMakeLists.txt</strong>) or remove it from the existing PX4-Autopilot <em>cmake</em> build config. 이것은 내부 모듈과의 충돌을 피하기 위한 것입니다.</p></li><li><p>Add a file <strong>CMakeLists.txt</strong> in the external directory with content:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config_module_list_external</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    modules/&lt;new_module&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    PARENT_SCOPE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span></code></pre></div></li><li><p>Add a line <code>EXTERNAL</code> to the <code>modules/&lt;new_module&gt;/CMakeLists.txt</code> within <code>px4_add_module()</code>, for example like this:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">px4_add_module(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	MODULE modules__test_app</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	MAIN test_app</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	STACK_MAIN 2000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	SRCS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		px4_simple_app.c</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	DEPENDS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		platforms__common</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	EXTERNAL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	)</span></span></code></pre></div></li></ul><h2 id="별도-uorb-메시지-정의" tabindex="-1">별도 uORB 메시지 정의 <a class="header-anchor" href="#별도-uorb-메시지-정의" aria-label="Permalink to &quot;별도 uORB 메시지 정의&quot;">​</a></h2><p>uORB 메시지는 트리 외부에서 정의할 수 있습니다. For this, the <code>$EXTERNAL_MODULES_LOCATION/msg</code> folder must exist.</p><ul><li><p>Place all new message definitions within the <code>$EXTERNAL_MODULES_LOCATION/msg</code> directory. The format of these new out-of-tree message definitions are the same as for any other <a href="./../middleware/uorb.html#adding-a-new-topic">uORB message definition</a>.</p></li><li><p>Add a file <code>$EXTERNAL_MODULES_LOCATION/msg/CMakeLists.txt</code> with content:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config_msg_list_external</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;message1&gt;.msg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;message2&gt;.msg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;message3&gt;.msg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    PARENT_SCOPE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span></code></pre></div><p>where <code>&lt;message#&gt;.msg</code> is the name of the uORB message definition file to be processed and used for uORB message generation.</p></li></ul><p>외부 uORB 메시지는 일반 uORB 메시지와 동일한 위치에 생성됩니다. The uORB topic headers are generated in <code>&lt;build_dir&gt;/uORB/topics/</code>, and the message source files are generated in <code>&lt;build_dir&gt;/msg/topics_sources/</code>.</p><p>The new uORB messages can be used like any other uORB message as described <a href="./../middleware/uorb.html#adding-a-new-topic">here</a>.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The out-of-tree uORB message definitions cannot have the same name as any of the normal uORB messages.</p></div><h2 id="외부-모듈-및-uorb-메시지-빌드" tabindex="-1">외부 모듈 및 uORB 메시지 빌드 <a class="header-anchor" href="#외부-모듈-및-uorb-메시지-빌드" aria-label="Permalink to &quot;외부 모듈 및 uORB 메시지 빌드&quot;">​</a></h2><p>Execute <code>make px4_sitl EXTERNAL_MODULES_LOCATION=&lt;path&gt;</code>.</p><p>다른 빌드 대상을 사용할 수 있지만, 빌드 디렉토리가 아직 존재하지 않아야 합니다. If it already exists, you can also just set the <em>cmake</em> variable in the build folder.</p><p>For subsequent incremental builds <code>EXTERNAL_MODULES_LOCATION</code> does not need to be specified.</p>`,17)]))}const E=s(n,[["render",l]]);export{u as __pageData,E as default};
