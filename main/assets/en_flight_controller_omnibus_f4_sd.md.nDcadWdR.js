import{_ as r,a,b as o,c as i,d as t,e as l,f as s,g as n,h}from"./chunks/pullup.ZkydBtNY.js";import{_ as d,c,a8 as u,o as p}from"./chunks/framework.BDnHobkS.js";const P=JSON.parse('{"title":"Omnibus F4 SD","description":"","frontmatter":{},"headers":[],"relativePath":"en/flight_controller/omnibus_f4_sd.md","filePath":"en/flight_controller/omnibus_f4_sd.md"}'),m={name:"en/flight_controller/omnibus_f4_sd.md"};function b(f,e,g,S,y,_){return p(),c("div",null,e[0]||(e[0]=[u('<h1 id="omnibus-f4-sd" tabindex="-1">Omnibus F4 SD <a class="header-anchor" href="#omnibus-f4-sd" aria-label="Permalink to &quot;Omnibus F4 SD&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This flight controller has been <a href="./../flight_controller/autopilot_experimental.html">discontinued</a> and is no longer commercially available.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>PX4 does not manufacture this (or any) autopilot. Contact the manufacturer for support or compliance issues.</p></div><p>The <em>Omnibus F4 SD</em> is a controller board designed for racers. In contrast to a typical racer board it has some additional features, such as an SD card and a faster CPU.</p><img src="'+r+'" width="400px" title="Omnibus F4 SD"><p>These are the main differences compared to a <a href="./../flight_controller/pixracer.html">Pixracer</a>:</p><ul><li>Lower price</li><li>Fewer IO ports (though it&#39;s still possible to attach a GPS or a Flow sensor for example)</li><li>Requires external pull up resistor on the I2C bus for external GPS, see <a href="#i2c">I2C</a> below.</li><li>Less RAM (192 KB vs. 256 KB) and FLASH (1 MB vs. 2 MB)</li><li>Same board dimensions as a <em>Pixracer</em>, but slightly smaller form factor (because it has less connectors)</li><li>Integrated OSD (not yet implemented in software)</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>All the usual PX4 features can still be used for your racer!</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This flight controller is <a href="./../flight_controller/autopilot_manufacturer_supported.html">manufacturer supported</a>.</p></div><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><ul><li>Main System-on-Chip: <a href="https://www.st.com/en/microcontrollers/stm32f405rg.html" target="_blank" rel="noreferrer">STM32F405RGT6</a><ul><li>CPU: 168 MHz ARM Cortex M4 with single-precision FPU</li><li>RAM: 192 KB SRAM</li><li>FLASH: 1 MB</li></ul></li><li>Standard racer form factor: 36x36 mm with standard 30.5 mm hole pattern</li><li>MPU6000 Accel / Gyro</li><li>BMP280 Baro (not all boards have it mounted)</li><li>microSD (for logging)</li><li>Futaba S.BUS and S.BUS2 / Spektrum DSM2 and DSMX / Graupner SUMD / PPM input / Yuneec ST24</li><li>OneShot PWM out (configurable)</li><li>Built-in current sensor</li><li>Built-in OSD chip (AB7456 via SPI)</li></ul><h2 id="where-to-buy" tabindex="-1">Where to Buy <a class="header-anchor" href="#where-to-buy" aria-label="Permalink to &quot;Where to Buy&quot;">​</a></h2><p>The board is produced by different vendors, with some variations (e.g. with or without a barometer).</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>PX4 is compatible with boards that support the Betaflight OMNIBUSF4SD target (if <em>OMNIBUSF4SD</em> is present on the product page the board should work with PX4).</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Any Omnibus F4 labeled derivative (e.g. clone) should work as well. However, power distribution on these boards is of varying quality.</p></div><p>These are the boards tested and known to work:</p><ul><li><p><a href="https://www.hobbywing.com/en/products/info.html?id=164" target="_blank" rel="noreferrer">Hobbywing XRotor Flight Controller F4</a></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This board fits on top of the <a href="https://www.hobbywing.com/en/products/info.html?id=116" target="_blank" rel="noreferrer">Hobbywing XRotor Micro 40A 4in1 ESC</a> without soldering. This ESC board also provides power for the Omnibus board.</p></div><p>Purchase from:</p><ul><li><a href="https://www.getfpv.com/hobbywing-xrotor-f4-flight-controller-w-osd.html" target="_blank" rel="noreferrer">Hobbywing XRotor F4 Flight Controller w/OSD</a> (getfpv)</li></ul></li><li><p>Original Airbot Omnibus F4 SD</p><p>Purchase from:</p><ul><li><a href="https://store.myairbot.com/omnibusf4prov3.html" target="_blank" rel="noreferrer">Airbot (CN manufacturer)</a></li><li><a href="https://quadsrtf.com/product/flip-32-f4-omnibus-rev-2/" target="_blank" rel="noreferrer">Ready To Fly Quads (US reseller)</a></li></ul></li></ul><p>Accessories include:</p><ul><li><a href="./../telemetry/esp8266_wifi_module.html">ESP8266 WiFi Module</a> for MAVLink telemetry. You need to connect these pins: GND, RX, TX, VCC and CH-PD (CH-PD to 3.3V). The baud rate is 921600.</li></ul><h2 id="connectors" tabindex="-1">Connectors <a class="header-anchor" href="#connectors" aria-label="Permalink to &quot;Connectors&quot;">​</a></h2><p>Boards from different vendors (based on this design) can have significantly different layout. Layouts/Silkscreens for various versions are shown below.</p><h3 id="airbot-omnibus-f4-sd" tabindex="-1">Airbot Omnibus F4 SD <a class="header-anchor" href="#airbot-omnibus-f4-sd" aria-label="Permalink to &quot;Airbot Omnibus F4 SD&quot;">​</a></h3><p>Below are silkscreens for the Airbot Omnibus F4 SD (V1), showing both top and bottom.</p><p><img src="'+a+'" alt="Omnibus F4 SD v1 Silkscreen Top"><img src="'+o+'" alt="Omnibus F4 SD v1 Silkscreen Bottom"></p><h3 id="hobbywing-xrotor-flight-controller-f4" tabindex="-1">Hobbywing XRotor Flight Controller F4 <a class="header-anchor" href="#hobbywing-xrotor-flight-controller-f4" aria-label="Permalink to &quot;Hobbywing XRotor Flight Controller F4&quot;">​</a></h3><p>Below are silkscreens for the Hobbywing XRotor Flight Controller F4.</p><p><img src="'+i+'" alt="Hobbywing XRotor Flight Controller F4 Silkscreen"></p><h2 id="pinouts" tabindex="-1">Pinouts <a class="header-anchor" href="#pinouts" aria-label="Permalink to &quot;Pinouts&quot;">​</a></h2><h3 id="radio-control" tabindex="-1">Radio Control <a class="header-anchor" href="#radio-control" aria-label="Permalink to &quot;Radio Control&quot;">​</a></h3><p>RC is connected to one of the following ports:</p><ul><li>UART1</li><li>SBUS/PPM port (via inverter, internally goes to UART1)</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Some Omnibus F4 boards have a jumper connecting either or both the MCU SBUS and PPM to a single pin header. Set your jumper or solder bridge to the appropriate MCU pin before use.</p></div><h3 id="uarts" tabindex="-1">UARTs <a class="header-anchor" href="#uarts" aria-label="Permalink to &quot;UARTs&quot;">​</a></h3><ul><li><p>UART6: GPS port</p><ul><li><p>TX: MCU pin PC6</p></li><li><p>RX: MCU pin PC7</p></li><li><p>Airbot Omnibus F4 SD Pinout is on Port J10 (TX6/RX6):</p></li></ul><p><img src="'+t+'" alt="Omnibus F4 SD UART6"></p></li><li><p>UART4</p><ul><li>TX: MCU pin PA0</li><li>RX: MCU pin PA1</li><li>57600 baud</li><li>This can be configured as the <code>TELEM 2</code> port.</li><li>Airbot Omnibus F4 SD Pinout: <ul><li>TX: RSSI pin</li><li>RX: PWM out 5</li></ul></li></ul><p><img src="'+l+'" alt="Omnibus F4 SD UART4"></p><p><img src="'+s+'" alt="Omnibus F4 SD UART4 Top"></p></li></ul><h3 id="i2c" tabindex="-1">I2C <a class="header-anchor" href="#i2c" aria-label="Permalink to &quot;I2C&quot;">​</a></h3><p>There is one I2C port available via:</p><ul><li>SCL: MCU pin PB10 (might be labeled as TX3)</li><li>SDA: MCU pin PB11 (might be labeled as RX3)</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You will need external pullups on both signals (clock and data). You can use 2.2k pullups for example to attach an external mag.</p></div><ul><li>Airbot Omnibus F4 SD Pinout is on Port J10 (SCL [clock] / SCA [data]): <img src="'+t+'" title="Omnibus F4 SD UART6"></li></ul><p>Here is an example implementation. I used a Spektrum plug to get 3.3v from the DSM port, connecting only 3.3v + to each line via 2.2k resistor.</p><p><img src="'+n+'" alt="Omnibus F4 SD Pullup"></p><p><img src="'+h+'" alt="Omnibus F4 SD Pullup Implementation"></p><h2 id="serial-port-mapping" tabindex="-1">Serial Port Mapping <a class="header-anchor" href="#serial-port-mapping" aria-label="Permalink to &quot;Serial Port Mapping&quot;">​</a></h2><table tabindex="0"><thead><tr><th>UART</th><th>Device</th><th>Port</th></tr></thead><tbody><tr><td>USART1</td><td>/dev/ttyS0</td><td>SerialRX</td></tr><tr><td>USART4</td><td>/dev/ttyS1</td><td>TELEM1</td></tr><tr><td>USART6</td><td>/dev/ttyS2</td><td>GPS</td></tr></tbody></table><h2 id="rc-telemetry" tabindex="-1">RC Telemetry <a class="header-anchor" href="#rc-telemetry" aria-label="Permalink to &quot;RC Telemetry&quot;">​</a></h2><p>The Omnibus supports telemetry to the RC Transmitter using <a href="./../peripherals/frsky_telemetry.html">FrSky Telemetry</a> or <a href="#crsf_telemetry">CRSF Crossfire Telemetry</a>.</p><p><a id="crsf_telemetry"></a></p><h3 id="crsf-crossfire-telemetry" tabindex="-1">CRSF Crossfire Telemetry <a class="header-anchor" href="#crsf-crossfire-telemetry" aria-label="Permalink to &quot;CRSF Crossfire Telemetry&quot;">​</a></h3><p><a href="./../telemetry/crsf_telemetry.html">TBS CRSF Telemetry</a> may be used to send telemetry data from the flight controller (the vehicle&#39;s attitude, battery, flight mode and GPS data) to an RC transmitter such as a Taranis.</p><p>Benefits over <a href="./../peripherals/frsky_telemetry.html">FrSky telemetry</a> include:</p><ul><li>Only a single UART is needed for RC and telemetry.</li><li>The CRSF protocol is optimized for low latency.</li><li>150 Hz RC update rate.</li><li>The signals are uninverted and thus no (external) inverter logic is required.</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If you use CRSF Telemetry you will need to build custom PX4 firmware. By contrast, FrSky telemetry can use prebuilt firmware.</p></div><p>For Omnibus we recommend the <a href="http://team-blacksheep.com/products/prod:crossfire_nano_rx" target="_blank" rel="noreferrer">TBS Crossfire Nano RX</a>, since it is specifically designed for small Quads.</p><p>On the handheld controller (e.g. Taranis) you will also need a <a href="http://team-blacksheep.com/shop/cat:rc_transmitters#product_listing" target="_blank" rel="noreferrer">Transmitter Module</a>. This can be plugged into the back of the RC controller.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The referenced links above contains the documentation for the TX/RX modules.</p></div><h4 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h4><p>Connect the Nano RX and Omnibus pins as shown:</p><table tabindex="0"><thead><tr><th>Omnibus UART1</th><th>Nano RX</th></tr></thead><tbody><tr><td>TX</td><td>Ch2</td></tr><tr><td>RX</td><td>Ch1</td></tr></tbody></table><p>Next update the TX/RX modules to use the CRSF protocol and set up telemetry. Instructions for this are provided in the <a href="https://www.team-blacksheep.com/tbs-crossfire-manual.pdf" target="_blank" rel="noreferrer">TBS Crossfire Manual</a> (search for &#39;Setting up radio for CRSF&#39;).</p><h4 id="px4-crsf-configuration" tabindex="-1">PX4 CRSF Configuration <a class="header-anchor" href="#px4-crsf-configuration" aria-label="Permalink to &quot;PX4 CRSF Configuration&quot;">​</a></h4><p>You will need to build custom firmware to use CRSF. For more information see <a href="./../telemetry/crsf_telemetry.html#px4-configuration">CRSF Telemetry</a>.</p><h2 id="schematics" tabindex="-1">Schematics <a class="header-anchor" href="#schematics" aria-label="Permalink to &quot;Schematics&quot;">​</a></h2><p>The schematics are provided by <a href="https://myairbot.com/" target="_blank" rel="noreferrer">Airbot</a>: <a href="http://bit.ly/obf4pro" target="_blank" rel="noreferrer">OmnibusF4-Pro-Sch.pdf</a>.</p><p><a id="bootloader"></a></p><h2 id="px4-bootloader-update" tabindex="-1">PX4 Bootloader Update <a class="header-anchor" href="#px4-bootloader-update" aria-label="Permalink to &quot;PX4 Bootloader Update&quot;">​</a></h2><p>The board comes pre-installed with <a href="https://github.com/betaflight/betaflight/wiki" target="_blank" rel="noreferrer">Betaflight</a>. Before PX4 firmware can be installed, the <em>PX4 bootloader</em> must be flashed. Download the <a href="https://github.com/PX4/PX4-user_guide/raw/main/assets/flight_controller/omnibus_f4_sd/omnibusf4sd_bl_d52b70cb39.hex" target="_blank" rel="noreferrer">omnibusf4sd_bl.hex</a> bootloader binary and read <a href="./../advanced_config/bootloader_update_from_betaflight.html">this page</a> for flashing instructions.</p><h2 id="building-firmware" tabindex="-1">Building Firmware <a class="header-anchor" href="#building-firmware" aria-label="Permalink to &quot;Building Firmware&quot;">​</a></h2><p>To <a href="./../dev_setup/building_px4.html">build PX4</a> for this target:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>make omnibus_f4sd_default</span></span></code></pre></div><h2 id="installing-px4-firmware" tabindex="-1">Installing PX4 Firmware <a class="header-anchor" href="#installing-px4-firmware" aria-label="Permalink to &quot;Installing PX4 Firmware&quot;">​</a></h2><p>You can use either pre-built firmware or your own custom firmware.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If you use <a href="./../telemetry/crsf_telemetry.html#px4-configuration">CRSF Telemetry</a> in your radio system, as describe above, then you must use custom firmware.</p></div><p>The firmware can be installed in any of the normal ways:</p><ul><li><p>Build and upload the source</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>make omnibus_f4sd_default upload</span></span></code></pre></div></li><li><p><a href="./../config/firmware.html">Load the firmware</a> using <em>QGroundControl</em>.</p></li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>In addition to the <a href="./../config/">basic configuration</a>, the following parameters are important:</p><table tabindex="0"><thead><tr><th>Parameter</th><th>Setting</th></tr></thead><tbody><tr><td><a href="./../advanced_config/parameter_reference.html#SYS_HAS_MAG">SYS_HAS_MAG</a></td><td>This should be disabled since the board does not have an internal mag. You can enable it if you attach an external mag.</td></tr><tr><td><a href="./../advanced_config/parameter_reference.html#SYS_HAS_BARO">SYS_HAS_BARO</a></td><td>Disable this if your board does not have a barometer.</td></tr></tbody></table><h2 id="further-info" tabindex="-1">Further Info <a class="header-anchor" href="#further-info" aria-label="Permalink to &quot;Further Info&quot;">​</a></h2><p><a href="https://blog.dronetrest.com/omnibus-f4-flight-controller-guide/" target="_blank" rel="noreferrer">This page</a> provides a good overview with pinouts and setup instructions.</p>',79)]))}const v=d(m,[["render",b]]);export{P as __pageData,v as default};
