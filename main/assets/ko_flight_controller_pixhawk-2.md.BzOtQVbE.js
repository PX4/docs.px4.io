import{_ as a}from"./chunks/cube_black_hero.B9x5cALa.js";import{_ as t,a as r}from"./chunks/cube_ports_usb_sdcard.CwzOMre7.js";import{_ as i}from"./chunks/cube_ports_debug.DfxMJPv0.js";import{_ as l,c as o,a8 as s,o as d}from"./chunks/framework.BDnHobkS.js";const x=JSON.parse('{"title":"Hex Cube Black 비행 컨트롤러","description":"","frontmatter":{},"headers":[],"relativePath":"ko/flight_controller/pixhawk-2.md","filePath":"ko/flight_controller/pixhawk-2.md"}'),h={name:"ko/flight_controller/pixhawk-2.md"};function n(c,e,u,p,b,m){return d(),o("div",null,e[0]||(e[0]=[s('<h1 id="hex-cube-black-비행-컨트롤러" tabindex="-1">Hex Cube Black 비행 컨트롤러 <a class="header-anchor" href="#hex-cube-black-비행-컨트롤러" aria-label="Permalink to &quot;Hex Cube Black 비행 컨트롤러&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>PX4 does not manufacture this (or any) autopilot. Contact the <a href="https://cubepilot.org/#/home" target="_blank" rel="noreferrer">manufacturer</a> for hardware support or compliance issues.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <a href="./cubepilot_cube_orange.html">Cube Orange</a> is the successor to this product. We recommend however to consider products built on industry standards, such as the <a href="./autopilot_pixhawk_standard.html">Pixhawk Standards</a>. 이 비행 컨트롤러는 표준을 따르지 않으며, 특허받은 커넥터를 사용합니다.</p></div><p>The <a href="http://www.proficnc.com/61-system-kits2" target="_blank" rel="noreferrer">Hex Cube Black</a> flight controller (previously known as Pixhawk 2.1) is a flexible autopilot intended primarily for manufacturers of commercial systems. It is based on the <a href="https://pixhawk.org/" target="_blank" rel="noreferrer">Pixhawk-project</a> <strong>FMUv3</strong> open hardware design and runs PX4 on the <a href="https://nuttx.apache.org/" target="_blank" rel="noreferrer">NuttX</a> OS.</p><p><img src="'+a+'" alt="Cube Black"></p><p>배선을 줄이고 신뢰성을 높이며 조립을 쉽게하기 위해 도메인별 캐리어 보드와 함께 사용하도록 설계되었습니다. For example, a carrier board for a commercial inspection vehicle might include connections for a companion computer, while a carrier board for a racer could includes ESCs form the frame of the vehicle.</p><p>Cube에는 2 개의 IMU에 진동 차단이 포함되어 있으며, 세 번째 고정 IMU는 참조 백업용으로 사용됩니다.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The manufacturer <a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview" target="_blank" rel="noreferrer">Cube Docs</a> contain detailed information, including an overview of the <a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview#differences-between-cube-colours" target="_blank" rel="noreferrer">Differences between Cube Colours</a>.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This autopilot is <a href="./../flight_controller/autopilot_pixhawk_standard.html">supported</a> by the PX4 maintenance and test teams.</p></div><h2 id="주요-특징" tabindex="-1">주요 특징 <a class="header-anchor" href="#주요-특징" aria-label="Permalink to &quot;주요 특징&quot;">​</a></h2><ul><li>32bit STM32F427 <a href="http://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M4" target="_blank" rel="noreferrer">Cortex-M4F</a><sup>®</sup> core with FPU</li><li>168 MHz / 252 MIPS</li><li>256 KB RAM</li><li>2MB 플래시 (완전 액세스 가능)</li><li>32 비트 STM32F103 failsafe 코 프로세서</li><li>14 개 PWM/서보 출력(페일세이프 및 수동 오버라이드 포함 8 개, 보조, 고전력 호환 6 개)</li><li>추가 주변 장치(UART, I2C, CAN) 다양한 연결 옵션</li><li>전용 프로세서와 독립형 전원 공급 장치(고정익 적용)로 비행중 복구 기능과 수동 오버라이드 통합 백업 시스템</li><li>Backup system integrates mixing, providing consistent autopilot and manual override mixing modes (fixed-wing use)</li><li>중복 전원공급장치 및 자동 장애 조치</li><li>외부 안전 스위치</li><li>다색 LED 주시각 표시기</li><li>고전력 멀티톤 피에조 오디오 표시기</li><li>장기간 고속 로깅용 microSD 카드</li></ul><p><a id="stores"></a></p><h2 id="구매처" tabindex="-1">구매처 <a class="header-anchor" href="#구매처" aria-label="Permalink to &quot;구매처&quot;">​</a></h2><p><a href="http://www.proficnc.com/61-system-kits" target="_blank" rel="noreferrer">Cube Black</a> (ProfiCNC)</p><h2 id="조립" tabindex="-1">조립 <a class="header-anchor" href="#조립" aria-label="Permalink to &quot;조립&quot;">​</a></h2><p><a href="./../assembly/quick_start_cube.html">Cube Wiring Quickstart</a></p><h2 id="사양" tabindex="-1">사양 <a class="header-anchor" href="#사양" aria-label="Permalink to &quot;사양&quot;">​</a></h2><h3 id="프로세서" tabindex="-1">프로세서 <a class="header-anchor" href="#프로세서" aria-label="Permalink to &quot;프로세서&quot;">​</a></h3><ul><li>32bit STM32F427 <a href="http://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M4" target="_blank" rel="noreferrer">Cortex M4</a> core with FPU</li><li>168 MHz / 252 MIPS</li><li>256 KB RAM</li><li>2MB 플래시 (완전 액세스 가능)</li><li>32 비트 STM32F103 failsafe 코 프로세서</li></ul><h3 id="센서" tabindex="-1">센서 <a class="header-anchor" href="#센서" aria-label="Permalink to &quot;센서&quot;">​</a></h3><ul><li>TBA</li></ul><h3 id="인터페이스" tabindex="-1">인터페이스 <a class="header-anchor" href="#인터페이스" aria-label="Permalink to &quot;인터페이스&quot;">​</a></h3><ul><li>UART (직렬 포트) 5개, 1 개의 고전력 지원, 2x (HW 흐름 제어 포함)</li><li>CAN 2개(하나는 내부 3.3V 트랜시버, 하나는 확장 커넥터에 있음)</li><li>Spektrum DSM/DSM2/DSM-X® Satellite 호환 입력</li><li>Futaba S.BUS® 호환 입력 및 출력</li><li>PPM 합계 신호 입력</li><li>RSSI(PWM 또는 전압) 입력</li><li>I2C</li><li>SPI</li><li>3.3v ADC 입력</li><li>내부 microUSB 포트 및 외부 microUSB 포트 확장</li></ul><h3 id="전력-시스템-및-보호" tabindex="-1">전력 시스템 및 보호 <a class="header-anchor" href="#전력-시스템-및-보호" aria-label="Permalink to &quot;전력 시스템 및 보호&quot;">​</a></h3><ul><li>자동 복구 기능의 이상적인 다이오드 컨트롤러</li><li>Servo rail high-power (max. 10V) and high-current (10A+) ready</li><li>모든 주변 장치 출력 과전류 보호, 모든 입력 ESD 보호</li></ul><h3 id="정격-전압" tabindex="-1">정격 전압 <a class="header-anchor" href="#정격-전압" aria-label="Permalink to &quot;정격 전압&quot;">​</a></h3><p>Pixhawk 는 3 개의 전원이 공급되는 경우에는 전원 공급 장치의 3중 중복이 가능합니다. 세 개의 레일은 전원 모듈 입력, 서보 레일 입력과 USB 입력입니다.</p><h4 id="정상-작동-최대-정격-전압" tabindex="-1">정상 작동 최대 정격 전압 <a class="header-anchor" href="#정상-작동-최대-정격-전압" aria-label="Permalink to &quot;정상 작동 최대 정격 전압&quot;">​</a></h4><p>이러한 조건에서 전원은 아래의 순서대로 시스템에 전원을 공급하여야합니다.</p><ul><li>전원 모듈 입력 (4.8V ~ 5.4V)</li><li>Servo rail input (4.8V to 5.4V) <strong>UP TO 10V FOR MANUAL OVERRIDE, BUT AUTOPILOT PART WILL BE UNPOWERED ABOVE 5.7V IF POWER MODULE INPUT IS NOT PRESENT</strong></li><li>USB 전원 입력 (4.8V ~ 5.4V)</li></ul><h4 id="절대-최대-정격-전압" tabindex="-1">절대 최대 정격 전압 <a class="header-anchor" href="#절대-최대-정격-전압" aria-label="Permalink to &quot;절대 최대 정격 전압&quot;">​</a></h4><p>아래의 조건에서 시스템은 전원을 사용하지 않지만(작동하지 않음), 그대로 유지됩니다.</p><ul><li>전원 모듈 입력(4.1V ~ 5.7V, 0V ~ 20V 손상되지 않음)</li><li>서보 레일 입력(4.1V ~ 5.7V, 0V ~ 20V)</li><li>USB 전원 입력(4.1V ~ 5.7V, 0V ~ 6V)</li></ul><h2 id="핀배열과-회로도" tabindex="-1">핀배열과 회로도 <a class="header-anchor" href="#핀배열과-회로도" aria-label="Permalink to &quot;핀배열과 회로도&quot;">​</a></h2><p>Board schematics and other documentation can be found here: <a href="https://github.com/proficnc/The-Cube" target="_blank" rel="noreferrer">The Cube Project</a>.</p><h2 id="포트" tabindex="-1">포트 <a class="header-anchor" href="#포트" aria-label="Permalink to &quot;포트&quot;">​</a></h2><h3 id="위쪽-gps-telem-등" tabindex="-1">위쪽(GPS, TELEM 등) <a class="header-anchor" href="#위쪽-gps-telem-등" aria-label="Permalink to &quot;위쪽(GPS, TELEM 등)&quot;">​</a></h3><p><img src="'+t+'" alt="Cube Ports - Top (GPS, TELEM etc) and Main/AUX"></p><p><a id="serial_ports"></a></p><h3 id="시리얼-포트-매핑" tabindex="-1">시리얼 포트 매핑 <a class="header-anchor" href="#시리얼-포트-매핑" aria-label="Permalink to &quot;시리얼 포트 매핑&quot;">​</a></h3><table tabindex="0"><thead><tr><th>UART</th><th>장치</th><th>포트</th></tr></thead><tbody><tr><td>USART1</td><td>/dev/ttyS0</td><td></td></tr><tr><td>USART2</td><td>/dev/ttyS1</td><td>TELEM1 (흐름 제어)</td></tr><tr><td>USART3</td><td>/dev/ttyS2</td><td>TELEM2 (흐름 제어)</td></tr><tr><td>UART4</td><td>/dev/ttyS3</td><td>GPS1</td></tr><tr><td>USART6</td><td>/dev/ttyS4</td><td>PX4IO</td></tr><tr><td>UART7</td><td>/dev/ttyS5</td><td>콘솔</td></tr><tr><td>UART8</td><td>/dev/ttyS6</td><td></td></tr></tbody></table><h3 id="디버그-포트" tabindex="-1">디버그 포트 <a class="header-anchor" href="#디버그-포트" aria-label="Permalink to &quot;디버그 포트&quot;">​</a></h3><p><img src="'+i+'" alt="Cube Debug Ports"></p><h3 id="usb-sdcard-포트" tabindex="-1">USB/SDCard 포트 <a class="header-anchor" href="#usb-sdcard-포트" aria-label="Permalink to &quot;USB/SDCard 포트&quot;">​</a></h3><p><img src="'+r+'" alt="Cube USB/SDCard Ports"></p><h2 id="펌웨어-빌드" tabindex="-1">펌웨어 빌드 <a class="header-anchor" href="#펌웨어-빌드" aria-label="Permalink to &quot;펌웨어 빌드&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Most users will not need to build this firmware! It is pre-built and automatically installed by <em>QGroundControl</em> when appropriate hardware is connected.</p></div><p>To <a href="./../dev_setup/building_px4.html">build PX4</a> for this target:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>make px4_fmu-v3_default</span></span></code></pre></div><h2 id="문제점" tabindex="-1">문제점 <a class="header-anchor" href="#문제점" aria-label="Permalink to &quot;문제점&quot;">​</a></h2><p>Cube Black의 CAN1과 CAN2의 실크 스크린이 뒤집힙니다 (CAN1은 CAN2이고 그 반대의 경우도 마찬가지임).</p><h2 id="추가-정보-및-문서" tabindex="-1">추가 정보 및 문서 <a class="header-anchor" href="#추가-정보-및-문서" aria-label="Permalink to &quot;추가 정보 및 문서&quot;">​</a></h2><ul><li><a href="./../assembly/quick_start_cube.html">Cube Wiring Quickstart</a></li><li>Cube 문서 (제조사) : <ul><li><a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview" target="_blank" rel="noreferrer">Cube Module Overview</a></li><li><a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-user-manual" target="_blank" rel="noreferrer">Cube User Manual</a></li><li><a href="https://docs.cubepilot.org/user-guides/carrier-boards/mini-carrier-board" target="_blank" rel="noreferrer">Mini Carrier Board</a></li></ul></li></ul>',53)]))}const _=l(h,[["render",n]]);export{x as __pageData,_ as default};
