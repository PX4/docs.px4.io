import{_ as e}from"./chunks/BeagleBone_Blue_balloons.BzMb9EG7.js";import{_ as n,c as t,j as i,a as l,G as h,a8 as o,B as p,o as r}from"./chunks/framework.BDnHobkS.js";const B=JSON.parse('{"title":"BeagleBone Blue","description":"","frontmatter":{},"headers":[],"relativePath":"uk/flight_controller/beaglebone_blue.md","filePath":"uk/flight_controller/beaglebone_blue.md"}'),k={name:"uk/flight_controller/beaglebone_blue.md"};function d(c,s,g,u,b,F){const a=p("LinkedBadge");return r(),t("div",null,[s[0]||(s[0]=i("h1",{id:"beaglebone-blue",tabindex:"-1"},[l("BeagleBone Blue "),i("a",{class:"header-anchor",href:"#beaglebone-blue","aria-label":'Permalink to "BeagleBone Blue"'},"​")],-1)),h(a,{type:"warning",text:"Experimental",url:"../flight_controller/autopilot_experimental.md"}),s[1]||(s[1]=o('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>PX4 не розробляє цей (або будь-який інший) автопілот. Contact the <a href="https://beagleboard.org/blue" target="_blank" rel="noreferrer">manufacturer</a> for hardware support or compliance issues.</p></div><p><a href="https://beagleboard.org/blue" target="_blank" rel="noreferrer">BeagleBone Blue</a> is an all-in-one Linux-based computer. Хоча ця компактна і недорога плата оптимізована для робототехніки, вона має всі необхідні датчики і периферійні пристрої, необхідні для керування польотом. This topic shows how to set up the board to run PX4 with <a href="https://github.com/StrawsonDesign/librobotcontrol" target="_blank" rel="noreferrer">librobotcontrol</a> robotics package.</p><p><img src="'+e+`" alt="BeagleBone - labelled diagram"></p><h2 id="os-image" tabindex="-1">OS Image <a class="header-anchor" href="#os-image" aria-label="Permalink to &quot;OS Image&quot;">​</a></h2><p><em>BeagleBone Blue</em> images can be found here:</p><ul><li><a href="https://beagleboard.org/latest-images" target="_blank" rel="noreferrer">Latest stable OS image</a>.</li><li><a href="https://rcn-ee.net/rootfs/bb.org/testing/" target="_blank" rel="noreferrer">Test OS images</a> (updated frequently).</li></ul><p>Information about flashing OS images can be found on <a href="https://github.com/beagleboard/beaglebone-blue/wiki/Flashing-firmware" target="_blank" rel="noreferrer">this page</a>. Other useful information can be found in the <a href="https://github.com/beagleboard/beaglebone-blue/wiki/Frequently-Asked-Questions-(FAQ)" target="_blank" rel="noreferrer">FAQ</a>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Optionally you can update to a realtime kernel, and if you do, re-check if <em>librobotcontrol</em> works properly with the realtime kernel.</p></div><p>The latest OS images at time of updating this document is <a href="https://debian.beagle.cc/images/bone-debian-10.3-iot-armhf-2020-04-06-4gb.img.xz" target="_blank" rel="noreferrer">bone-debian-10.3-iot-armhf-2020-04-06-4gb.img.xz</a>.</p><h2 id="збірка-для-крос-компіляторів-рекомендується" tabindex="-1">Збірка для крос-компіляторів (рекомендується) <a class="header-anchor" href="#збірка-для-крос-компіляторів-рекомендується" aria-label="Permalink to &quot;Збірка для крос-компіляторів (рекомендується)&quot;">​</a></h2><p>The recommended way to build PX4 for <em>BeagleBone Blue</em> is to compile on a development computer and upload the PX4 executable binary directly to the BeagleBone Blue.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This approach is recommended over <a href="#native_builds">native build</a> due to speed of deployment and ease of use.</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The PX4 build requires <a href="http://strawsondesign.com/docs/librobotcontrol/" target="_blank" rel="noreferrer">librobotcontrol</a> which is automatically included in the build (but it can be installed and tested independently if required).</p></div><h3 id="налаштування-beaglebone-blue-wifi" tabindex="-1">Налаштування Beaglebone Blue WIFI <a class="header-anchor" href="#налаштування-beaglebone-blue-wifi" aria-label="Permalink to &quot;Налаштування Beaglebone Blue WIFI&quot;">​</a></h3><p>Для зручного доступу до плати ви можете підключити її до домашньої мережі через Wi-Fi.</p><p>Кроки наступні (виконайте на платі):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> su</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connmanctl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connmanctl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wifi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connmanctl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">services</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#(at this point you should see your network SSID appear.)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connmanctl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connmanctl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">connect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SSI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	Enter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Passphrase</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connmanctl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">quit</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The format of the <code>&lt;SSID&gt;</code> above is normally the text &#39;wifi&#39; followed by a string of other characters. Після введення команди вам буде запропоновано ввести пароль для wifi.</p></div><h3 id="ssh-root-логін-на-beaglebone" tabindex="-1">SSH root-логін на Beaglebone <a class="header-anchor" href="#ssh-root-логін-на-beaglebone" aria-label="Permalink to &quot;SSH root-логін на Beaglebone&quot;">​</a></h3><p>Root-логін можна увімкнути на платі за допомогою:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> su</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;PermitRootLogin yes&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  /etc/ssh/sshd_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sshd</span></span></code></pre></div><h3 id="налаштування-крос-компілятора" tabindex="-1">Налаштування крос-компілятора <a class="header-anchor" href="#налаштування-крос-компілятора" aria-label="Permalink to &quot;Налаштування крос-компілятора&quot;">​</a></h3><ol><li><p>First set up <em>rsync</em> (this is used to transfer files from the development computer to the target board over a network - WiFi or Ethernet). For <em>rsync</em> over SSH with key authentication, follow the steps here (on the development machine):</p><ol><li><p>Створіть ключ SSH, якщо ви раніше цього не робили:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh-keygen -t rsa</span></span></code></pre></div><ol><li>ENTER //no passphrase</li><li>ENTER</li><li>ENTER</li></ol></li><li><p>Define the BeagleBone Blue board as <code>beaglebone</code> in <strong>/etc/hosts</strong> and copy the public SSH key to the board for password-less SSH access:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh-copy-id debian@beaglebone</span></span></code></pre></div></li><li><p>Крім того, ви можете використовувати IP-адресу beaglebone безпосередньо:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh-copy-id debian@&lt;IP&gt;</span></span></code></pre></div></li><li><p>На запитання, чи довіряєте ви: yes</p></li><li><p>Введіть root пароль</p></li></ol></li><li><p>Налаштування крос-компіляції</p><ol><li><p>Завантаження інструментів</p><ol><li><p>First install the toolchain into <em>/opt/bbblue_toolchain/gcc-arm-linux-gnueabihf</em>. Ось приклад використання софт-посилання для вибору версії набору інструментів, яку ви хочете використовувати:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/bbblue_toolchain/gcc-arm-linux-gnueabihf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/bbblue_toolchain</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/bbblue_toolchain/gcc-arm-linux-gnueabihf</span></span></code></pre></div><p>The ARM Cross Compiler for <em>BeagleBone Blue</em> can be found at <a href="https://www.linaro.org/downloads/#gnu_and_llvm" target="_blank" rel="noreferrer">Linaro Toolchain Binaries site</a>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>GCC in the toolchain should be compatible with kernel in <em>BeagleBone Blue</em>. General rule of thumb is to choose a toolchain where version of GCC is not higher than version of GCC which comes with the OS image on <em>BeagleBone Blue</em>.</p></div></li></ol></li></ol></li></ol><p>:::</p><pre><code>     Download and unpack [gcc-linaro-13.0.0-2022.06-x86_64_arm-linux-gnueabihf.tar.xz](https://snapshots.linaro.org/gnu-toolchain/13.0-2022.06-1/arm-linux-gnueabihf/gcc-linaro-13.0.0-2022.06-x86_64_arm-linux-gnueabihf.tar.xz) to the bbblue_toolchain folder.

     Different ARM Cross Compiler versions for _BeagleBone Blue_ can be found at [Linaro Toolchain Binaries site](http://www.linaro.org/downloads/).

     \`\`\`sh
     wget https://snapshots.linaro.org/gnu-toolchain/13.0-2022.06-1/arm-linux-gnueabihf/gcc-linaro-13.0.0-2022.06-x86_64_arm-linux-gnueabihf.tar.xz
     tar -xf gcc-linaro-13.0.0-2022.06-x86_64_arm-linux-gnueabihf.tar.xz
     \`\`\`

     :::tip
     The GCC version of the toolchain should be compatible with kernel in _BeagleBone Blue_.
</code></pre><p>:::</p><pre><code>     As a general rule of thumb is to choose a toolchain where the version of GCC is not higher than the version of GCC which comes with the OS image on _BeagleBone Blue_.

  2. Додайте його до PATH в ~/.profile, як показано нижче

     \`\`\`sh
     export PATH=$PATH:/opt/bbblue_toolchain/gcc-arm-linux-gnueabihf/gcc-linaro-13.0.0-2022.06-x86_64_arm-linux-gnueabihf/bin
     \`\`\`

     ::: info
     Logout and Login to apply the change, or execute the same line on your current shell.
</code></pre><p>:::</p><pre><code>  3. Налаштуйте інші залежності, завантаживши вихідний код PX4, а потім виконайте сценарії налаштування:

     \`\`\`\`
     git clone https://github.com/PX4/PX4-Autopilot.git --recursive
     ols
     \`\`\`

     You may have to edit the upload target to match with your setup:

     \`\`\`sh
     nano PX4-Autopilot/boards/beaglebone/blue/cmake/upload.cmake

     # in row 37 change debian@beaglebone.lan TO root@beaglebone (or root@&lt;IP&gt;)
     \`\`\`\`

     See the [Development Environment Setup](../dev_setup/dev_env_linux_ubuntu.md) instructions for additional information.
</code></pre><h3 id="налаштування-крос-компіляціі-та-завантаження" tabindex="-1">Налаштування крос-компіляції та завантаження <a class="header-anchor" href="#налаштування-крос-компіляціі-та-завантаження" aria-label="Permalink to &quot;Налаштування крос-компіляції та завантаження&quot;">​</a></h3><p>Компіляція та завантаження</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>make beaglebone_blue_default upload</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Without upload, files stored local in build folder.</p></div><p>To test the uploaded files, run the following commands on the <em>BeagleBone Blue</em> board:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/debian/px4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./bin/px4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4.config</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Currently <em>librobotcontrol</em> requires root access.</p></div><p><a id="native_builds"></a></p><h2 id="нативні-збірки-необов-язково" tabindex="-1">Нативні збірки (необов&#39;язково) <a class="header-anchor" href="#нативні-збірки-необов-язково" aria-label="Permalink to &quot;Нативні збірки (необов&#39;язково)&quot;">​</a></h2><p>Ви також можете нативно створювати збірки PX4 безпосередньо на BeagleBone Blue.</p><p>Після придбання готової бібліотеки,</p><ol><li>Select the <em>librobotcontrol</em> installation directory, and set it in the <code>LIBROBOTCONTROL_INSTALL_DIR</code> environment variable so that other unwanted headers will not be included</li><li>Install <strong>robotcontrol.h</strong> and <strong>rc/*</strong> into <code>$LIBROBOTCONTROL_INSTALL_DIR/include</code></li><li>Install pre-built native (ARM) version of librobotcontrol.* into <code>$LIBROBOTCONTROL_INSTALL_DIR/lib</code></li></ol><p>Виконайте наступні команди на BeagleBone Blue (тобто через SSH):</p><ol><li><p>Встановіть залежності:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-empy=3.3.4-2</span></span></code></pre></div></li><li><p>Клонуйте програмне забезпечення PX4 безпосередньо на плату BeagleBone Blue.</p></li><li><p>Continue with the <a href="./../dev_setup/dev_env_linux.html">standard build system installation</a>.</p></li></ol><h2 id="зміни-в-конфігураціі" tabindex="-1">Зміни в конфігурації <a class="header-anchor" href="#зміни-в-конфігураціі" aria-label="Permalink to &quot;Зміни в конфігурації&quot;">​</a></h2><p>Усі зміни можна вносити безпосередньо в файл налаштувань px4.config на beaglebone. Наприклад, ви можете змінити WIFI на wlan.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If you want to change permanently, you have to change <strong>PX4-Autopilot/posix-configs/bbblue/px4.config</strong> on the Build Machine before build.</p></div><h2 id="автозапуск-під-час-завантаження" tabindex="-1">Автозапуск під час завантаження <a class="header-anchor" href="#автозапуск-під-час-завантаження" aria-label="Permalink to &quot;Автозапуск під час завантаження&quot;">​</a></h2><p>Ось приклад [/etc/rc.local]:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/sh -e</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># rc.local</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This script is executed at the end of each multiuser runlevel.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Make sure that the script will &quot;exit 0&quot; on success or any other</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># value on error.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># In order to enable or disable this script just change the execution</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># bits.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># By default this script does nothing.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># wait for services to start up</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/debian/px4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/home/debian/px4/bin/px4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/debian/px4/px4.config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/debian/px4/PX4.log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span></code></pre></div><p>Below is a <em>systemd</em> service example [/lib/systemd/system/px4-quad-copter.service]:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PX4</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Quadcopter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Service</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">After</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">networking.service</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> network-online.target</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">StartLimitIntervalSec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Conflicts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px4-fixed-wing.service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WorkingDirectory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/home/debian/px4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExecStart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/home/debian/px4/bin/px4</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/debian/px4/px4.config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on-failure</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RestartSec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WantedBy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">multi-user.target</span></span></code></pre></div><h3 id="інше" tabindex="-1">Інше <a class="header-anchor" href="#інше" aria-label="Permalink to &quot;Інше&quot;">​</a></h3><h4 id="силова-сервореика" tabindex="-1">Силова серворейка <a class="header-anchor" href="#силова-сервореика" aria-label="Permalink to &quot;Силова серворейка&quot;">​</a></h4><p>Коли PX4 починає працювати, він автоматично подає живлення на сервоприводи.</p><h4 id="унікальні-можливості" tabindex="-1">Унікальні можливості <a class="header-anchor" href="#унікальні-можливості" aria-label="Permalink to &quot;Унікальні можливості&quot;">​</a></h4><p>BeagleBone Blue має деякі унікальні функції, такі як кілька варіантів інтерфейсів WiFi та джерел живлення. Refer to comments in <strong>/home/debian/px4/px4.config</strong> for usage of these features.</p><h4 id="перетворювач-сигналів-sbus" tabindex="-1">Перетворювач сигналів SBUS <a class="header-anchor" href="#перетворювач-сигналів-sbus" aria-label="Permalink to &quot;Перетворювач сигналів SBUS&quot;">​</a></h4><p>Сигнал SBUS від приймача (наприклад, FrSky X8R) є інвертованим сигналом. UARTs на BeagleBone Blue можуть працювати лише з неінвертованим сигналом рівня 3,3 В. <a href="./../tutorials/linux_sbus.html">This tutorial</a> contains a SBUS signal inverter circuit.</p><h4 id="типові-підключення" tabindex="-1">Типові підключення <a class="header-anchor" href="#типові-підключення" aria-label="Permalink to &quot;Типові підключення&quot;">​</a></h4><p>Для квадрокоптера з GPS і приймачем SBUS, ось типові схеми підключення:</p><ol><li><p>Підключіть ESC двигуна 1, 2, 3 та 4 до каналу 1, 2, 3 та 4 вихідних сигналів сервоприводів на BeagleBone Blue відповідно. Якщо ваш роз&#39;єм ESC містить вихідний контакт живлення, вийміть його і не підключайте його до вихідного контакту живлення каналу сервоприводу на BeagleBone Blue.</p></li><li><p>Connect the above mentioned converted SBUS signal to the dsm2 port if you have the matching connector for dsm2, otherwise connect it to any other available UART port and change the corresponding port in <strong>/home/debian/px4/px4.config</strong> accordingly.</p></li><li><p>Підключіть сигнали модуля GPS до порту GPS на платі BeagleBone Blue. Зверніть увагу, що сигнальні контакти порту GPS на BeagleBone Blue підтримують лише 3,3 В, тому обирайте свій GPS-модуль відповідно.</p></li></ol>`,61))])}const f=n(k,[["render",d]]);export{B as __pageData,f as default};
