import{_ as s,c as e,a8 as t,o as n}from"./chunks/framework.BDnHobkS.js";const h=JSON.parse('{"title":"Modules Reference: Estimator","description":"","frontmatter":{},"headers":[],"relativePath":"en/modules/modules_estimator.md","filePath":"en/modules/modules_estimator.md"}'),i={name:"en/modules/modules_estimator.md"};function o(p,a,r,l,c,d){return n(),e("div",null,a[0]||(a[0]=[t(`<h1 id="modules-reference-estimator" tabindex="-1">Modules Reference: Estimator <a class="header-anchor" href="#modules-reference-estimator" aria-label="Permalink to &quot;Modules Reference: Estimator&quot;">​</a></h1><h2 id="attitudeestimatorq" tabindex="-1">AttitudeEstimatorQ <a class="header-anchor" href="#attitudeestimatorq" aria-label="Permalink to &quot;AttitudeEstimatorQ&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/attitude_estimator_q" target="_blank" rel="noreferrer">modules/attitude_estimator_q</a></p><h3 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Attitude estimator q.</p><p><a id="AttitudeEstimatorQ_usage"></a></p><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>AttitudeEstimatorQ &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="airspeed-estimator" tabindex="-1">airspeed_estimator <a class="header-anchor" href="#airspeed-estimator" aria-label="Permalink to &quot;airspeed_estimator&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/airspeed_selector" target="_blank" rel="noreferrer">modules/airspeed_selector</a></p><h3 id="description-1" tabindex="-1">Description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>This module provides a single airspeed_validated topic, containing indicated (IAS), calibrated (CAS), true airspeed (TAS) and the information if the estimation currently is invalid and if based sensor readings or on groundspeed minus windspeed. Supporting the input of multiple &quot;raw&quot; airspeed inputs, this module automatically switches to a valid sensor in case of failure detection. For failure detection as well as for the estimation of a scale factor from IAS to CAS, it runs several wind estimators and also publishes those.</p><p><a id="airspeed_estimator_usage"></a></p><h3 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>airspeed_estimator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="ekf2" tabindex="-1">ekf2 <a class="header-anchor" href="#ekf2" aria-label="Permalink to &quot;ekf2&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/ekf2" target="_blank" rel="noreferrer">modules/ekf2</a></p><h3 id="description-2" tabindex="-1">Description <a class="header-anchor" href="#description-2" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Attitude and position estimator using an Extended Kalman Filter. It is used for Multirotors and Fixed-Wing.</p><p>The documentation can be found on the <a href="https://docs.px4.io/main/en/advanced_config/tuning_the_ecl_ekf.html" target="_blank" rel="noreferrer">ECL/EKF Overview &amp; Tuning</a> page.</p><p>ekf2 can be started in replay mode (<code>-r</code>): in this mode, it does not access the system time, but only uses the timestamps from the sensor topics.</p><p><a id="ekf2_usage"></a></p><h3 id="usage-2" tabindex="-1">Usage <a class="header-anchor" href="#usage-2" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ekf2 &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-r]        Enable replay mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span>
<span class="line"><span>     [-v]        verbose (print all states and full covariance matrix)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   select_instance Request switch to new estimator instance</span></span>
<span class="line"><span>     &lt;instance&gt;  Specify desired estimator instance</span></span></code></pre></div><h2 id="local-position-estimator" tabindex="-1">local_position_estimator <a class="header-anchor" href="#local-position-estimator" aria-label="Permalink to &quot;local_position_estimator&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/local_position_estimator" target="_blank" rel="noreferrer">modules/local_position_estimator</a></p><h3 id="description-3" tabindex="-1">Description <a class="header-anchor" href="#description-3" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Attitude and position estimator using an Extended Kalman Filter.</p><p><a id="local_position_estimator_usage"></a></p><h3 id="usage-3" tabindex="-1">Usage <a class="header-anchor" href="#usage-3" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>local_position_estimator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="mc-hover-thrust-estimator" tabindex="-1">mc_hover_thrust_estimator <a class="header-anchor" href="#mc-hover-thrust-estimator" aria-label="Permalink to &quot;mc_hover_thrust_estimator&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/mc_hover_thrust_estimator" target="_blank" rel="noreferrer">modules/mc_hover_thrust_estimator</a></p><h3 id="description-4" tabindex="-1">Description <a class="header-anchor" href="#description-4" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p><a id="mc_hover_thrust_estimator_usage"></a></p><h3 id="usage-4" tabindex="-1">Usage <a class="header-anchor" href="#usage-4" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mc_hover_thrust_estimator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div>`,37)]))}const m=s(i,[["render",o]]);export{h as __pageData,m as default};
