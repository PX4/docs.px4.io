import{_ as i,c as a,a8 as t,o as e}from"./chunks/framework.BDnHobkS.js";const c=JSON.parse('{"title":"라즈베리 파이 OS 기반 파일럿파이","description":"","frontmatter":{},"headers":[],"relativePath":"ko/flight_controller/raspberry_pi_pilotpi_rpios.md","filePath":"ko/flight_controller/raspberry_pi_pilotpi_rpios.md"}'),n={name:"ko/flight_controller/raspberry_pi_pilotpi_rpios.md"};function p(l,s,h,k,o,d){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="라즈베리-파이-os-기반-파일럿파이" tabindex="-1">라즈베리 파이 OS 기반 파일럿파이 <a class="header-anchor" href="#라즈베리-파이-os-기반-파일럿파이" aria-label="Permalink to &quot;라즈베리 파이 OS 기반 파일럿파이&quot;">​</a></h1><h2 id="개발자-가이드" tabindex="-1">개발자 가이드 <a class="header-anchor" href="#개발자-가이드" aria-label="Permalink to &quot;개발자 가이드&quot;">​</a></h2><h3 id="os-이미지" tabindex="-1">OS 이미지 <a class="header-anchor" href="#os-이미지" aria-label="Permalink to &quot;OS 이미지&quot;">​</a></h3><p>The latest official <a href="https://downloads.raspberrypi.org/raspios_lite_armhf_latest" target="_blank" rel="noreferrer">Raspberry Pi OS Lite</a> image is always recommended.</p><p>설치를 위히 라즈베리파이에 SSH 연결이 가능하여야 합니다.</p><h3 id="접근-설정-선택-사항" tabindex="-1">접근 설정 (선택 사항) <a class="header-anchor" href="#접근-설정-선택-사항" aria-label="Permalink to &quot;접근 설정 (선택 사항)&quot;">​</a></h3><h4 id="호스트명과-mdns" tabindex="-1">호스트명과 mDNS <a class="header-anchor" href="#호스트명과-mdns" aria-label="Permalink to &quot;호스트명과 mDNS&quot;">​</a></h4><p>mDNS helps you connect to your RPi with hostname instead of IP address.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> raspi-config</span></span></code></pre></div><p>Navigate to <strong>Network Options &gt; Hostname</strong>. 설정하고 종료합니다. You may want to setup <a href="https://www.raspberrypi.org/documentation/remote-access/ssh/passwordless.md" target="_blank" rel="noreferrer">passwordless auth</a> as well.</p><h3 id="운영체제-설정" tabindex="-1">운영체제 설정 <a class="header-anchor" href="#운영체제-설정" aria-label="Permalink to &quot;운영체제 설정&quot;">​</a></h3><h4 id="config-txt" tabindex="-1">config.txt <a class="header-anchor" href="#config-txt" aria-label="Permalink to &quot;config.txt&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /boot/config.txt</span></span></code></pre></div><p>파일을 다음의 내용으로 변경합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># enable sc16is752 overlay</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dtoverlay</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sc16is752-spi1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># enable I2C-1 and set the frequency to 400KHz</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dtparam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">i2c_arm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">i2c_arm_baudrate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">400000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># enable spidev0.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dtparam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># enable RC input</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">enable_uart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># enable I2C-0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dtparam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">i2c_vc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># switch Bluetooth to miniuart</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dtoverlay</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">miniuart-bt</span></span></code></pre></div><h4 id="cmdline-txt" tabindex="-1">cmdline.txt <a class="header-anchor" href="#cmdline-txt" aria-label="Permalink to &quot;cmdline.txt&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> raspi-config</span></span></code></pre></div><p><strong>Interfacing Options &gt; Serial &gt; login shell = No &gt; hardware = Yes</strong>. 로그인 셸없이 UART를 활성화합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /boot/cmdline.txt</span></span></code></pre></div><p>Append <code>isolcpus=2</code> after the last word. 전체 파일은 다음과 같습니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tty1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> root</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PARTUUID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxxxxxxx-xx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rootfstype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ext4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> elevator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deadline</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fsck.repair</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=yes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rootwait</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isolcpus=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span></code></pre></div><p>이것은 리눅스 커널이 CPU 코어 2에서 프로세스를 예약하지 않도록 지시합니다. 나중에 해당 코어에서 PX4를 수동으로 실행합니다.</p><p>Reboot and SSH onto your RPi.</p><p>UART 인터페이스를 확인합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/tty</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span></code></pre></div><p>There should be <code>/dev/ttyAMA0</code>, <code>/dev/ttySC0</code> and <code>/dev/ttySC1</code>.</p><p>I2C 인터페이스를 확인합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/i2c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span></code></pre></div><p>There should be <code>/dev/i2c-0</code> and <code>/dev/i2c-1</code></p><p>SPI 인터페이스를 확인합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/spidev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span></code></pre></div><p>There should be <code>/dev/spidev0.0</code>.</p><h4 id="rc-local" tabindex="-1">rc.local <a class="header-anchor" href="#rc-local" aria-label="Permalink to &quot;rc.local&quot;">​</a></h4><p>In this section we will configure the auto-start script in <strong>rc.local</strong>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/rc.local</span></span></code></pre></div><p>Append below content to the file above <code>exit 0</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;25&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sys/class/gpio/export</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;in&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sys/class/gpio/gpio25/direction</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sys/class/gpio/gpio25/value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-eq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] ; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Launching PX4&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/pi/px4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> taskset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./bin/px4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pilotpi_mc.config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /home/pi/px4/px4.log &amp;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;25&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sys/class/gpio/unexport</span></span></code></pre></div><p>저장후 종료합니다.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Don&#39;t forget to turn off the switch when it is not needed.</p></div><h4 id="csi-카메라" tabindex="-1">CSI 카메라 <a class="header-anchor" href="#csi-카메라" aria-label="Permalink to &quot;CSI 카메라&quot;">​</a></h4><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Enable CSI camera will stop anything works on I2C-0.</p></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> raspi-config</span></span></code></pre></div><p><strong>Interfacing Options &gt; Camera</strong></p><h3 id="코드-빌드" tabindex="-1">코드 빌드 <a class="header-anchor" href="#코드-빌드" aria-label="Permalink to &quot;코드 빌드&quot;">​</a></h3><p>To get the <em>very latest</em> version onto your computer, enter the following command into a terminal:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot.git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This is all you need to do just to build the latest code.</p></div><h4 id="raspberry-pi-os용-크로스-빌드" tabindex="-1">Raspberry Pi OS용 크로스 빌드 <a class="header-anchor" href="#raspberry-pi-os용-크로스-빌드" aria-label="Permalink to &quot;Raspberry Pi OS용 크로스 빌드&quot;">​</a></h4><p>다음을 사용하여 라즈베리파이의 IP(또는 호스트 이름)를 설정합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTOPILOT_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">192.168.X.X</span></span></code></pre></div><p>또는</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTOPILOT_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pi_hostname.local</span></span></code></pre></div><p>실행 파일을 빌드하십시오.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scumaker_pilotpi_default</span></span></code></pre></div><p>다음 명령으로 업로드하십시오.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scumaker_pilotpi_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upload</span></span></code></pre></div><p>ssh에서 다음을 명령어를 실행하십시오.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> taskset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./bin/px4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pilotpi_mc.config</span></span></code></pre></div><p>이제 PX4는 다중로터 설정으로 시작합니다.</p><p>If you encountered the similar problem executing <code>bin/px4</code> on your Pi as following:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>bin/px4: /lib/xxxx/xxxx: version \`GLIBC_2.29&#39; not found (required by bin/px4)</span></span></code></pre></div><p>docker로 컴파일하여야 합니다.</p><p>다음 단계로 진행하기 전에 먼저 기존 빌드를 삭제합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/scumaker_pilotpi_default</span></span></code></pre></div><h3 id="대체-빌드-방법-도커-사용" tabindex="-1">대체 빌드 방법 (도커 사용) <a class="header-anchor" href="#대체-빌드-방법-도커-사용" aria-label="Permalink to &quot;대체 빌드 방법 (도커 사용)&quot;">​</a></h3><p>다음 방법은 CI에 배포된 동일한 도구 세트를 제공할 수 있습니다.</p><p>If you are compiling for the first time with docker, please refer to the <a href="./../test_and_ci/docker.html#prerequisites">official docs</a>.</p><p>PX4-Autopilot 폴더에서 다음 명령을 실행합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Tools/docker_run.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;export AUTOPILOT_HOST=192.168.X.X; export NO_NINJA_BUILD=1; make scumaker_pilotpi_default upload&quot;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>mDNS is not supported within docker. 업로드시에 올바른 IP 주소를 설정하여야합니다.</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If your IDE doesn&#39;t support ninja build, <code>NO_NINJA_BUILD=1</code> option will help. 업로드하지 않고도 컴파일할 수 있습니다. Just remove <code>upload</code> target.</p></div><p>다음 명령으로 코드를 컴파일합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Tools/docker_run.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;make scumaker_pilotpi_default&quot;</span></span></code></pre></div><h3 id="사후-설정" tabindex="-1">사후 설정 <a class="header-anchor" href="#사후-설정" aria-label="Permalink to &quot;사후 설정&quot;">​</a></h3><p>기체가 제대로 작동하려면 이러한 추가 항목을 확인하여야 합니다.</p><h4 id="actuator-configuration" tabindex="-1">Actuator Configuration <a class="header-anchor" href="#actuator-configuration" aria-label="Permalink to &quot;Actuator Configuration&quot;">​</a></h4><p>First set the <a href="./../advanced_config/parameter_reference.html#CA_AIRFRAME">CA_AIRFRAME</a> parameter for your vehicle.</p><p>You will then be able to assign outputs using the normal <a href="./../config/actuators.html">Actuator Configuration</a> configuration screen (an output tab will appear for the RPi PWM output driver).</p><h4 id="external-compass" tabindex="-1">External Compass <a class="header-anchor" href="#external-compass" aria-label="Permalink to &quot;External Compass&quot;">​</a></h4><p>In the startup script(<code>*.config</code>), you will find</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># external GPS &amp; compass</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/ttySC0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uart</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ubx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#hmc5883 start -X</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#ist8310 start -X</span></span></code></pre></div><p>사용자의 환경에 맞추어 주석을 적절하게 제거하십시오. GPS 모듈과 함께 제공되는 나침반이 확실하지 않습니까? 다음 명령을 실행하고 출력을 확인합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i2c-tools</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">i2cdetect</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span></code></pre></div><p>샘플 출력:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f</span></span>
<span class="line"><span>00:          -- -- -- -- -- -- -- -- -- -- -- 0e --</span></span>
<span class="line"><span>10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- 1e --</span></span>
<span class="line"><span>20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span></span>
<span class="line"><span>30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span></span>
<span class="line"><span>40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span></span>
<span class="line"><span>50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span></span>
<span class="line"><span>60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span></span>
<span class="line"><span>70: -- -- -- -- -- -- -- --</span></span></code></pre></div><p><code>1e</code> indicates a HMC5883 based compass is mounted on external I2C bus. Similarly, IST8310 has a value of <code>0e</code>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Generally you only have one of them. Other devices will also be displayed here if they are connected to external I2C bus.(<code>/dev/i2c-0</code>)</p></div>`,87)]))}const g=i(n,[["render",p]]);export{c as __pageData,g as default};
