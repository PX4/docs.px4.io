import{_ as t}from"./chunks/pwm_limit_state_diagram.Dlr73I29.js";import{_ as a,c as i,a8 as r,o}from"./chunks/framework.BDnHobkS.js";const f=JSON.parse('{"title":"PWM 제한 상태 머신","description":"","frontmatter":{},"headers":[],"relativePath":"ko/concept/pwm_limit.md","filePath":"ko/concept/pwm_limit.md"}'),l={name:"ko/concept/pwm_limit.md"};function s(n,e,m,p,c,d){return o(),i("div",null,e[0]||(e[0]=[r('<h1 id="pwm-제한-상태-머신" tabindex="-1">PWM 제한 상태 머신 <a class="header-anchor" href="#pwm-제한-상태-머신" aria-label="Permalink to &quot;PWM 제한 상태 머신&quot;">​</a></h1><p>The<code>PWM_limit State Machine</code> controls PWM outputs as a function of pre-armed and armed inputs. &quot;armed&quot;의 어설션과 준비된 신호의 어설션에 대한 스로틀 증가 사이의 지연을 제공합니다.</p><h2 id="요약" tabindex="-1">요약 <a class="header-anchor" href="#요약" aria-label="Permalink to &quot;요약&quot;">​</a></h2><p><strong>Inputs</strong></p><ul><li>armed: 회전하는 프로펠러와 같은 위험한 행동을 가능하게 한다고 주장</li><li>pre-armed: asserted to enable benign behaviors such as moving control surfaces</li><li>this input overrides the current state</li><li>assertion of pre-armed immediately forces behavior of state ON, regardless of current state</li><li>deassertion of pre-armed reverts behavior to current state</li></ul><p><strong>States</strong></p><ul><li>INIT과 OFF <ul><li>pwm 출력은 무장 해제된 값으로 설정됩니다.</li></ul></li><li>RAMP <ul><li>pwm outputs ramp from disarmed values to min values.</li></ul></li><li>ON <ul><li>pwm 출력은 제어 값에 따라 설정됩니다.</li></ul></li></ul><h2 id="상태-전환-다이어그램" tabindex="-1">상태 전환 다이어그램 <a class="header-anchor" href="#상태-전환-다이어그램" aria-label="Permalink to &quot;상태 전환 다이어그램&quot;">​</a></h2><p><img src="'+t+'" alt="PWM Limit state machine diagram"></p>',9)]))}const _=a(l,[["render",s]]);export{f as __pageData,_ as default};
