import{_ as a,c as i,a8 as e,o as t}from"./chunks/framework.BDnHobkS.js";const c=JSON.parse('{"title":"GpsDump (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/msg_docs/GpsDump.md","filePath":"zh/msg_docs/GpsDump.md"}'),n={name:"zh/msg_docs/GpsDump.md"};function p(l,s,h,r,k,o){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="gpsdump-uorb-message" tabindex="-1">GpsDump (UORB message) <a class="header-anchor" href="#gpsdump-uorb-message" aria-label="Permalink to &quot;GpsDump (UORB message)&quot;">â€‹</a></h1><p>This message is used to dump the raw gps communication to the log.</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/GpsDump.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># This message is used to dump the raw gps communication to the log.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 instance   # Instance of GNSS receiver</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 len        # length of data, MSB bit set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message to the gps device,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 # clear </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message from the device</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">uint8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">79</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] data   # data to write to the log</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 ORB_QUEUE_LENGTH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span></code></pre></div>`,4)]))}const g=a(n,[["render",p]]);export{c as __pageData,g as default};
