import{_ as s,c as e,a8 as n,o as t}from"./chunks/framework.BDnHobkS.js";const k=JSON.parse('{"title":"RoverAckermannGuidanceStatus (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/msg_docs/RoverAckermannGuidanceStatus.md","filePath":"ko/msg_docs/RoverAckermannGuidanceStatus.md"}'),i={name:"ko/msg_docs/RoverAckermannGuidanceStatus.md"};function r(o,a,c,l,p,d){return t(),e("div",null,a[0]||(a[0]=[n(`<h1 id="roverackermannguidancestatus-uorb-message" tabindex="-1">RoverAckermannGuidanceStatus (UORB message) <a class="header-anchor" href="#roverackermannguidancestatus-uorb-message" aria-label="Permalink to &quot;RoverAckermannGuidanceStatus (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/RoverAckermannGuidanceStatus.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 lookahead_distance 	# [m] Lookahead distance of pure the pursuit controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 heading_error 		# [deg] Heading error of the pure pursuit controller</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># TOPICS rover_ackermann_guidance_status</span></span></code></pre></div>`,3)]))}const m=s(i,[["render",r]]);export{k as __pageData,m as default};
