import{_ as i,c as a,a8 as e,o as n}from"./chunks/framework.BDnHobkS.js";const E=JSON.parse('{"title":"ModeCompleted (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"en/msg_docs/ModeCompleted.md","filePath":"en/msg_docs/ModeCompleted.md"}'),t={name:"en/msg_docs/ModeCompleted.md"};function l(p,s,h,k,d,o){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="modecompleted-uorb-message" tabindex="-1">ModeCompleted (UORB message) <a class="header-anchor" href="#modecompleted-uorb-message" aria-label="Permalink to &quot;ModeCompleted (UORB message)&quot;">â€‹</a></h1><p>Mode completion result, published by an active mode. The possible values of nav_state are defined in the VehicleStatus msg. Note that this is not always published (e.g. when a user switches modes or on failsafe activation)</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/ModeCompleted.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Mode completion result, published by an active mode.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># The possible values of nav_state are defined in the VehicleStatus msg.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Note that this is not always </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">published</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e.g. when a user switches modes or on</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># failsafe </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">activation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp				 # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 RESULT_SUCCESS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">99</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]: reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 RESULT_FAILURE_OTHER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> # Mode </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">failed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (generic </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 result                     # One of RESULT_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 nav_state                  # Source </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (values in </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">VehicleStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,4)]))}const c=i(t,[["render",l]]);export{E as __pageData,c as default};
