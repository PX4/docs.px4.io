import{_ as i}from"./chunks/vuepress_edit_page_on_github_link.BEPAC1_y.js";import{_ as s,c as t,a8 as a,o as l}from"./chunks/framework.BDnHobkS.js";const k=JSON.parse('{"title":"문서화에 기여","description":"","frontmatter":{},"headers":[],"relativePath":"ko/contribute/docs.md","filePath":"ko/contribute/docs.md"}'),o={name:"ko/contribute/docs.md"};function n(r,e,p,h,d,c){return l(),t("div",null,e[0]||(e[0]=[a('<h1 id="문서화에-기여" tabindex="-1">문서화에 기여 <a class="header-anchor" href="#문서화에-기여" aria-label="Permalink to &quot;문서화에 기여&quot;">​</a></h1><p>PX4 사용자 가이드에 대한 기여를 매우 환영합니다. 간단한 수정 작업 뿐만 아니라, 철자 및 문법, 새로운 주제 등에서 문서화 작업이 필요합니다.</p><p>이 항목에서는 변경 사항을 적용하고 테스트하는 방법을 설명합니다. 마지막에는 기본 스타일 가이드가 있습니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Note You will need a (free) <a href="https://github.com/" target="_blank" rel="noreferrer">Github</a> account to contribute to the guides.</p></div><h2 id="github의-빠른-변경-사항" tabindex="-1">Github의 빠른 변경 사항 <a class="header-anchor" href="#github의-빠른-변경-사항" aria-label="Permalink to &quot;Github의 빠른 변경 사항&quot;">​</a></h2><p>Simple changes to <em>existing content</em> can be made by clicking the <strong>Edit on GitHub</strong> link that appears at the bottom of every page (this opens the page on Github for editing).</p><p><img src="'+i+`" alt="Vitepress: Edit Page button"></p><p>기존 페이지를 편집하려면:</p><ol><li>해당 페이지를 엽니다.</li><li>Click the <strong>Edit on GitHub</strong> link below the page content.</li><li>파일을 편집합니다.</li><li>Below the Github page editor you&#39;ll be prompted to create a separate branch and then guided to submit a <em>pull request</em>.</li></ol><p>문서 팀은 요청을 검토하고, 병합하거나 업데이트하기 위하여 귀하와 협력할 것입니다.</p><h2 id="git을-사용한-변경-새-페이지-및-이미지" tabindex="-1">Git을 사용한 변경(새 페이지 및 이미지) <a class="header-anchor" href="#git을-사용한-변경-새-페이지-및-이미지" aria-label="Permalink to &quot;Git을 사용한 변경(새 페이지 및 이미지)&quot;">​</a></h2><p>새 페이지 추가 또는 이미지 추가/수정을 포함하여 보다 실질적인 변경은 Github에서 수행(또는 적절하게 테스트)하는 것처럼 간단하지 않습니다. For these kinds of changes we suggest using the same approach as for <em>code</em>:</p><ol><li>Use the <em>git</em> toolchain to get the documentation source code onto your local computer.</li><li>필요한 문서를 수정합니다(추가, 변경, 삭제).</li><li><em>Test</em> that it builds properly using Vitepress.</li><li>변경 사항에 대한 분기를 만들고 풀 요청을 만들어 문서로 다시 가져옵니다.</li></ol><p>다음에는 소스 코드를 가져오고, 로컬에서 빌드(테스트용)하고, 코드를 수정하는 방법을 설명합니다.</p><h3 id="문서-소스-코드-가져오기-보내기" tabindex="-1">문서 소스 코드 가져오기/보내기 <a class="header-anchor" href="#문서-소스-코드-가져오기-보내기" aria-label="Permalink to &quot;문서 소스 코드 가져오기/보내기&quot;">​</a></h3><p>라이브러리 소스를 로컬 컴퓨터로 가져오려면 git 명령어를 사용하여야 합니다. 아래 지침은 git을 가져와 로컬 컴퓨터에서 사용하는 방법을 설명합니다.</p><ol><li><p>Download git for your computer from <a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">https://git-scm.com/downloads</a></p></li><li><p><a href="https://github.com/join" target="_blank" rel="noreferrer">Sign up</a> for Github if you haven&#39;t already</p></li><li><p>Create a copy (Fork) of the <a href="https://github.com/PX4/PX4-user_guide" target="_blank" rel="noreferrer">PX4 User Guide repo</a> on Github (<a href="https://docs.github.com/en/get-started/quickstart/fork-a-repo" target="_blank" rel="noreferrer">instructions here</a>).</p></li><li><p>복사된 저장소를 로컬 컴퓨터에 복제합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/wherever/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/PX4-user_guide.git</span></span></code></pre></div><p>예를 들어, Github 계정이 &quot;john_citizen&quot;인 사용자의 PX4 사용자 가이드 포크를 복제합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/john_citizen/PX4-user_guide.git</span></span></code></pre></div></li><li><p>로컬 저장소로 이동합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/wherever/PX4-user_guide</span></span></code></pre></div></li><li><p>Add a <em>remote</em> called &quot;upstream&quot; to point to the PX4 version of the library:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-user_guide.git</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>A &quot;remote&quot; is a handle to a particular repository. The remote named <em>origin</em> is created by default when you clone the repository, and points to <em>your fork</em> of the guide. Above you create a new remote <em>upstream</em> that points to the PX4 project version of the documents.</p></div></li></ol><p>:::</p><ol start="7"><li><p>변경 사항에 대한 브랜치를 생성합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your_feature_branch_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>This creates a local branch on your computer named <code>your_feature_branch_name</code>.</p></li><li><p>필요에 따라 문서를 변경합니다(다음 섹션에서 이에 대한 일반 지침).</p></li><li><p>변경 사항에 완료되면 &quot;커밋&quot;을 사용하여, 로컬 브랜치에 추가합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;your commit message&gt;&quot;</span></span></code></pre></div><p>For a good commit message, please refer to the <a href="./../contribute/code.html#commits-and-commit-messages">Source Code Management</a> section.</p></li><li><p>로컬 분기(추가된 커밋 포함)를 Github의 분기된 저장소에 푸시합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_feature_branch_name</span></span></code></pre></div></li><li><p>Go to your forked repository on Github in a web browser, e.g.: <code>https://github.com/&lt;your git name&gt;/PX4-user_guide.git</code>. 새 분기가 분기된 저장소로 푸시되었다는 메시지가 표시되어야 합니다.</p></li><li><p>풀 요청(PR) 생성:</p><ul><li>On the right hand side of the &quot;new branch message&quot; (see one step before), you should see a green button saying &quot;Compare &amp; Create Pull Request&quot;. 클릭합니다.</li><li>풀 요청 템플릿이 생성됩니다. 그것은 당신의 커밋을 나열하고 의미 있는 제목(하나의 커밋 PR의 경우 일반적으로 커밋 메시지)과 메시지(<span style="color:orange;">어떤 이유에서 수행했는지 설명</span>)를 추가할 수 있습니다(반드시). Check <a href="https://github.com/PX4/PX4-user_guide/pulls" target="_blank" rel="noreferrer">other pull requests</a> for comparison)</li></ul></li><li><p>완료하였습니다. PX4 사용자 가이드 유지 관리자는 이제 귀하의 기여를 검투한 후에, 통합 여부를 결정합니다. 때때로 변경 사항에 대한 질문을 확인하십시오.</p></li></ol><h3 id="로컬에서-라이브러리-구축" tabindex="-1">로컬에서 라이브러리 구축 <a class="header-anchor" href="#로컬에서-라이브러리-구축" aria-label="Permalink to &quot;로컬에서 라이브러리 구축&quot;">​</a></h3><p>로컬에서 라이브러리를 빌드하여, 변경 사항이 제대로 반영되었는 지를 테스트합니다.</p><ol><li><p>Install the <a href="https://vitepress.dev/guide/getting-started#prerequisites" target="_blank" rel="noreferrer">Vitepress prerequisites</a>:</p><ul><li><a href="https://nodejs.org/en" target="_blank" rel="noreferrer">Nodejs 18+</a></li><li><a href="https://classic.yarnpkg.com/en/docs/install" target="_blank" rel="noreferrer">Yarn classic</a></li></ul></li><li><p>로컬 저장소로 이동합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/wherever/PX4-user_guide</span></span></code></pre></div></li><li><p>종속성(Vuepress 포함)들을 설치합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></li><li><p>Preview and serve the library:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span></code></pre></div><ul><li>Once the development/preview server has built the library (less than a minute for the first time) it will show you the URL you can preview the site on. This will be something like: <code>http://localhost:5173/px4_user_guide/</code>.</li><li>Stop serving using <strong>CTRL+C</strong> in the terminal prompt.</li></ul></li><li><p>다음을 사용하여 라이브러리를 빌드합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:buildwin</span></span></code></pre></div></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use <code>yarn start</code> to preview changes <em>as you make them</em> (documents are updated and served very quickly). Before submitting a PR you should also build it using <code>yarn docs:build</code>, as this can highlight issues that are not visible when using <code>yarn start</code>.</p></div><h3 id="소스-코드-구조" tabindex="-1">소스 코드 구조 <a class="header-anchor" href="#소스-코드-구조" aria-label="Permalink to &quot;소스 코드 구조&quot;">​</a></h3><p>The guide uses the <a href="https://vitepress.dev/" target="_blank" rel="noreferrer">Vitepress</a> toolchain.</p><p>개요:</p><ul><li><p>페이지는 마크다운을 사용하여 별도의 파일에 작성됩니다.</p><ul><li>문법은 Github 위키에서 사용하는 것과 매우 유사합니다.</li><li>Vitepress also supports some <a href="https://vitepress.dev/guide/markdown#markdown-extensions" target="_blank" rel="noreferrer">markdown extensions</a>. We try and avoid using these, except for <a href="https://vitepress.dev/guide/markdown#default-title" target="_blank" rel="noreferrer">tips, warning, etc.</a>. This might be revisited - there are some interesting options provided!</li></ul></li><li><p>This is a <a href="https://vitepress.dev/guide/i18n" target="_blank" rel="noreferrer">multilingual</a> book:</p><ul><li>각 언어의 페이지는 관련 언어 코드의 이름이 지정된 폴더에 저장됩니다(예: 중국어의 경우 &quot;zh&quot;, 한국어의 경우 &quot;ko&quot;).</li><li>Only edit the ENGLISH (<code>/en</code>) version of files. We use <a href="./../contribute/translation.html">Crowdin</a> to manage the translations.</li></ul></li><li><p>All pages must be in an appropriately named sub-folder of <code>/en</code> (e.g. this page is in folder <code>en/contribute/</code>).</p><ul><li>이렇게 하면 다른 페이지와 이미지가 항상 동일한 상대 수준이므로 연결이 더 용이해집니다.</li></ul></li><li><p>The <em>structure</em> of the book is defined in <code>SUMMARY.md</code>.</p><ul><li><p>If you add a new page to the guide you must also add an entry to this file!</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This is not &quot;standard vitepress&quot; way to define the sidebar (the summary file is imported by <a href="https://github.com/PX4/PX4-user_guide/blob/main/.vitepress/get_sidebar.js" target="_blank" rel="noreferrer">.vitepress/get_sidebar.js</a>).</p></div></li></ul></li></ul><p>:::</p><ul><li><p>Images must be stored in a sub folder of <code>/assets</code>. 이것은 콘텐츠 폴더에서 두 개의 폴더 아래에 있으므로, 이미지를 추가하면 다음과 같이 참조하게 됩니다.</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>![Image Description](../../assets/path_to_file/filename.jpg)</span></span></code></pre></div></li><li><p>A file named <strong>package.json</strong> defines any dependencies of the build.</p></li><li><p>웹 후크는 파일이 이 저장소의 마스터 분기에 병합되어, 책이 다시 빌드될 때마다 추적하는 데 사용됩니다.</p></li></ul><h3 id="새-페이지-추가" tabindex="-1">새 페이지 추가 <a class="header-anchor" href="#새-페이지-추가" aria-label="Permalink to &quot;새 페이지 추가&quot;">​</a></h3><p>When you add a new page you must also add it to <code>en/SUMMARY.md</code>!</p><h2 id="스타일-가이드" tabindex="-1">스타일 가이드 <a class="header-anchor" href="#스타일-가이드" aria-label="Permalink to &quot;스타일 가이드&quot;">​</a></h2><ol><li><p>파일/파일명</p><ul><li>Put new markdown files in an appropriate sub-folder of <code>/en/</code>, such as <code>/en/contribute/</code>. 폴더를 중첩하지 마십시오.</li><li>Put new image files in an appropriate nested sub-folder of <code>/assets/</code>. Deeper nesting is allowed/encouraged.</li><li>Use descriptive names for folders and files. In particular, image filenames should describe what they contain (don&#39;t name as &quot;image1.png&quot;)</li><li>Use lower case filenames and separate words using underscores (<code>_</code>).</li></ul></li><li><p>이미지</p><ul><li>이미지는 최대한 가장 작은 크기와 가장 낮은 해상도를 사용합니다(이렇게 하면 대역폭이 좋지 않은 사용자의 다운로드 비용이 줄어듭니다).</li><li>New images should be created in a sub-folder of <code>/assets/</code> (so they can be shared between translations).</li><li>SVG files are preferred for diagrams. PNG files are preferred over JPG for screenshots.</li></ul></li><li><p>내용</p><ul><li>Use &quot;style&quot; (<strong>bold</strong>, <em>emphasis</em>, etc.) consistently and sparingly (as little as possible). <ul><li><strong>Bold</strong> for button presses and menu definitions.</li><li><em>Emphasis</em> for tool names such as <em>QGroundControl</em> or <em>prettier</em>.</li><li><code>code</code> for file paths, and code, parameter names that aren&#39;t linked, using tools in a command line, such as <code>prettier</code>.</li></ul></li><li>Headings and page titles should use &quot;First Letter Capitalisation&quot;.</li><li>The page title should be a first level heading (<code>#</code>). All other headings should be h2 (<code>##</code>) or lower.</li><li>제목에는 스타일을 추가하지 마십시오.</li><li>Don&#39;t translate the <em>first part</em> of an <code>info</code>, <code>tip</code> or <code>warning</code> declaration (e.g. <code>::: tip</code>) as this precise text is required to render the note properly.</li><li>Break lines on sentences by preference. Don&#39;t break lines based on some arbitrary line length.</li><li>Format using <em>prettier</em> (<em>VSCode</em> is a has extensions can be used for this).</li></ul></li><li><p>Videos:</p><ul><li>Youtube videos can be added using the format <code>&lt;lite-youtube videoid=&quot;&lt;youtube-video-id&gt;&quot; title=&quot;your title&quot;/&gt;</code> (supported via the <a href="https://www.npmjs.com/package/lite-youtube-embed" target="_blank" rel="noreferrer">https://www.npmjs.com/package/lite-youtube-embed</a> custom element, which has other parameters you can pass). <ul><li>Use instructional videos sparingly as they date badly, and are hard to maintain.</li><li>Cool videos of airframes in flight are always welcome.</li></ul></li></ul></li></ol><h2 id="어디에서-변경-사항을-추가합니까" tabindex="-1">어디에서 변경 사항을 추가합니까? <a class="header-anchor" href="#어디에서-변경-사항을-추가합니까" aria-label="Permalink to &quot;어디에서 변경 사항을 추가합니까?&quot;">​</a></h2><p>Add new files in folders that cover similar topics. Then reference them in the sidebar (<code>/en/SUMMARY.md</code>) in line with the existing structure!</p><h2 id="번역" tabindex="-1">번역 <a class="header-anchor" href="#번역" aria-label="Permalink to &quot;번역&quot;">​</a></h2><p>For information about translation see: <a href="./../contribute/translation.html">Translation</a>.</p><h2 id="라이센스" tabindex="-1">라이센스 <a class="header-anchor" href="#라이센스" aria-label="Permalink to &quot;라이센스&quot;">​</a></h2><p>All PX4/Dronecode documentation is free to use and modify under terms of the permissive <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank" rel="noreferrer">CC BY 4.0</a> license.</p>`,39)]))}const m=s(o,[["render",n]]);export{k as __pageData,m as default};
