import{_ as t,c as e,a8 as a,o as i}from"./chunks/framework.BDnHobkS.js";const m=JSON.parse('{"title":"PpsCapture (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/msg_docs/PpsCapture.md","filePath":"ko/msg_docs/PpsCapture.md"}'),p={name:"ko/msg_docs/PpsCapture.md"};function n(r,s,l,o,c,h){return i(),e("div",null,s[0]||(s[0]=[a(`<h1 id="ppscapture-uorb-message" tabindex="-1">PpsCapture (UORB message) <a class="header-anchor" href="#ppscapture-uorb-message" aria-label="Permalink to &quot;PpsCapture (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/PpsCapture.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp			  # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds) at PPS capture event</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 rtc_timestamp		# Corrected GPS UTC timestamp at PPS capture event</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8  pps_rate_exceeded_counter # Increments when PPS dt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> 50ms</span></span></code></pre></div>`,3)]))}const k=t(p,[["render",n]]);export{m as __pageData,k as default};
