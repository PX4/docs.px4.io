import{_ as e}from"./chunks/betaflight_configurator.fuFGqv2A.js";import{_ as t,c as o,a8 as s,o as l}from"./chunks/framework.BDnHobkS.js";const g=JSON.parse('{"title":"PX4 Bootloader Flashing onto Betaflight Systems","description":"","frontmatter":{},"headers":[],"relativePath":"ko/advanced_config/bootloader_update_from_betaflight.md","filePath":"ko/advanced_config/bootloader_update_from_betaflight.md"}'),r={name:"ko/advanced_config/bootloader_update_from_betaflight.md"};function n(i,a,p,h,d,c){return l(),o("div",null,a[0]||(a[0]=[s('<h1 id="px4-bootloader-flashing-onto-betaflight-systems" tabindex="-1">PX4 Bootloader Flashing onto Betaflight Systems <a class="header-anchor" href="#px4-bootloader-flashing-onto-betaflight-systems" aria-label="Permalink to &quot;PX4 Bootloader Flashing onto Betaflight Systems&quot;">​</a></h1><p>This page documents how to flash the PX4 bootloader onto boards that are already flashed with Betaflight (e.g. <a href="./../flight_controller/omnibus_f4_sd.html">OmnibusF4 SD</a> or <a href="./../flight_controller/kakutef7.html">Kakute F7</a>).</p><p>There are three tools that can be used to flash the PX4 bootloader: <em>Betaflight Configurator</em>, <a href="http://dfu-util.sourceforge.net/" target="_blank" rel="noreferrer">dfu-util</a> command line tool, or the graphical <a href="https://www.st.com/en/development-tools/stsw-stm32080.html" target="_blank" rel="noreferrer">dfuse</a> (Windows only).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The <em>Betaflight Configurator</em> is easiest, but newer versions may not support non-betaflight bootloader update. You might try it first, but use the other methods if firmware update does not work.</p></div><h2 id="betaflight-configurator-bootloader-update" tabindex="-1">Betaflight Configurator Bootloader Update <a class="header-anchor" href="#betaflight-configurator-bootloader-update" aria-label="Permalink to &quot;Betaflight Configurator Bootloader Update&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p><em>Betaflight Configurator</em> may not support PX4 Bootloader update, as of May 2023. Older versions should work, though the precise versions are not known.</p></div><p>To install the PX4 bootloader using the <em>Betaflight Configurator</em>:</p><ol><li><p>Download or build <a href="#bootloader-firmware">bootloader firmware</a> for the board you want to flash.</p></li><li><p>Download the <a href="https://github.com/betaflight/betaflight-configurator/releases" target="_blank" rel="noreferrer">Betaflight Configurator</a> for your platform.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If using the <em>Chrome</em> web browser, a simple cross-platform alternative is to install the configurator as an <a href="https://chrome.google.com/webstore/detail/betaflight-configurator/kdaghagfopacdngbohiknlhcocjccjao" target="_blank" rel="noreferrer">extension from here</a>.</p></div></li></ol><p>:::</p><ol start="3"><li><p>PC에 보드를 연결하고 Configurator를 실행합니다.</p></li><li><p>Press the <strong>Load Firmware [Local]</strong> button <img src="'+e+`" alt="Betaflight Configurator - Local Firmware"></p></li><li><p>파일시스템으로부터 부트로더 바이너리를 선택하고 보드에 설치(flash)합니다.</p></li></ol><p>다음 명령어로 <a href="https://github.com/PX4/Bootloader">Bootloader</a>를 다운로드하고 빌드하십시오:</p><h2 id="dfu-bootloader-update" tabindex="-1">DFU Bootloader Update <a class="header-anchor" href="#dfu-bootloader-update" aria-label="Permalink to &quot;DFU Bootloader Update&quot;">​</a></h2><p>This section explains how to flash the PX4 bootloader using the <a href="http://dfu-util.sourceforge.net/" target="_blank" rel="noreferrer">dfu-util</a> or the graphical <a href="https://www.st.com/en/development-tools/stsw-stm32080.html" target="_blank" rel="noreferrer">dfuse</a> tool (Windows only).</p><p>You will first need to download or build <a href="#bootloader-firmware">bootloader firmware</a> for the board you want to flash (below, this is referred to as <code>&lt;target.bin&gt;</code>).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>All of the methods below are safe as the STM32 MCU cannot be bricked! DFU는 플래싱으로 덮어쓸 수 없으며 플래싱이 실패하더라도, 항상 새 펌웨어를 설치할 수 있습니다.</p></div><h3 id="dfu-mode" tabindex="-1">DFU mode <a class="header-anchor" href="#dfu-mode" aria-label="Permalink to &quot;DFU mode&quot;">​</a></h3><p>Both tools require the board to be in DFU mode. DFU 모드로 들어가려면 USB 케이블을 컴퓨터에 연결하는 동안 부팅 버튼을 누르고 있습니다. The button can be released after the board has powered up.</p><h3 id="dfu-util" tabindex="-1">dfu-util <a class="header-anchor" href="#dfu-util" aria-label="Permalink to &quot;dfu-util&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The <a href="./../flight_controller/kakuteh7v2.html">Holybro Kakute H7 v2</a>, <a href="./../flight_controller/kakuteh7.html">Holybro Kakute H7</a> and <a href="./../flight_controller/kakuteh7mini.html">mini</a> flight controllers may require that you first run an additional command to erase flash parameters (in order to fix problems with parameter saving):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dfu-util -a 0 --dfuse-address 0x08000000:force:mass-erase:leave -D build/&lt;target&gt;/&lt;target&gt;.bin</span></span></code></pre></div><p>The command may generate an error which can be ignored. Once completed, enter DFU mode again to complete the regular flashing.</p></div><p>To flash the bootloader onto the flight controller:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dfu-util -a 0 --dfuse-address 0x08000000 -D  build/&lt;target&gt;/&lt;target&gt;.bin</span></span></code></pre></div><p>비행 컨트롤러를 재부팅하면 부팅 버튼을 누르지 않고 부팅됩니다.</p><h3 id="dfuse" tabindex="-1">dfuse <a class="header-anchor" href="#dfuse" aria-label="Permalink to &quot;dfuse&quot;">​</a></h3><p>The dfuse manual can be found here: <a href="https://www.st.com/resource/en/user_manual/cd00155676.pdf" target="_blank" rel="noreferrer">https://www.st.com/resource/en/user_manual/cd00155676.pdf</a></p><p>Use the tool to flash the <code>&lt;target&gt;.bin</code> file.</p><h2 id="bootloader-firmware" tabindex="-1">Bootloader Firmware <a class="header-anchor" href="#bootloader-firmware" aria-label="Permalink to &quot;Bootloader Firmware&quot;">​</a></h2><p>The tools above flash pre-built bootloader firmware. Bootloader firmware can be built for most targets using the normal PX4 source code, while other targets can only be build using source in the bootloader repository.</p><p>Flight controllers that have bootloader PX4-Autopilot <code>make</code> targets, can build the bootloader from the PX4-Autopilot source. The list of controllers for which this applies can be obtained by running the following <code>make</code> command, and noting the <code>make</code> targets that end in <code>_bootloader</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$make list_config_targets</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>cuav_nora_bootloader</span></span>
<span class="line"><span>cuav_x7pro_bootloader</span></span>
<span class="line"><span>cubepilot_cubeorange_bootloader</span></span>
<span class="line"><span>holybro_durandal-v1_bootloader</span></span>
<span class="line"><span>holybro_kakuteh7_bootloader</span></span>
<span class="line"><span>holybro_kakuteh7v2_bootloader</span></span>
<span class="line"><span>holybro_kakuteh7mini_bootloader</span></span>
<span class="line"><span>matek_h743-mini_bootloader</span></span>
<span class="line"><span>matek_h743-slim_bootloader</span></span>
<span class="line"><span>modalai_fc-v2_bootloader</span></span>
<span class="line"><span>mro_ctrl-zero-classic_bootloader</span></span>
<span class="line"><span>mro_ctrl-zero-h7_bootloader</span></span>
<span class="line"><span>mro_ctrl-zero-h7-oem_bootloader</span></span>
<span class="line"><span>mro_pixracerpro_bootloader</span></span>
<span class="line"><span>px4_fmu-v6u_bootloader</span></span>
<span class="line"><span>px4_fmu-v6x_bootloader</span></span></code></pre></div><p>To build for these flight controllers, download and build the <a href="https://github.com/PX4/PX4-Autopilot" target="_blank" rel="noreferrer">PX4-Autopilot source</a>, and then make the target using the following commands:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">targe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # For example: holybro_kakuteh7mini_bootloader</span></span></code></pre></div><p>For other flight controllers download the <a href="https://github.com/PX4/Bootloader" target="_blank" rel="noreferrer">PX4/Bootloader</a> repository and build the source code using the appropriate targets:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone --recursive  https://github.com/PX4/Bootloader.git</span></span>
<span class="line"><span>cd Bootloader</span></span>
<span class="line"><span>make &lt;target&gt; # For example: omnibusf4sd_bl or kakutef7_bl</span></span></code></pre></div><h2 id="betaflight-재설치" tabindex="-1">Betaflight 재설치 <a class="header-anchor" href="#betaflight-재설치" aria-label="Permalink to &quot;Betaflight 재설치&quot;">​</a></h2><p>In order to switch back to <em>Betaflight</em>:</p><ol><li>Backup the PX4 parameters. You can do this by <a href="./../advanced/parameters_and_configurations.html#exporting-and-loading-parameters">exporting</a> them to an SD card.</li><li>Keep the <strong>bootloader</strong> button pressed while attaching the USB cable</li><li>Flash <em>Betaflight</em> as usual with the <em>Betaflight-configurator</em></li></ol>`,36)]))}const b=t(r,[["render",n]]);export{g as __pageData,b as default};
