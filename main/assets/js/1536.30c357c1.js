(window.webpackJsonp=window.webpackJsonp||[]).push([[1536],{2823:function(t,e,s){"use strict";s.r(e);var a=s(19),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ulog-파일-형식"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ulog-파일-형식"}},[t._v("#")]),t._v(" ULog 파일 형식")]),t._v(" "),s("p",[t._v("ULog is the file format used for logging messages. The format is self-describing, i.e. it contains the format and "),s("RouterLink",{attrs:{to:"/ko/middleware/uorb.html"}},[t._v("uORB")]),t._v(" message types that are logged. This document is meant to be the ULog File Format Spec Documentation. It is intended especially for anyone who is interested in writing a ULog parser / serializer and needs to decode / encode files.")],1),t._v(" "),s("p",[t._v("PX4 uses ULog to log uORB topics as messages related to (but not limited to) the following sources:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Device inputs:")]),t._v(" Sensors, RC input, etc.")]),t._v(" "),s("li",[s("strong",[t._v("Internal states:")]),t._v(" CPU load, attitude, EKF state, etc.")]),t._v(" "),s("li",[s("strong",[t._v("String messages:")]),t._v(" "),s("code",[t._v("printf")]),t._v(" statements, including "),s("code",[t._v("PX4_INFO()")]),t._v(" and "),s("code",[t._v("PX4_ERR()")]),t._v(".")])]),t._v(" "),s("p",[t._v("The format uses "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Endianness",target:"_blank",rel:"noopener noreferrer"}},[t._v("little endian"),s("OutboundLink")],1),t._v(" memory layout for all binary types (the least significant byte (LSB) of data type is placed at the lowest memory address).")]),t._v(" "),s("h2",{attrs:{id:"데이터-형식"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#데이터-형식"}},[t._v("#")]),t._v(" 데이터 형식")]),t._v(" "),s("p",[t._v("The following binary types are used for logging. They all correspond to the types in C.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("형식")]),t._v(" "),s("th",[t._v("바이트 크기")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("int8_t, uint8_t")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("int16_t, uint16_t")]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("int32_t, uint32_t")]),t._v(" "),s("td",[t._v("4")])]),t._v(" "),s("tr",[s("td",[t._v("int64_t, uint64_t")]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[t._v("float")]),t._v(" "),s("td",[t._v("4")])]),t._v(" "),s("tr",[s("td",[t._v("double")]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[t._v("bool, char")]),t._v(" "),s("td",[t._v("1")])])])]),t._v(" "),s("p",[t._v("Additionally the types can be used as a fixed-size array: e.g. "),s("code",[t._v("float[5]")]),t._v(".")]),t._v(" "),s("p",[t._v("Strings ("),s("code",[t._v("char[length]")]),t._v(") do not contain the termination NULL character "),s("code",[t._v("'\\0'")]),t._v(" at the end.")]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("String comparisons are case sensitive, which should be taken into account when comparing message names when "),s("a",{attrs:{href:"#a-subscription-message"}},[t._v("adding subscriptions")]),t._v(".")])]),t._v(" "),s("h2",{attrs:{id:"ulog-file-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ulog-file-structure"}},[t._v("#")]),t._v(" ULog File Structure")]),t._v(" "),s("p",[t._v("ULog files have the following three sections:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("----------------------\n|       Header       |\n----------------------\n|    Definitions     |\n----------------------\n|        Data        |\n----------------------\n")])])]),s("p",[t._v("A description of each section is provided below.")]),t._v(" "),s("h3",{attrs:{id:"헤더-섹션"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#헤더-섹션"}},[t._v("#")]),t._v(" 헤더 섹션")]),t._v(" "),s("p",[t._v("헤더는 고정 크기 섹션이며, 다음 형식(16바이트)을 갖습니다.")]),t._v(" "),s("div",{staticClass:"language-plain extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[t._v("----------------------------------------------------------------------\n| 0x55 0x4c 0x6f 0x67 0x01 0x12 0x35 | 0x01         | uint64_t       |\n| File magic (7B)                    | Version (1B) | Timestamp (8B) |\n----------------------------------------------------------------------\n")])])]),s("ul",[s("li",[s("strong",[t._v("File Magic (7 Bytes):")]),t._v(' File type indicator that reads "ULogXYZ where XYZ is the magic bytes sequence '),s("code",[t._v("0x01 0x12 0x35")]),t._v('"')]),t._v(" "),s("li",[s("strong",[t._v("Version (1 Byte):")]),t._v(" File format version (currently 1)")]),t._v(" "),s("li",[s("strong",[t._v("Timestamp (8 Bytes):")]),t._v(" "),s("code",[t._v("uint64_t")]),t._v(" integer that denotes when the logging started in microseconds.")])]),t._v(" "),s("h3",{attrs:{id:"definition-data-section-message-header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#definition-data-section-message-header"}},[t._v("#")]),t._v(" Definition & Data Section Message Header")]),t._v(" "),s("p",[t._v("The "),s("em",[t._v("Definitions and Data")]),t._v(" sections contain a number of "),s("strong",[t._v("messages")]),t._v(". Each message is preceded by this header:")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" msg_size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" msg_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("msg_size")]),t._v(" is the size of the message in bytes without the header.")]),t._v(" "),s("li",[s("code",[t._v("msg_type")]),t._v(" defines the content, and is a single byte.")])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("Message sections below are prefixed with the character that corresponds to it's "),s("code",[t._v("msg_type")]),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"정의-섹션"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정의-섹션"}},[t._v("#")]),t._v(" 정의 섹션")]),t._v(" "),s("p",[t._v("The definitions section contains basic information such as software version, message format, initial parameter values, and so on.")]),t._v(" "),s("p",[t._v("The message types in this section are:")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"#b-flag-bits-message"}},[t._v("Flag Bits")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#f-format-message"}},[t._v("Format Definition")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#i-information-message"}},[t._v("Information")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#m-multi-information-message"}},[t._v("Multi Information")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#p-parameter-message"}},[t._v("Parameter")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#q-default-parameter-message"}},[t._v("Default Parameter")])])]),t._v(" "),s("h4",{attrs:{id:"b-flag-bits-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-flag-bits-message"}},[t._v("#")]),t._v(" 'B': Flag Bits Message")]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("This message must be the "),s("strong",[t._v("first message")]),t._v(" right after the header section, so that it has a fixed constant offset from the start of the file!")])]),t._v(" "),s("p",[t._v("This message provides information to the log parser whether the log is parsable or not.")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ulog_message_flag_bits_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'B'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" compat_flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" incompat_flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint64_t")]),t._v(" appended_offsets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file offset(s) for appended data if appending bit is set")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[s("code",[t._v("compat_flags")]),t._v(": compatible flag bits")]),t._v(" "),s("ul",[s("li",[t._v("These flags indicate the presence of features in the log file that are compatible with any ULog parser.")]),t._v(" "),s("li",[s("code",[t._v("compat_flags[0]")]),t._v(": "),s("em",[t._v("DEFAULT_PARAMETERS")]),t._v(" (Bit 0): if set, the log contains "),s("a",{attrs:{href:"#q-default-parameter-message"}},[t._v("default parameters message")])])]),t._v(" "),s("p",[t._v("The rest of the bits are currently not defined and must be set to 0. 이 비트는 향후 기존 파서와 호환되는 ULog 변경에 사용할 수 있습니다. For example, adding a new message type can be indicated by defining a new bit in the standard, and existing parsers will ignore the new message type. 이는 알 수 없는 비트 중 하나가 설정되어 있으면, 파서가 해당 비트를 무시할 수 있음을 의미합니다.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("incompat_flags")]),t._v(": 비호환성 플래그 비트값.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("incompat_flags[0]")]),t._v(": "),s("em",[t._v("DATA_APPENDED")]),t._v(" (Bit 0): if set, the log contains appended data and at least one of the "),s("code",[t._v("appended_offsets")]),t._v(" is non-zero.")])]),t._v(" "),s("p",[t._v("The rest of the bits are currently not defined and must be set to 0. 이것은 기존 파서가 처리할 수 없는 주요 변경 사항을 도입하는 데 사용할 수 있습니다. For example, when an old ULog parser that didn't have the concept of "),s("em",[t._v("DATA_APPENDED")]),t._v(" reads the newer ULog, it would stop parsing the log as the log will contain out-of-spec messages / concepts. If a parser finds any of these bits set that isn't specified, it must refuse to parse the log.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("appended_offsets")]),t._v(": File offset (0-based) for appended data. 데이터가 추가되지 않은 경우에는 모든 오프셋은 0이어야 합니다. 이것은 메시지 중간에 멈출 수 있는 로그에 대한 데이터를 안정적으로 추가할 수 있습니다. For example, crash dumps.")]),t._v(" "),s("p",[t._v("데이터를 추가하는 프로세스는 다음과 같습니다.")]),t._v(" "),s("ul",[s("li",[t._v("set the relevant "),s("code",[t._v("incompat_flags")]),t._v(" bit")]),t._v(" "),s("li",[t._v("set the first "),s("code",[t._v("appended_offsets")]),t._v(" that is currently 0 to the length of the log file without the appended data, as that is where the new data will start")]),t._v(" "),s("li",[t._v("append any type of messages that are valid for the Data section.")])])])]),t._v(" "),s("p",[t._v("향후 ULog 사양에서 이 메시지 끝에 추가 필드가 존재할 수 있습니다. 이것은 파서가 이 메시지의 고정된 길이를 가정해서는 안 된다는 것을 의미합니다. If the "),s("code",[t._v("msg_size")]),t._v(" is bigger than expected (currently 40), any additional bytes must be ignored/discarded.")]),t._v(" "),s("h4",{attrs:{id:"f-format-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#f-format-message"}},[t._v("#")]),t._v(" 'F': Format Message")]),t._v(" "),s("p",[t._v("Format message defines a single message name and its inner fields in a single string.")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_format_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'F'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg_size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("format")]),t._v(" is a plain-text string with the following format: "),s("code",[t._v("message_name:field0;field1;")]),t._v(" "),s("ul",[s("li",[t._v("There can be an arbitrary amount of fields (minimum 1), separated by "),s("code",[t._v(";")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("message_name")]),t._v(": an arbitrary non-empty string with these allowed characters: "),s("code",[t._v("a-zA-Z0-9_-/")]),t._v(" (and different from any of the "),s("a",{attrs:{href:"#data-types"}},[t._v("basic types")]),t._v(").")])])])]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("field")]),t._v(" has the format: "),s("code",[t._v("type field_name")]),t._v(", or for an array: "),s("code",[t._v("type[array_length] field_name")]),t._v(" is used (only fixed size arrays are supported). "),s("code",[t._v("field_name")]),t._v(" must consist of the characters in the set "),s("code",[t._v("a-zA-Z0-9_")]),t._v(".")]),t._v(" "),s("p",[t._v("A "),s("code",[t._v("type")]),t._v(" is one of the "),s("a",{attrs:{href:"#data-types"}},[t._v("basic binary types")]),t._v(" or a "),s("code",[t._v("message_name")]),t._v(" of another format definition (nested usage).")]),t._v(" "),s("ul",[s("li",[t._v("유형은 정의되기 전에 사용할 수 있습니다.\n"),s("ul",[s("li",[t._v("e.g. The message "),s("code",[t._v("MessageA:MessageB[2] msg_b")]),t._v(" can come before the "),s("code",[t._v("MessageB:uint_8[3] data")])])])]),t._v(" "),s("li",[t._v("There can be arbitrary nesting but "),s("strong",[t._v("no circular dependencies")]),t._v(" "),s("ul",[s("li",[t._v("e.g. "),s("code",[t._v("MessageA:MessageB[2] msg_b")]),t._v(" & "),s("code",[t._v("MessageB:MessageA[4] msg_a")])])])])]),t._v(" "),s("p",[t._v("일부 필드 이름은 특별합니다.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("timestamp")]),t._v(": every message format with a "),s("a",{attrs:{href:"#a-subscription-message"}},[t._v("Subscription Message")]),t._v(" must include a timestamp field (for example a message format only used as part of a nested definition by another format may not include a timestamp field)\n"),s("ul",[s("li",[t._v("유형은 "),s("code",[t._v("uint64_t")]),t._v("(현재 유일하게 사용됨), "),s("code",[t._v("uint32_t")]),t._v(", "),s("code",[t._v("uint16_t")]),t._v(" 또는 "),s("code",[t._v("uint8_t")]),t._v("일 수 있습니다.")]),t._v(" "),s("li",[t._v("The unit is microseconds.")]),t._v(" "),s("li",[t._v("타임스탬프는 "),s("code",[t._v("msg_id")]),t._v("가 동일한 메시지 시리즈에 대해 항상 단조 증가해야 합니다.")])])]),t._v(" "),s("li",[s("code",[t._v("_padding{}")]),t._v(": field names that start with "),s("code",[t._v("_padding")]),t._v(" (e.g. "),s("code",[t._v("_padding[3]")]),t._v(") should not be displayed and their data must be ignored by a reader.\n"),s("ul",[s("li",[t._v("이 필드는 올바른 정렬을 보장하기 위하여 작성자가 삽입할 수 있습니다.")]),t._v(" "),s("li",[t._v("If the padding field is the last field, then this field may not be logged, to avoid writing unnecessary data.")]),t._v(" "),s("li",[t._v("즉, "),s("code",[t._v("message_data_s.data")]),t._v("가 패딩 크기만큼 짧아집니다.")]),t._v(" "),s("li",[t._v("그러나 메시지가 중첩 정의에서 사용될 때 패딩은 여전히 필요합니다.")])])]),t._v(" "),s("li",[t._v("In general, message fields are not necessarily aligned (i.e. the field offset within the message is not necessarily a multiple of its data size), so a reader must always use appropriate memory copy methods to access individual fields.")])]),t._v(" "),s("h4",{attrs:{id:"i-information-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-information-message"}},[t._v("#")]),t._v(" 'I': Information Message")]),t._v(" "),s("p",[t._v("The Information message defines a dictionary type definition "),s("code",[t._v("key")]),t._v(" : "),s("code",[t._v("value")]),t._v(" pair for any information, including but not limited to Hardware version, Software version, Build toolchain for the software, etc.")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ulog_message_info_header_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'I'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("key_len")]),t._v(": Length of the key value")]),t._v(" "),s("li",[s("code",[t._v("key")]),t._v(": Contains the key string in the form"),s("code",[t._v("type name")]),t._v(", e.g. "),s("code",[t._v("char[value_len] sys_toolchain_ver")]),t._v(". Valid characters for the name: "),s("code",[t._v("a-zA-Z0-9_-/")]),t._v(". The type may be one of the "),s("a",{attrs:{href:"#data-types"}},[t._v("basic types including arrays")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("value")]),t._v(": Contains the data (with the length "),s("code",[t._v("value_len")]),t._v(") corresponding to the "),s("code",[t._v("key")]),t._v(" e.g. "),s("code",[t._v("9.4.0")]),t._v(".")])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("A key defined in the Information message must be unique. Meaning there must not be more than one definition with the same key value.")])]),t._v(" "),s("p",[t._v("파서는 정보 메시지를 사전으로 저장할 수 있습니다.")]),t._v(" "),s("p",[t._v("사전 정의된 정보 메시지는 다음과 같습니다.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("키")]),t._v(" "),s("th",[t._v("설명")]),t._v(" "),s("th",[t._v("예제 값")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("char[value_len] sys_name")])]),t._v(" "),s("td",[t._v("시스템 이름")]),t._v(" "),s("td",[t._v('"PX4"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] ver_hw")])]),t._v(" "),s("td",[t._v("하드웨어 버전 (보드)")]),t._v(" "),s("td",[t._v('"PX4FMU_V4"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] ver_hw_subtype")])]),t._v(" "),s("td",[t._v("보드 하위 버전(변형판)")]),t._v(" "),s("td",[t._v('"V2"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] ver_sw")])]),t._v(" "),s("td",[t._v("소프트웨어 버전(git tag)")]),t._v(" "),s("td",[t._v('"7f65e01"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] ver_sw_branch")])]),t._v(" "),s("td",[t._v("git branch")]),t._v(" "),s("td",[t._v('"master"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("uint32_t ver_sw_release")])]),t._v(" "),s("td",[t._v("소프트웨어 버전 (아래 참고)")]),t._v(" "),s("td",[t._v("0x010401ff")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] sys_os_name")])]),t._v(" "),s("td",[t._v("운영체제 이름")]),t._v(" "),s("td",[t._v('"Linux"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] sys_os_ve")]),t._v("r")]),t._v(" "),s("td",[t._v("운영체제 버전 (git tag)")]),t._v(" "),s("td",[t._v('"9f82919"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("uint32_t ver_os_release")])]),t._v(" "),s("td",[t._v("운영체제 버전 (아래 참고)")]),t._v(" "),s("td",[t._v("0x010401ff")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] sys_toolchain")])]),t._v(" "),s("td",[t._v("툴체인 이름")]),t._v(" "),s("td",[t._v('"GNU GCC"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] sys_toolchain_ver")])]),t._v(" "),s("td",[t._v("툴체인 버전")]),t._v(" "),s("td",[t._v('"6.2.1"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] sys_mcu")])]),t._v(" "),s("td",[t._v("칩 이름과 버전")]),t._v(" "),s("td",[t._v('"STM32F42x, rev A"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] sys_uuid")])]),t._v(" "),s("td",[t._v("차량 고유 식별자(예: MCU ID)")]),t._v(" "),s("td",[t._v('"392a93e32fa3"...')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] log_type")])]),t._v(" "),s("td",[t._v("로그 형식(지정하지 않으면 전체 기록)")]),t._v(" "),s("td",[t._v('"mission"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("char[value_len] replay")])]),t._v(" "),s("td",[t._v("재생 모드인 경우 재생된 로그의 파일 이름")]),t._v(" "),s("td",[t._v('"log001.ulg"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("int32_t time_ref_utc")])]),t._v(" "),s("td",[t._v("UTC 시간 오프셋(초)")]),t._v(" "),s("td",[t._v("-3600")])])])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[s("code",[t._v("value_len")]),t._v(" represents the data size of the "),s("code",[t._v("value")]),t._v(". This is described in the "),s("code",[t._v("key")]),t._v(".")])]),t._v(" "),s("ul",[s("li",[t._v("The format of "),s("code",[t._v("ver_sw_release")]),t._v(" and "),s("code",[t._v("ver_os_release")]),t._v(" is: 0xAABBCCTT, where AA is "),s("strong",[t._v("major")]),t._v(", BB is "),s("strong",[t._v("minor")]),t._v(", CC is patch and TT is the "),s("strong",[t._v("type")]),t._v(".\n"),s("ul",[s("li",[s("strong",[t._v("Type")]),t._v(" is defined as following: "),s("code",[t._v(">= 0")]),t._v(": development, "),s("code",[t._v(">= 64")]),t._v(": alpha version, "),s("code",[t._v(">= 128")]),t._v(": beta version, "),s("code",[t._v(">= 192")]),t._v(": RC version, "),s("code",[t._v("== 255")]),t._v(": release version.")]),t._v(" "),s("li",[t._v("For example, "),s("code",[t._v("0x010402FF")]),t._v(" translates into the release version v1.4.2.")])])])]),t._v(" "),s("p",[t._v("이 메시지는 데이터 섹션에서도 사용할 수 있습니다(그러나 선호하는 섹션임).")]),t._v(" "),s("h4",{attrs:{id:"m-multi-information-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#m-multi-information-message"}},[t._v("#")]),t._v(" 'M': Multi Information Message")]),t._v(" "),s("p",[t._v("Multi information message serves the same purpose as the information message, but for long messages or multiple messages with the same key.")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ulog_message_info_multiple_header_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'M'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" is_continued"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// can be used for arrays")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("is_continued")]),t._v(" can be used for split-up messages: if set to 1, it is part of the previous message with the same key.")])]),t._v(" "),s("p",[t._v("파서는 다중 메시지를 로그에서 발생하는 메시지와 동일한 순서를 사용하여 2D 목록으로 저장할 수 있습니다.")]),t._v(" "),s("p",[t._v("Valid names and types are the same as for the Information message.")]),t._v(" "),s("h4",{attrs:{id:"p-parameter-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p-parameter-message"}},[t._v("#")]),t._v(" 'P': Parameter Message")]),t._v(" "),s("p",[t._v("Parameter message in the "),s("em",[t._v("Definitions")]),t._v(" section defines the parameter values of the vehicle when logging is started. It uses the same format as the "),s("a",{attrs:{href:"#i-information-message"}},[t._v("Information Message")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_info_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'P'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("If a parameter dynamically changes during runtime, this message can also be "),s("a",{attrs:{href:"#messages-shared-with-the-definitions-section"}},[t._v("used in the Data section")]),t._v(" as well.")]),t._v(" "),s("p",[t._v("The data type is restricted to "),s("code",[t._v("int32_t")]),t._v(" and "),s("code",[t._v("float")]),t._v(". Valid characters for the name: "),s("code",[t._v("a-zA-Z0-9_-/")]),t._v(".")]),t._v(" "),s("h4",{attrs:{id:"q-default-parameter-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-default-parameter-message"}},[t._v("#")]),t._v(" 'Q': Default Parameter Message")]),t._v(" "),s("p",[t._v("The default parameter message defines the default value of a parameter for a given vehicle and setup.")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ulog_message_parameter_default_header_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'Q'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" default_types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("key_len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("default_types")]),t._v("는 비트 필드이며 값이 속한 그룹을 정의합니다.\n"),s("ul",[s("li",[t._v("최소한 하나의 비트가 설정되어야 합니다.\n"),s("ul",[s("li",[s("code",[t._v("1<<0")]),t._v(":: 시스템 전체 기본값")]),t._v(" "),s("li",[s("code",[t._v("1<<1")]),t._v(": 현재 설정(예: 기체)의 기본값")])])])])])]),t._v(" "),s("p",[t._v("로그에는 모든 매개변수에 대한 기본값이 포함되어 있지 않을 수 있습니다. 이러한 경우 기본값은 매개변수 값과 같고, 다른 기본 유형은 독립적으로 처리됩니다.")]),t._v(" "),s("p",[t._v("This message can also be used in the Data section, and the same data type and naming applies as for the Parameter message.")]),t._v(" "),s("p",[t._v("This section ends before the start of the first "),s("a",{attrs:{href:"#a-subscription-message"}},[t._v("Subscription Message")]),t._v(" or "),s("a",{attrs:{href:"#l-logged-string-message"}},[t._v("Logging")]),t._v(" message, whichever comes first.")]),t._v(" "),s("h3",{attrs:{id:"데이터-섹션"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#데이터-섹션"}},[t._v("#")]),t._v(" 데이터 섹션")]),t._v(" "),s("p",[t._v("The message types in the "),s("em",[t._v("Data")]),t._v(" section are:")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"#a-subscription-message"}},[t._v("Subscription")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#r-unsubscription-message"}},[t._v("Unsubscription")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#d-logged-data-message"}},[t._v("Logged Data")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#l-logged-string-message"}},[t._v("Logged String")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#c-tagged-logged-string-message"}},[t._v("Tagged Logged String")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#s-synchronization-message"}},[t._v("Synchronization")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#o-dropout-message"}},[t._v("Dropout Mark")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#i-information-message"}},[t._v("Information")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#m-multi-information-message"}},[t._v("Multi Information")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#p-parameter-message"}},[t._v("Parameter")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#q-default-parameter-message"}},[t._v("Default Parameter")])])]),t._v(" "),s("h4",{attrs:{id:"a-subscription-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-subscription-message"}},[t._v("#")]),t._v(" "),s("code",[t._v("A")]),t._v(": Subscription Message")]),t._v(" "),s("p",[t._v("Subscribe a message by name and give it an id that is used in "),s("a",{attrs:{href:"#d-logged-data-message"}},[t._v("Logged data Message")]),t._v(". This must come before the first corresponding "),s("a",{attrs:{href:"#d-logged-data-message"}},[t._v("Logged data Message")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_add_logged_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'A'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" multi_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" msg_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" message_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("multi_id")]),t._v(": 동일한 메시지 형식에 여러 인스턴스가 있을 수 있습니다(예: 시스템에 동일한 유형의 센서가 두 개 있는 경우). 기본 및 첫 번째 인스턴스는 0이어야 합니다.")]),t._v(" "),s("li",[s("code",[t._v("msg_id")]),t._v(": unique id to match "),s("a",{attrs:{href:"#d-logged-data-message"}},[t._v("Logged data Message")]),t._v(" data. 처음 사용할 때는 이것을 0으로 설정한 다음 증가시켜야 합니다.\n"),s("ul",[s("li",[t._v("The same "),s("code",[t._v("msg_id")]),t._v(" must not be used twice for different subscriptions.")])])]),t._v(" "),s("li",[s("code",[t._v("message_name")]),t._v(": 구독할 메시지 이름입니다. Must match one of the "),s("a",{attrs:{href:"#f-format-message"}},[t._v("Format Message")]),t._v(" definitions.")])]),t._v(" "),s("h4",{attrs:{id:"r-unsubscription-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#r-unsubscription-message"}},[t._v("#")]),t._v(" "),s("code",[t._v("R")]),t._v(": Unsubscription Message")]),t._v(" "),s("p",[t._v("Unsubscribe a message, to mark that it will not be logged anymore (not used currently).")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_remove_logged_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'R'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" msg_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"d-logged-data-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#d-logged-data-message"}},[t._v("#")]),t._v(" 'D': Logged Data Message")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_data_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'D'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" msg_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("msg_id")]),t._v(": as defined by a "),s("a",{attrs:{href:"#a-subscription-message"}},[t._v("Subscription Message")])]),t._v(" "),s("li",[s("code",[t._v("data")]),t._v(" contains the logged binary message as defined by "),s("a",{attrs:{href:"#f-format-message"}},[t._v("Format Message")])])]),t._v(" "),s("p",[t._v("패딩 필드의 특수 처리에 대해서는 위를 참고하십시오.")]),t._v(" "),s("h4",{attrs:{id:"l-logged-string-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#l-logged-string-message"}},[t._v("#")]),t._v(" 'L': Logged String Message")]),t._v(" "),s("p",[t._v("Logged string message, i.e. "),s("code",[t._v("printf()")]),t._v(" output.")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_logging_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'L'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" log_level"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint64_t")]),t._v(" timestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("timestamp")]),t._v(": in microseconds")]),t._v(" "),s("li",[s("code",[t._v("log_level")]),t._v(": same as in the Linux kernel:")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("이름")]),t._v(" "),s("th",[t._v("레벨")]),t._v(" "),s("th",[t._v("설명")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("EMERG")]),t._v(" "),s("td",[t._v("'0'")]),t._v(" "),s("td",[t._v("시스템 사용 불가")])]),t._v(" "),s("tr",[s("td",[t._v("ALERT")]),t._v(" "),s("td",[t._v("'1'")]),t._v(" "),s("td",[t._v("즉시 조치")])]),t._v(" "),s("tr",[s("td",[t._v("CRIT")]),t._v(" "),s("td",[t._v("'2'")]),t._v(" "),s("td",[t._v("임계 조건")])]),t._v(" "),s("tr",[s("td",[t._v("ERR")]),t._v(" "),s("td",[t._v("'3'")]),t._v(" "),s("td",[t._v("오류 조건")])]),t._v(" "),s("tr",[s("td",[t._v("WARNING")]),t._v(" "),s("td",[t._v("'4'")]),t._v(" "),s("td",[t._v("경고 조건")])]),t._v(" "),s("tr",[s("td",[t._v("NOTICE")]),t._v(" "),s("td",[t._v("'5'")]),t._v(" "),s("td",[t._v("정상적이지만 중요한 상태")])]),t._v(" "),s("tr",[s("td",[t._v("INFO")]),t._v(" "),s("td",[t._v("'6'")]),t._v(" "),s("td",[t._v("정보 제공")])]),t._v(" "),s("tr",[s("td",[t._v("DEBUG")]),t._v(" "),s("td",[t._v("'7'")]),t._v(" "),s("td",[t._v("디버그 수준 메시지")])])])]),t._v(" "),s("h4",{attrs:{id:"c-tagged-logged-string-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-tagged-logged-string-message"}},[t._v("#")]),t._v(" 'C': Tagged Logged String Message")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_logging_tagged_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'C'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" log_level"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint64_t")]),t._v(" timestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[s("code",[t._v("tag")]),t._v(": 기록된 메시지 문자열의 소스를 나타내는 ID입니다. 시스템 아키텍처에 따라 프로세스, 스레드 또는 클래스를 나타낼 수 있습니다.")]),t._v(" "),s("ul",[s("li",[t._v("For example, a reference implementation for an onboard computer running multiple processes to control different payloads, external disks, serial devices etc can encode these process identifiers using a "),s("code",[t._v("uint16_t enum")]),t._v(" into the "),s("code",[t._v("tag")]),t._v(" attribute of struct as follows:")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("class")]),t._v(" ulog_tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  unassigned"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mavlink_handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ppk_handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  camera_handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ptp_handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  serial_handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  watchdog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  io_service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cbuf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ulg\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("timestamp")]),t._v(": in microseconds")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("log_level")]),t._v(": same as in the Linux kernel:")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("이름")]),t._v(" "),s("th",[t._v("레벨")]),t._v(" "),s("th",[t._v("설명")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("EMERG")]),t._v(" "),s("td",[t._v("'0'")]),t._v(" "),s("td",[t._v("시스템 사용 불가")])]),t._v(" "),s("tr",[s("td",[t._v("ALERT")]),t._v(" "),s("td",[t._v("'1'")]),t._v(" "),s("td",[t._v("즉시 조치")])]),t._v(" "),s("tr",[s("td",[t._v("CRIT")]),t._v(" "),s("td",[t._v("'2'")]),t._v(" "),s("td",[t._v("임계 조건")])]),t._v(" "),s("tr",[s("td",[t._v("ERR")]),t._v(" "),s("td",[t._v("'3'")]),t._v(" "),s("td",[t._v("오류 조건")])]),t._v(" "),s("tr",[s("td",[t._v("WARNING")]),t._v(" "),s("td",[t._v("'4'")]),t._v(" "),s("td",[t._v("경고 조건")])]),t._v(" "),s("tr",[s("td",[t._v("NOTICE")]),t._v(" "),s("td",[t._v("'5'")]),t._v(" "),s("td",[t._v("정상적이지만 중요한 상태")])]),t._v(" "),s("tr",[s("td",[t._v("INFO")]),t._v(" "),s("td",[t._v("'6'")]),t._v(" "),s("td",[t._v("정보 제공")])]),t._v(" "),s("tr",[s("td",[t._v("DEBUG")]),t._v(" "),s("td",[t._v("'7'")]),t._v(" "),s("td",[t._v("디버그 수준 메시지")])])])]),t._v(" "),s("h4",{attrs:{id:"s-synchronization-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#s-synchronization-message"}},[t._v("#")]),t._v(" 'S': Synchronization message")]),t._v(" "),s("p",[t._v("Synchronization message so that a reader can recover from a corrupt message by searching for the next sync message.")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_sync_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'S'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" sync_magic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("sync_magic")]),t._v(": [0x2F, 0x73, 0x13, 0x20, 0x25, 0x0C, 0xBB, 0x12]")])]),t._v(" "),s("h4",{attrs:{id:"o-dropout-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#o-dropout-message"}},[t._v("#")]),t._v(" 'O': Dropout message")]),t._v(" "),s("p",[t._v("Mark a dropout (lost logging messages) of a given duration in ms.")]),t._v(" "),s("p",[t._v("장치가 충분히 빠르지 않은 경우에는 손실이 발생할 수 있습니다.")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_dropout_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("message_header_s")]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg_type = 'O'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"messages-shared-with-the-definitions-section"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#messages-shared-with-the-definitions-section"}},[t._v("#")]),t._v(" Messages shared with the Definitions Section")]),t._v(" "),s("p",[t._v("Since the Definitions and Data Sections use the same message header format, they also share the same messages listed below:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#i-information-message"}},[t._v("Information Message")]),t._v(".")]),t._v(" "),s("li",[s("a",{attrs:{href:"#m-multi-information-message"}},[t._v("Multi Information Message")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#p-parameter-message"}},[t._v("Parameter Message")]),t._v(" "),s("ul",[s("li",[t._v("For the "),s("em",[t._v("Data")]),t._v(" section, the Parameter Message is used when the parameter value changes")])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#q-default-parameter-message"}},[t._v("Default Parameter Message")])])]),t._v(" "),s("h2",{attrs:{id:"파서-요구-사항"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#파서-요구-사항"}},[t._v("#")]),t._v(" 파서 요구 사항")]),t._v(" "),s("p",[t._v("유효한 ULog 파서는 요구 사항은 다음과 같습니다.")]),t._v(" "),s("ul",[s("li",[t._v("Must ignore unknown messages (but it can print a warning)")]),t._v(" "),s("li",[t._v("미래의/알 수 없는 파일 형식 버전도 구문 분석합니다(하지만 경고를 인쇄할 수 있음).")]),t._v(" "),s("li",[t._v("Must refuse to parse a log which contains unknown incompatibility bits set ("),s("code",[t._v("incompat_flags")]),t._v(" of "),s("a",{attrs:{href:"#b-flag-bits-message"}},[t._v("Flag Bits Message")]),t._v("), meaning the log contains breaking changes that the parser cannot handle.")]),t._v(" "),s("li",[t._v("파서는 메시지 중간에 갑자기 끝나는 로그를 올바르게 처리할 수 있어야 합니다. 완료되지 않은 메시지는 무시하여야 합니다.")]),t._v(" "),s("li",[t._v("추가된 데이터의 경우: 파서는 데이터 섹션이 존재한다고 가정할 수 있습니다. 즉 오프셋은 정의 섹션 뒤의 위치를 가리킵니다.\n"),s("ul",[s("li",[t._v("추가된 데이터는 일반 데이터 섹션의 일부인 것처럼 처리하여야 합니다.")])])])]),t._v(" "),s("h2",{attrs:{id:"known-parser-implementations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#known-parser-implementations"}},[t._v("#")]),t._v(" Known Parser Implementations")]),t._v(" "),s("ul",[s("li",[t._v("PX4-오토파일럿: C++\n"),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/logger",target:"_blank",rel:"noopener noreferrer"}},[t._v("로거 모듈"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/replay",target:"_blank",rel:"noopener noreferrer"}},[t._v("재생 모듈"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/tree/master/src/systemcmds/hardfault_log",target:"_blank",rel:"noopener noreferrer"}},[t._v("hardfault_log 모듈"),s("OutboundLink")],1),t._v(": hardfault 충돌 데이터를 추가합니다.")])])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/PX4/pyulog",target:"_blank",rel:"noopener noreferrer"}},[t._v("pyulog"),s("OutboundLink")],1),t._v(": python, ULog reader and writer library with CLI scripts.")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/PX4/ulog_cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("ulog_cpp"),s("OutboundLink")],1),t._v(": C++, ULog reader and writer library.")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/PX4/FlightPlot",target:"_blank",rel:"noopener noreferrer"}},[t._v("FlightPlot"),s("OutboundLink")],1),t._v(": 자바, 로그 플로터")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/mavlink/mavlink",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAVLink"),s("OutboundLink")],1),t._v(": MAVLink를 통한 ULog 스트리밍용 메시지(적어도 잘린 메시지의 경우 데이터 추가는 지원되지 않습니다.)")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/mavlink/qgroundcontrol",target:"_blank",rel:"noopener noreferrer"}},[t._v("QGroundControl"),s("OutboundLink")],1),t._v(": C++, MAVLink를 통한 ULog 스트리밍 및 GeoTagging에 대한 최소한의 구문 분석")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/01org/mavlink-router",target:"_blank",rel:"noopener noreferrer"}},[t._v("mavlink-router"),s("OutboundLink")],1),t._v(": C++, MAVLink를 통한 ULog 스트리밍")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ecmnet/MAVGCL",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAVGAnalysis"),s("OutboundLink")],1),t._v(": Java, MAVLink를 통한 ULog 스트리밍 및 플로팅 및 분석용 파서")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/facontidavide/PlotJuggler",target:"_blank",rel:"noopener noreferrer"}},[t._v("PlotJuggler"),s("OutboundLink")],1),t._v(": 로그 및 시계열을 플롯하는 C++/Qt 응용 프로그램입니다. 버전 2.1.3부터 ULog를 지원합니다.")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/maxsun/ulogreader",target:"_blank",rel:"noopener noreferrer"}},[t._v("ulogreader"),s("OutboundLink")],1),t._v(": Javascript, ULog 리더 및 파서는 JSON 개체 형식의 로그를 출력합니다.")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/foxglove/studio",target:"_blank",rel:"noopener noreferrer"}},[t._v("Foxglove Studio"),s("OutboundLink")],1),t._v(": an integrated visualization and diagnosis tool for robotics (Typescript ULog parser: https://github.com/foxglove/ulog).")])]),t._v(" "),s("h2",{attrs:{id:"파일-형식-버전-이력"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#파일-형식-버전-이력"}},[t._v("#")]),t._v(" 파일 형식 버전 이력")]),t._v(" "),s("h3",{attrs:{id:"버전-2의-변경-사항"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#버전-2의-변경-사항"}},[t._v("#")]),t._v(" 버전 2의 변경 사항")]),t._v(" "),s("ul",[s("li",[t._v("Addition of "),s("a",{attrs:{href:"#m-multi-information-message"}},[t._v("Multi Information Message")]),t._v(" and "),s("a",{attrs:{href:"#b-flag-bits-message"}},[t._v("Flag Bits Message")]),t._v(" and the ability to append data to a log.\n"),s("ul",[s("li",[t._v("기존 로그에 충돌 데이터를 추가하는 데 사용됩니다.")]),t._v(" "),s("li",[t._v("메시지 중간에 잘린 로그에 데이터가 추가되면, 버전 1 파서로 파싱할 수 없습니다.")])])]),t._v(" "),s("li",[t._v("그 외의 파서가 알 수 없는 메시지를 무시하면, 순방향 및 역방향 호환성이 제공됩니다.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);