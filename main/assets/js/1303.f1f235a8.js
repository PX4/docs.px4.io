(window.webpackJsonp=window.webpackJsonp||[]).push([[1303],{2436:function(t,e,o){"use strict";o.r(e);var s=o(19),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"uorb-message-reference"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#uorb-message-reference"}},[t._v("#")]),t._v(" uORB Message Reference")]),t._v(" "),o("div",{staticClass:"custom-block note"},[o("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),o("p",[t._v("This list is "),o("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/Tools/msg/generate_msg_docs.py",target:"_blank",rel:"noopener noreferrer"}},[t._v("auto-generated"),o("OutboundLink")],1),t._v(" from the source code.")])]),t._v(" "),o("p",[t._v("This topic lists the UORB messages available in PX4 (some of which may be may be shared by the "),o("RouterLink",{attrs:{to:"/en/ros/ros2_comm.html"}},[t._v("PX4-ROS 2 Bridge")]),t._v(").\nGraphs showing how these are used "),o("RouterLink",{attrs:{to:"/en/middleware/uorb_graph.html"}},[t._v("can be found here")]),t._v(".")],1),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ActionRequest.html"}},[t._v("ActionRequest")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ActuatorArmed.html"}},[t._v("ActuatorArmed")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ActuatorControlsStatus.html"}},[t._v("ActuatorControlsStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ActuatorMotors.html"}},[t._v("ActuatorMotors")]),t._v(" — Motor control message")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ActuatorOutputs.html"}},[t._v("ActuatorOutputs")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ActuatorServos.html"}},[t._v("ActuatorServos")]),t._v(" — Servo control message")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ActuatorServosTrim.html"}},[t._v("ActuatorServosTrim")]),t._v(" — Servo trims, added as offset to servo outputs")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ActuatorTest.html"}},[t._v("ActuatorTest")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/AdcReport.html"}},[t._v("AdcReport")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Airspeed.html"}},[t._v("Airspeed")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/AirspeedValidated.html"}},[t._v("AirspeedValidated")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/AirspeedWind.html"}},[t._v("AirspeedWind")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ArmingCheckReply.html"}},[t._v("ArmingCheckReply")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ArmingCheckRequest.html"}},[t._v("ArmingCheckRequest")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/AutotuneAttitudeControlStatus.html"}},[t._v("AutotuneAttitudeControlStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/BatteryStatus.html"}},[t._v("BatteryStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Buffer128.html"}},[t._v("Buffer128")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ButtonEvent.html"}},[t._v("ButtonEvent")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/CameraCapture.html"}},[t._v("CameraCapture")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/CameraStatus.html"}},[t._v("CameraStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/CameraTrigger.html"}},[t._v("CameraTrigger")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/CanInterfaceStatus.html"}},[t._v("CanInterfaceStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/CellularStatus.html"}},[t._v("CellularStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/CollisionConstraints.html"}},[t._v("CollisionConstraints")]),t._v(" — Local setpoint constraints in NED frame\nsetting something to NaN means that no limit is provided")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/CollisionReport.html"}},[t._v("CollisionReport")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ConfigOverrides.html"}},[t._v("ConfigOverrides")]),t._v(" — Configurable overrides by (external) modes or mode executors")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ControlAllocatorStatus.html"}},[t._v("ControlAllocatorStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Cpuload.html"}},[t._v("Cpuload")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/DatamanRequest.html"}},[t._v("DatamanRequest")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/DatamanResponse.html"}},[t._v("DatamanResponse")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/DebugArray.html"}},[t._v("DebugArray")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/DebugKeyValue.html"}},[t._v("DebugKeyValue")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/DebugValue.html"}},[t._v("DebugValue")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/DebugVect.html"}},[t._v("DebugVect")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/DifferentialDriveSetpoint.html"}},[t._v("DifferentialDriveSetpoint")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/DifferentialPressure.html"}},[t._v("DifferentialPressure")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/DistanceSensor.html"}},[t._v("DistanceSensor")]),t._v(" — DISTANCE_SENSOR message data")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Ekf2Timestamps.html"}},[t._v("Ekf2Timestamps")]),t._v(" — this message contains the (relative) timestamps of the sensor inputs used by EKF2.\nIt can be used for reproducible replay.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EscReport.html"}},[t._v("EscReport")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EscStatus.html"}},[t._v("EscStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorAidSource1d.html"}},[t._v("EstimatorAidSource1d")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorAidSource2d.html"}},[t._v("EstimatorAidSource2d")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorAidSource3d.html"}},[t._v("EstimatorAidSource3d")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorBias.html"}},[t._v("EstimatorBias")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorBias3d.html"}},[t._v("EstimatorBias3d")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorEventFlags.html"}},[t._v("EstimatorEventFlags")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorGpsStatus.html"}},[t._v("EstimatorGpsStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorInnovations.html"}},[t._v("EstimatorInnovations")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorSelectorStatus.html"}},[t._v("EstimatorSelectorStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorSensorBias.html"}},[t._v("EstimatorSensorBias")]),t._v(" — Sensor readings and in-run biases in SI-unit form. Sensor readings are compensated for static offsets,\nscale errors, in-run bias and thermal drift (if thermal compensation is enabled and available).")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorStates.html"}},[t._v("EstimatorStates")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorStatus.html"}},[t._v("EstimatorStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/EstimatorStatusFlags.html"}},[t._v("EstimatorStatusFlags")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Event.html"}},[t._v("Event")]),t._v(" — Events interface")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/FailsafeFlags.html"}},[t._v("FailsafeFlags")]),t._v(" — Input flags for the failsafe state machine set by the arming & health checks.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/FailureDetectorStatus.html"}},[t._v("FailureDetectorStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/FigureEightStatus.html"}},[t._v("FigureEightStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/FlightPhaseEstimation.html"}},[t._v("FlightPhaseEstimation")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/FollowTarget.html"}},[t._v("FollowTarget")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/FollowTargetEstimator.html"}},[t._v("FollowTargetEstimator")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/FollowTargetStatus.html"}},[t._v("FollowTargetStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GeneratorStatus.html"}},[t._v("GeneratorStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GeofenceResult.html"}},[t._v("GeofenceResult")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GeofenceStatus.html"}},[t._v("GeofenceStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GimbalControls.html"}},[t._v("GimbalControls")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GimbalDeviceAttitudeStatus.html"}},[t._v("GimbalDeviceAttitudeStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GimbalDeviceInformation.html"}},[t._v("GimbalDeviceInformation")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GimbalDeviceSetAttitude.html"}},[t._v("GimbalDeviceSetAttitude")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GimbalManagerInformation.html"}},[t._v("GimbalManagerInformation")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GimbalManagerSetAttitude.html"}},[t._v("GimbalManagerSetAttitude")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GimbalManagerSetManualControl.html"}},[t._v("GimbalManagerSetManualControl")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GimbalManagerStatus.html"}},[t._v("GimbalManagerStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GotoSetpoint.html"}},[t._v("GotoSetpoint")]),t._v(" — Position and (optional) heading setpoints with corresponding speed constraints\nSetpoints are intended as inputs to position and heading smoothers, respectively\nSetpoints do not need to be kinematically consistent\nOptional heading setpoints may be specified as controlled by the respective flag\nUnset optional setpoints are not controlled\nUnset optional constraints default to vehicle specifications")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GpioConfig.html"}},[t._v("GpioConfig")]),t._v(" — GPIO configuration")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GpioIn.html"}},[t._v("GpioIn")]),t._v(" — GPIO mask and state")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GpioOut.html"}},[t._v("GpioOut")]),t._v(" — GPIO mask and state")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GpioRequest.html"}},[t._v("GpioRequest")]),t._v(" — Request GPIO mask to be read")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GpsDump.html"}},[t._v("GpsDump")]),t._v(" — This message is used to dump the raw gps communication to the log.\nSet the parameter GPS_DUMP_COMM to 1 to use this.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/GpsInjectData.html"}},[t._v("GpsInjectData")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Gripper.html"}},[t._v("Gripper")]),t._v(" — # Used to command an actuation in the gripper, which is mapped to a specific output in the control allocation module")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/HealthReport.html"}},[t._v("HealthReport")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/HeaterStatus.html"}},[t._v("HeaterStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/HomePosition.html"}},[t._v("HomePosition")]),t._v(" — GPS home position in WGS84 coordinates.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/HoverThrustEstimate.html"}},[t._v("HoverThrustEstimate")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/InputRc.html"}},[t._v("InputRc")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/InternalCombustionEngineStatus.html"}},[t._v("InternalCombustionEngineStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/IridiumsbdStatus.html"}},[t._v("IridiumsbdStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/IrlockReport.html"}},[t._v("IrlockReport")]),t._v(" — IRLOCK_REPORT message data")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/LandingGear.html"}},[t._v("LandingGear")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/LandingGearWheel.html"}},[t._v("LandingGearWheel")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/LandingTargetInnovations.html"}},[t._v("LandingTargetInnovations")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/LandingTargetPose.html"}},[t._v("LandingTargetPose")]),t._v(" — Relative position of precision land target in navigation (body fixed, north aligned, NED) and inertial (world fixed, north aligned, NED) frames")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/LaunchDetectionStatus.html"}},[t._v("LaunchDetectionStatus")]),t._v(" — Status of the launch detection state machine (fixed-wing only)")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/LedControl.html"}},[t._v("LedControl")]),t._v(" — LED control: control a single or multiple LED's.\nThese are the externally visible LED's, not the board LED's")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/LogMessage.html"}},[t._v("LogMessage")]),t._v(" — A logging message, output with PX4_{WARN,ERR,INFO}")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/LoggerStatus.html"}},[t._v("LoggerStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/MagWorkerData.html"}},[t._v("MagWorkerData")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/MagnetometerBiasEstimate.html"}},[t._v("MagnetometerBiasEstimate")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ManualControlSetpoint.html"}},[t._v("ManualControlSetpoint")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ManualControlSwitches.html"}},[t._v("ManualControlSwitches")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/MavlinkLog.html"}},[t._v("MavlinkLog")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/MavlinkTunnel.html"}},[t._v("MavlinkTunnel")]),t._v(" — MAV_TUNNEL_PAYLOAD_TYPE enum")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/MessageFormatRequest.html"}},[t._v("MessageFormatRequest")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/MessageFormatResponse.html"}},[t._v("MessageFormatResponse")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Mission.html"}},[t._v("Mission")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/MissionResult.html"}},[t._v("MissionResult")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ModeCompleted.html"}},[t._v("ModeCompleted")]),t._v(" — Mode completion result, published by an active mode.\nThe possible values of nav_state are defined in the VehicleStatus msg.\nNote that this is not always published (e.g. when a user switches modes or on\nfailsafe activation)")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/MountOrientation.html"}},[t._v("MountOrientation")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/NavigatorMissionItem.html"}},[t._v("NavigatorMissionItem")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/NormalizedUnsignedSetpoint.html"}},[t._v("NormalizedUnsignedSetpoint")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/NpfgStatus.html"}},[t._v("NpfgStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ObstacleDistance.html"}},[t._v("ObstacleDistance")]),t._v(" — Obstacle distances in front of the sensor.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/OffboardControlMode.html"}},[t._v("OffboardControlMode")]),t._v(" — Off-board control mode")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/OnboardComputerStatus.html"}},[t._v("OnboardComputerStatus")]),t._v(" — ONBOARD_COMPUTER_STATUS message data")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/OrbTest.html"}},[t._v("OrbTest")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/OrbTestLarge.html"}},[t._v("OrbTestLarge")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/OrbTestMedium.html"}},[t._v("OrbTestMedium")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/OrbitStatus.html"}},[t._v("OrbitStatus")]),t._v(" — ORBIT_YAW_BEHAVIOUR")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ParameterResetRequest.html"}},[t._v("ParameterResetRequest")]),t._v(" — ParameterResetRequest : Used by the primary to reset one or all parameter value(s) on the remote")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ParameterSetUsedRequest.html"}},[t._v("ParameterSetUsedRequest")]),t._v(" — ParameterSetUsedRequest : Used by a remote to update the used flag for a parameter on the primary")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ParameterSetValueRequest.html"}},[t._v("ParameterSetValueRequest")]),t._v(" — ParameterSetValueRequest : Used by a remote or primary to update the value for a parameter at the other end")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ParameterSetValueResponse.html"}},[t._v("ParameterSetValueResponse")]),t._v(" — ParameterSetValueResponse : Response to a set value request by either primary or secondary")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/ParameterUpdate.html"}},[t._v("ParameterUpdate")]),t._v(" — This message is used to notify the system about one or more parameter changes")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Ping.html"}},[t._v("Ping")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/PositionControllerLandingStatus.html"}},[t._v("PositionControllerLandingStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/PositionControllerStatus.html"}},[t._v("PositionControllerStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/PositionSetpoint.html"}},[t._v("PositionSetpoint")]),t._v(" — this file is only used in the position_setpoint triple as a dependency")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/PositionSetpointTriplet.html"}},[t._v("PositionSetpointTriplet")]),t._v(" — Global position setpoint triplet in WGS84 coordinates.\nThis are the three next waypoints (or just the next two or one).")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/PowerButtonState.html"}},[t._v("PowerButtonState")]),t._v(" — power button state notification message")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/PowerMonitor.html"}},[t._v("PowerMonitor")]),t._v(" — power monitor message")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/PpsCapture.html"}},[t._v("PpsCapture")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/PwmInput.html"}},[t._v("PwmInput")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Px4ioStatus.html"}},[t._v("Px4ioStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/QshellReq.html"}},[t._v("QshellReq")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/QshellRetval.html"}},[t._v("QshellRetval")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/RadioStatus.html"}},[t._v("RadioStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/RateCtrlStatus.html"}},[t._v("RateCtrlStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/RcChannels.html"}},[t._v("RcChannels")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/RcParameterMap.html"}},[t._v("RcParameterMap")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/RegisterExtComponentReply.html"}},[t._v("RegisterExtComponentReply")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/RegisterExtComponentRequest.html"}},[t._v("RegisterExtComponentRequest")]),t._v(" — Request to register an external component")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Rpm.html"}},[t._v("Rpm")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/RtlStatus.html"}},[t._v("RtlStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/RtlTimeEstimate.html"}},[t._v("RtlTimeEstimate")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SatelliteInfo.html"}},[t._v("SatelliteInfo")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorAccel.html"}},[t._v("SensorAccel")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorAccelFifo.html"}},[t._v("SensorAccelFifo")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorAirflow.html"}},[t._v("SensorAirflow")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorBaro.html"}},[t._v("SensorBaro")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorCombined.html"}},[t._v("SensorCombined")]),t._v(" — Sensor readings in SI-unit form.\nThese fields are scaled and offset-compensated where possible and do not\nchange with board revisions and sensor updates.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorCorrection.html"}},[t._v("SensorCorrection")]),t._v(" — Sensor corrections in SI-unit form for the voted sensor")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorGnssRelative.html"}},[t._v("SensorGnssRelative")]),t._v(" — GNSS relative positioning information in NED frame. The NED frame is defined as the local topological system at the reference station.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorGps.html"}},[t._v("SensorGps")]),t._v(" — GPS position in WGS84 coordinates.\nthe field 'timestamp' is for the position & velocity (microseconds)")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorGyro.html"}},[t._v("SensorGyro")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorGyroFft.html"}},[t._v("SensorGyroFft")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorGyroFifo.html"}},[t._v("SensorGyroFifo")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorHygrometer.html"}},[t._v("SensorHygrometer")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorMag.html"}},[t._v("SensorMag")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorOpticalFlow.html"}},[t._v("SensorOpticalFlow")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorPreflightMag.html"}},[t._v("SensorPreflightMag")]),t._v(" — Pre-flight sensor check metrics.\nThe topic will not be updated when the vehicle is armed")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorSelection.html"}},[t._v("SensorSelection")]),t._v(" — Sensor ID's for the voted sensors output on the sensor_combined topic.\nWill be updated on startup of the sensor module and when sensor selection changes")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorUwb.html"}},[t._v("SensorUwb")]),t._v(" — UWB distance contains the distance information measured by an ultra-wideband positioning system,\nsuch as Pozyx or NXP Rddrone.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorsStatus.html"}},[t._v("SensorsStatus")]),t._v(" — Sensor check metrics. This will be zero for a sensor that's primary or unpopulated.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SensorsStatusImu.html"}},[t._v("SensorsStatusImu")]),t._v(" — Sensor check metrics. This will be zero for a sensor that's primary or unpopulated.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/SystemPower.html"}},[t._v("SystemPower")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TakeoffStatus.html"}},[t._v("TakeoffStatus")]),t._v(" — Status of the takeoff state machine currently just available for multicopters")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TaskStackInfo.html"}},[t._v("TaskStackInfo")]),t._v(" — stack information for a single running process")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TecsStatus.html"}},[t._v("TecsStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TelemetryStatus.html"}},[t._v("TelemetryStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TiltrotorExtraControls.html"}},[t._v("TiltrotorExtraControls")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TimesyncStatus.html"}},[t._v("TimesyncStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TrajectoryBezier.html"}},[t._v("TrajectoryBezier")]),t._v(" — Bezier Trajectory description. See also Mavlink TRAJECTORY msg\nThe topic trajectory_bezier describe each waypoint defined in vehicle_trajectory_bezier")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TrajectorySetpoint.html"}},[t._v("TrajectorySetpoint")]),t._v(" — Trajectory setpoint in NED frame\nInput to PID position controller.\nNeeds to be kinematically consistent and feasible for smooth flight.\nsetting a value to NaN means the state should not be controlled")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TrajectoryWaypoint.html"}},[t._v("TrajectoryWaypoint")]),t._v(" — Waypoint Trajectory description. See also Mavlink TRAJECTORY msg\nThe topic trajectory_waypoint describe each waypoint defined in vehicle_trajectory_waypoint")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TransponderReport.html"}},[t._v("TransponderReport")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/TuneControl.html"}},[t._v("TuneControl")]),t._v(" — This message is used to control the tunes, when the tune_id is set to CUSTOM\nthen the frequency, duration are used otherwise those values are ignored.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/UavcanParameterRequest.html"}},[t._v("UavcanParameterRequest")]),t._v(" — UAVCAN-MAVLink parameter bridge request type")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/UavcanParameterValue.html"}},[t._v("UavcanParameterValue")]),t._v(" — UAVCAN-MAVLink parameter bridge response type")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/UlogStream.html"}},[t._v("UlogStream")]),t._v(" — Message to stream ULog data from the logger. Corresponds to the LOGGING_DATA\nmavlink message")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/UlogStreamAck.html"}},[t._v("UlogStreamAck")]),t._v(" — Ack a previously sent ulog_stream message that had\nthe NEED_ACK flag set")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/UnregisterExtComponent.html"}},[t._v("UnregisterExtComponent")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleAcceleration.html"}},[t._v("VehicleAcceleration")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleAirData.html"}},[t._v("VehicleAirData")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleAngularAccelerationSetpoint.html"}},[t._v("VehicleAngularAccelerationSetpoint")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleAngularVelocity.html"}},[t._v("VehicleAngularVelocity")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleAttitude.html"}},[t._v("VehicleAttitude")]),t._v(" — This is similar to the mavlink message ATTITUDE_QUATERNION, but for onboard use")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleAttitudeSetpoint.html"}},[t._v("VehicleAttitudeSetpoint")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleCommand.html"}},[t._v("VehicleCommand")]),t._v(" — Vehicle Command uORB message. Used for commanding a mission / action / etc.\nFollows the MAVLink COMMAND_INT / COMMAND_LONG definition")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleCommandAck.html"}},[t._v("VehicleCommandAck")]),t._v(" — Vehicle Command Ackonwledgement uORB message.\nUsed for acknowledging the vehicle command being received.\nFollows the MAVLink COMMAND_ACK message definition")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleConstraints.html"}},[t._v("VehicleConstraints")]),t._v(" — Local setpoint constraints in NED frame\nsetting something to NaN means that no limit is provided")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleControlMode.html"}},[t._v("VehicleControlMode")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleGlobalPosition.html"}},[t._v("VehicleGlobalPosition")]),t._v(" — Fused global position in WGS84.\nThis struct contains global position estimation. It is not the raw GPS\nmeasurement (@see vehicle_gps_position). This topic is usually published by the position\nestimator, which will take more sources of information into account than just GPS,\ne.g. control inputs of the vehicle in a Kalman-filter implementation.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleImu.html"}},[t._v("VehicleImu")]),t._v(" — IMU readings in SI-unit form.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleImuStatus.html"}},[t._v("VehicleImuStatus")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleLandDetected.html"}},[t._v("VehicleLandDetected")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleLocalPosition.html"}},[t._v("VehicleLocalPosition")]),t._v(" — Fused local position in NED.\nThe coordinate system origin is the vehicle position at the time when the EKF2-module was started.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleLocalPositionSetpoint.html"}},[t._v("VehicleLocalPositionSetpoint")]),t._v(" — Local position setpoint in NED frame\nTelemetry of PID position controller to monitor tracking.\nNaN means the state was not controlled")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleMagnetometer.html"}},[t._v("VehicleMagnetometer")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleOdometry.html"}},[t._v("VehicleOdometry")]),t._v(" — Vehicle odometry data. Fits ROS REP 147 for aerial vehicles")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleOpticalFlow.html"}},[t._v("VehicleOpticalFlow")]),t._v(" — Optical flow in XYZ body frame in SI units.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleOpticalFlowVel.html"}},[t._v("VehicleOpticalFlowVel")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleRatesSetpoint.html"}},[t._v("VehicleRatesSetpoint")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleRoi.html"}},[t._v("VehicleRoi")]),t._v(" — Vehicle Region Of Interest (ROI)")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleStatus.html"}},[t._v("VehicleStatus")]),t._v(" — Encodes the system state of the vehicle published by commander")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleThrustSetpoint.html"}},[t._v("VehicleThrustSetpoint")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleTorqueSetpoint.html"}},[t._v("VehicleTorqueSetpoint")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleTrajectoryBezier.html"}},[t._v("VehicleTrajectoryBezier")]),t._v(" — Vehicle Waypoints Trajectory description. See also MAVLink MAV_TRAJECTORY_REPRESENTATION msg\nThe topic vehicle_trajectory_bezier is used to send a smooth flight path from the\ncompanion computer / avoidance module to the position controller.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VehicleTrajectoryWaypoint.html"}},[t._v("VehicleTrajectoryWaypoint")]),t._v(" — Vehicle Waypoints Trajectory description. See also MAVLink MAV_TRAJECTORY_REPRESENTATION msg\nThe topic vehicle_trajectory_waypoint_desired is used to send the user desired waypoints from the position controller to the companion computer / avoidance module.\nThe topic vehicle_trajectory_waypoint is used to send the adjusted waypoints from the companion computer / avoidance module to the position controller.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VelocityLimits.html"}},[t._v("VelocityLimits")]),t._v(" — Velocity and yaw rate limits for a multicopter position slow mode only")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/VtolVehicleStatus.html"}},[t._v("VtolVehicleStatus")]),t._v(" — VEHICLE_VTOL_STATE, should match 1:1 MAVLinks's MAV_VTOL_STATE")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/WheelEncoders.html"}},[t._v("WheelEncoders")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/Wind.html"}},[t._v("Wind")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/msg_docs/YawEstimatorStatus.html"}},[t._v("YawEstimatorStatus")])],1)])])}),[],!1,null,null,null);e.default=i.exports}}]);