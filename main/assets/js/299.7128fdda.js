(window.webpackJsonp=window.webpackJsonp||[]).push([[299],{1713:function(t,s,e){t.exports=e.p+"assets/img/ros2_modes_overview.1ec61112.svg"},1714:function(t,s,e){t.exports=e.p+"assets/img/qgc_modes.c5d026f7.png"},1715:function(t,s,e){t.exports=e.p+"assets/img/mode_requirements_diagram.b8fae478.png"},1716:function(t,s,e){t.exports=e.p+"assets/img/qgc_mode_assignment.e70ec51b.png"},2396:function(t,s,e){"use strict";e.r(s);var a=e(19),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"px4-ros-2-interface-library"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#px4-ros-2-interface-library"}},[t._v("#")]),t._v(" PX4 ROS 2 Interface Library")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Experimental")]),t._v(" "),a("p",[t._v("At time of writing parts of the PX4 ROS 2 Interface Library is experimental, and hence subject to change:")]),t._v(" "),a("ul",[a("li",[t._v("The architecture and core interfaces for defining modes in ROS 2 modes are largely stable, and are tested in CI.\nThe library offers significant benefits over using offboard mode in its current state.")]),t._v(" "),a("li",[t._v("Only a few setpoint types have settled (the others are still under development).\nYou may need to use internal PX4 topics which may not remain backwards-compatible over time.")]),t._v(" "),a("li",[t._v("The API is not fully documented.")])])]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4 ROS 2 Interface Library"),a("OutboundLink")],1),t._v(" is a C++ library that simplifies controlling PX4 from ROS 2.")]),t._v(" "),a("p",[t._v("Developers use the library to create and dynamically register modes written using ROS 2.\nThese modes are dynamically registered with PX4, and appear to be part of PX4 to a ground station or other external system.\nThey can even replace the default modes in PX4 with enhanced ROS 2 versions, falling back to the original version if the ROS2 mode fails.")]),t._v(" "),a("p",[t._v("The library also provides classes for sending different types of setpoints, ranging from high-level navigation tasks all the way down to direct actuator controls.\nThese classes abstract the internal setpoints used by PX4, and that can therefore be used to provide a consistent ROS 2 interface for future PX4 and ROS releases.")]),t._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),a("p",[t._v("This diagram provides a conceptual overview of how PX4 ROS 2 Interface Library modes and mode executors interact with PX4.")]),t._v(" "),a("p",[a("img",{attrs:{src:e(1713),alt:"ROS2 modes overview diagram"}})]),t._v(" "),a("p",[t._v("The following sections define and explain the terms used in the diagram.")]),t._v(" "),a("h3",{attrs:{id:"definitions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#definitions"}},[t._v("#")]),t._v(" Definitions")]),t._v(" "),a("h4",{attrs:{id:"mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode"}},[t._v("#")]),t._v(" Mode")]),t._v(" "),a("p",[t._v("A mode defined using the interface library has the following properties:")]),t._v(" "),a("ul",[a("li",[t._v("A mode is a component that can send setpoints to the vehicle in order to control its motion (such as velocity or direct actuator commands).")]),t._v(" "),a("li",[t._v("A mode selects a setpoint type and sends it while it is active.\nIt can switch between multiple setpoint types.")]),t._v(" "),a("li",[t._v("A mode can't activate other modes, and must be activated by the user (through RC/GCS), the flight controller in a failsafe situation, a "),a("em",[t._v("mode executor")]),t._v(", or some other external system.")]),t._v(" "),a("li",[t._v("Has a name displayed by the GCS.")]),t._v(" "),a("li",[t._v("Can configure its mode requirements (for example that it requires a valid position estimate).")]),t._v(" "),a("li",[t._v("A mode can perform different tasks, such as flying to a target, lowering a winch, releasing a payload and then fly back.")]),t._v(" "),a("li",[t._v("A mode can replace a mode defined in PX4.")])]),t._v(" "),a("h4",{attrs:{id:"mode-executor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode-executor"}},[t._v("#")]),t._v(" Mode Executor")]),t._v(" "),a("p",[t._v("A mode executor is an optional component for scheduling modes.\nFor example, the mode executor for a custom payload delivery or survey mode might first trigger a take-off, then switch to the custom mode, and when that completes trigger an RTL.")]),t._v(" "),a("p",[t._v("Specifically, it has the following properties:")]),t._v(" "),a("ul",[a("li",[t._v("A mode executor is an optional component one level higher than a mode.\nIt is a state machine that can activate modes, and wait for their completion.")]),t._v(" "),a("li",[t._v("It can only do so while it is in charge.\nFor that, an executor has exactly one "),a("em",[t._v("owned mode")]),t._v(" (and a mode can be owned by at most one executor).\nThis mode serves as activation for the executor: when the user selects the mode, the owning executor gets activated and can select any mode.\nIt stays in charge until the user switches modes (by RC or from a GCS), or a failsafe triggers a mode switch.\nShould the failsafe clear, the executor gets reactivated.")]),t._v(" "),a("li",[t._v("This allows multiple executors to coexist.")]),t._v(" "),a("li",[t._v("Executors cannot activate other executors.")]),t._v(" "),a("li",[t._v("Within the library, a mode executor is always implemented in combination with a custom mode.")])]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("ul",[a("li",[t._v("These definitions guarantee that a user can take away control from a custom mode or executor at any point in time by commanding a mode switch through RC or a GCS.")]),t._v(" "),a("li",[t._v("A mode executor is transparent to the user.\nIt gets indirectly selected and activated through the owning mode, and thus the mode should be named accordingly.")])])]),t._v(" "),a("h4",{attrs:{id:"configuration-overrides"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-overrides"}},[t._v("#")]),t._v(" Configuration Overrides")]),t._v(" "),a("p",[t._v("Both modes and executors can define configuration overrides, allowing customisation of certain behaviors while the mode or executor is active.")]),t._v(" "),a("p",[t._v("These are currently implemented:")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("Disabling auto-disarm")]),t._v(".\nThis permits landing and then taking off again (e.g. to release a payload).")]),t._v(" "),a("li",[a("em",[t._v("Ability to defer non-essential failsafes")]),t._v(".\nThis allows an executor to run an action without being interrupted by non-critical failsafe.\nFor example, ignoring a low-battery failsafe so that a winch operation can complete.")])]),t._v(" "),a("h3",{attrs:{id:"comparison-to-offboard-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comparison-to-offboard-control"}},[t._v("#")]),t._v(" Comparison to Offboard Control")]),t._v(" "),a("p",[t._v("The above concepts provide a number of advantages over traditional "),a("RouterLink",{attrs:{to:"/en/ros/offboard_control.html"}},[t._v("offboard control")]),t._v(":")],1),t._v(" "),a("ul",[a("li",[t._v("Multiple nodes or applications can coexist and even run at the same time.\nBut only one node can "),a("em",[t._v("control the vehicle")]),t._v(" at a given time, and this node is well defined.")]),t._v(" "),a("li",[t._v("Modes have a distinct name and be displayed/selected in the GCS.")]),t._v(" "),a("li",[t._v("Modes are integrated with the failsafe state machine and arming checks.")]),t._v(" "),a("li",[t._v("The setpoint types that can be sent are well defined.")]),t._v(" "),a("li",[t._v("ROS 2 modes can replace flight controller internal modes (such as "),a("RouterLink",{attrs:{to:"/en/flight_modes/return.html"}},[t._v("Return mode")]),t._v(").")],1)]),t._v(" "),a("h2",{attrs:{id:"installation-and-first-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation-and-first-test"}},[t._v("#")]),t._v(" Installation and First Test")]),t._v(" "),a("p",[t._v("The following steps are required to get started:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Make sure you have a working "),a("RouterLink",{attrs:{to:"/en/ros/ros2_comm.html"}},[t._v("ROS 2 setup")]),t._v(", with "),a("em",[t._v("px4_msgs")]),t._v(" in the ROS 2 workspace.")],1)]),t._v(" "),a("li",[a("p",[t._v("Clone the repository into the workspace:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ros_workspace")]),t._v("/src\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --recursive https://github.com/Auterion/px4-ros2-interface-lib\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("To ensure compatibility, use the latest "),a("em",[t._v("main")]),t._v(" branches for PX4, "),a("em",[t._v("px4_msgs")]),t._v(" and the library.\nSee also "),a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib#compatibility-with-px4",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")])])]),t._v(" "),a("li",[a("p",[t._v("Build the workspace:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" install/setup.bash\ncolcon build\n")])])])]),t._v(" "),a("li",[a("p",[t._v("In a different shell, start PX4 SITL:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$px4")]),t._v("-autopilot\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_sitl gazebo-classic\n")])])]),a("p",[t._v("(here we use Gazebo-Classic, but you can use any model or simulator)")])]),t._v(" "),a("li",[a("p",[t._v("Run the micro XRCE agent in a new shell (you can keep it running afterward):")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("MicroXRCEAgent udp4 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Start QGroundControl.")]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Use QGroundControl Daily, which supports dynamically updating the list of modes.")])])]),t._v(" "),a("li",[a("p",[t._v("Back in the ROS 2 terminal, run one of the example modes:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("ros2 run example_mode_manual_cpp example_mode_manual\n")])])]),a("p",[t._v("You should get an output like this showing 'My Manual Mode' mode being registered:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_mode_manual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Checking message compatibility"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_mode_manual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Subscriber found, continuing\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_mode_manual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Publisher found, continuing\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_mode_manual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Registering "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'My Manual Mode'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arming check: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", mode: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", mode executor: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_mode_manual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Subscriber found, continuing\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_mode_manual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Publisher found, continuing\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_mode_manual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Got RegisterExtComponentReply\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_mode_manual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Arming check request "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", only printed once"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("On the PX4 shell, you can check that PX4 registered the new mode:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("commander status\n")])])]),a("p",[t._v("The output should contain:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("INFO  [commander] Disarmed\nINFO  [commander] navigation mode: Position\nINFO  [commander] user intended navigation mode: Position\nINFO  [commander] in failsafe: no\nINFO  [commander] External Mode 1: nav_state: 23, name: My Manual Mode\n")])])])]),t._v(" "),a("li",[a("p",[t._v("At this point you should be able to see the mode in QGroundControl as well:")]),t._v(" "),a("p",[a("img",{attrs:{src:e(1714),alt:"QGC Modes"}})])]),t._v(" "),a("li",[a("p",[t._v("Select the mode, make sure you have a manual control source (physical or virtual joystick), and arm the vehicle.\nThe mode will then activate, and it should print the following output:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_mode_manual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Mode "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'My Manual Mode'")]),t._v(" activated\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Now you are ready to create your own mode.")])])]),t._v(" "),a("h2",{attrs:{id:"how-to-use-the-library"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use-the-library"}},[t._v("#")]),t._v(" How to Use the Library")]),t._v(" "),a("p",[t._v("The following sections describe specific functionality provided by this library.\nIn addition, any other PX4 topic can be subscribed or published.")]),t._v(" "),a("h3",{attrs:{id:"mode-class-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode-class-definition"}},[t._v("#")]),t._v(" Mode Class Definition")]),t._v(" "),a("p",[t._v("This section steps through an example of how to create a class for a custom mode.")]),t._v(" "),a("p",[t._v("For a complete application, check out the "),a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/tree/main/examples/cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("examples in the "),a("code",[t._v("Auterion/px4-ros2-interface-lib")]),t._v(" repository"),a("OutboundLink")],1),t._v(", such as "),a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/blob/main/examples/cpp/modes/manual/include/mode.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("examples/cpp/modes/manual"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModeBase")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1]")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explicit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rclcpp"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ModeBase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Mode"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [2]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [3]")]),t._v("\n    _manual_control_input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token generic-function"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_shared")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ManualControlInput"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    _rates_setpoint "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token generic-function"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_shared")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("RatesSetpointType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onActivate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Called whenever our mode gets selected")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onDeactivate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Called when our mode gets deactivated")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateSetpoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rclcpp"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Duration "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [4]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Eigen"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector3f thrust_sp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("_manual_control_input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Eigen"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector3f rates_sp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      _manual_control_input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("roll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("150.F")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" M_PI "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180.F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("_manual_control_input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pitch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("150.F")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" M_PI "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180.F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      _manual_control_input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yaw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.F")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" M_PI "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180.F")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    _rates_setpoint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rates_sp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thrust_sp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ManualControlInput"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _manual_control_input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("RatesSetpointType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _rates_setpoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("[1]")]),t._v(": First we create a class that inherits from "),a("code",[t._v("px4_ros2::ModeBase")])]),t._v(" "),a("li",[a("code",[t._v("[2]")]),t._v(": In the constructor, we pass the mode name. This also allows us to configure some other things, like replacing a flight controller internal mode.")]),t._v(" "),a("li",[a("code",[t._v("[3]")]),t._v(": This is where we create all objects that we want to use later on.\nThis can be RC input, setpoint type(s), or telemetry. "),a("code",[t._v("*this")]),t._v(" is passed as a "),a("code",[t._v("Context")]),t._v(" to each object, which associates the object with the mode.")]),t._v(" "),a("li",[a("code",[t._v("[4]")]),t._v(": Whenever the mode is active, this method gets called regularly (the update rate depends on the setpoint type).\nHere is where we can do our work and generate a new setpoint.")])]),t._v(" "),a("p",[t._v("After creating an instance of that mode, "),a("code",[t._v("mode->doRegister()")]),t._v(" must be called which does the actual registration with the flight controller and returns "),a("code",[t._v("false")]),t._v(" if it fails.\nIn case a mode executor is used, "),a("code",[t._v("doRegister()")]),t._v(" must be called on the mode executor, instead of for the mode.")]),t._v(" "),a("h3",{attrs:{id:"mode-executor-class-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode-executor-class-definition"}},[t._v("#")]),t._v(" Mode Executor Class Definition")]),t._v(" "),a("p",[t._v("This section steps through an example of how to create a mode executor class.")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyModeExecutor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModeExecutorBase")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1]")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyModeExecutor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rclcpp"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ModeBase "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" owned_mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [2]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ModeExecutorBase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ModeExecutorBase"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" owned_mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [3]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Reset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    TakingOff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    MyMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    RTL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    WaitUntilDisarmed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onActivate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("runState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("TakingOff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Result"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [4]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onDeactivate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DeactivateReason reason"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("runState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("State state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Result previous_result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("previous_result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Result"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RCLCPP_ERROR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_logger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"State %i: previous state failed: %s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resultToString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("previous_result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [5]")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" State"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Reset"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" State"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("TakingOff"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeoff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Result result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("runState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("MyMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" State"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("MyMode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [6]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ownedMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Result result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("runState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("RTL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" State"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("RTL"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rtl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Result result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("runState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("WaitUntilDisarmed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" State"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("WaitUntilDisarmed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitUntilDisarmed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Result result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RCLCPP_INFO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_logger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"All states complete (%s)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resultToString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  rclcpp"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" _node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("[1]")]),t._v(": First we create a class that inherits from "),a("code",[t._v("px4_ros2::ModeExecutorBase")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("[2]")]),t._v(": The constructor takes our custom mode that is associated with the executor and passes it to the constructor of "),a("code",[t._v("ModeExecutorBase")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("[3]")]),t._v(": We define an enum for the states we want to run through.")]),t._v(" "),a("li",[a("code",[t._v("[4]")]),t._v(": "),a("code",[t._v("onActivate")]),t._v(" gets called when the executor becomes active. At this point we can start to run through our states.\nHow you do this is up to you, in this example a method "),a("code",[t._v("runState")]),t._v(" is used to execute the next state.")]),t._v(" "),a("li",[a("code",[t._v("[5]")]),t._v(": On switching to a state we call an asynchronous method from "),a("code",[t._v("ModeExecutorBase")]),t._v(" to start the desired mode: "),a("code",[t._v("run")]),t._v(", "),a("code",[t._v("takeoff")]),t._v(", "),a("code",[t._v("rtl")]),t._v(", and so on.\nThese methods are passed a function that is called on completion; the callback provides a "),a("code",[t._v("Result")]),t._v(" argument that tells you whether the operation succeeded or not.\nThe callback runs the next state on success.")]),t._v(" "),a("li",[a("code",[t._v("[6]")]),t._v(": We use the "),a("code",[t._v("scheduleMode()")]),t._v(' method to start the executor\'s "owned mode", following the same pattern as the other state handlers.')])]),t._v(" "),a("h3",{attrs:{id:"setpoint-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setpoint-types"}},[t._v("#")]),t._v(" Setpoint Types")]),t._v(" "),a("p",[t._v("A mode can choose its setpoint type(s) it wants to use to control the vehicle.\nThe used types also define the compatibility with different vehicle types.")]),t._v(" "),a("p",[t._v("The following sections provide a list of supported setpoint types:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#direct-actuator-control-setpoint-directactuatorssetpointtype"}},[t._v("DirectActuatorsSetpointType")]),t._v(": Direct control of motors and flight surface servo setpoints")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("The other setpoint types are currently experimental, and can be found in: "),a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/tree/main/px4_ros2_cpp/include/px4_ros2/control/setpoint_types/experimental",target:"_blank",rel:"noopener noreferrer"}},[t._v("px4_ros2/control/setpoint_types/experimental"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("You can add your own setpoint types by adding a class that inherits from "),a("code",[t._v("px4_ros2::SetpointBase")]),t._v(", sets the configuration flags according to what the setpoint requires, and then publishes any topic containing a setpoint.")])]),t._v(" "),a("h4",{attrs:{id:"direct-actuator-control-setpoint-directactuatorssetpointtype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#direct-actuator-control-setpoint-directactuatorssetpointtype"}},[t._v("#")]),t._v(" Direct Actuator Control Setpoint (DirectActuatorsSetpointType)")]),t._v(" "),a("p",[t._v("Actuators can be directly controlled using the "),a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/blob/main/px4_ros2_cpp/include/px4_ros2/control/setpoint_types/direct_actuators.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("px4_ros2::DirectActuatorsSetpointType"),a("OutboundLink")],1),t._v(" setpoint type.\nMotors and servos can be set independently.\nBe aware that the assignment is vehicle and setup-specific.\nFor example to control a quadrotor, you need to set the first 4 motors according to its "),a("RouterLink",{attrs:{to:"/en/concept/control_allocation.html"}},[t._v("output configuration")]),t._v(".")],1),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("If you want to control an actuator that does not control the vehicle's motion, but for example a payload servo, see "),a("a",{attrs:{href:"#controlling-an-independent-actuator-servo"}},[t._v("below")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"controlling-an-independent-actuator-servo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#controlling-an-independent-actuator-servo"}},[t._v("#")]),t._v(" Controlling an Independent Actuator/Servo")]),t._v(" "),a("p",[t._v("If you want to control an independent actuator (a servo), follow these steps:")]),t._v(" "),a("ol",[a("li",[a("RouterLink",{attrs:{to:"/en/payloads/#generic-actuator-control-with-mavlink"}},[t._v("Configure the output")])],1),t._v(" "),a("li",[t._v("Create an instance of "),a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/blob/main/px4_ros2_cpp/include/px4_ros2/control/peripheral_actuators.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("px4_ros2::PeripheralActuatorControls"),a("OutboundLink")],1),t._v(" in the constructor of your mode.")]),t._v(" "),a("li",[t._v("Call the "),a("code",[t._v("set")]),t._v(" method to control the actuator(s).\nThis can be done independently of any active setpoints.")])]),t._v(" "),a("h3",{attrs:{id:"telemetry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#telemetry"}},[t._v("#")]),t._v(" Telemetry")]),t._v(" "),a("p",[t._v("Telemetry topics include:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/blob/main/px4_ros2_cpp/include/px4_ros2/odometry/global_position.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("OdometryGlobalPosition"),a("OutboundLink")],1),t._v(": Global position")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/blob/main/px4_ros2_cpp/include/px4_ros2/odometry/local_position.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("OdometryLocalPosition"),a("OutboundLink")],1),t._v(": Local position, velocity and acceleration.")])]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("These topics provide a wrapper around the internal PX4 topics, allowing the library to maintain compatibility if the internal topics change.\nCheck "),a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/tree/main/px4_ros2_cpp/include/px4_ros2/odometry",target:"_blank",rel:"noopener noreferrer"}},[t._v("px4_ros2/odometry"),a("OutboundLink")],1),t._v(" for new topics, and of course you can use any ROS 2 topic published from PX4.")])]),t._v(" "),a("h3",{attrs:{id:"failsafes-and-mode-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#failsafes-and-mode-requirements"}},[t._v("#")]),t._v(" Failsafes and Mode Requirements")]),t._v(" "),a("p",[t._v("Each mode has a set of requirement flags.\nThese are generally automatically set, depending on which objects are used within the context of a mode.\nFor example when adding manual control input with the code below the requirement flag for manual control gets set:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("_manual_control_input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token generic-function"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_shared")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros2"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ManualControlInput"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Specifically, setting a flag has the following consequences in PX4, if the condition is not met:")]),t._v(" "),a("ul",[a("li",[t._v("arming is not allowed, while the mode is selected")]),t._v(" "),a("li",[t._v("when already armed, the mode cannot be selected")]),t._v(" "),a("li",[t._v("when armed and the mode is selected, the relevant failsafe is triggered (e.g. RC loss for the manual control requirement).\nCheck the "),a("RouterLink",{attrs:{to:"/en/config/safety.html"}},[t._v("safety page")]),t._v(" for how to configure failsafe behavior.\nA failsafe is also triggered when the mode crashes or becomes unresponsive while it is selected.")],1)]),t._v(" "),a("p",[t._v("This is the corresponding flow diagram for the manual control flag:")]),t._v(" "),a("p",[a("img",{attrs:{src:e(1715),alt:"Mode requirements diagram"}})]),t._v(" "),a("p",[t._v("It is possible to manually update any mode requirement after the mode is registered.\nFor example to add home position as requirement:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("modeRequirements")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("home_position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The full list of flags can be found in "),a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/blob/main/px4_ros2_cpp/include/px4_ros2/common/requirement_flags.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("requirement_flags.hpp"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"deferring-failsafes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deferring-failsafes"}},[t._v("#")]),t._v(" Deferring Failsafes")]),t._v(" "),a("p",[t._v("A mode or mode executor can temporarily defer non-essential failsafes by calling the method "),a("code",[t._v("deferFailsafesSync()")]),t._v(".\nTo get notified when a failsafe would be triggered, override the method "),a("code",[t._v("void onFailsafeDeferred()")]),t._v(".")]),t._v(" "),a("p",[t._v("Check the "),a("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/blob/main/px4_ros2_cpp/test/integration/overrides.cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("integration test"),a("OutboundLink")],1),t._v(" for an example.")]),t._v(" "),a("h3",{attrs:{id:"assigning-a-mode-to-an-rc-switch-or-joystick-action"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assigning-a-mode-to-an-rc-switch-or-joystick-action"}},[t._v("#")]),t._v(" Assigning a Mode to an RC Switch or Joystick Action")]),t._v(" "),a("p",[t._v("External modes can be assigned to "),a("RouterLink",{attrs:{to:"/en/config/flight_mode.html"}},[t._v("RC switches")]),t._v(" or joystick actions.\nWhen assigning a mode to an RC switch, you need to know the index (because the parameter metadata does not contain the dynamic mode name).\nUse "),a("code",[t._v("commander status")]),t._v(" while the mode is running to get that information.")],1),t._v(" "),a("p",[t._v("For example:")]),t._v(" "),a("div",{staticClass:"language-plain extra-class"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[t._v("   INFO  [commander] External Mode 1: nav_state: 23, name: My Manual Mode\n")])])]),a("p",[t._v("means you would select "),a("strong",[t._v("External Mode 1")]),t._v(" in QGC:")]),t._v(" "),a("p",[a("img",{attrs:{src:e(1716),alt:"QGC Mode Assignment"}})]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("PX4 ensures a given mode is always assigned to the same index by storing a hash of the mode name.\nThis makes it independent of startup ordering in case of multiple external modes.")])]),t._v(" "),a("h3",{attrs:{id:"replacing-an-internal-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replacing-an-internal-mode"}},[t._v("#")]),t._v(" Replacing an Internal Mode")]),t._v(" "),a("p",[t._v("An external mode can replace an existing internal mode, such as "),a("RouterLink",{attrs:{to:"/en/flight_modes/return.html"}},[t._v("Return")]),t._v(" mode (RTL).\nBy doing so, whenever RTL gets selected (through the user or a failsafe situation), the external mode is used instead of the internal one.\nThe internal one is only used as a fallback when the external one becomes unresponsive or crashes.")],1),t._v(" "),a("p",[t._v("The replacement mode can be set in the settings of the "),a("code",[t._v("ModeBase")]),t._v(" constructor:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("Settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("kName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ModeBase"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("kModeIDRtl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"ci-integration-tests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ci-integration-tests"}},[t._v("#")]),t._v(" CI: Integration Tests")]),t._v(" "),a("p",[t._v("When opening a pull request to PX4, CI runs the library integration tests.\nThese test that mode registration, failsafes, and mode replacement, work as expected.")]),t._v(" "),a("p",[t._v("The tests can also be run locally from PX4:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./test/ros_test_runner.py\n")])])]),a("p",[t._v("And to run only a single case:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./test/ros_test_runner.py --verbose --case "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("case"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("You can list the available test cases with:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./test/ros_test_runner.py --list-cases\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);