(window.webpackJsonp=window.webpackJsonp||[]).push([[826],{2980:function(t,e,o){"use strict";o.r(e);var a=o(19),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"takeoff-mode-multicopter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#takeoff-mode-multicopter"}},[t._v("#")]),t._v(" Takeoff Mode (Multicopter)")]),t._v(" "),a("img",{attrs:{src:o(328),title:"Position fix required (e.g. GPS)",width:"30px"}}),t._v(" "),a("p",[t._v("The "),a("em",[t._v("Takeoff")]),t._v(" flight mode causes the vehicle to take off to a specified height and wait for further input.")]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("ul",[a("li",[t._v("Mode is automatic - no user intervention is "),a("em",[t._v("required")]),t._v(" to control the vehicle.")]),t._v(" "),a("li",[t._v("Mode requires at least a valid local position estimate (does not require a global position).\n"),a("ul",[a("li",[t._v("Flying vehicles can't switch to this mode without valid local position.")]),t._v(" "),a("li",[t._v("Flying vehicles will failsafe if they lose the position estimate.")]),t._v(" "),a("li",[t._v("Disarmed vehicles can switch to mode without valid position estimate but can't arm.")])])]),t._v(" "),a("li",[t._v("RC control switches can be used to change flight modes.")]),t._v(" "),a("li",[t._v("RC stick movement will "),a("a",{attrs:{href:"#COM_RC_OVERRIDE"}},[t._v("by default")]),t._v(" change the vehicle to "),a("RouterLink",{attrs:{to:"/ko/flight_modes_mc/position.html"}},[t._v("Position mode")]),t._v(" unless handling a critical battery failsafe.")],1),t._v(" "),a("li",[t._v("The "),a("RouterLink",{attrs:{to:"/ko/config/safety.html#failure-detector"}},[t._v("Failure Detector")]),t._v(" will automatically stop the engines if there is a problem on takeoff.")],1)])]),t._v(" "),a("h2",{attrs:{id:"technical-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#technical-summary"}},[t._v("#")]),t._v(" Technical Summary")]),t._v(" "),a("p",[t._v("A multi rotor ascends vertically to the altitude defined in "),a("RouterLink",{attrs:{to:"/ko/advanced_config/parameter_reference.html#MIS_TAKEOFF_ALT"}},[t._v("MIS_TAKEOFF_ALT")]),t._v(" and holds position.")],1),t._v(" "),a("p",[t._v("RC stick movement will change the vehicle to "),a("RouterLink",{attrs:{to:"/ko/flight_modes_mc/position.html"}},[t._v("Position mode")]),t._v(" (by "),a("a",{attrs:{href:"#COM_RC_OVERRIDE"}},[t._v("default")]),t._v(").")],1),t._v(" "),a("h3",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),a("p",[t._v("Takeoff is affected by the following parameters:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{id:"MIS_TAKEOFF_ALT"}}),a("RouterLink",{attrs:{to:"/ko/advanced_config/parameter_reference.html#MIS_TAKEOFF_ALT"}},[t._v("MIS_TAKEOFF_ALT")])],1),t._v(" "),a("td",[t._v("Target altitude during takeoff (default: 2.5m)")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{id:"MPC_TKO_SPEED"}}),a("RouterLink",{attrs:{to:"/ko/advanced_config/parameter_reference.html#MPC_TKO_SPEED"}},[t._v("MPC_TKO_SPEED")])],1),t._v(" "),a("td",[t._v("Speed of ascent (default: 1.5m/s)")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{id:"COM_RC_OVERRIDE"}}),a("RouterLink",{attrs:{to:"/ko/advanced_config/parameter_reference.html#COM_RC_OVERRIDE"}},[t._v("COM_RC_OVERRIDE")])],1),t._v(" "),a("td",[t._v("Controls whether stick movement on a multicopter (or VTOL in MC mode) causes a mode change to "),a("RouterLink",{attrs:{to:"/ko/flight_modes_mc/position.html"}},[t._v("Position mode")]),t._v(". This can be separately enabled for auto modes and for offboard mode, and is enabled in auto modes by default.")],1)]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{id:"COM_RC_STICK_OV"}}),a("RouterLink",{attrs:{to:"/ko/advanced_config/parameter_reference.html#COM_RC_STICK_OV"}},[t._v("COM_RC_STICK_OV")])],1),t._v(" "),a("td",[t._v("The amount of stick movement that causes a transition to "),a("RouterLink",{attrs:{to:"/ko/flight_modes_mc/position.html"}},[t._v("Position mode")]),t._v(" (if "),a("a",{attrs:{href:"#COM_RC_OVERRIDE"}},[t._v("COM_RC_OVERRIDE")]),t._v(" is enabled)")],1)])])]),t._v(" "),a("h2",{attrs:{id:"see-also"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#see-also"}},[t._v("#")]),t._v(" See Also")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/ko/flight_modes_mc/throw_launch.html"}},[t._v("Throw Launch (MC)")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/ko/flight_modes_fw/takeoff.html"}},[t._v("Takeoff Mode (FW)")])],1)])])}),[],!1,null,null,null);e.default=i.exports},328:function(t,e,o){t.exports=o.p+"assets/img/position_fixed.38e4a675.svg"}}]);