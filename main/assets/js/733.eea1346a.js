(window.webpackJsonp=window.webpackJsonp||[]).push([[733],{2171:function(t,e,a){"use strict";a.r(e);var o=a(19),i=Object(o.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"takeoff-mode-multicopter"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#takeoff-mode-multicopter"}},[t._v("#")]),t._v(" Takeoff Mode (Multicopter)")]),t._v(" "),o("img",{attrs:{src:a(328),title:"Position fix required (e.g. GPS)",width:"30px"}}),t._v(" "),o("p",[t._v("The "),o("em",[t._v("Takeoff")]),t._v(" flight mode causes the vehicle to take off to a specified height and wait for further input.")]),t._v(" "),o("div",{staticClass:"custom-block note"},[o("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),o("ul",[o("li",[t._v("Mode is automatic - no user intervention is "),o("em",[t._v("required")]),t._v(" to control the vehicle.")]),t._v(" "),o("li",[t._v("Mode requires at least a valid local position estimate (does not require a global position).\n"),o("ul",[o("li",[t._v("Flying vehicles can't switch to this mode without valid local position.")]),t._v(" "),o("li",[t._v("Flying vehicles will failsafe if they lose the position estimate.")]),t._v(" "),o("li",[t._v("Disarmed vehicles can switch to mode without valid position estimate but can't arm.")])])]),t._v(" "),o("li",[t._v("RC control switches can be used to change flight modes.")]),t._v(" "),o("li",[t._v("RC stick movement will "),o("a",{attrs:{href:"#COM_RC_OVERRIDE"}},[t._v("by default")]),t._v(" change the vehicle to "),o("RouterLink",{attrs:{to:"/en/flight_modes_mc/position.html"}},[t._v("Position mode")]),t._v(" unless handling a critical battery failsafe.")],1),t._v(" "),o("li",[t._v("The "),o("RouterLink",{attrs:{to:"/en/config/safety.html#failure-detector"}},[t._v("Failure Detector")]),t._v(" will automatically stop the engines if there is a problem on takeoff.")],1)])]),t._v(" "),o("h2",{attrs:{id:"technical-summary"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#technical-summary"}},[t._v("#")]),t._v(" Technical Summary")]),t._v(" "),o("p",[t._v("A multi rotor ascends vertically to the altitude defined in "),o("RouterLink",{attrs:{to:"/en/advanced_config/parameter_reference.html#MIS_TAKEOFF_ALT"}},[t._v("MIS_TAKEOFF_ALT")]),t._v(" and holds position.")],1),t._v(" "),o("p",[t._v("RC stick movement will change the vehicle to "),o("RouterLink",{attrs:{to:"/en/flight_modes_mc/position.html"}},[t._v("Position mode")]),t._v(" (by "),o("a",{attrs:{href:"#COM_RC_OVERRIDE"}},[t._v("default")]),t._v(").")],1),t._v(" "),o("h3",{attrs:{id:"parameters"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),o("p",[t._v("Takeoff is affected by the following parameters:")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Parameter")]),t._v(" "),o("th",[t._v("Description")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[o("a",{attrs:{id:"MIS_TAKEOFF_ALT"}}),o("RouterLink",{attrs:{to:"/en/advanced_config/parameter_reference.html#MIS_TAKEOFF_ALT"}},[t._v("MIS_TAKEOFF_ALT")])],1),t._v(" "),o("td",[t._v("Target altitude during takeoff (default: 2.5m)")])]),t._v(" "),o("tr",[o("td",[o("a",{attrs:{id:"MPC_TKO_SPEED"}}),o("RouterLink",{attrs:{to:"/en/advanced_config/parameter_reference.html#MPC_TKO_SPEED"}},[t._v("MPC_TKO_SPEED")])],1),t._v(" "),o("td",[t._v("Speed of ascent (default: 1.5m/s)")])]),t._v(" "),o("tr",[o("td",[o("a",{attrs:{id:"COM_RC_OVERRIDE"}}),o("RouterLink",{attrs:{to:"/en/advanced_config/parameter_reference.html#COM_RC_OVERRIDE"}},[t._v("COM_RC_OVERRIDE")])],1),t._v(" "),o("td",[t._v("Controls whether stick movement on a multicopter (or VTOL in MC mode) causes a mode change to "),o("RouterLink",{attrs:{to:"/en/flight_modes_mc/position.html"}},[t._v("Position mode")]),t._v(". This can be separately enabled for auto modes and for offboard mode, and is enabled in auto modes by default.")],1)]),t._v(" "),o("tr",[o("td",[o("a",{attrs:{id:"COM_RC_STICK_OV"}}),o("RouterLink",{attrs:{to:"/en/advanced_config/parameter_reference.html#COM_RC_STICK_OV"}},[t._v("COM_RC_STICK_OV")])],1),t._v(" "),o("td",[t._v("The amount of stick movement that causes a transition to "),o("RouterLink",{attrs:{to:"/en/flight_modes_mc/position.html"}},[t._v("Position mode")]),t._v(" (if "),o("a",{attrs:{href:"#COM_RC_OVERRIDE"}},[t._v("COM_RC_OVERRIDE")]),t._v(" is enabled)")],1)])])]),t._v(" "),o("h2",{attrs:{id:"see-also"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#see-also"}},[t._v("#")]),t._v(" See Also")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/en/flight_modes_mc/throw_launch.html"}},[t._v("Throw Launch (MC)")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/flight_modes_fw/takeoff.html"}},[t._v("Takeoff Mode (FW)")])],1)])])}),[],!1,null,null,null);e.default=i.exports},328:function(t,e,a){t.exports=a.p+"assets/img/position_fixed.38e4a675.svg"}}]);