(window.webpackJsonp=window.webpackJsonp||[]).push([[1394],{2549:function(t,e,s){"use strict";s.r(e);var a=s(19),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"px4-ros-2-interface-library"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#px4-ros-2-interface-library"}},[t._v("#")]),t._v(" PX4 ROS 2 Interface Library")]),t._v(" "),s("Badge",{attrs:{type:"warning",text:"main (PX4 v1.15)"}}),t._v(" "),s("Badge",{attrs:{type:"warning",text:"Experimental"}}),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Experimental")]),t._v(" "),s("p",[t._v("At the time of writing, parts of the PX4 ROS 2 Interface Library are experimental, and hence subject to change.")])]),t._v(" "),s("p",[t._v("The "),s("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4 ROS 2 Interface Library"),s("OutboundLink")],1),t._v(" is a C++ library that simplifies controlling and interacting with PX4 from ROS 2.")]),t._v(" "),s("p",[t._v("The library provides two high-level interfaces for developers:")]),t._v(" "),s("ol",[s("li",[t._v("The "),s("RouterLink",{attrs:{to:"/en/ros2/px4_ros2_control_interface.html"}},[t._v("Control Interface")]),t._v(" allows developers to create and dynamically register modes written using ROS 2.\nIt provides classes for sending different types of setpoints, ranging from high-level navigation tasks all the way down to direct actuator controls.")],1),t._v(" "),s("li",[t._v("The "),s("RouterLink",{attrs:{to:"/en/ros2/px4_ros2_navigation_interface.html"}},[t._v("Navigation Interface")]),t._v(" enables sending vehicle position estimates to PX4 from ROS 2 applications, such as a VIO system.")],1)]),t._v(" "),s("h2",{attrs:{id:"installation-in-a-ros-2-workspace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation-in-a-ros-2-workspace"}},[t._v("#")]),t._v(" Installation in a ROS 2 Workspace")]),t._v(" "),s("p",[t._v("To get started using the library within an existing ROS 2 workspace:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Make sure you have a working "),s("RouterLink",{attrs:{to:"/en/ros/ros2_comm.html"}},[t._v("ROS 2 setup")]),t._v(", with "),s("a",{attrs:{href:"https://github.com/PX4/px4_msgs",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("px4_msgs")]),s("OutboundLink")],1),t._v(" in the ROS 2 workspace.")],1)]),t._v(" "),s("li",[s("p",[t._v("Clone the repository into the workspace:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ros_workspace")]),t._v("/src\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --recursive https://github.com/Auterion/px4-ros2-interface-lib\n")])])]),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("To ensure compatibility, use the latest "),s("em",[t._v("main")]),t._v(" branches for PX4, "),s("em",[t._v("px4_msgs")]),t._v(" and the library.\nSee also "),s("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib#compatibility-with-px4",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".")])])]),t._v(" "),s("li",[s("p",[t._v("Build the workspace:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\ncolcon build\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" install/setup.bash\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"ci-integration-tests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ci-integration-tests"}},[t._v("#")]),t._v(" CI: Integration Tests")]),t._v(" "),s("p",[t._v("When opening a pull request to PX4, CI runs the library integration tests.\nThese test that mode registration, failsafes, and mode replacement, work as expected.")]),t._v(" "),s("p",[t._v("The tests can also be run locally from PX4:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("./test/ros_test_runner.py\n")])])]),s("p",[t._v("And to run only a single case:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("./test/ros_test_runner.py --verbose --case "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("case"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("You can list the available test cases with:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("./test/ros_test_runner.py --list-cases\n")])])])],1)}),[],!1,null,null,null);e.default=r.exports}}]);