(window.webpackJsonp=window.webpackJsonp||[]).push([[1620],{3069:function(t,e,a){"use strict";a.r(e);var _=a(19),r=Object(_.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"시리얼-포트-매핑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#시리얼-포트-매핑"}},[t._v("#")]),t._v(" 시리얼 포트 매핑")]),t._v(" "),a("p",[t._v('This topic shows how to determine the mapping between USART/UART serial port device names (e.g. "ttyS0") and the associated ports on a flight controller, such as '),a("code",[t._v("TELEM1")]),t._v(", "),a("code",[t._v("TELEM2")]),t._v(", "),a("code",[t._v("GPS1")]),t._v(", "),a("code",[t._v("RC SBUS")]),t._v(", "),a("code",[t._v("Debug console")]),t._v(".")]),t._v(" "),a("p",[t._v("The instructions are used to generate serial port mapping tables in flight controller documentation. 예: "),a("RouterLink",{attrs:{to:"/ko/flight_controller/pixhawk4.html#serial-port-mapping"}},[t._v("Pixhawk 4 > 직렬 포트 매핑")]),t._v(".")],1),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("The function assigned to each port does not "),a("em",[t._v("have to")]),t._v(" match the name (in most cases), and is set using a "),a("RouterLink",{attrs:{to:"/ko/peripherals/serial_configuration.html"}},[t._v("Serial Port Configuration")]),t._v(". Usually the port function is configured to match the name, which is why the port labelled "),a("code",[t._v("GPS1")]),t._v(" will work with a GPS out of the box.")],1)]),t._v(" "),a("h2",{attrs:{id:"stmxxyyy의-nuttx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stmxxyyy의-nuttx"}},[t._v("#")]),t._v(" STMxxyyy의 NuttX")]),t._v(" "),a("p",[t._v("보드 설정 파일을 검사하여 STMxxyyy 아키텍처에서 NuttX 빌드에 대한 매핑 획득 방법을 설명합니다. FMUv5를 사용하지만, 다른 FMU 버전/NuttX 보드에도 유사하게 확장할 수 있습니다.")]),t._v(" "),a("h3",{attrs:{id:"default-cmake"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#default-cmake"}},[t._v("#")]),t._v(" default.cmake")]),t._v(" "),a("p",[a("strong",[t._v("default.cmake")]),t._v('는 여러 직렬 포트 매핑을 나열합니다(텍스트 "SERIAL_PORTS" 검색).')]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v5/default.cmake#L13-L17",target:"_blank",rel:"noopener noreferrer"}},[t._v("/boards/px4/fmu-v5/default.cmake"),a("OutboundLink")],1),t._v("에서:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("SERIAL_PORTS\n    GPS1:/dev/ttyS0\n    TEL1:/dev/ttyS1\n    TEL2:/dev/ttyS2\n    TEL4:/dev/ttyS3\n")])])]),a("p",[t._v("Alternatively you can launch boardconfig using "),a("code",[t._v("make px4_fmu-v5 boardconfig")]),t._v(" and access the serial port menu")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    CONFIG_STM32F7_UART4=y\nCONFIG_STM32F7_UART7=y\nCONFIG_STM32F7_UART8=y\nCONFIG_STM32F7_USART1=y\nCONFIG_STM32F7_USART2=y\nCONFIG_STM32F7_USART3=y\nCONFIG_STM32F7_USART6=y\n")])])]),a("h3",{attrs:{id:"nsh-defconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nsh-defconfig"}},[t._v("#")]),t._v(" nsh/defconfig")]),t._v(" "),a("p",[t._v("The "),a("em",[t._v("nsh/defconfig")]),t._v(" allows you to determine which ports are defined, whether they are UART or USARTs, and the mapping between USART/UART and device. You can also determine which port is used for the "),a("RouterLink",{attrs:{to:"/ko/debug/system_console.html"}},[t._v("serial/debug console")]),t._v(".")],1),t._v(" "),a("p",[t._v("Open the board's defconfig file, for example: "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/boards/px4/fmu-v5/nuttx-config/nsh/defconfig#L215-L221",target:"_blank",rel:"noopener noreferrer"}},[t._v("/boards/px4/fmu-v5/nuttx-config/nsh/defconfig"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v('Search for the text "ART" until you find a section like with entries formatted like '),a("code",[t._v("CONFIG_STM32xx_USARTn=y")]),t._v(" (where "),a("code",[t._v("xx")]),t._v(" is a processor type and "),a("code",[t._v("n")]),t._v(" is a port number). For example:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ttyS0 CONFIG_STM32F7_USART1=y\nttyS1 CONFIG_STM32F7_USART2=y\nttyS2 CONFIG_STM32F7_USART3=y\nttyS3 CONFIG_STM32F7_UART4=y\nttyS4 CONFIG_STM32F7_USART6=y\nttyS5 CONFIG_STM32F7_UART7=y\nttyS6 CONFIG_STM32F7_UART8=y\n")])])]),a("p",[t._v("The entries tell you which ports are defined, and whether they are UART or USART.")]),t._v(" "),a("p",[t._v("DEBUG 콘솔 매핑을 가져오기 위해 "),a("code",[t._v("SERIAL_CONSOLE")]),t._v("에 대한 "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v5/nuttx-config/nsh/defconfig#L212",target:"_blank",rel:"noopener noreferrer"}},[t._v("defconfig 파일"),a("OutboundLink")],1),t._v("을 검색합니다. 아래에서 콘솔이 UART7에 있음을 알 수 있습니다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CONFIG_UART7_SERIAL_CONSOLE=y\n")])])]),a("p",[t._v("To get the DEBUG console mapping we search the "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v5/nuttx-config/nsh/defconfig#L212",target:"_blank",rel:"noopener noreferrer"}},[t._v("defconfig file"),a("OutboundLink")],1),t._v(" for "),a("code",[t._v("SERIAL_CONSOLE")]),t._v(". Below we see that the console is on UART7:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#define PX4IO_SERIAL_DEVICE            "/dev/ttyS6"\n#define PX4IO_SERIAL_TX_GPIO           GPIO_UART8_TX\n#define PX4IO_SERIAL_RX_GPIO           GPIO_UART8_RX\n#define PX4IO_SERIAL_BASE              STM32_UART8_BASE\n')])])]),a("h3",{attrs:{id:"board-config-h"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#board-config-h"}},[t._v("#")]),t._v(" board_config.h")]),t._v(" "),a("p",[t._v("예: "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v5/src/board_config.h#L59",target:"_blank",rel:"noopener noreferrer"}},[t._v("/boards/px4/fmu-v5/src/board_config.h"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("따라서 PX4IO는 "),a("code",[t._v("ttyS6")]),t._v("에 있습니다(이전 섹션에서 이미 알고 있는 UART8에 매핑되는 것도 볼 수 있습니다).")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ttyS0 CONFIG_STM32F7_USART1=y GPS1\nttyS1 CONFIG_STM32F7_USART2=y TEL1\nttyS2 CONFIG_STM32F7_USART3=y TEL2\nttyS3 CONFIG_STM32F7_UART4=y TEL4\nttyS4 CONFIG_STM32F7_USART6=y\nttyS5 CONFIG_STM32F7_UART7=y DEBUG\nttyS6 CONFIG_STM32F7_UART8=y PX4IO\n")])])]),a("p",[t._v("최종 매핑은 다음과 같습니다.")]),t._v(" "),a("h3",{attrs:{id:"결합"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#결합"}},[t._v("#")]),t._v(" 결합")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/ko/flight_controller/pixhawk4.html#serial-port-mapping"}},[t._v("비행 콘트롤러 문서")]),t._v("의 결과 표는 다음과 같습니다.")],1),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ttyS0 CONFIG_STM32F7_USART1=y GPS1\nttyS1 CONFIG_STM32F7_USART2=y TEL1\nttyS2 CONFIG_STM32F7_USART3=y TEL2\nttyS3 CONFIG_STM32F7_UART4=y TEL4\nttyS4 CONFIG_STM32F7_USART6=y\nttyS5 CONFIG_STM32F7_UART7=y DEBUG\nttyS6 CONFIG_STM32F7_UART8=y PX4IO\n")])])]),a("p",[t._v("In the "),a("RouterLink",{attrs:{to:"/ko/flight_controller/pixhawk4.html#serial-port-mapping"}},[t._v("flight controller docs")]),t._v(" the resulting table is:")],1),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("UART")]),t._v(" "),a("th",[t._v("장치")]),t._v(" "),a("th",[t._v("포트")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("UART1")]),t._v(" "),a("td",[t._v("/dev/ttyS0")]),t._v(" "),a("td",[t._v("GPS")])]),t._v(" "),a("tr",[a("td",[t._v("USART2")]),t._v(" "),a("td",[t._v("/dev/ttyS1")]),t._v(" "),a("td",[t._v("TELEM1 (흐름 제어)")])]),t._v(" "),a("tr",[a("td",[t._v("USART3")]),t._v(" "),a("td",[t._v("/dev/ttyS2")]),t._v(" "),a("td",[t._v("TELEM2 (흐름 제어)")])]),t._v(" "),a("tr",[a("td",[t._v("UART4")]),t._v(" "),a("td",[t._v("/dev/ttyS3")]),t._v(" "),a("td",[t._v("TELEM4")])]),t._v(" "),a("tr",[a("td",[t._v("USART6")]),t._v(" "),a("td",[t._v("/dev/ttyS4")]),t._v(" "),a("td",[t._v("RC SBUS")])]),t._v(" "),a("tr",[a("td",[t._v("UART7")]),t._v(" "),a("td",[t._v("/dev/ttyS5")]),t._v(" "),a("td",[t._v("디버그 콘솔")])]),t._v(" "),a("tr",[a("td",[t._v("UART8")]),t._v(" "),a("td",[t._v("/dev/ttyS6")]),t._v(" "),a("td",[t._v("PX4IO")])])])]),t._v(" "),a("h2",{attrs:{id:"기타-아키텍처"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#기타-아키텍처"}},[t._v("#")]),t._v(" 기타 아키텍처")]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Contributions welcome!")])]),t._v(" "),a("h2",{attrs:{id:"see-also"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#see-also"}},[t._v("#")]),t._v(" See Also")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/ko/peripherals/serial_configuration.html"}},[t._v("Serial Port Configuration")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/ko/peripherals/mavlink_peripherals.html"}},[t._v("MAVLink Telemetry (OSD/GCS)")])],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);