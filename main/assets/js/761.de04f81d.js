(window.webpackJsonp=window.webpackJsonp||[]).push([[761],{1571:function(s,a,t){s.exports=t.p+"assets/img/px4_sitl_overview.c2ef9c51.png"},2616:function(s,a,t){"use strict";t.r(a);var e=t(19),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"ros-with-gazebo-classic-simulation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ros-with-gazebo-classic-simulation"}},[s._v("#")]),s._v(" ROS with Gazebo Classic Simulation")]),s._v(" "),e("p",[e("RouterLink",{attrs:{to:"/en/ros/"}},[s._v("ROS")]),s._v(" (Robot Operating System) can be used with PX4 and the "),e("RouterLink",{attrs:{to:"/en/sim_gazebo_classic/"}},[s._v("Gazebo Classic")]),s._v(" simulator.\nIt uses the "),e("RouterLink",{attrs:{to:"/en/ros/mavros_installation.html"}},[s._v("MAVROS")]),s._v(" MAVLink node to communicate with PX4.")],1),s._v(" "),e("p",[s._v("The ROS/Gazebo Classic integration with PX4 follows the pattern in the diagram below (this shows the "),e("em",[s._v("generic")]),s._v(" "),e("RouterLink",{attrs:{to:"/en/simulation/#sitl-simulation-environment"}},[s._v("PX4 simulation environment")]),s._v(").\nPX4 communicates with the simulator (e.g. Gazebo Classic) to receive sensor data from the simulated world and send motor and actuator values.\nIt communicates with the GCS and an Offboard API (e.g. ROS) to send telemetry from the simulated environment and receive commands.")],1),s._v(" "),e("p",[e("img",{attrs:{src:t(1571),alt:"PX4 SITL overview"}})]),s._v(" "),e("div",{staticClass:"custom-block note"},[e("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),e("p",[s._v("The only "),e("em",[s._v("slight")]),s._v(' difference to "normal behaviour" is that ROS initiates the connection on port 14557, while it is more typical for an offboard API to listen for connections on UDP port 14540.')])]),s._v(" "),e("h2",{attrs:{id:"installing-ros-and-gazebo-classic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installing-ros-and-gazebo-classic"}},[s._v("#")]),s._v(" Installing ROS and Gazebo Classic")]),s._v(" "),e("div",{staticClass:"custom-block note"},[e("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),e("p",[e("em",[s._v("ROS")]),s._v(" is only supported on Linux (not macOS or Windows).")])]),s._v(" "),e("p",[s._v("The easiest way to setup PX4 simulation with ROS on Ubuntu Linux is to use the standard installation script that can be found at "),e("RouterLink",{attrs:{to:"/en/dev_setup/dev_env_linux_ubuntu.html#rosgazebo"}},[s._v("Development Environment on Linux > Gazebo with ROS")]),s._v('.\nThe script installs everything you need: PX4, ROS "Melodic", the Gazebo Classic 9 simulator, and '),e("RouterLink",{attrs:{to:"/en/ros/mavros_installation.html"}},[s._v("MAVROS")]),s._v(".")],1),s._v(" "),e("div",{staticClass:"custom-block note"},[e("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),e("p",[s._v("The script follows the "),e("a",{attrs:{href:"http://wiki.ros.org/melodic/Installation/Ubuntu",target:"_blank",rel:"noopener noreferrer"}},[s._v('standard ROS "Melodic" installation instructions'),e("OutboundLink")],1),s._v(", which includes Gazebo 9.")])]),s._v(" "),e("h2",{attrs:{id:"launching-ros-simulation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#launching-ros-simulation"}},[s._v("#")]),s._v(" Launching ROS/Simulation")]),s._v(" "),e("p",[s._v("The command below can be used to launch the simulation and connect ROS to it via "),e("RouterLink",{attrs:{to:"/en/ros/mavros_installation.html"}},[s._v("MAVROS")]),s._v(", where "),e("code",[s._v("fcu_url")]),s._v(" is the IP / port of the computer running the simulation:")],1),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("roslaunch mavros px4.launch fcu_url:"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"udp://:14540@192.168.1.36:14557"')]),s._v("\n")])])]),e("p",[s._v("To connect to localhost, use this URL:")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("roslaunch mavros px4.launch fcu_url:"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"udp://:14540@127.0.0.1:14557"')]),s._v("\n")])])]),e("div",{staticClass:"custom-block note"},[e("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),e("p",[s._v("It can be useful to call "),e("em",[s._v("roslaunch")]),s._v(" with the "),e("code",[s._v("-w NUM_WORKERS")]),s._v(" (override number of worker threads) and/or "),e("code",[s._v("-v")]),s._v(" (verbose) in order to get warnings about missing dependencies in your setup. For example:")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("roslaunch mavros px4.launch fcu_url:"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"udp://:14540@127.0.0.1:14557"')]),s._v("\n")])])])]),s._v(" "),e("h2",{attrs:{id:"launching-gazebo-classic-with-ros-wrappers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#launching-gazebo-classic-with-ros-wrappers"}},[s._v("#")]),s._v(" Launching Gazebo Classic with ROS Wrappers")]),s._v(" "),e("p",[s._v("The Gazebo Classic simulation can be modified to integrate sensors publishing directly to ROS topics e.g. the Gazebo Classic ROS laser plugin.\nTo support this feature, Gazebo Classic must be launched with the appropriate ROS wrappers.")]),s._v(" "),e("p",[s._v("There are ROS launch scripts available to run the simulation wrapped in ROS:")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/launch/posix_sitl.launch",target:"_blank",rel:"noopener noreferrer"}},[s._v("posix_sitl.launch"),e("OutboundLink")],1),s._v(": plain SITL launch")]),s._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/launch/mavros_posix_sitl.launch",target:"_blank",rel:"noopener noreferrer"}},[s._v("mavros_posix_sitl.launch"),e("OutboundLink")],1),s._v(": SITL and MAVROS")])]),s._v(" "),e("p",[s._v("To run SITL wrapped in ROS the ROS environment needs to be updated, then launch as usual:")]),s._v(" "),e("p",[s._v("(optional): only source the catkin workspace if you compiled MAVROS or other ROS packages from source:")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("PX4-Autopilot_clone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DONT_RUN")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" px4_sitl_default gazebo-classic\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/catkin_ws/devel/setup.bash    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (optional)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" Tools/simulation/gazebo-classic/setup_gazebo.bash "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/build/px4_sitl_default\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ROS_PACKAGE_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROS_PACKAGE_PATH")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ROS_PACKAGE_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROS_PACKAGE_PATH")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/Tools/simulation/gazebo-classic/sitl_gazebo-classic\nroslaunch px4 posix_sitl.launch\n")])])]),e("p",[s._v("Include one of the above mentioned launch files in your own launch file to run your ROS application in the simulation.")]),s._v(" "),e("h2",{attrs:{id:"what-s-happening-behind-the-scenes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-s-happening-behind-the-scenes"}},[s._v("#")]),s._v(" What's Happening Behind the Scenes")]),s._v(" "),e("p",[s._v("This section shows how the "),e("em",[s._v("roslaunch")]),s._v(" instructions provided previously actually work (you can follow them to manually launch the simulation and ROS).")]),s._v(" "),e("p",[s._v("You will need three terminals, in all of them the ros environment must be sourced.")]),s._v(" "),e("p",[s._v("First start the simulator using the command below:")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("PX4-Autopilot_clone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ROS_PACKAGE_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROS_PACKAGE_PATH")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\nroslaunch px4 px4.launch\n")])])]),e("p",[s._v("The console will look like this:")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("INFO  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("px4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" instance: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n______  __   __    ___\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" ___ "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" / /   /   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("_/ /  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" V /   / /"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  __/   /   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("  / /_"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     / /^"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("___  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("_"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("/   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("/     "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("_/\n\npx4 starting.\n\nINFO  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("px4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" startup script: /bin/sh etc/init.d-posix/rcS "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nINFO  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("init"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" found model autostart "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" as "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SYS_AUTOSTART")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10016")]),s._v("\nINFO  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("param"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" selected parameter default "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" parameters.bson\nINFO  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("param"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" importing from "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'parameters.bson'")]),s._v("\nINFO  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("parameters"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" BSON document size "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("295")]),s._v(" bytes, decoded "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("295")]),s._v(" bytes "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INT32:12, FLOAT:3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nINFO  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("param"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" selected parameter backup "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" parameters_backup.bson\nINFO  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("dataman"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" data manager "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./dataman'")]),s._v(" size is "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7866640")]),s._v(" bytes\netc/init.d-posix/rcS: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(": Illegal number:\nINFO  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("init"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" PX4_SIM_HOSTNAME: localhost\nINFO  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("simulator_mavlink"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Waiting "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" simulator to accept connection on TCP port "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4560")]),s._v("\n")])])]),e("p",[s._v("In the second terminal make sure you will be able to start gazebo with the world files defined in PX4-Autopilot. To do this set your environment variables to include the appropriate "),e("code",[s._v("sitl_gazebo-classic")]),s._v(" folders.")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("PX4-Autopilot_clone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" Tools/simulation/gazebo-classic/setup_gazebo.bash "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/build/px4_sitl_default\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ROS_PACKAGE_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROS_PACKAGE_PATH")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/Tools/simulation/gazebo-classic/sitl_gazebo-classic\n")])])]),e("p",[s._v("Now start Gazebo Classic like you would when working with ROS")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("roslaunch gazebo_ros empty_world.launch world_name:"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/Tools/simulation/gazebo-classic/sitl_gazebo-classic/worlds/empty.world\n")])])]),e("p",[s._v("In the third terminal make sure you will be able to spawn the model with the sdf files defined in PX4-Autopilot. To do this set your environment variables to include the appropriate "),e("code",[s._v("sitl_gazebo-classic")]),s._v(" folders.")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("PX4-Autopilot_clone"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" Tools/simulation/gazebo-classic/setup_gazebo.bash "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/build/px4_sitl_default\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ROS_PACKAGE_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROS_PACKAGE_PATH")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/Tools/simulation/gazebo-classic/sitl_gazebo-classic\n")])])]),e("p",[s._v("Now insert the Iris quadcopter model like you would when working with ROS. Once the Iris is loaded it will automatically connect to the px4 app.")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("rosrun gazebo_ros spawn_model -sdf -file "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/Tools/simulation/gazebo-classic/sitl_gazebo-classic/models/iris/iris.sdf -model iris -x "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -y "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -z "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -R "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -P "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -Y "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);