(window.webpackJsonp=window.webpackJsonp||[]).push([[1541],{2818:function(e,t,a){"use strict";a.r(t);var _=a(19),s=Object(_.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"시스템-장애-주입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#시스템-장애-주입"}},[e._v("#")]),e._v(" 시스템 장애 주입")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://mavsdk.mavlink.io/main/en/cpp/api_reference/classmavsdk_1_1_failure.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("MAVSDK 오류 플러그인"),a("OutboundLink")],1),e._v("을 사용하는 프로그래밍 방식이나 "),a("RouterLink",{attrs:{to:"/ko/debug/mavlink_shell.html#mavlink-shell"}},[e._v("MAVLink 셸")]),e._v("과 같은 PX4 콘솔을 통하여, 수동으로 다양한 유형의 센서등과 같은 시스템 오류를 주입할 수 있습니다. 이를 통하여 "),a("RouterLink",{attrs:{to:"/ko/config/safety.html#safety-configuration-failsafes"}},[e._v("안전 안전장치")]),e._v(" 동작 보다 일반적으로 시스템과 센서가 올바르게 작동하지 않을 때, PX4 동작 방식을 보다 쉽게 테스트할 수 있습니다.")],1),e._v(" "),a("p",[e._v("실패 주입은 기본적으로 비활성화되어 있으며, "),a("RouterLink",{attrs:{to:"/ko/advanced_config/parameter_reference.html#SYS_FAILURE_EN"}},[e._v("SYS_FAILURE_EN")]),e._v(" 매개변수를 사용하여 활성화할 수 있습니다.")],1),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("실패 주입은 아직 개발 중입니다. At time of writing (PX4 v1.14):")]),e._v(" "),a("ul",[a("li",[e._v("시뮬레이션에서만 사용할 수 있습니다(실제 비행에서 실패 주입 모두 지원 예정).")]),e._v(" "),a("li",[e._v("It requires support in the simulator. It is supported in Gazebo Classic")]),e._v(" "),a("li",[e._v('많은 실패 유형이 광범위하게 구현되지 않았습니다. 이러한 경우 명령은 "지원되지 않는" 메시지와 함께 반환됩니다.')])])]),e._v(" "),a("h2",{attrs:{id:"장애-시스템-명령"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#장애-시스템-명령"}},[e._v("#")]),e._v(" 장애 시스템 명령")]),e._v(" "),a("p",[e._v("Failures can be injected using the "),a("RouterLink",{attrs:{to:"/ko/modules/modules_command.html#failure"}},[e._v("failure system command")]),e._v(" from any PX4 console/shell, specifying both the target and type of the failure.")],1),e._v(" "),a("h3",{attrs:{id:"구문"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#구문"}},[e._v("#")]),e._v(" 구문")]),e._v(" "),a("p",[e._v("The full syntax of the "),a("RouterLink",{attrs:{to:"/ko/modules/modules_command.html#failure"}},[e._v("failure")]),e._v(" command is:")],1),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("failure "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("component"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("failure_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("-i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("instance_number"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),a("p",[e._v("where:")]),e._v(" "),a("ul",[a("li",[a("em",[e._v("구성요소")]),e._v(":\n"),a("ul",[a("li",[e._v("센서:\n"),a("ul",[a("li",[a("code",[e._v("gyro")]),e._v(": 자이로")]),e._v(" "),a("li",[a("code",[e._v("accel")]),e._v(": 가속도계")]),e._v(" "),a("li",[a("code",[e._v("mag")]),e._v(": 자기계")]),e._v(" "),a("li",[a("code",[e._v("baro")]),e._v(": 기압계")]),e._v(" "),a("li",[a("code",[e._v("gps")]),e._v(": GPS")]),e._v(" "),a("li",[a("code",[e._v("optical_flow")]),e._v(": 광류 센서")]),e._v(" "),a("li",[a("code",[e._v("vio")]),e._v(": 시각적 관성 주행 거리")]),e._v(" "),a("li",[a("code",[e._v("distance_sensor")]),e._v(": 거리 센서(거리 측정기)")]),e._v(" "),a("li",[a("code",[e._v("airspeed")]),e._v(": 대기속도 센서")])])]),e._v(" "),a("li",[e._v("시스템:\n"),a("ul",[a("li",[a("code",[e._v("battery")]),e._v(": 배터리")]),e._v(" "),a("li",[a("code",[e._v("motor")]),e._v(": 모터")]),e._v(" "),a("li",[a("code",[e._v("servo")]),e._v(": 서보")]),e._v(" "),a("li",[a("code",[e._v("avoidance")]),e._v(": 회피")]),e._v(" "),a("li",[a("code",[e._v("rc_signal")]),e._v(": RC 신호")]),e._v(" "),a("li",[a("code",[e._v("mavlink_signal")]),e._v(": MAVLink 신호(데이터 텔레메트리)")])])])])]),e._v(" "),a("li",[a("em",[e._v("failure_type")]),e._v(":\n"),a("ul",[a("li",[a("code",[e._v("ok")]),e._v(": 정상적으로 게시합니다(실패 주입 비활성화).")]),e._v(" "),a("li",[a("code",[e._v("off")]),e._v(": 게시를 중지합니다.")]),e._v(" "),a("li",[a("code",[e._v("stuck")]),e._v(": 매번 같은 값을 보고합니다(센서 오작동을 "),a("em",[e._v("나타낼 수 있음")]),e._v(").")]),e._v(" "),a("li",[a("code",[e._v("garbage")]),e._v(": 무작위 노이즈를 게시합니다. 초기화되지 않은 메모리를 읽는 것처럼 보입니다.")]),e._v(" "),a("li",[a("code",[e._v("wrong")]),e._v(': 잘못된 값을 게시합니다(여전히 합리적으로 보이거나 "쓰레기"가 아님).')]),e._v(" "),a("li",[a("code",[e._v("slow")]),e._v(": 낮은 속도로 게시합니다.")]),e._v(" "),a("li",[a("code",[e._v("delayed")]),e._v(": 상당한 지연으로 유효한 데이터를 게시합니다.")]),e._v(" "),a("li",[a("code",[e._v("intermittent")]),e._v(": 간헐적으로 게시합니다.")])])]),e._v(" "),a("li",[a("em",[e._v("instance number")]),e._v("(선택 사항): 영향을 받는 센서의 인스턴스 번호입니다. 0 (기본값) 지정된 유형의 모든 센서를 나타냅니다.")])]),e._v(" "),a("h3",{attrs:{id:"예"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#예"}},[e._v("#")]),e._v(" 예")]),e._v(" "),a("p",[e._v("To simulate losing RC signal without having to turn off your RC controller:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("매개변수 "),a("RouterLink",{attrs:{to:"/ko/advanced_config/parameter_reference.html#SYS_FAILURE_EN"}},[e._v("SYS_FAILURE_EN")]),e._v("을 활성화합니다.")],1)]),e._v(" "),a("li",[a("p",[e._v("Enter the following commands on the MAVLink console or SITL "),a("em",[e._v("pxh shell")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Fail RC (turn publishing off)")]),e._v("\nfailure rc_signal off\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Restart RC publishing")]),e._v("\nfailure rc_signal ok\n")])])])])]),e._v(" "),a("h2",{attrs:{id:"mavsdk-실패-플러그인"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mavsdk-실패-플러그인"}},[e._v("#")]),e._v(" MAVSDK 실패 플러그인")]),e._v(" "),a("p",[e._v("The "),a("a",{attrs:{href:"https://mavsdk.mavlink.io/main/en/cpp/api_reference/classmavsdk_1_1_failure.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("MAVSDK failure plugin"),a("OutboundLink")],1),e._v(" can be used to programmatically inject failures. It is used in "),a("RouterLink",{attrs:{to:"/ko/test_and_ci/integration_testing_mavsdk.html"}},[e._v("PX4 Integration Testing")]),e._v(" to simulate failure cases (for example, see "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/test/mavsdk_tests/autopilot_tester.cpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("PX4-Autopilot/test/mavsdk_tests/autopilot_tester.cpp"),a("OutboundLink")],1),e._v(").")],1),e._v(" "),a("p",[e._v("The plugin API is a direct mapping of the failure command shown above, with a few additional error signals related to the connection.")])])}),[],!1,null,null,null);t.default=s.exports}}]);