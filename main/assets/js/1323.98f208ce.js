(window.webpackJsonp=window.webpackJsonp||[]).push([[1323],{2455:function(e,t,s){"use strict";s.r(t);var n=s(19),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"sensorhygrometer-uorb-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sensorhygrometer-uorb-message"}},[e._v("#")]),e._v(" SensorHygrometer (UORB message)")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/msg/SensorHygrometer.msg",target:"_blank",rel:"noopener noreferrer"}},[e._v("source file"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[e._v("uint64 timestamp          # time since system "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("start")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("microseconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nuint64 timestamp_sample\n\nuint32 device_id          # unique device ID "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" the sensor that does not change between power cycles\n\nfloat32  temperature      # Temperature provided by "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sensor")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Celsius"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\nfloat32 humidity          # Humidity provided by sensor\n\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);