(window.webpackJsonp=window.webpackJsonp||[]).push([[2382],{4188:function(t,a,s){"use strict";s.r(a);var e=s(19),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"multi-vehicle-simulation-with-gazebo-classic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multi-vehicle-simulation-with-gazebo-classic"}},[t._v("#")]),t._v(" Multi-Vehicle Simulation with Gazebo Classic")]),t._v(" "),s("p",[t._v("This topic explains how to simulate multiple UAV vehicles using "),s("RouterLink",{attrs:{to:"/zh/sim_gazebo_classic/"}},[t._v("Gazebo Classic")]),t._v(" and SITL (Linux only). A different approach is used for simulation with and without ROS.")],1),t._v(" "),s("h2",{attrs:{id:"multiple-vehicle-with-gazebo-classic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multiple-vehicle-with-gazebo-classic"}},[t._v("#")]),t._v(" Multiple Vehicle with Gazebo Classic")]),t._v(" "),s("p",[t._v("To simulate multiple iris or plane vehicles in Gazebo Classic use the following commands in the terminal (from the root of the "),s("em",[t._v("Firmware")]),t._v(" tree):")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("Tools/simulation/gazebo-classic/sitl_multiple_run.sh "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("number_of_vehicles"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("world"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-l "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("label"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[s("code",[t._v("<model>")]),t._v(": The "),s("RouterLink",{attrs:{to:"/zh/sim_gazebo_classic/vehicles.html"}},[t._v("vehicle type/model")]),t._v(" to spawn, e.g.: "),s("code",[t._v("iris")]),t._v(" (default), "),s("code",[t._v("plane")]),t._v(", "),s("code",[t._v("standard_vtol")]),t._v(", "),s("code",[t._v("rover")]),t._v(", "),s("code",[t._v("r1_rover")]),t._v(" "),s("code",[t._v("typhoon_h480")]),t._v(".")],1)]),t._v(" "),s("li",[s("p",[s("code",[t._v("<number_of_vehicles>")]),t._v(": The number of vehicles to spawn. Default is 3. Maximum is 254.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("<world>")]),t._v(": The "),s("RouterLink",{attrs:{to:"/zh/sim_gazebo_classic/worlds.html"}},[t._v("world")]),t._v(" that the vehicle should be spawned into, e.g.: "),s("code",[t._v("empty")]),t._v(" (default)")],1)]),t._v(" "),s("li",[s("p",[s("code",[t._v("<script>")]),t._v(": Spawn multiple vehicles of different types (overriding the values in "),s("code",[t._v("-m")]),t._v(" and "),s("code",[t._v("-n")]),t._v("). For example:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("-s "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iris:3,plane:2,standard_vtol:3"')]),t._v("\n")])])]),s("ul",[s("li",[t._v("Supported vehicle types are: "),s("code",[t._v("iris")]),t._v(", "),s("code",[t._v("plane")]),t._v(", "),s("code",[t._v("standard_vtol")]),t._v(", "),s("code",[t._v("rover")]),t._v(", "),s("code",[t._v("r1_rover")]),t._v(" "),s("code",[t._v("typhoon_h480")]),t._v(".")]),t._v(" "),s("li",[t._v("The number after the colon indicates the number of vehicles (of that type) to spawn.")]),t._v(" "),s("li",[t._v("Maximum number of vehicles is 254.")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("<target>")]),t._v(": build target, e.g: "),s("code",[t._v("px4_sitl_default")]),t._v(" (default), "),s("code",[t._v("px4_sitl_nolockstep")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("<label>")]),t._v(" : specific label for model, e.g: "),s("code",[t._v("rplidar")])])])]),t._v(" "),s("p",[t._v("Each vehicle instance is allocated a unique MAVLink system id (2, 3, 4, etc.). MAVLink system id 1 is skipped in order to have consistency among "),s("RouterLink",{attrs:{to:"/zh/ros/ros2_multi_vehicle.html#principle-of-operation"}},[t._v("namespaces")]),t._v(". Vehicle instances are accessed from sequentially allocated PX4 remote UDP ports: "),s("code",[t._v("14541")]),t._v(" - "),s("code",[t._v("14548")]),t._v(" (additional instances are all accessed using the same remote UDP port: "),s("code",[t._v("14549")]),t._v(").")],1),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),s("p",[t._v("The 254-vehicle limitation occurs because mavlink "),s("code",[t._v("MAV_SYS_ID")]),t._v(" only supports 255 vehicles in the same network (and the first one is skipped). The "),s("code",[t._v("MAV_SYS_ID")]),t._v(" is allocated in the SITL rcS: "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/ROMFS/px4fmu_common/init.d-posix/rcS#L131",target:"_blank",rel:"noopener noreferrer"}},[t._v("init.d-posix/rcS"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"video-multiple-multicopter-iris"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#video-multiple-multicopter-iris"}},[t._v("#")]),t._v(" Video: Multiple Multicopter (Iris)")]),t._v(" "),s("p"),s("div",{staticClass:"embed-responsive embed-responsive-16by9"},[s("iframe",{staticClass:"embed-responsive-item youtube-player",attrs:{type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/Mskx_WxzeCk",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),s("p"),t._v(" "),s("h3",{attrs:{id:"video-multiple-plane"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#video-multiple-plane"}},[t._v("#")]),t._v(" Video: Multiple Plane")]),t._v(" "),s("p"),s("div",{staticClass:"embed-responsive embed-responsive-16by9"},[s("iframe",{staticClass:"embed-responsive-item youtube-player",attrs:{type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/aEzFKPMEfjc",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),s("p"),t._v(" "),s("h3",{attrs:{id:"video-multiple-vtol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#video-multiple-vtol"}},[t._v("#")]),t._v(" Video: Multiple VTOL")]),t._v(" "),s("p"),s("div",{staticClass:"embed-responsive embed-responsive-16by9"},[s("iframe",{staticClass:"embed-responsive-item youtube-player",attrs:{type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/lAjjTFFZebI",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),s("p"),t._v(" "),s("h3",{attrs:{id:"build-and-test-xrce-dds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-and-test-xrce-dds"}},[t._v("#")]),t._v(" Build and Test (XRCE-DDS)")]),t._v(" "),s("p",[s("code",[t._v("Tools/simulation/gazebo-classic/sitl_multiple_run.sh")]),t._v(" can be used to simulate multiple vehicles connected via XRCE-DDS in Gazebo Classic.")]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),s("p",[t._v("You will need to have installed the XRCE-DDS dependencies. For more information see: "),s("RouterLink",{attrs:{to:"/zh/ros/ros2_comm.html"}},[t._v("ROS 2 User Guide (PX4-ROS 2 Bridge)")]),t._v(", for interfacing with ROS 2 nodes.")],1)]),t._v(" "),s("p",[t._v("To build an example setup, follow the steps below:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Clone the PX4/Firmware code, then build the SITL code:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" Firmware_clone\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update --init --recursive\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DONT_RUN")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_sitl gazebo-classic\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Build the "),s("code",[t._v("micro xrce-dds agent")]),t._v(" and the interface package following the "),s("RouterLink",{attrs:{to:"/zh/ros/ros2_comm.html"}},[t._v("instructions here")]),t._v(".")],1)]),t._v(" "),s("li",[s("p",[t._v("Run "),s("code",[t._v("Tools/simulation/gazebo-classic/sitl_multiple_run.sh")]),t._v(". For example, to spawn 4 vehicles, run:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("./Tools/simulation/gazebo-classic/sitl_multiple_run.sh -m iris -n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n")])])]),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("注解")])])])]),t._v(" "),s("p",[t._v("Each vehicle instance is allocated a unique MAVLink system id (2, 3, 4, etc.).\nMAVLink system id 1 is skipped.\n:::")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Run "),s("code",[t._v("MicroXRCEAgent")]),t._v(". It will automatically connect to all four vehicles:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("MicroXRCEAgent udp4 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v("\n")])])])])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),s("p",[t._v("The simulator startup script automatically assigns a "),s("RouterLink",{attrs:{to:"/zh/ros/ros2_multi_vehicle.html"}},[t._v("unique namespace")]),t._v(" to each vehicle.")],1)]),t._v(" "),s("h2",{attrs:{id:"multiple-vehicles-with-mavros-and-gazebo-classic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multiple-vehicles-with-mavros-and-gazebo-classic"}},[t._v("#")]),t._v(" Multiple Vehicles with MAVROS and Gazebo Classic")]),t._v(" "),s("p",[t._v("This example demonstrates a setup that opens the Gazebo Classic client GUI showing two Iris vehicles in an empty world. You can then control the vehicles with "),s("em",[t._v("QGroundControl")]),t._v(" and MAVROS in a similar way to how you would manage a single vehicle.")]),t._v(" "),s("h3",{attrs:{id:"required"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#required"}},[t._v("#")]),t._v(" Required")]),t._v(" "),s("ul",[s("li",[t._v("Current "),s("RouterLink",{attrs:{to:"/zh/dev_setup/dev_env_linux_ubuntu.html#rosgazebo"}},[t._v("PX4 ROS/Gazebo development environment")])],1)]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),s("p",[t._v("At time of writing this is Ubuntu 18.04 with ROS Melodic/Gazebo 9. See also "),s("RouterLink",{attrs:{to:"/zh/sim_gazebo_classic/"}},[t._v("Gazebo Classic Simulation")]),t._v(".")],1)]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://wiki.ros.org/mavros",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAVROS package"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("a clone of latest "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4/PX4-Autopilot"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"build-and-test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-and-test"}},[t._v("#")]),t._v(" Build and Test")]),t._v(" "),s("p",[t._v("To build an example setup, follow the step below:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Clone the PX4/PX4-Autopilot code, then build the SITL code")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" Firmware_clone\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update --init --recursive\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DONT_RUN")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_sitl_default gazebo-classic\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Source your environment:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" Tools/simulation/gazebo-classic/setup_gazebo.bash "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("/build/px4_sitl_default\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ROS_PACKAGE_PATH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ROS_PACKAGE_PATH")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("/Tools/simulation/gazebo-classic/sitl_gazebo\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Run launch file:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("roslaunch px4 multi_uav_mavros_sitl.launch\n")])])])])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),s("p",[t._v("You can specify "),s("code",[t._v("gui:=false")]),t._v(" in the above "),s("em",[t._v("roslaunch")]),t._v(" to launch Gazebo Classic without its UI.")])]),t._v(" "),s("p",[t._v("The tutorial example opens the Gazebo Classic client GUI showing two Iris vehicles in an empty world.")]),t._v(" "),s("p",[t._v("You can control the vehicles with "),s("em",[t._v("QGroundControl")]),t._v(" or MAVROS in a similar way to how you would manage a single vehicle:")]),t._v(" "),s("ul",[s("li",[s("em",[t._v("QGroundControl")]),t._v(' will have a drop-down to select the vehicle that is "in focus"')]),t._v(" "),s("li",[t._v("MAVROS requires that you include the proper namespace before the topic/service path (e.g. for "),s("code",[t._v('<group ns="uav1">')]),t._v(" you'll use "),s("em",[t._v("/uav1/mavros/mission/push")]),t._v(").")])]),t._v(" "),s("h3",{attrs:{id:"what-s-happening"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-s-happening"}},[t._v("#")]),t._v(" What's Happening?")]),t._v(" "),s("p",[t._v("For each simulated vehicle, the following is required:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Gazebo Classic model")]),t._v(": This is defined as "),s("code",[t._v("xacro")]),t._v(" file in "),s("code",[t._v("PX4-Autopilot/Tools/simulation/gazebo-classic/sitl_gazebo-classic/models/rotors_description/urdf/<model>_base.xacro")]),t._v(" see "),s("a",{attrs:{href:"https://github.com/PX4/PX4-SITL_gazebo-classic/tree/02060a86652b736ca7dd945a524a8bf84eaf5a05/models/rotors_description/urdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(". Currently, the model "),s("code",[t._v("xacro")]),t._v(" file is assumed to end with "),s("strong",[t._v("base.xacro")]),t._v(". This model should have an argument called "),s("code",[t._v("mavlink_udp_port")]),t._v(" which defines the UDP port on which Gazebo Classic will communicate with PX4 node. The model's "),s("code",[t._v("xacro")]),t._v(" file will be used to generate an "),s("code",[t._v("urdf")]),t._v(" model that contains UDP port that you select. To define the UDP port, set the "),s("code",[t._v("mavlink_udp_port")]),t._v(" in the launch file for each vehicle, see "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/launch/multi_uav_mavros_sitl.launch#L37",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(" as an example.")])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),s("p",[t._v("If you are using the same vehicle model, you don't need a separate "),s("strong",[s("code",[t._v("xacro")])]),t._v(" file for each vehicle. The same "),s("strong",[s("code",[t._v("xacro")])]),t._v(" file is adequate.")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("PX4 node")]),t._v(": This is the SITL PX4 app. It communicates with the simulator, Gazebo Classic, through the same UDP port defined in the Gazebo Classic vehicle model, i.e. "),s("code",[t._v("mavlink_udp_port")]),t._v(". To set the UDP port on the PX4 SITL app side, you need to set the "),s("code",[t._v("SITL_UDP_PRT")]),t._v(" parameter in the startup file to match the "),s("code",[t._v("mavlink_udp_port")]),t._v(" discussed previously, see "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/posix-configs/SITL/init/ekf2/iris_2#L46",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(". The path of the startup file in the launch file is generated based on the "),s("code",[t._v("vehicle")]),t._v(" and "),s("code",[t._v("ID")]),t._v(" arguments, see "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/launch/multi_uav_mavros_sitl.launch#L36",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(". The "),s("code",[t._v("MAV_SYS_ID")]),t._v(" for each vehicle in the startup file, see "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/posix-configs/SITL/init/ekf2/iris_2#L4",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(", should match the "),s("code",[t._v("ID")]),t._v(" for that vehicle in the launch file "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/launch/multi_uav_mavros_sitl.launch#L25",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(". This will help make sure you keep the configurations consistent between the launch file and the startup file.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("MAVROS node")]),t._v(" (optional): A separate MAVROS node can be run in the launch file, see "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/launch/multi_uav_mavros_sitl.launch#L41",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(", in order to connect to PX4 SITL app, if you want to control your vehicle through ROS. You need to start a MAVLink stream on a unique set of ports in the startup file, see "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/posix-configs/SITL/init/ekf2/iris_1#L68",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(". Those unique set of ports need to match those in the launch file for the MAVROS node, see "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/launch/multi_uav_mavros_sitl.launch#L26",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".")])])]),t._v(" "),s("p",[t._v("The launch file "),s("code",[t._v("multi_uav_mavros_sitl.launch")]),t._v("does the following,")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("loads a world in Gazebo Classic,")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- Gazebo sim --\x3e")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("file")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(find gazebo_ros)/launch/empty_world.launch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("gui"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(arg gui)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("world_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(arg world)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(arg debug)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("verbose"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(arg verbose)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("paused"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(arg paused)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("include")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("for each vehicle,")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("creates urdf model from xacro, loads gazebo classic model and runs PX4 SITL app instance")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- PX4 SITL and vehicle spawn --\x3e")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("file")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(find px4)/launch/single_vehicle_spawn.launch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("R"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("vehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(arg vehicle)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("rcS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(find px4)/posix-configs/SITL/init/$(arg est)/$(arg vehicle)_$(arg ID)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mavlink_tcp_port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("4560"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(arg ID)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("include")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("runs a mavros node")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- MAVROS --\x3e")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("file")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(find mavros)/launch/px4.launch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("fcu_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(arg fcu_url)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("gcs_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tgt_system"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$(arg ID)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("arg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tgt_component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("include")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])])])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),s("p",[t._v("The complete block for each vehicle is enclosed in a set of "),s("code",[t._v("<group>")]),t._v(" tags to separate the ROS namespaces of the vehicles.")])]),t._v(" "),s("p",[t._v("To add a third iris to this simulation there are two main components to consider:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("add "),s("code",[t._v("UAV3")]),t._v(" to "),s("strong",[t._v("multi_uav_mavros_sitl.launch")])]),t._v(" "),s("ul",[s("li",[t._v("duplicate the group of either existing vehicle ("),s("code",[t._v("UAV1")]),t._v(" or "),s("code",[t._v("UAV2")]),t._v(")")]),t._v(" "),s("li",[t._v("increment the "),s("code",[t._v("ID")]),t._v(" arg to "),s("code",[t._v("3")])]),t._v(" "),s("li",[t._v("select a different port for "),s("code",[t._v("mavlink_udp_port")]),t._v(" arg for communication with Gazebo Classic")]),t._v(" "),s("li",[t._v("selects ports for MAVROS communication by modifying both port numbers in the "),s("code",[t._v("fcu_url")]),t._v(" arg")])])]),t._v(" "),s("li",[s("p",[t._v("create a startup file, and change the file as follows:")]),t._v(" "),s("ul",[s("li",[t._v("make a copy of an existing iris rcS startup file ("),s("code",[t._v("iris_1")]),t._v(" or "),s("code",[t._v("iris_2")]),t._v(") and rename it "),s("code",[t._v("iris_3")])]),t._v(" "),s("li",[s("code",[t._v("MAV_SYS_ID")]),t._v(" value to "),s("code",[t._v("3")])]),t._v(" "),s("li",[s("code",[t._v("SITL_UDP_PRT")]),t._v(" value to match that of the "),s("code",[t._v("mavlink_udp_port")]),t._v(" launch file arg")]),t._v(" "),s("li",[t._v("the first "),s("code",[t._v("mavlink start")]),t._v(" port and the "),s("code",[t._v("mavlink stream")]),t._v(" port values to the same values, which is to be used for QGC communication")]),t._v(" "),s("li",[t._v("the second "),s("code",[t._v("mavlink start")]),t._v(" ports need to match those used in the launch file "),s("code",[t._v("fcu_url")]),t._v(" arg")])])])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),s("p",[t._v("Be aware of which port is "),s("code",[t._v("src")]),t._v(" and "),s("code",[t._v("dst")]),t._v(" for the different endpoints.")])]),t._v(" "),s("h2",{attrs:{id:"multiple-vehicles-using-sdf-models"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multiple-vehicles-using-sdf-models"}},[t._v("#")]),t._v(" Multiple Vehicles using SDF Models")]),t._v(" "),s("p",[t._v("This section shows how developers can simulate multiple vehicles using vehicle models defined in Gazebo Classic SDF files (instead of using models defined in the ROS Xacro file, as discussed in the rest of this topic).")]),t._v(" "),s("p",[t._v("The steps are:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Install "),s("em",[t._v("xmlstarlet")]),t._v(" from your Linux terminal:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" xmlstarlet\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Use "),s("em",[t._v("roslaunch")]),t._v(" with the "),s("strong",[t._v("multi_uav_mavros_sitl_sdf.launch")]),t._v(" launch file:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("roslaunch multi_uav_mavros_sitl_sdf.launch vehicle:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("model_file_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n``"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("\n\n:::note\nNote that the vehicle model "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" name argument is optional "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("vehicle:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("model_file_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("`"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" omitted the "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("plane model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("https://github.com/PX4/PX4-SITL_gazebo-classic/tree/master/models/plane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" will be used by default.\n\n")])])])])]),t._v(" "),s("p",[t._v(":::")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("This method is similar to using the xacro except that the SITL/Gazebo Classic port number is automatically inserted by _xmstarlet_ for each spawned vehicle, and does not need to be specified in the SDF file.\nTo add a new vehicle, you need to make sure the model can be found (in order to spawn it in Gazebo Classic), and PX4 needs to have an appropriate corresponding startup script.\n1. You can choose to do either of:\n- modify the **single_vehicle_spawn_sdf.launch** file to point to the location of your model by changing the line below to point to your model:\n\n  ```sh\n  $(find px4)/Tools/simulation/gazebo/sitl_gazebo-classic/models/$(arg vehicle)/$(arg vehicle).sdf\n  ```\n\n:::note\nEnsure you set the `vehicle` argument even if you hardcode the path to your model.\n:::\n\n- copy your model into the folder indicated above (following the same path convention).\n\n1. The `vehicle` argument is used to set the `PX4_SIM_MODEL` environment variable, which is used by the default rcS (startup script) to find the corresponding startup settings file for the model. Within PX4 these startup files can be found in the **PX4-Autopilot/ROMFS/px4fmu_common/init.d-posix/** directory. For example, here is the plane model's [startup script](https://github.com/PX4/PX4-Autopilot/blob/main/ROMFS/px4fmu_common/init.d-posix/airframes/1030_gazebo-classic_plane). For this to work, the PX4 node in the launch file is passed arguments that specify the _rcS_ file (**etc/init.d/rcS**) and the location of the rootfs etc directory (`$(find px4)/build_px4_sitl_default/etc`). For simplicity, it is suggested that the startup file for the model be placed alongside PX4's in **PX4-Autopilot/ROMFS/px4fmu_common/init.d-posix/**.\n\n## Additional Resources\n\n- See [Simulation](../simulation/README.md) for a description of the UDP port configuration.\n- See [URDF in Gazebo](http://wiki.ros.org/urdf/Tutorials/Using%20a%20URDF%20in%20Gazebo) for more information about spawning the model with xacro.\n- See [RotorS](https://github.com/ethz-asl/rotors_simulator/tree/master/rotors_description/urdf) for more xacro models.\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);