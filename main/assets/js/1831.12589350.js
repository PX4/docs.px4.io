(window.webpackJsonp=window.webpackJsonp||[]).push([[1831],{3283:function(e,t,a){"use strict";a.r(t);var s=a(19),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"vehicleairdata-uorb-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vehicleairdata-uorb-message"}},[e._v("#")]),e._v(" VehicleAirData (UORB message)")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/msg/VehicleAirData.msg",target:"_blank",rel:"noopener noreferrer"}},[e._v("source file"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[e._v("\nuint64 timestamp            # time since system "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("start")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("microseconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\nuint64 timestamp_sample     # the timestamp of the raw "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("data")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("microseconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\nuint32 baro_device_id       # unique device ID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" the selected barometer\n\nfloat32 baro_alt_meter          # Altitude above MSL calculated from temperature compensated baro sensor data using an ISA corrected "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" sea level pressure SENS_BARO_QNH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\nfloat32 baro_temp_celcius       # Temperature in degrees Celsius\nfloat32 baro_pressure_pa        # Absolute pressure in Pascals\n\nfloat32 rho             # air density\nfloat32 eas2tas         # equivalent airspeed to true airspeed conversion factor\n\nuint8 calibration_count     # Calibration changed counter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" Monotonically increases whenever calibration changes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);