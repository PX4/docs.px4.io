(window.webpackJsonp=window.webpackJsonp||[]).push([[2051],{3716:function(t,s,a){"use strict";a.r(s);var e=a(19),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"pilotpi-使用-ubuntu-server-操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pilotpi-使用-ubuntu-server-操作系统"}},[t._v("#")]),t._v(" PilotPi 使用 Ubuntu Server 操作系统")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("Ubuntu Server on RPi 4B consumes a lot of current and generates a lot of heat.\nDesign for better heat dissipation and high power consumption when using this hardware.")])]),t._v(" "),a("h2",{attrs:{id:"开发者快速指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发者快速指南"}},[t._v("#")]),t._v(" 开发者快速指南")]),t._v(" "),a("h3",{attrs:{id:"操作系统镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统镜像"}},[t._v("#")]),t._v(" 操作系统镜像")]),t._v(" "),a("p",[t._v("请从官方 "),a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/",target:"_blank",rel:"noopener noreferrer"}},[t._v("cdimage"),a("OutboundLink")],1),t._v(" 页面获取最新更新的操作系统。")]),t._v(" "),a("h4",{attrs:{id:"armhf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#armhf"}},[t._v("#")]),t._v(" armhf")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/18.04.5/release/ubuntu-18.04.5-preinstalled-server-armhf+raspi2.img.xz",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu Server 18.04.5 for RPi2"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/18.04.5/release/ubuntu-18.04.5-preinstalled-server-armhf+raspi3.img.xz",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu Server 18.04.5 for RPi3"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/18.04.5/release/ubuntu-18.04.5-preinstalled-server-armhf+raspi4.img.xz",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu Server 18.04.5 for RPi4"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/20.04.1/release/ubuntu-20.04.1-preinstalled-server-armhf+raspi.img.xz",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu Server 20.04.1 for RPi 2/3/4"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"arm64"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arm64"}},[t._v("#")]),t._v(" arm64")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/18.04.5/release/ubuntu-18.04.5-preinstalled-server-arm64+raspi3.img.xz",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu Server 18.04.5 for RPi3"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/18.04.5/release/ubuntu-18.04.5-preinstalled-server-arm64+raspi4.img.xz",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu Server 18.04.5 for RPi4"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/20.04.1/release/ubuntu-20.04.1-preinstalled-server-arm64+raspi.img.xz",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu Server 20.04.1 for RPi 3/4"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"最新操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最新操作系统"}},[t._v("#")]),t._v(" 最新操作系统")]),t._v(" "),a("p",[t._v("当首次设置树莓派的 WiFi 时，我们建议先使用有线网络连接你的路由器与树莓派，并使用显示器和键盘。")]),t._v(" "),a("h3",{attrs:{id:"首次启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首次启动"}},[t._v("#")]),t._v(" 首次启动")]),t._v(" "),a("p",[t._v("When setting up RaPi's WiFi for the first time we recommended using a wired Ethernet connection between your home router and RPi, and a monitor and keyboard.")]),t._v(" "),a("h4",{attrs:{id:"启动前"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动前"}},[t._v("#")]),t._v(" 启动前")]),t._v(" "),a("p",[t._v("现在将 SD 卡插入您的 Pi 并首次开机。 请确认您可以获得树莓派的 shell —— 通过有线以太网连接 SSH ，或直接通过键盘和显示器。")]),t._v(" "),a("p",[t._v("Now plug the SD card onto your Pi and boot for the first time. Make sure you have shell access to the RPi - either SSH connection over wired Ethernet, or direct accessing with keyboard and monitor.")]),t._v(" "),a("h4",{attrs:{id:"wifi-区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wifi-区域"}},[t._v("#")]),t._v(" WiFi 区域")]),t._v(" "),a("p",[t._v("First install required package:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" crda\n")])])]),a("p",[t._v("Edit the file "),a("code",[t._v("/etc/default/crda")]),t._v(" to change the correct WiFi region. "),a("a",{attrs:{href:"https://www.arubanetworks.com/techdocs/InstantWenger_Mobile/Advanced/Content/Instant%20User%20Guide%20-%20volumes/Country_Codes_List.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reference List"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /etc/default/crda\n")])])]),a("p",[t._v("让我们先设置主机名。")]),t._v(" "),a("h4",{attrs:{id:"主机名和-mdns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主机名和-mdns"}},[t._v("#")]),t._v(" 主机名和 mDNS")]),t._v(" "),a("p",[t._v("Let's set up hostname at first.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /etc/hostname\n")])])]),a("p",[t._v("Change the hostname to whatever you like. Then install the package required by mDNS:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" avahi-daemon\n")])])]),a("p",[t._v("在上述操作后通过无线网络重新连回树莓派。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reboot")]),t._v("\n")])])]),a("p",[t._v("您也可能想要设置 "),a("a",{attrs:{href:"https://www.raspberrypi.org/documentation/remote-access/ssh/passwordless.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("无密码认证"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" ubuntu@pi_hostname.local\n")])])]),a("h4",{attrs:{id:"无密码认证-可选"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无密码认证-可选"}},[t._v("#")]),t._v(" 无密码认证(可选)")]),t._v(" "),a("p",[t._v("在 Ubuntu 中的相应文件是 "),a("code",[t._v("/boot/firmware/usercfg.txt")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"配置操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置操作系统"}},[t._v("#")]),t._v(" 配置操作系统")]),t._v(" "),a("h4",{attrs:{id:"config-txt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config-txt"}},[t._v("#")]),t._v(" config.txt")]),t._v(" "),a("p",[t._v("将文件内容替换为：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /boot/firmware/usercfg.txt\n")])])]),a("p",[t._v("Ubuntu Server 20.04：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enable sc16is752 overlay")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("dtoverlay")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("sc16is752-spi1\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enable I2C-1 and set the frequency to 400KHz")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("dtparam")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("i2c_arm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("on,i2c_arm_baudrate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("400000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enable spidev0.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("dtparam")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spi"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("on\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enable RC input")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("enable_uart")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enable I2C-0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("dtparam")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("i2c_vc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("on\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# switch Bluetooth to miniuart")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("dtoverlay")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("miniuart-bt\n")])])]),a("h4",{attrs:{id:"cmdline-txt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmdline-txt"}},[t._v("#")]),t._v(" cmdline.txt")]),t._v(" "),a("p",[t._v("在Ubuntu Server 18.04 或更早版本，"),a("code",[t._v("nobtcmd.txt")]),t._v(" 和 "),a("code",[t._v("btcmd.txt")]),t._v(" 都需要修改。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /boot/firmware/cmdline.txt\n")])])]),a("p",[t._v("找到 "),a("code",[t._v("console=/dev/ttyAMA0,115200")]),t._v(" 并删除该部分以禁用串口上的登录shell。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /boot/firmware/nobtcmd.txt\n")])])]),a("p",[t._v("Find "),a("code",[t._v("console=/dev/ttyAMA0,115200")]),t._v(" and remove that part to disable the login shell on serial interface.")]),t._v(" "),a("p",[t._v("这告诉Linux内核不要在 CPU 核心2 上调度任何进程。 我们将在稍后手动在该核心运行PX4。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("net.ifnames"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" dwc_otg.lpm_enable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tty1 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("root")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LABEL"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("writable "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("rootfstype")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ext4 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("elevator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("deadline rootwait fixrtc "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("isolcpus")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("p",[t._v("The above line tells the Linux kernel do not schedule any process on CPU core 2. We will manually run PX4 onto that core later.")]),t._v(" "),a("p",[t._v("检查串口：")]),t._v(" "),a("p",[t._v("应该有 "),a("code",[t._v("/dev/ttyAMA0")]),t._v(", "),a("code",[t._v("/dev/ttySC0")]),t._v(" 和 "),a("code",[t._v("/dev/ttySC1")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" /dev/tty*\n")])])]),a("p",[t._v("检查 I2C：")]),t._v(" "),a("p",[t._v("应该有 "),a("code",[t._v("/dev/i2c-0")]),t._v(" 和 "),a("code",[t._v("/dev/i2c-1")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" /dev/i2c*\n")])])]),a("p",[t._v("检查SPI：:")]),t._v(" "),a("p",[t._v("应该有 "),a("code",[t._v("/dev/spidev0.0")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" /dev/spidev*\n")])])]),a("p",[t._v("There should be "),a("code",[t._v("/dev/spidev0.0")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"rc-local"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rc-local"}},[t._v("#")]),t._v(" rc.local")]),t._v(" "),a("p",[t._v("In this section we will configure the auto-start script in "),a("strong",[t._v("rc.local")]),t._v(". Note that we need to create this file, as it is not present on a fresh Ubuntu OS.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /etc/rc.local\n")])])]),a("p",[t._v("Append the content below to the file:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"25"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /sys/class/gpio/export\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"in"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /sys/class/gpio/gpio25/direction\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /sys/class/gpio/gpio25/value"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Launching PX4"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /home/ubuntu/px4 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" taskset -c "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" ./bin/px4 -d -s pilotpi_mc.config "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /home/ubuntu/px4/px4.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"25"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /sys/class/gpio/unexport\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("Save and exit. Then set the correct permissions:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /etc/rc.local\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),a("p",[t._v("Don't forget to turn off the switch when it is not needed!")])]),t._v(" "),a("h4",{attrs:{id:"csi-相机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csi-相机"}},[t._v("#")]),t._v(" CSI 相机")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("Enable CSI camera will stop anything works on I2C-0.")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /boot/firmware/usercfg.txt\n")])])]),a("p",[t._v("或")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("start_x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("h3",{attrs:{id:"构建代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建代码"}},[t._v("#")]),t._v(" 构建代码")]),t._v(" "),a("p",[t._v("To get the "),a("em",[t._v("very latest")]),t._v(" version onto your computer, enter the following command into a terminal:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/PX4/PX4-Autopilot.git --recursive\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),a("p",[t._v("This is all you need to do just to build the latest code.")])]),t._v(" "),a("h4",{attrs:{id:"配置上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置上传"}},[t._v("#")]),t._v(" 配置上传")]),t._v(" "),a("p",[t._v("然后上传：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AUTOPILOT_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".X.X\n")])])]),a("p",[t._v("如果您是首次使用 Docker 进行编译，请参考"),a("a",{attrs:{href:"https://dev.px4.io/master/en/test_and_ci/docker.html#prerequisites",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方说明"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AUTOPILOT_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pi_hostname.local\n")])])]),a("p",[t._v("在 PX4-Autopilot 文件夹下执行：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AUTOPILOT_USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ubuntu\n")])])]),a("h4",{attrs:{id:"为-armhf-目标交叉编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为-armhf-目标交叉编译"}},[t._v("#")]),t._v(" 为 armhf 目标交叉编译")]),t._v(" "),a("p",[t._v("只是为了编译代码，则可以执行：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" Firmware\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" scumaker_pilotpi_default\n")])])]),a("p",[t._v("构建可执行程序：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" scumaker_pilotpi_default upload\n")])])]),a("h4",{attrs:{id:"备选armhf构建方法-使用-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#备选armhf构建方法-使用-docker"}},[t._v("#")]),t._v(" 备选armhf构建方法 (使用 docker)")]),t._v(" "),a("p",[t._v("If you are compiling for the first time with docker, please refer to the "),a("RouterLink",{attrs:{to:"/zh/test_and_ci/docker.html#prerequisites"}},[t._v("official docs")]),t._v(".")],1),t._v(" "),a("p",[t._v("如果您是首次使用 Docker 进行编译，请参考"),a("a",{attrs:{href:"https://dev.px4.io/master/en/test_and_ci/docker.html#prerequisites",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方说明"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./Tools/docker_run.sh "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"export AUTOPILOT_HOST=192.168.X.X; export AUTOPILOT_USER=ubuntu; export NO_NINJA_BUILD=1; make scumaker_pilotpi_default upload"')]),t._v("\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),a("p",[t._v("mDNS is not supported within docker. You must specify the correct IP address every time when uploading.")])]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),a("p",[t._v("If your IDE doesn't support ninja build, "),a("code",[t._v("NO_NINJA_BUILD=1")]),t._v(" option will help. You can compile without uploading too. Just remove "),a("code",[t._v("upload")]),t._v(" target.")])]),t._v(" "),a("p",[t._v("通过 ssh 连接并运行它：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./Tools/docker_run.sh "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"make scumaker_pilotpi_default"')]),t._v("\n")])])]),a("h4",{attrs:{id:"为arm64交叉编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为arm64交叉编译"}},[t._v("#")]),t._v(" 为arm64交叉编译")]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),a("p",[t._v("This step requires "),a("code",[t._v("aarch64-linux-gnu")]),t._v(" tool-chain to be installed.")])]),t._v(" "),a("p",[t._v("如果在树莓派上运行PX4时遇到了以下问题：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" scumaker_pilotpi_arm64\n")])])]),a("p",[t._v("这时应当使用基于 Docker 的编译。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" scumaker_pilotpi_arm64 upload\n")])])]),a("h4",{attrs:{id:"备选-arm64-构建方法-使用-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#备选-arm64-构建方法-使用-docker"}},[t._v("#")]),t._v(" 备选 arm64 构建方法 (使用 docker)")]),t._v(" "),a("p",[t._v("If you are compiling for the first time with docker, please refer to the "),a("RouterLink",{attrs:{to:"/zh/test_and_ci/docker.html#prerequisites"}},[t._v("official docs")]),t._v(".")],1),t._v(" "),a("p",[t._v("然后回到上面相应的章节。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./Tools/docker_run.sh "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"export AUTOPILOT_HOST=192.168.X.X; export AUTOPILOT_USER=ubuntu; export NO_NINJA_BUILD=1; make scumaker_pilotpi_arm64 upload"')]),t._v("\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),a("p",[t._v("mDNS is not supported within docker. You must specify the correct IP address every time when uploading.")])]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("注解")]),t._v(" "),a("p",[t._v("If your IDE doesn't support ninja build, "),a("code",[t._v("NO_NINJA_BUILD=1")]),t._v(" option will help. You can compile without uploading too - just remove the "),a("code",[t._v("upload")]),t._v(" target.")])]),t._v(" "),a("p",[t._v("It is also possible to just compile the code with command:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./Tools/docker_run.sh "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"make scumaker_pilotpi_arm64"')]),t._v("\n")])])]),a("h4",{attrs:{id:"手动运行-px4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手动运行-px4"}},[t._v("#")]),t._v(" 手动运行 PX4")]),t._v(" "),a("p",[t._v("Connect over SSH and run it with:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" px4\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" taskset -c "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" ./bin/px4 -s pilotpi_mc.config\n")])])]),a("p",[t._v("Now PX4 is started with multi-rotor configuration.")]),t._v(" "),a("p",[t._v("If you encountered the similar problem executing "),a("code",[t._v("bin/px4")]),t._v(" on your Pi as following:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("bin/px4: /lib/xxxx/xxxx: version `GLIBC_2.29' not found (required by bin/px4)\n")])])]),a("p",[t._v("Then you should compile with docker instead.")]),t._v(" "),a("p",[t._v("Before proceeding to next step, clear the existing building at first:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf build/scumaker_pilotpi_*\n")])])]),a("p",[t._v("Then go back to the corresponding chapter above.")]),t._v(" "),a("h3",{attrs:{id:"后期配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后期配置"}},[t._v("#")]),t._v(" 后期配置")]),t._v(" "),a("p",[t._v("Please refer to the instructions "),a("RouterLink",{attrs:{to:"/zh/flight_controller/raspberry_pi_pilotpi_rpios.html"}},[t._v("here")])],1)])}),[],!1,null,null,null);s.default=r.exports}}]);