(window.webpackJsonp=window.webpackJsonp||[]).push([[2011],{3607:function(e,t,a){"use strict";a.r(t);var s=a(19),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"全系统回放"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全系统回放"}},[e._v("#")]),e._v(" 全系统回放")]),e._v(" "),a("p",[e._v("It is possible to record and replay arbitrary parts of the system based on ORB messages.")]),e._v(" "),a("p",[e._v("Replay is useful to test the effect of different parameter values based on real data, compare different estimators, etc.")]),e._v(" "),a("h2",{attrs:{id:"系统必备组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统必备组件"}},[e._v("#")]),e._v(" 系统必备组件")]),e._v(" "),a("p",[e._v("The first step is to identify the module or modules that should be replayed. Then, identify all the inputs to these modules, i.e. subscribed ORB topics. For system-wide replay, this consists of all hardware input: sensors, RC input, MAVLink commands and file system.")]),e._v(" "),a("p",[e._v("All identified topics need to be logged at full rate (see "),a("RouterLink",{attrs:{to:"/zh/dev_log/logging.html"}},[e._v("logging")]),e._v("). For "),a("code",[e._v("ekf2")]),e._v(" this is already the case with the default set of logged topics.")],1),e._v(" "),a("p",[e._v("It is important that all replayed topics contain only a single absolute timestamp, which is the automatically generated field "),a("code",[e._v("timestamp")]),e._v(". Should there be more timestamps, they must be relative to the main timestamp. For an example, see "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/msg/SensorCombined.msg",target:"_blank",rel:"noopener noreferrer"}},[e._v("SensorCombined.msg"),a("OutboundLink")],1),e._v(". 造成这种情况的原因如下。")]),e._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("First, choose the file to replay and build the target (from within the PX4-Autopilot directory):")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("replay")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("absolute_path_to_log_file.ulg"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" px4_sitl_default\n")])])]),a("p",[e._v("This will create the build/make output in a separate build directory "),a("code",[e._v("build/px4_sitl_default_replay")]),e._v(" (so that the parameters don't interfere with normal builds). It's possible to choose any posix SITL build target for replay, since the build system knows through the "),a("code",[e._v("replay")]),e._v(" environment variable that it's in replay mode.")])]),e._v(" "),a("li",[a("p",[e._v("Add ORB publisher rules in the file "),a("code",[e._v("build/px4_sitl_default_replay/rootfs/orb_publisher.rules")]),e._v(". This file defines the modules that are allowed to publish particular messages. It has the following format:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("restrict_topics: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("1")]),e._v(">")]),e._v(", "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("2")]),e._v(">")]),e._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("., "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("topicN"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nmodule: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("module"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nignore_others: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("true/false"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),a("p",[e._v("This means that the given list of topics should only be published by "),a("code",[e._v("<module>")]),e._v(" (which is the command name). Publications to any of these topics from another module are silently ignored. If "),a("code",[e._v("ignore_others")]),e._v(" is "),a("code",[e._v("true")]),e._v(", publications to other topics from "),a("code",[e._v("<module>")]),e._v(" are ignored.")]),e._v(" "),a("p",[e._v("For replay, we only want the "),a("code",[e._v("replay")]),e._v(" module to be able to publish the previously identified list of topics. So for replaying "),a("code",[e._v("ekf2")]),e._v(", the rules file looks like this: So, for replaying "),a("code",[e._v("ekf2")]),e._v(", the rules file should look like this:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("restrict_topics: sensor_combined, vehicle_gps_position, vehicle_land_detected\nmodule: replay\nignore_others: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])]),a("p",[e._v("With this, the modules that usually publish these topics don't need to be disabled for the replay.")])]),e._v(" "),a("li",[a("p",[a("em",[e._v("(Optional)")]),e._v(" Setup parameter overrides (see "),a("a",{attrs:{href:"#overriding-parameters-in-the-original-log"}},[e._v("instructions below")]),e._v(").")])]),e._v(" "),a("li",[a("p",[a("em",[e._v("(Optional)")]),e._v(" Copy a "),a("code",[e._v("dataman")]),e._v(" mission file from the SD card to the build directory. This is only necessary if a mission should be replayed.")])]),e._v(" "),a("li",[a("p",[e._v("Start the replay:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" px4_sitl_default jmavsim\n")])])]),a("p",[e._v("This will automatically open the log file, apply the parameters and start the replay. Once done, it will report the outcome and exit. The newly generated log file can then be analyzed. It can be found in "),a("code",[e._v("rootfs/fs/microsd/log")]),e._v(", in subdirectories organised by date. Replayed log file names will have the "),a("code",[e._v("_replayed")]),e._v(" suffix.")]),e._v(" "),a("p",[e._v("Note that the above command will show the simulator as well, but - depending on what is being replayed - it will not show what's actually going on. It is still possible to connect via QGC and, for example, view the changing attitude during replay.")])]),e._v(" "),a("li",[a("p",[e._v("Finally, unset the environment variable, so that the normal build targets are used again:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("unset")]),e._v(" replay\n")])])])])]),e._v(" "),a("h3",{attrs:{id:"overriding-parameters-in-the-original-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overriding-parameters-in-the-original-log"}},[e._v("#")]),e._v(" Overriding Parameters in the Original Log")]),e._v(" "),a("p",[e._v("By default, all parameters from the original log file are applied during a replay. If a parameter changes during recording, it will be changed at the right time during the replay.")]),e._v(" "),a("p",[e._v("Parameters can be overridden during a replay in two ways: "),a("em",[e._v("fixed")]),e._v(" and "),a("em",[e._v("dynamic")]),e._v(". When parameters are overridden, corresponding parameter changes in the log are not applied during replay.")]),e._v(" "),a("ul",[a("li",[a("p",[a("strong",[e._v("Fixed parameter overrides")]),e._v(" will override parameters from the start of the replay. They are defined in the file "),a("code",[e._v("build/px4_sitl_default_replay/rootfs/replay_params.txt")]),e._v(", where each line should have the format "),a("code",[e._v("<param_name> <value>")]),e._v(". For example:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("EKF2_RNG_NOISE "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.1")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Dynamic parameter overrides")]),e._v(" will update parameter values at specified times. These parameters will still be initialised to the values in the log or in the fixed overrides. Parameter update events should be defined in "),a("code",[e._v("build/px4_sitl_default_replay/rootfs/replay_params_dynamic.txt")]),e._v(", where each line has the format "),a("code",[e._v("<param_name> <value> <timestamp>")]),e._v(". The timestamp is the time in seconds from the start of the log. For example:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("EKF2_RNG_NOISE "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.15")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("23.4")]),e._v("\nEKF2_RNG_NOISE "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.05")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("56.7")]),e._v("\nEKF2_RNG_DELAY "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.5")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("30.0")]),e._v("\n")])])])])]),e._v(" "),a("h3",{attrs:{id:"重要提示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重要提示"}},[e._v("#")]),e._v(" 重要提示")]),e._v(" "),a("ul",[a("li",[e._v("在重播过程中，将报告日志文件中的所有退出。 These have a negative effect on the replay, so care should be taken to avoid dropouts during recording.")]),e._v(" "),a("li",[e._v("It is currently only possible to replay in 'real-time': as fast as the recording was done. 这项工作计划今后延长。")]),e._v(" "),a("li",[e._v("A message that has a timestamp of 0 will be considered invalid and not be replayed.")])]),e._v(" "),a("h2",{attrs:{id:"ekf2-回放"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ekf2-回放"}},[e._v("#")]),e._v(" EKF2 回放")]),e._v(" "),a("p",[e._v("This is a specialization of the system-wide replay for fast EKF2 replay. It will automatically create the ORB publisher rules and works as following:")]),e._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[e._v("注解")]),e._v(" "),a("p",[e._v("The recording and replay of flight logs with "),a("RouterLink",{attrs:{to:"/zh/advanced_config/tuning_the_ecl_ekf.html#running-multiple-ekf-instances"}},[e._v("multiple EKF instances")]),e._v(" is not supported. To enable recording for EKF replay you must set the parameters to enable a "),a("RouterLink",{attrs:{to:"/zh/advanced_config/tuning_the_ecl_ekf.html#running-a-single-ekf-instance"}},[e._v("single EKF instance")]),e._v(".")],1)]),e._v(" "),a("p",[e._v("In EKF2 mode, the replay will automatically create the ORB publisher rules described above.")]),e._v(" "),a("p",[e._v("To perform an EKF2 replay:")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Record the original log. Optionally set "),a("code",[e._v("SDLOG_MODE")]),e._v(" to "),a("code",[e._v("1")]),e._v(" to log from boot.")])]),e._v(" "),a("li",[a("p",[e._v("In addition to the "),a("code",[e._v("replay")]),e._v(" environment variable, set "),a("code",[e._v("replay_mode")]),e._v(" to "),a("code",[e._v("ekf2")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("replay_mode")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("ekf2\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("replay")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("absolute_path_to_log.ulg"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Run the replay with the "),a("code",[e._v("none")]),e._v(" target:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" px4_sitl none\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Once finished, unset both "),a("code",[e._v("replay")]),e._v(" and "),a("code",[e._v("replay_mode")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("unset")]),e._v(" replay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("unset")]),e._v(" replay_mode\n")])])])])]),e._v(" "),a("h3",{attrs:{id:"adjusting-ekf2-specific-parameters-for-the-replay"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adjusting-ekf2-specific-parameters-for-the-replay"}},[e._v("#")]),e._v(" Adjusting EKF2-specific Parameters for the Replay")]),e._v(" "),a("p",[e._v("First install "),a("code",[e._v("pyulog")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --user pyulog\n")])])]),a("p",[e._v("Extract the original log's parameters to "),a("code",[e._v("replay_params.txt")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("ulog_params -i "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$replay")]),e._v('"')]),e._v(" -d "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("' '")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'^EKF2'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" build/px4_sitl_default_replay/rootfs/replay_params.txt\n")])])]),a("p",[e._v("Adjust these as desired, and add dynamic parameter overrides in "),a("code",[e._v("replay_params_dynamic.txt")]),e._v(" if necessary.")]),e._v(" "),a("h2",{attrs:{id:"后台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后台"}},[e._v("#")]),e._v(" 后台")]),e._v(" "),a("p",[e._v("回放分为3个组件:")]),e._v(" "),a("ul",[a("li",[e._v("A replay module These have a negative effect on replay, so care should be taken to avoid dropouts during recording.")]),e._v(" "),a("li",[e._v("It is currently only possible to replay in 'real-time': as fast as the recording was done.")])]),e._v(" "),a("p",[e._v("The replay module reads the log and publishes the messages at the same speed as they were recorded. 将常量偏移量添加到每条消息的时间戳中，以匹配当前系统时间（这就是为什么所有其他时间戳都需要是相对的原因）。 命令 "),a("code",[e._v("replay tryapplyparms")]),e._v(" 在加载所有其他模块之前执行，并应用日志和用户设置参数中的参数。 然后，作为最后一个命令，"),a("code",[e._v("replay trystart")]),e._v(" 将再次应用参数并开始实际回放。 如果未设置环境变量 "),a("code",[e._v("replay")]),e._v("，则这两个命令不执行任何操作。")]),e._v(" "),a("p",[e._v("The ORB publisher rules allow to select which part of the system is replayed, as described above. They are only compiled for the posix SITL targets. 只编译 posix SITL 目标。")]),e._v(" "),a("p",[a("strong",[e._v("time handling")]),e._v(" 依然是个 "),a("strong",[e._v("open point")]),e._v("， 尚未实现。")])])}),[],!1,null,null,null);t.default=r.exports}}]);