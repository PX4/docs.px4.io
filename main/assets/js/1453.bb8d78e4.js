(window.webpackJsonp=window.webpackJsonp||[]).push([[1453],{2660:function(t,e,o){"use strict";o.r(e);var a=o(19),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"컴퓨터-비전-광류-센서-움직임-감지-관성-주행-시각-측정-회피"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#컴퓨터-비전-광류-센서-움직임-감지-관성-주행-시각-측정-회피"}},[t._v("#")]),t._v(" 컴퓨터 비전(광류 센서, 움직임 감지, 관성 주행 시각 측정, 회피)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://en.wikipedia.org/wiki/Computer_vision",target:"_blank",rel:"noopener noreferrer"}},[t._v("컴퓨터 비전"),o("OutboundLink")],1),t._v("은 컴퓨터가 시각 데이터를 활용하여 실제 환경을 이해하는 기술입니다.")]),t._v(" "),o("p",[t._v("PX4 uses computer vision systems (primarily running on "),o("RouterLink",{attrs:{to:"/ko/companion_computer/"}},[t._v("Companion Computers")]),t._v(") in order to support the following features:")],1),t._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"#optical-flow"}},[t._v("광류(Optical flow)")]),t._v("는 2D 속도 추정을 제공합니다(아래로 향하는 카메라와 아래로 향하는 거리 센서 사용).")]),t._v(" "),o("li",[o("a",{attrs:{href:"#motion-capture"}},[t._v("Motion Capture")]),t._v(" provides 3D pose estimation using a vision system that is "),o("em",[t._v("external")]),t._v(" to the vehicle. 주로 실내 내비게이션에 사용됩니다.")]),t._v(" "),o("li",[o("a",{attrs:{href:"#visual-inertial-odometry-vio"}},[t._v("Visual Inertial Odometry")]),t._v("는 온보드 비전 시스템과 IMU를 사용하여 3D 자세 및 속도 추정을 제공합니다. It is used for navigation when GNSS position information is absent or unreliable.")]),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/ko/computer_vision/obstacle_avoidance.html"}},[t._v("장애물 회피")]),t._v("는 계획된 경로를 비행시 장애물 주위를 탐색합니다(현재 임무가 지원됨). This uses "),o("a",{attrs:{href:"https://github.com/PX4/PX4-Avoidance",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4/PX4-Avoidance"),o("OutboundLink")],1),t._v(" running on a companion computer.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/ko/computer_vision/collision_prevention.html"}},[t._v("충돌 방지")]),t._v("는 장애물에 충돌하기 전에 차량을 멈추는 데 사용됩니다(주로 수동 모드에서 비행할 때).")],1)]),t._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),o("p",[o("RouterLink",{attrs:{to:"/ko/complete_vehicles/px4_vision_kit.html"}},[t._v("PX4 Vision Autonomy Development Kit")]),t._v("(Holybro)는 PX4에서 컴퓨터 비전으로 작업하는 개발자를 위한 강력하고 저렴한 키트입니다. It comes with no pre-installed software, but does include an example implementation of obstacle avoidance to demonstrate the capabilities of the platform.")],1)]),t._v(" "),o("h2",{attrs:{id:"모션-캡쳐"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#모션-캡쳐"}},[t._v("#")]),t._v(" 모션 캡쳐")]),t._v(" "),o("p",[t._v("Motion Capture (MoCap) is a technique for estimating the 3D "),o("em",[t._v("pose")]),t._v(" (position and orientation) of a vehicle using a positioning mechanism that is "),o("em",[t._v("external")]),t._v(" to the vehicle. MoCap systems most commonly detect motion using infrared cameras, but other types of cameras, Lidar, or Ultra Wideband (UWB) may also be used.")]),t._v(" "),o("div",{staticClass:"custom-block note"},[o("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),o("p",[t._v("MoCap is commonly used to navigate a vehicle in situations where GPS is absent (e.g. indoors), and provides position relative to a "),o("em",[t._v("local")]),t._v(" coordinate system.")])]),t._v(" "),o("p",[t._v("MoCap 기술에 대해 더 알아보려면 다음을 참고하십시오:")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/ko/ros/external_position_estimation.html"}},[t._v("외부 위치 추정")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/ko/tutorials/motion-capture.html"}},[t._v("움직임 감지(Motion Capture)기술을 활용한 비행 (VICON, Optitrack)")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/ko/advanced_config/tuning_the_ecl_ekf.html#external-vision-system"}},[t._v("EKF > 외부 비전 시스템")])],1)]),t._v(" "),o("h2",{attrs:{id:"시각적-관성-주행-거리-측정-vio"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#시각적-관성-주행-거리-측정-vio"}},[t._v("#")]),t._v(" 시각적 관성 주행 거리 측정(VIO)")]),t._v(" "),o("p",[t._v("Visual Inertial Odometry (VIO) is used for estimating the 3D "),o("em",[t._v("pose")]),t._v(" (position and orientation) and "),o("em",[t._v("velocity")]),t._v(" of a moving vehicle relative to a "),o("em",[t._v("local")]),t._v(" starting position. 보통 GPS가 빠졌거나 (예: 실내) 신뢰할 수 없을 때(예: 다리 아래로 비행할 경우) 기체 운행에 활용합니다.")]),t._v(" "),o("p",[t._v("VIO uses "),o("a",{attrs:{href:"https://en.wikipedia.org/wiki/Visual_odometry",target:"_blank",rel:"noopener noreferrer"}},[t._v("Visual Odometry"),o("OutboundLink")],1),t._v(" to estimate vehicle "),o("em",[t._v("pose")]),t._v(" from visual information, combined with inertial measurements from an IMU (to correct for errors associated with rapid vehicle movement resulting in poor image capture).")]),t._v(" "),o("div",{staticClass:"custom-block note"},[o("p",{staticClass:"custom-block-title"},[t._v("VIO와 [MoCap](#motion-capture)의 한 가지 차이점은 VIO 카메라/IMU가 차량 기반이며 추가로 속도 정보를 제공하는 것입니다.")])]),t._v(" "),o("p",[t._v("PX4의 VIO 설정 방법을 더 알아보려면 다음을 참고하십시오:")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/ko/advanced_config/tuning_the_ecl_ekf.html#external-vision-system"}},[t._v("EKF > 외부 비전 시스템")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/ko/peripherals/camera_t265_vio.html"}},[t._v("T265 설정 안내서")])],1)]),t._v(" "),o("h2",{attrs:{id:"광류"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#광류"}},[t._v("#")]),t._v(" 광류")]),t._v(" "),o("p",[o("RouterLink",{attrs:{to:"/ko/sensor/optical_flow.html"}},[t._v("광류 센서(Optical Flow)")]),t._v(" 기술로 2차원 평면상의 속도를 추정합니다(아래 방향으로 향한 카메라와 아래 방향으로 향한 거리 센서 활용).")],1),t._v(" "),o("p",[t._v("광류 센서 기술을 더 알아보려면 다음을 참고하십시오.")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/ko/sensor/optical_flow.html"}},[t._v("광류")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/ko/advanced_config/tuning_the_ecl_ekf.html#optical-flow"}},[t._v("EKF > 광류")])],1)]),t._v(" "),o("h2",{attrs:{id:"comparisons"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparisons"}},[t._v("#")]),t._v(" Comparisons")]),t._v(" "),o("h3",{attrs:{id:"optical-flow-vs-vio-for-local-position-estimation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#optical-flow-vs-vio-for-local-position-estimation"}},[t._v("#")]),t._v(" Optical Flow vs VIO for Local Position Estimation")]),t._v(" "),o("p",[t._v("Both these techniques use cameras and measure differences between frames. Optical flow uses a downward facing camera, while VIO uses a stereo camera or a 45 degree tracking camera. Assuming both are well calibrated, which is better for local position estimation?")]),t._v(" "),o("p",[t._v("The consensus "),o("a",{attrs:{href:"https://discuss.px4.io/t/vio-vs-optical-flow/34680",target:"_blank",rel:"noopener noreferrer"}},[t._v("appears to be"),o("OutboundLink")],1),t._v(":")]),t._v(" "),o("p",[t._v("Optical flow:")]),t._v(" "),o("ul",[o("li",[t._v("Downward facing optical flow gives you a planar velocity thats corrected for angular velocity with the gyro.")]),t._v(" "),o("li",[t._v("Requires an accurate distance to the ground and assumes a planar surface. Given those conditions it can be just as accurate/reliable as VIO (such as indoor flight)")]),t._v(" "),o("li",[t._v("Is more robust than VIO as it has fewer states.")]),t._v(" "),o("li",[t._v("Is significantly cheaper and easier to set up as it only requires a flow sensor, a rangefinder, and setting up a few parameters (which can be connected to the flight controller).")])]),t._v(" "),o("p",[t._v("VIO:")]),t._v(" "),o("ul",[o("li",[t._v("Is more expensive to purchase and harder to set up. It requires a separate companion computer, calibration, software, configuration and so on.")]),t._v(" "),o("li",[t._v("Will be less effective if there are no point features to track (in practice the real world generally has point features).")]),t._v(" "),o("li",[t._v("Is more flexible, allowing additional features such as obstacle avoidance and mapping.")])]),t._v(" "),o("p",[t._v("A combination (fusing both) is probably the most reliable, though not necessary in most real-world scenarios. Normally you will select the system that suits your operating environment, required features, and cost constraints:")]),t._v(" "),o("ul",[o("li",[t._v("Use VIO if you plan on flying outdoors without GPS (or outdoors and indoors), or if you need to support obstacle avoidance and other computer vision features.")]),t._v(" "),o("li",[t._v("Use Optical Flow if you plan on only flying indoors (without GPS) and cost is an important consideration.")])]),t._v(" "),o("h2",{attrs:{id:"외부-참고-자료"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#외부-참고-자료"}},[t._v("#")]),t._v(" 외부 참고 자료")]),t._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/robin-shaun/XTDrone/blob/master/README.en.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("XTDrone"),o("OutboundLink")],1),t._v(" - 컴퓨터 비전용 ROS + PX4 시뮬레이션 환경입니다. "),o("a",{attrs:{href:"https://www.yuque.com/xtdrone/manual_en",target:"_blank",rel:"noopener noreferrer"}},[t._v("XTDrone 설명서"),o("OutboundLink")],1),t._v("에 시작에 필요한 모든 내용이 들어있습니다!")])])])}),[],!1,null,null,null);e.default=i.exports}}]);