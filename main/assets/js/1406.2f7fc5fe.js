(window.webpackJsonp=window.webpackJsonp||[]).push([[1406],{2560:function(t,e,o){"use strict";o.r(e);var s=o(19),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"ros-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#ros-2"}},[t._v("#")]),t._v(" ROS 2")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://index.ros.org/doc/ros2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ROS 2"),o("OutboundLink")],1),t._v(" is the newest version of "),o("a",{attrs:{href:"http://www.ros.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ROS"),o("OutboundLink")],1),t._v(" (Robot Operating System), a general purpose robotics library that can be used with the PX4 Autopilot to create powerful drone applications.\nIt captures most of the learnings and features of "),o("RouterLink",{attrs:{to:"/en/ros/ros1.html"}},[t._v("ROS 1")]),t._v(", improving a number of flaws of the earlier version.")],1),t._v(" "),o("div",{staticClass:"custom-block warning"},[o("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),o("p",[t._v("The PX4 development team highly recommend that you use/migrate to this version of ROS!")])]),t._v(" "),o("p",[t._v("Communication between ROS 2 and PX4 uses middleware that implements the "),o("RouterLink",{attrs:{to:"/en/middleware/uxrce_dds.html"}},[t._v("XRCE-DDS protocol")]),t._v(".\nThis middleware exposes PX4 "),o("RouterLink",{attrs:{to:"/en/msg_docs/"}},[t._v("uORB messages")]),t._v(" as ROS 2 messages and types, effectively allowing direct access to PX4 from ROS 2 workflows and nodes.\nThe middleware uses uORB message definitions to generate code to serialise and deserialise the messages heading in and out of PX4.\nThese same message definitions are used in ROS 2 applications to allow the messages to be interpreted.")],1),t._v(" "),o("p",[t._v("To use the "),o("RouterLink",{attrs:{to:"/en/ros/ros2_comm.html"}},[t._v("ROS 2")]),t._v(" over XRCE-DDS effectively, you must (at time of writing) have a reasonable understanding of the PX4 internal architecture and conventions, which differ from those used by ROS.\nIn the near term future we plan to provide ROS 2 APIs to abstract PX4 conventions, along with examples demonstrating their use.")],1),t._v(" "),o("p",[t._v("The main topics in this section are:")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/en/ros/ros2_comm.html"}},[t._v("ROS 2 User Guide")]),t._v(": A PX4-centric overview of ROS 2, covering installation, setup, and how to build ROS 2 applications that communicate with PX4.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/ros/ros2_offboard_control.html"}},[t._v("ROS 2 Offboard Control Example")])],1)]),t._v(" "),o("div",{staticClass:"custom-block note"},[o("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),o("p",[t._v("ROS 2 is officially supported only on Linux platforms.\nUbuntu 20.04 LTS is the official supported distribution.")])]),t._v(" "),o("div",{staticClass:"custom-block note"},[o("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),o("p",[t._v("ROS 2 can also connect with PX4 using "),o("a",{attrs:{href:"https://github.com/mavlink/mavros/tree/ros2/mavros",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAVROS"),o("OutboundLink")],1),t._v(" (instead of XRCE-DDS).\nThis option is supported by the MAVROS project.")])]),t._v(" "),o("h2",{attrs:{id:"further-reading-information"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#further-reading-information"}},[t._v("#")]),t._v(" Further Reading/Information")]),t._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/en/ros/ros2_comm.html"}},[t._v("ROS 2 User Guide")])],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/en/middleware/uxrce_dds.html"}},[t._v("XRCE-DDS (PX4-ROS 2/DDS Bridge)")]),t._v(": PX4 middleware for connecting to ROS 2.")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);