(window.webpackJsonp=window.webpackJsonp||[]).push([[823],{2902:function(t,a,s){"use strict";s.r(a);var e=s(19),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"raspberry-pi-2-3-4-navio2-autopilot"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#raspberry-pi-2-3-4-navio2-autopilot"}},[t._v("#")]),t._v(" Raspberry Pi 2/3/4 Navio2 Autopilot")]),t._v(" "),e("LinkedBadge",{attrs:{type:"warning",text:"Experimental",url:"../flight_controller/autopilot_experimental.html"}}),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("이 비행 콘트롤러에 대한 PX4는 "),e("RouterLink",{attrs:{to:"/ko/flight_controller/autopilot_experimental.html"}},[t._v("테스트 단계")]),t._v("입니다. Contact the "),e("a",{attrs:{href:"https://emlid.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("manufacturer"),e("OutboundLink")],1),t._v(" for hardware support or compliance issues.")],1)]),t._v(" "),e("p",[t._v('This is the developer "quickstart" for Raspberry Pi 2/3/4 Navio2 autopilots. 이를 통해 PX4를 빌드하고 Raspberry Pi로 전송하거나 빌드할 수 있습니다.')]),t._v(" "),e("p",[e("img",{attrs:{src:s(934),alt:"라즈베리파이 이미지"}})]),t._v(" "),e("h2",{attrs:{id:"운영체제-이미지"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#운영체제-이미지"}},[t._v("#")]),t._v(" 운영체제 이미지")]),t._v(" "),e("p",[t._v("Use the preconfigured "),e("a",{attrs:{href:"https://docs.emlid.com/navio2/configuring-raspberry-pi",target:"_blank",rel:"noopener noreferrer"}},[t._v("Emlid Raspberry Pi OS image for Navio 2"),e("OutboundLink")],1),t._v(". 기본 이미지에는 아래 표시된 대부분의 설정이 완료되어 있습니다.")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("시스템  커널을 업그레이드 하지마십시오. 업그레이드하면 필요한 HW 지원이 없는 새 커널을 설치할 수 있습니다. "),e("code",[t._v("ls /sys/class/pwm")]),t._v("으로 확인할 수 있습니다. 디렉토리가 비어 있으면 안됩니다.")])]),t._v(" "),e("h2",{attrs:{id:"접근-설정"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#접근-설정"}},[t._v("#")]),t._v(" 접근 설정")]),t._v(" "),e("p",[t._v('The Raspberry Pi OS image has SSH setup already. 사용자 이름은 "pi"이고, 비밀번호는 "raspberry"입니다. 이 가이드에서는 사용자 이름과 암호가 기본값으로 유지된다고 가정합니다.')]),t._v(" "),e("p",[t._v("To setup the Pi to join your local wifi, follow "),e("a",{attrs:{href:"https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("this guide"),e("OutboundLink")],1),t._v(", or connect it via an ethernet cable.")]),t._v(" "),e("p",[t._v("To connect to your Pi via SSH, use the default username ("),e("code",[t._v("pi")]),t._v(") and hostname ("),e("code",[t._v("navio")]),t._v("). Alternatively (if this doesn't work), you can find the IP address of your RPi and specify it.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" pi@navio.local\n")])])]),e("p",[t._v("또는")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" pi@"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP-ADDRESS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("h2",{attrs:{id:"파일시스템-확장"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#파일시스템-확장"}},[t._v("#")]),t._v(" 파일시스템 확장")]),t._v(" "),e("p",[t._v("Expand the file system to take advantage of the entire SD card by running:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" raspi-config --expand-rootfs\n")])])]),e("h2",{attrs:{id:"navio-rgb-오버레이-비활성화"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navio-rgb-오버레이-비활성화"}},[t._v("#")]),t._v(" Navio RGB 오버레이 비활성화")]),t._v(" "),e("p",[t._v("기존 Navio RGB 오버레이는 PX4에서 RGB Led 용으로 사용하는 GPIO를 요구합니다. "),e("code",[t._v("navio-rgb")]),t._v(" 오버레이를 활성화하는 줄에 주석을 달아 "),e("code",[t._v("/boot/config.txt")]),t._v("를 편집합니다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#dtoverlay=navio-rgb\n")])])]),e("h2",{attrs:{id:"파일-전송-테스트"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#파일-전송-테스트"}},[t._v("#")]),t._v(" 파일 전송 테스트")]),t._v(" "),e("p",[t._v("SCP를 사용하여 네트워크(WiFi 또는 이더넷)를 통하여 개발 컴퓨터에서 대상 보드로 파일을 전송합니다.")]),t._v(" "),e("p",[t._v("설정을 테스트하려면 지금 네트워크를 통해 개발 PC에서 라즈베리파이로 파일을 푸시해보십시오. 라즈베리파이에 네트워크 접근 권한이 있는 지 확인후, SSH를 사용할 수 있습니다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hello.txt\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" hello.txt pi@navio.local:/home/pi/\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" hello.txt\n")])])]),e("p",[t._v('This should copy over a "hello.txt" file into the home folder of your Pi. 파일이 실제로 복사되었는지 확인후, 다음 단계로 진행합니다.')]),t._v(" "),e("h2",{attrs:{id:"코드-빌드"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#코드-빌드"}},[t._v("#")]),t._v(" 코드 빌드")]),t._v(" "),e("div",{staticClass:"custom-block note"},[e("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),e("p",[t._v("PX4 binaries for Navio 2 can only be built on Ubuntu 18.04.\nUbuntu 20.04 and later do not currently work (as of September 2023).")])]),t._v(" "),e("p",[t._v("Follow the instructions below to build the source code on your development machine and transfer the compiled program to the Pi. Note that earlier versions allowed code to be built natively (on the Pi), but this option is no longer available.")]),t._v(" "),e("h3",{attrs:{id:"크로스-컴파일러-빌드"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#크로스-컴파일러-빌드"}},[t._v("#")]),t._v(" 크로스 컴파일러 빌드")]),t._v(" "),e("p",[t._v("First install the "),e("RouterLink",{attrs:{to:"/ko/dev_setup/dev_env_linux_ubuntu.html#raspberry-pi"}},[t._v("standard PX4 developer environment")]),t._v(" on your Ubuntu 18.04 development computer.")],1),t._v(" "),e("p",[t._v("Specify the IP (or hostname) of your Pi using:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AUTOPILOT_HOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("navio.local\n")])])]),e("p",[t._v("또는")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AUTOPILOT_HOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".X.X\n")])])]),e("div",{staticClass:"custom-block note"},[e("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),e("p",[t._v("The value of the environment variable should be set before the build, or "),e("code",[t._v("make upload")]),t._v(" will fail to find your Pi.")])]),t._v(" "),e("p",[t._v("Build the executable file on your development machine:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" emlid_navio2\n")])])]),e("p",[t._v("px4 실행 파일은 "),e("strong",[t._v("build/emlid_navio2_native/")]),t._v(" 디렉토리에 위치합니다. Make sure you can connect to your Pi over SSH, see "),e("a",{attrs:{href:"#setting-up-access"}},[t._v("instructions how to access your Pi")]),t._v(" following the instructions for armhf under Raspberry Pi.")]),t._v(" "),e("p",[t._v("다음 명령으로 업로드하십시오.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" emlid_navio2 upload\n")])])]),e("p",[t._v("Then, connect over ssh and run it on the Pi (as root):")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/px4\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ./bin/px4 -s px4.config\n")])])]),e("p",[t._v("px4를 실행한 성공적인 빌드 화면은 다음과 같습니다:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("\n______  __   __    ___\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ___ "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" / /   /   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_/ /  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" V /   / /"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  __/   /   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("  / /_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     / /^"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("___  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("/   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("/     "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_/\n\npx4 starting.\n\n\npxh"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("h2",{attrs:{id:"자동-실행"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#자동-실행"}},[t._v("#")]),t._v(" 자동 실행")]),t._v(" "),e("p",[t._v("px4를 자동으로 시작하려면 "),e("strong",[t._v("/etc/rc.local")]),t._v(" 파일의 "),e("code",[t._v("exit 0")]),t._v(" 앞 줄에 아래 내용을 추가합니다. 네이티브 빌드를 사용하는 경우 적절하게 변경하십시오.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /home/pi "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ./bin/px4 -d -s px4.config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" px4.log\n")])])])],1)}),[],!1,null,null,null);a.default=r.exports},934:function(t,a,s){t.exports=s.p+"assets/img/hardware-rpi2.44769dea.jpg"}}]);