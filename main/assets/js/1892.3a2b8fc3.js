(window.webpackJsonp=window.webpackJsonp||[]).push([[1892],{3369:function(t,a,s){"use strict";s.r(a);var n=s(19),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"px4-ros-2-navigation-interface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#px4-ros-2-navigation-interface"}},[t._v("#")]),t._v(" PX4 ROS 2 Navigation Interface")]),t._v(" "),s("Badge",{attrs:{type:"warning",text:"main (PX4 v1.15)"}}),t._v(" "),s("Badge",{attrs:{type:"warning",text:"Experimental"}}),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Experimental\nAt the time of writing, parts of the PX4 ROS 2 Interface Library are experimental, and hence subject to change.")])]),t._v(" "),s("p",[t._v("The "),s("RouterLink",{attrs:{to:"/ko/ros2/px4_ros2_interface_lib.html"}},[t._v("PX4 ROS 2 Interface Library")]),t._v(" navigation interface enables developers to send their position measurements to PX4 directly from ROS 2 applications, such as a VIO system or a map matching system.\nThe interface provides a layer of abstraction from PX4 and the uORB messaging framework, and introduces a few sanity checks on the requested state estimation updates sent via the interface.\nThese measurements are then fused into the EKF just as though they were internal PX4 measurements.")],1),t._v(" "),s("p",[t._v("The library provides two classes, "),s("a",{attrs:{href:"https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1LocalPositionMeasurementInterface.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("LocalPositionMeasurementInterface")]),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1GlobalPositionMeasurementInterface.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("GlobalPositionMeasurementInterface")]),s("OutboundLink")],1),t._v(", which both expose a similar "),s("code",[t._v("update")]),t._v(" method to provide either a local position or global position update to PX4, respectively.\nThe "),s("code",[t._v("update")]),t._v(" method expects a position measurement "),s("code",[t._v("struct")]),t._v(" ("),s("a",{attrs:{href:"https://auterion.github.io/px4-ros2-interface-lib/structpx4__ros2_1_1LocalPositionMeasurement.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("LocalPositionMeasurement")]),s("OutboundLink")],1),t._v(" or "),s("a",{attrs:{href:"https://auterion.github.io/px4-ros2-interface-lib/structpx4__ros2_1_1GlobalPositionMeasurement.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("GlobalPositionMeasurement")]),s("OutboundLink")],1),t._v(") which developers can populate with their own generated position measurements.")]),t._v(" "),s("h2",{attrs:{id:"installation-and-first-test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation-and-first-test"}},[t._v("#")]),t._v(" Installation and First Test")]),t._v(" "),s("p",[t._v("The following steps are required to get started:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Make sure you have a working "),s("RouterLink",{attrs:{to:"/ko/ros/ros2_comm.html"}},[t._v("ROS 2 setup")]),t._v(", with "),s("a",{attrs:{href:"https://github.com/PX4/px4_msgs",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("px4_msgs")]),s("OutboundLink")],1),t._v(" in the ROS 2 workspace.")],1)]),t._v(" "),s("li",[s("p",[t._v("Clone the repository into the workspace:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ros_workspace")]),t._v("/src\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --recursive https://github.com/Auterion/px4-ros2-interface-lib\n")])])]),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("To ensure compatibility, use the latest "),s("em",[t._v("main")]),t._v(" branches for PX4, "),s("em",[t._v("px4_msgs")]),t._v(" and the library.\nSee also "),s("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib#compatibility-with-px4",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".")])])])]),t._v(" "),s("p",[t._v(":::")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("Build the workspace:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\ncolcon build\n")])])])]),t._v(" "),s("li",[s("p",[t._v("In a different shell, start PX4 SITL:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$px4")]),t._v("-autopilot\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_sitl gazebo-classic\n")])])]),s("p",[t._v("(here we use Gazebo-Classic, but you can use any model or simulator)")])]),t._v(" "),s("li",[s("p",[t._v("In yet a different shell, run the micro XRCE agent (you can keep it running afterward):")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("MicroXRCEAgent udp4 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Back in the ROS 2 terminal, source the workspace you just built (in step 3) and run the "),s("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/tree/main/examples/cpp/navigation/global_navigation",target:"_blank",rel:"noopener noreferrer"}},[t._v("global_navigation"),s("OutboundLink")],1),t._v(" example, which periodically sends dummy global position updates:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" install/setup.bash\nros2 run example_global_navigation_cpp example_global_navigation\n")])])]),s("p",[t._v("You should get an output like this showing that the global interface is successfully sending position updates:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("INFO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1702030701.836897756")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_global_navigation_node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": example_global_navigation_node running"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1702030702.837279784")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_global_navigation_node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Successfully sent position update to navigation interface.\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEBUG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1702030703.837223884")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("example_global_navigation_node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Successfully sent position update to navigation interface.\n")])])])]),t._v(" "),s("li",[s("p",[t._v("In the PX4 shell, you can check that PX4 receives global position updates:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("listener aux_global_position\n")])])]),s("p",[t._v("The output should look like:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("TOPIC: aux_global_position\naux_global_position\n   timestamp: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("46916000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.528000")]),t._v(" seconds ago"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   timestamp_sample: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("46916000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" us before timestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   lat: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.343210")]),t._v("\n   lon: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23.454320")]),t._v("\n   alt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.40000")]),t._v("\n   alt_ellipsoid: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00000")]),t._v("\n   delta_alt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00000")]),t._v("\n   eph: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.31623")]),t._v("\n   epv: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.44721")]),t._v("\n   terrain_alt: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00000")]),t._v("\n   lat_lon_reset_counter: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n   alt_reset_counter: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n   terrain_alt_valid: False\n   dead_reckoning: False\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Now you are ready to use the navigation interface to send your own position updates.")])])]),t._v(" "),s("h2",{attrs:{id:"how-to-use-the-library"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use-the-library"}},[t._v("#")]),t._v(" How to use the Library")]),t._v(" "),s("p",[t._v("To send a position measurement, you populate the position struct with the values you have measured.\nThen call the interface's update function with that struct as the argument.")]),t._v(" "),s("p",[t._v("For a basic example of how to use this interface, check out the "),s("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/tree/main/examples/cpp/navigation",target:"_blank",rel:"noopener noreferrer"}},[t._v("examples"),s("OutboundLink")],1),t._v(" in the "),s("code",[t._v("Auterion/px4-ros2-interface-lib")]),t._v(" repository, such as "),s("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/blob/main/examples/cpp/navigation/local_navigation/include/local_navigation.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("examples/cpp/navigation/local_navigation"),s("OutboundLink")],1),t._v(" or "),s("a",{attrs:{href:"https://github.com/Auterion/px4-ros2-interface-lib/blob/main/examples/cpp/navigation/local_navigation/include/global_navigation.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("examples/cpp/navigation/global_navigation"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"local-position-updates"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#local-position-updates"}},[t._v("#")]),t._v(" Local Position Updates")]),t._v(" "),s("p",[t._v("First ensure that the PX4 parameter "),s("RouterLink",{attrs:{to:"/ko/advanced_config/parameter_reference.html#EKF2_EV_CTRL"}},[s("code",[t._v("EKF2_EV_CTRL")])]),t._v(" is properly configured to fuse external local measurements, by setting the appropriate bits to "),s("code",[t._v("true")]),t._v(":")],1),t._v(" "),s("ul",[s("li",[s("code",[t._v("0")]),t._v(": Horizontal position data")]),t._v(" "),s("li",[s("code",[t._v("1")]),t._v(": Vertical position data")]),t._v(" "),s("li",[s("code",[t._v("2")]),t._v(": Velocity data")]),t._v(" "),s("li",[s("code",[t._v("3")]),t._v(": Yaw data")])]),t._v(" "),s("p",[t._v("To send a local position measurement to PX4:")]),t._v(" "),s("ol",[s("li",[t._v("Create a "),s("a",{attrs:{href:"https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1LocalPositionMeasurementInterface.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("LocalPositionMeasurementInterface")]),s("OutboundLink")],1),t._v(" instance by providing it with: a ROS node, and the pose and velocity reference frames of your measurements.")]),t._v(" "),s("li",[t._v("Populate a "),s("a",{attrs:{href:"https://auterion.github.io/px4-ros2-interface-lib/structpx4__ros2_1_1LocalPositionMeasurement.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("LocalPositionMeasurement")]),s("OutboundLink")],1),t._v(" "),s("code",[t._v("struct")]),t._v(" with your measurements.")]),t._v(" "),s("li",[t._v("Pass the "),s("code",[t._v("struct")]),t._v(" to the "),s("code",[t._v("LocalPositionMeasurementInterface")]),t._v(" "),s("a",{attrs:{href:"https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1LocalPositionMeasurementInterface.html#a6fd180b944710716d418b2cfe1c0c8e3",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("update()")]),s("OutboundLink")],1),t._v(" method.")])]),t._v(" "),s("p",[t._v("The available pose and velocity reference frames for your measurements are defined by the following "),s("code",[t._v("enum")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PoseFrame")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Unknown"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  LocalNED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  LocalFRD\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VelocityFrame")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Unknown"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  LocalNED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  LocalFRD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  BodyFRD\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("LocalPositionMeasurement")]),t._v(" struct is defined as follows:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalPositionMeasurement")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   rclcpp"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Time timestamp_sample "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Eigen"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector2f"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" position_xy "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Eigen"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector2f"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" position_xy_variance "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" position_z "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" position_z_variance "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Eigen"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector2f"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" velocity_xy "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Eigen"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector2f"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" velocity_xy_variance "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" velocity_z "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" velocity_z_variance "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Eigen"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Quaternionf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" attitude_quaternion "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Eigen"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector3f"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" attitude_variance "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("update()")]),t._v(" method of the local interface expects the following conditions to hold for "),s("code",[t._v("LocalPositionMeasurement")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("The sample timestamp is defined.")]),t._v(" "),s("li",[t._v("Values do not have a `NAN``.")]),t._v(" "),s("li",[t._v("If a measurement value is provided, its associated variance value is well defined (e.g. if "),s("code",[t._v("position_xy")]),t._v(" is defined, then "),s("code",[t._v("position_xy_variance")]),t._v(" must be defined).")]),t._v(" "),s("li",[t._v("If a measurement value is provided, its associated reference frame is not unknown (e.g. if "),s("code",[t._v("position_xy")]),t._v(" is defined, then the interface was initialised with a pose frame different from "),s("code",[t._v("PoseFrame::Unknown")]),t._v(").")])]),t._v(" "),s("p",[t._v("The following code snippet is an example of a ROS 2 node which uses the local navigation interface to send 3D pose updates in the North-East-Down (NED) reference frame to PX4:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyLocalMeasurementUpdateNode")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" rclcpp"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyLocalMeasurementUpdateNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_node_name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set pose measurement reference frame to north-east-down")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("PoseFrame pose_frame "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("PoseFrame"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("LocalNED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We will only send pose measurements in this example")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set velocity measurement reference frame to unknown")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VelocityFrame velocity_frame "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VelocityFrame"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Unknown"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize local interface [1]")]),t._v("\n      _local_position_measurement_interface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n         std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_shared")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("LocalPositionMeasurementInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pose_frame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" velocity_frame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("running"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Potentially make method run as a callback or on a timer")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Generate local position measurement")]),t._v("\n         rclcpp"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Time timestamp_sample  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n         Eigen"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector2f position_xy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n         Eigen"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector2f position_xy_variance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" position_z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" position_z_variance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Populate the local position measurement struct [2]")]),t._v("\n         px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("LocalPositionMeasurement local_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         local_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timestamp_sample "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timestamp_sample"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         local_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position_xy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" position_xy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         local_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position_xy_variance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" position_xy_variance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         local_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position_z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" position_z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         local_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position_z_variance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" position_z_variance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Send measurement to PX4 using the interface [3]")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            _local_position_measurement_interface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("local_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("NavigationInterfaceInvalidArgument "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handle exceptions caused by invalid local_position_measurement definition")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RCLCPP_ERROR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_logger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exception caught: %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("what")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("LocalPositionMeasurementInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _local_position_measurement_interface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"global-position-updates"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#global-position-updates"}},[t._v("#")]),t._v(" Global Position Updates")]),t._v(" "),s("p",[t._v("First ensure that the PX4 parameter "),s("RouterLink",{attrs:{to:"/ko/advanced_config/parameter_reference.html#EKF2_AGP_CTRL"}},[s("code",[t._v("EKF2_AGP_CTRL")])]),t._v(" is properly configured to fuse external global measurements, by setting the appropriate bits to "),s("code",[t._v("true")]),t._v(":")],1),t._v(" "),s("ul",[s("li",[s("code",[t._v("0")]),t._v(": Horizontal position data")]),t._v(" "),s("li",[s("code",[t._v("1")]),t._v(": Vertical position data")])]),t._v(" "),s("p",[t._v("To send a global position measurement to PX4:")]),t._v(" "),s("ol",[s("li",[t._v("Create a "),s("a",{attrs:{href:"https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1GlobalPositionMeasurementInterface.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("GlobalPositionMeasurementInterface")]),s("OutboundLink")],1),t._v(" instance by providing it with a ROS node.")]),t._v(" "),s("li",[t._v("Populate a "),s("a",{attrs:{href:"https://auterion.github.io/px4-ros2-interface-lib/structpx4__ros2_1_1GlobalPositionMeasurement.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("GlobalPositionMeasurement")]),s("OutboundLink")],1),t._v(" "),s("code",[t._v("struct")]),t._v(" with your measurements.")]),t._v(" "),s("li",[t._v("Pass the struct to the "),s("code",[t._v("GlobalPositionMeasurementInterface")]),t._v(" "),s("a",{attrs:{href:"https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1GlobalPositionMeasurementInterface.html#a1a183b595ef7f6a22f3a83ba543fe86d",target:"_blank",rel:"noopener noreferrer"}},[t._v("update()"),s("OutboundLink")],1),t._v(" method.")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("GlobalPositionMeasurement")]),t._v(" struct is defined as follows:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GlobalPositionMeasurement")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   rclcpp"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Time timestamp_sample "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Eigen"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector2d"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lat_lon "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" horizontal_variance "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" altitude_msl "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("optional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" vertical_variance "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("nullopt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("update()")]),t._v(" method of the global interface expects the following conditions to hold for "),s("code",[t._v("GlobalPositionMeasurement")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("The sample "),s("code",[t._v("timestamp_sample")]),t._v(" is defined.")]),t._v(" "),s("li",[t._v("Values do not have a NAN.")]),t._v(" "),s("li",[t._v("If a measurement value is provided, its associated variance value is well defined (e.g. if "),s("code",[t._v("lat_lon")]),t._v(" is defined, then "),s("code",[t._v("horizontal_variance")]),t._v(" must be defined).")])]),t._v(" "),s("p",[t._v("The following code snippet is an example of a ROS 2 node which uses the global navigation interface to send a measurement with latitude, longitude and altitude to PX4:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyGlobalMeasurementUpdateNode")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" rclcpp"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyGlobalMeasurementUpdateNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_node_name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize global interface [1]")]),t._v("\n      _global_position_measurement_interface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n         std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_shared")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("GlobalPositionMeasurementInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("running"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Potentially make method run as a callback or on a timer")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Generate global position measurement")]),t._v("\n         rclcpp"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Time timestamp_sample  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n         Eigen"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Vector2d lat_lon "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" horizontal_variance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" altitude_msl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" vertical_variance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Populate the global position measurement struct [2]")]),t._v("\n         px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("GlobalPositionMeasurement global_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         global_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timestamp_sample "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timestamp_sample"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         global_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lat_lon "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lat_lon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         global_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("horizontal_variance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" horizontal_variance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         global_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("altitude_msl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" altitude_msl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         global_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vertical_variance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vertical_variance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Send measurement to PX4 using the interface [3]")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            _global_position_measurement_interface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("global_position_measurement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("NavigationInterfaceInvalidArgument "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handle exceptions caused by invalid global_position_measurement definition")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RCLCPP_ERROR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_logger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exception caught: %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("what")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n   std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros2"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("GlobalPositionMeasurementInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _global_position_measurement_interface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"multiple-instances-of-an-interface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multiple-instances-of-an-interface"}},[t._v("#")]),t._v(" Multiple Instances of an Interface")]),t._v(" "),s("p",[t._v("Using multiple instances of the same interface (e.g. local and local) to send estimation updates will stream all update messages to the same topic and result in cross-talk.\nThis should not affect measurement fusion into the EKF, but different measurement sources will become indistinguishable.")])],1)}),[],!1,null,null,null);a.default=e.exports}}]);