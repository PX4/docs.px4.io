import{_ as a,c as t,a8 as o,o as r}from"./chunks/framework.BDnHobkS.js";const p=JSON.parse('{"title":"ROS 1 (Deprecated)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/ros/ros1.md","filePath":"zh/ros/ros1.md"}'),i={name:"zh/ros/ros1.md"};function n(s,e,l,h,m,c){return r(),t("div",null,e[0]||(e[0]=[o('<h1 id="ros-1-deprecated" tabindex="-1">ROS 1 (Deprecated) <a class="header-anchor" href="#ros-1-deprecated" aria-label="Permalink to &quot;ROS 1 (Deprecated)&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The PX4 development team recommend that users migrate to <a href="./../ros2/">ROS 2</a> (i.e. skip this section)!</p><p>ROS 1 is now &quot;discommended&quot; as the last LTS version is approaching end of life. ROS 2 has much deeper integration with PX4, enabling lower-latency communication with access to PX4 internal messaging.</p></div><p><a href="http://www.ros.org/" target="_blank" rel="noreferrer">ROS (1)</a> is a general purpose robotics library that can be used with PX4 for drone application development.</p><p>This version of ROS uses the <a href="./../ros/mavros_installation.html">MAVROS</a> package to communicate with PX4 over <a href="./../middleware/mavlink.html">MAVLink</a> (MAVROS bridges ROS topics to MAVLink and PX4 conventions).</p><h2 id="topics" tabindex="-1">Topics <a class="header-anchor" href="#topics" aria-label="Permalink to &quot;Topics&quot;">​</a></h2><ul><li><a href="./../ros/mavros_installation.html">ROS/MAVROS Installation Guide</a>: Setup a PX4 development environment with ROS 1 and MAVROS.</li><li><a href="./../ros/mavros_offboard_cpp.html">ROS/MAVROS Offboard Example (C++)</a>: Tutorial showing the main concepts related to writing a C++ MAVROS/ROS node.</li><li><a href="./../ros/mavros_custom_messages.html">ROS MAVROS Sending Custom Messages</a></li><li><a href="./../simulation/ros_interface.html">ROS with Gazebo Classic Simulation</a></li><li><a href="./../sim_gazebo_classic/octomap.html">Gazebo Classic OctoMap Models with ROS</a></li><li><a href="./../ros/raspberrypi_installation.html">ROS Installation on RPi</a></li><li><a href="./../ros/external_position_estimation.html">External Position Estimation (Vision/Motion based)</a></li></ul><h2 id="further-infomration" tabindex="-1">Further Infomration <a class="header-anchor" href="#further-infomration" aria-label="Permalink to &quot;Further Infomration&quot;">​</a></h2><ul><li><a href="https://github.com/robin-shaun/XTDrone/blob/master/README.en.md" target="_blank" rel="noreferrer">XTDrone</a> - ROS + PX4 simulation environment for computer vision. The <a href="https://www.yuque.com/xtdrone/manual_en" target="_blank" rel="noreferrer">XTDrone Manual</a> has everything you need to get started!</li><li><a href="https://github.com/amov-lab/Prometheus/blob/master/README_EN.md" target="_blank" rel="noreferrer">Prometheus Autonomous Drone Project</a> - Prometheus is a ROS 1 based, BSD-3 licensed collection of autonomous drone software packages from <a href="https://github.com/amov-lab" target="_blank" rel="noreferrer">AMOVLab</a>, which provides a full set of solutions for the intelligent and autonomous flight of drones, such as mapping, localization, planning, control, and target detection, fully integrated with the <a href="./../sim_gazebo_classic/">Gazebo Classic</a> Simulator.</li></ul>',8)]))}const u=a(i,[["render",n]]);export{p as __pageData,u as default};
