import{_ as i,c as a,a8 as e,o as n}from"./chunks/framework.BDnHobkS.js";const c=JSON.parse('{"title":"RoverAckermannSetpoint (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/msg_docs/RoverAckermannSetpoint.md","filePath":"ko/msg_docs/RoverAckermannSetpoint.md"}'),t={name:"ko/msg_docs/RoverAckermannSetpoint.md"};function r(p,s,l,k,o,h){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="roverackermannsetpoint-uorb-message" tabindex="-1">RoverAckermannSetpoint (UORB message) <a class="header-anchor" href="#roverackermannsetpoint-uorb-message" aria-label="Permalink to &quot;RoverAckermannSetpoint (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/RoverAckermannSetpoint.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 forward_speed_setpoint 		  # [m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s] Desired speed in body x direction. Positiv: forwards, Negativ: backwards</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 forward_speed_setpoint_normalized # [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] Desired normalized speed in body x direction. Positiv: forwards, Negativ: backwards</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 steering_setpoint      		  # [rad] Desired steering angle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 steering_setpoint_normalized      # [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] Desired normalized steering angle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 lateral_acceleration_setpoint     # [m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] Desired acceleration in body y direction. Positiv: right, Negativ: left.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># TOPICS rover_ackermann_setpoint</span></span></code></pre></div>`,3)]))}const E=i(t,[["render",r]]);export{c as __pageData,E as default};
