import{_ as a,c as t,a8 as r,o as i}from"./chunks/framework.BDnHobkS.js";const f=JSON.parse('{"title":"Arm, Disarm, Prearm Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"zh/advanced_config/prearm_arm_disarm.md","filePath":"zh/advanced_config/prearm_arm_disarm.md"}'),o={name:"zh/advanced_config/prearm_arm_disarm.md"};function s(n,e,l,m,d,c){return i(),t("div",null,e[0]||(e[0]=[r('<h1 id="arm-disarm-prearm-configuration" tabindex="-1">Arm, Disarm, Prearm Configuration <a class="header-anchor" href="#arm-disarm-prearm-configuration" aria-label="Permalink to &quot;Arm, Disarm, Prearm Configuration&quot;">​</a></h1><p>机体是有可移动的部件的，其中一些在通电后会有潜在的危险性（特别是电机和螺旋桨）！</p><p>为了减少发生事故的可能性， PX4 有明确的载具部件供电状态：</p><ul><li><strong>Disarmed:</strong> There is no power to motors or actuators.</li><li><strong>Pre-armed:</strong> Motors/propellers are locked but actuators for non-dangerous electronics are powered (e.g. ailerons, flaps etc.).</li><li><strong>Armed:</strong> Vehicle is fully powered. 电机/螺旋桨可能转动（危险！）</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Ground stations may display <em>disarmed</em> for pre-armed vehicles. 虽然技术上不适合预解锁的载具，但它是“安全的”。</p></div><p>Users can control progression though these states using a <a href="./../getting_started/px4_basic_concepts.html#safety-switch">safety switch</a> on the vehicle (optional) <em>and</em> an <a href="#arm_disarm_switch">arming switch/button</a>, <a href="#arm_disarm_gestures">arming gesture</a>, or <em>MAVLink command</em> on the ground controller:</p><ul><li><p>A <em>safety switch</em> is a control <em>on the vehicle</em> that must be engaged before the vehicle can be armed, and which may also prevent prearming (depending on the configuration). 通常，安全开关被集成到 GPS 单元中，但也可能是一个单独的物理组件。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>A vehicle that is armed is potentially dangerous. 安全开关是防止意外解锁发生的一个附加机制。</p></div></li></ul><p>:::</p><ul><li><p>An <em>arming switch</em> is a switch or button <em>on an RC controller</em> that can be used to arm the vehicle and start motors (provided arming is not prevented by a safety switch).</p></li><li><p>An <em>arming gesture</em> is a stick movement <em>on an RC controller</em> that can be used as an alternative to an arming switch.</p></li><li><p>也可以通过地面站发送 MAVLink 命令来解锁/锁定载具。</p></li></ul><p>如果在解锁后的一段时间内没有起飞，和如果着陆后没有手动锁定， PX4 会自动锁定载具。 这减少了解锁的载具在地面上的时间。</p><p>PX4 allows you to configure how pre-arming, arming and disarming work using parameters (which can be edited in <em>QGroundControl</em> via the <a href="./../advanced_config/parameters.html">parameter editor</a>), as described in the following sections.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Arming/disarming parameters can be found in <a href="./../advanced_config/parameter_reference.html#commander">Parameter Reference &gt; Commander</a> (search for <code>COM_ARM_*</code> and <code>COM_DISARM_*</code>).</p></div><h2 id="arm_disarm_gestures" tabindex="-1">Arming/Disarming Gestures <a class="header-anchor" href="#arm_disarm_gestures" aria-label="Permalink to &quot;Arming/Disarming Gestures {#arm_disarm_gestures}&quot;">​</a></h2><p>默认情况下，载具可以通过移动遥控器的油门/偏航摇杆到特定的位置，并保持 1 秒来解锁和锁定。</p><ul><li><strong>Arming:</strong> Throttle minimum, yaw maximum</li><li><strong>Disarming:</strong> Throttle minimum, yaw minimum</li></ul><p>RC controllers will use different sticks for throttle and yaw <a href="./../getting_started/rc_transmitter_receiver.html#types-of-remote-controllers">based on their mode</a>, and hence different gestures:</p><ul><li><strong>Mode 2</strong>: <ul><li><em>Arm:</em> Left stick to bottom right.</li><li><em>Disarm:</em> Left stick to the bottom left.</li></ul></li><li><strong>Mode 1</strong>: <ul><li><em>Arm:</em> Left-stick to right, right-stick to bottom.</li><li><em>Disarm:</em> Left-stick to left, right-stick to the bottom.</li></ul></li></ul><p>The required hold time can be configured using <a href="#COM_RC_ARM_HYST">COM_RC_ARM_HYST</a>. Note that by default (<a href="#COM_DISARM_MAN">COM_DISARM_MAN</a>) you can also disarm in flight using gestures/buttons: you may choose to disable this to avoid accidental disarming.</p><table tabindex="0"><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><a id="MAN_ARM_GESTURE"></a><a href="./../advanced_config/parameter_reference.html#MAN_ARM_GESTURE">MAN_ARM_GESTURE</a></td><td>Enable arm/disarm stick guesture. <code>0</code>: Disabled, <code>1</code>: Enabled (default).</td></tr><tr><td><a id="COM_DISARM_MAN"></a><a href="./../advanced_config/parameter_reference.html#COM_DISARM_MAN">COM_DISARM_MAN</a></td><td>Enable disarming in flight via switch/stick/button in MC manual thrust modes. <code>0</code>: Disabled, <code>1</code>: Enabled (default).</td></tr><tr><td><a id="COM_RC_ARM_HYST"></a><a href="./../advanced_config/parameter_reference.html#COM_RC_ARM_HYST">COM_RC_ARM_HYST</a></td><td>Time that RC stick must be held in arm/disarm position before arming/disarming occurs (default: <code>1</code> second).</td></tr></tbody></table><h2 id="arm_disarm_switch" tabindex="-1">Arming Button/Switch <a class="header-anchor" href="#arm_disarm_switch" aria-label="Permalink to &quot;Arming Button/Switch {#arm_disarm_switch}&quot;">​</a></h2><p>An <em>arming button</em> or &quot;momentary switch&quot; can be configured to trigger arm/disarm <em>instead</em> of <a href="#arm_disarm_gestures">gesture-based arming</a> (setting an arming switch disables arming gestures). The button should be held down for (<a href="#COM_RC_ARM_HYST">nominally</a>) one second to arm (when disarmed) or disarm (when armed).</p><p>A two-position switch can also be used for arming/disarming, where the respective arm/disarm commands are sent on switch <em>transitions</em>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Two-position arming switches are primarily used in/recommended for racing drones.</p></div><p>The switch or button is assigned (and enabled) using <a href="#RC_MAP_ARM_SW">RC_MAP_ARM_SW</a>, and the switch &quot;type&quot; is configured using <a href="#COM_ARM_SWISBTN">COM_ARM_SWISBTN</a>.</p><table tabindex="0"><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><a id="RC_MAP_ARM_SW"></a><a href="./../advanced_config/parameter_reference.html#RC_MAP_ARM_SW">RC_MAP_ARM_SW</a></td><td>RC arm switch channel (default: 0 - unassigned). If defined, the specified RC channel (button/switch) is used for arming instead of a stick gesture. <br><strong>Note:</strong><br>- This setting <em>disables the stick gesture</em>!<br>- This setting applies to RC controllers. It does not apply to Joystick controllers that are connected via <em>QGroundControl</em>.</td></tr><tr><td><a id="COM_ARM_SWISBTN"></a><a href="./../advanced_config/parameter_reference.html#COM_ARM_SWISBTN">COM_ARM_SWISBTN</a></td><td>Arm switch is a momentary button. <br>- <code>0</code>: Arm switch is a 2-position switch where arm/disarm commands are sent on switch transitions.<br>-<code>1</code>: Arm switch is a button or momentary button where the arm/disarm command ae sent after holding down button for set time (<a href="#COM_RC_ARM_HYST">COM_RC_ARM_HYST</a>).</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The switch can also be set as part of <em>QGroundControl</em> <a href="./../config/flight_mode.html">Flight Mode</a> configuration.</p></div><h2 id="自动上锁" tabindex="-1">自动上锁 <a class="header-anchor" href="#自动上锁" aria-label="Permalink to &quot;自动上锁&quot;">​</a></h2><p>By default vehicles will automatically disarm on landing, or if you take too long to take off after arming. The feature is configured using the following timeouts.</p><table tabindex="0"><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><a id="COM_DISARM_LAND"></a><a href="./../advanced_config/parameter_reference.html#COM_DISARM_LAND">COM_DISARM_LAND</a></td><td>降落后自动锁定超时时间. Default: 2s (-1 to disable).</td></tr><tr><td><a id="COM_DISARM_PRFLT"></a><a href="./../advanced_config/parameter_reference.html#COM_DISARM_PRFLT">COM_DISARM_PRFLT</a></td><td>Time-out for auto disarm if too slow to takeoff. Default: 10s (&lt;=0 to disable).</td></tr></tbody></table><h2 id="pre-arm-checks" tabindex="-1">Pre-Arm Checks <a class="header-anchor" href="#pre-arm-checks" aria-label="Permalink to &quot;Pre-Arm Checks&quot;">​</a></h2><p>To reduce accidents, vehicles are only allowed to arm certain conditions are met (some of which are configurable). Arming is prevented if:</p><ul><li>The vehicle is not in a &quot;healthy&quot; state. For example it is not calibrated, or is reporting sensor errors.</li><li>The vehicle has a <a href="./../getting_started/px4_basic_concepts.html#safety-switch">safety switch</a> that has not been engaged.</li><li>The vehicle has a <a href="./../peripherals/remote_id.html">remote ID</a> that is unhealthy or otherwise not ready</li><li>A VTOL vehicle is in fixed-wing mode (<a href="./../advanced_config/parameter_reference.html#CBRK_VTOLARMING">by default</a>).</li><li>The current mode requires an adequate global position estimate but the vehicle does not have GPS lock.</li><li>Many more (see <a href="./../config/safety.html#arming-disarming-settings">arming/disarming safety settings</a> for more information).</li></ul><p>The current failed checks can be viewed in QGroundControl (v4.2.0 and later) <a href="./../flying/pre_flight_checks.html#qgc-arming-check-report">Arming Check Report</a> (see also <a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/fly_view/fly_view.md#arm" target="_blank" rel="noreferrer">Fly View &gt; Arming and Preflight Checks</a>).</p><p>Note that internally PX4 runs arming checks at 10Hz. A list of the failed checks is kept, and if the list changes PX4 emits the current list using the <a href="./../concept/events_interface.html">Events interface</a>. The list is also sent out when the GCS connects. Effectively the GCS knows the status of prearm checks immediately, both when disarmed and armed.</p><details class="details custom-block"><summary>Details</summary><p>Implementation notes for developers The client implementation is in <a href="https://github.com/mavlink/libevents" target="_blank" rel="noreferrer">libevents</a>:</p><ul><li><a href="https://github.com/mavlink/libevents#event-groups" target="_blank" rel="noreferrer">libevents &gt; Event groups</a></li><li><a href="https://github.com/mavlink/libevents/blob/main/libs/cpp/parse/health_and_arming_checks.h" target="_blank" rel="noreferrer">health_and_arming_checks.h</a></li></ul><p>QGC implementation: <a href="https://github.com/mavlink/qgroundcontrol/blob/master/src/MAVLink/LibEvents/HealthAndArmingCheckReport.cc" target="_blank" rel="noreferrer">HealthAndArmingCheckReport.cc</a>.</p></details><p>PX4 also emits a subset of the arming check information in the <a href="https://mavlink.io/en/messages/common.html#SYS_STATUS" target="_blank" rel="noreferrer">SYS_STATUS</a> message (see <a href="https://mavlink.io/en/messages/common.html#MAV_SYS_STATUS_SENSOR" target="_blank" rel="noreferrer">MAV_SYS_STATUS_SENSOR</a>).</p><h2 id="arming-sequence-pre-arm-mode-safety-button" tabindex="-1">Arming Sequence: Pre Arm Mode &amp; Safety Button <a class="header-anchor" href="#arming-sequence-pre-arm-mode-safety-button" aria-label="Permalink to &quot;Arming Sequence: Pre Arm Mode &amp; Safety Button&quot;">​</a></h2><p>The arming sequence depends on whether or not there is a <em>safety switch</em>, and is controlled by the parameters <a href="#COM_PREARM_MODE">COM_PREARM_MODE</a> (Prearm mode) and <a href="#CBRK_IO_SAFETY">CBRK_IO_SAFETY</a> (I/O safety circuit breaker).</p><p>The <a href="#COM_PREARM_MODE">COM_PREARM_MODE</a> parameter defines when/if pre-arm mode is enabled (&quot;safe&quot;/non-throttling actuators are able to move):</p><ul><li><em>Disabled</em>: Pre-arm mode disabled (there is no stage where only &quot;safe&quot;/non-throttling actuators are enabled).</li><li><em>Safety Switch</em> (Default): The pre-arm mode is enabled by the safety switch. If there is no safety switch then pre-arm mode will not be enabled.</li><li><em>Always</em>: Prearm mode is enabled from power up.</li></ul><p>If there is a safety switch then this will be a precondition for arming. If there is no safety switch the I/O safety circuit breaker must be engaged (<a href="#CBRK_IO_SAFETY">CBRK_IO_SAFETY</a>), and arming will depend only on the arm command.</p><p>The sections below detail the startup sequences for the different configurations</p><h3 id="默认-com-prearm-mode-safety-and-safety-switch" tabindex="-1">默认：COM_PREARM_MODE=Safety and Safety Switch <a class="header-anchor" href="#默认-com-prearm-mode-safety-and-safety-switch" aria-label="Permalink to &quot;默认：COM_PREARM_MODE=Safety and Safety Switch&quot;">​</a></h3><p>The default configuration uses safety switch to prearm. From prearm you can then arm to engage all motors/actuators. It corresponds to: <a href="#COM_PREARM_MODE">COM_PREARM_MODE=1</a> (safety switch) and <a href="#CBRK_IO_SAFETY">CBRK_IO_SAFETY=0</a> (I/O safety circuit breaker disabled).</p><p>The default startup sequence is:</p><ol><li><p>Power-up.</p><ul><li>All actuators locked into disarmed position</li><li>Not possible to arm.</li></ul></li><li><p>Safety switch is pressed.</p><ul><li>System now prearmed: non-throttling actuators can move (e.g. ailerons).</li><li>System safety is off: Arming possible.</li></ul></li><li><p>Arm command is issued.</p><ul><li>The system is armed.</li><li>All motors and actuators can move.</li></ul></li></ol><h3 id="com-prearm-mode-disabled-and-safety-switch" tabindex="-1">COM_PREARM_MODE=Disabled and Safety Switch <a class="header-anchor" href="#com-prearm-mode-disabled-and-safety-switch" aria-label="Permalink to &quot;COM_PREARM_MODE=Disabled and Safety Switch&quot;">​</a></h3><p>When prearm mode is <em>Disabled</em>, engaging the safety switch does not unlock the &quot;safe&quot; actuators, though it does allow you to then arm the vehicle. This corresponds to <a href="#COM_PREARM_MODE">COM_PREARM_MODE=0</a> (Disabled) and <a href="#CBRK_IO_SAFETY">CBRK_IO_SAFETY=0</a> (I/O safety circuit breaker disabled).</p><p>The startup sequence is:</p><ol><li><p>Power-up.</p><ul><li>All actuators locked into disarmed position</li><li>Not possible to arm.</li></ul></li><li><p>Safety switch is pressed.</p><ul><li><em>All actuators stay locked into disarmed position (same as disarmed).</em></li><li>System safety is off: Arming possible.</li></ul></li><li><p>Arm command is issued.</p><ul><li>The system is armed.</li><li>All motors and actuators can move.</li></ul></li></ol><h3 id="com-prearm-mode-always-and-safety-switch" tabindex="-1">COM_PREARM_MODE=Always and Safety Switch <a class="header-anchor" href="#com-prearm-mode-always-and-safety-switch" aria-label="Permalink to &quot;COM_PREARM_MODE=Always and Safety Switch&quot;">​</a></h3><p>When prearm mode is <em>Always</em>, prearm mode is enabled from power up. To arm, you still need the safety switch. This corresponds to <a href="#COM_PREARM_MODE">COM_PREARM_MODE=2</a> (Always) and <a href="#CBRK_IO_SAFETY">CBRK_IO_SAFETY=0</a> (I/O safety circuit breaker disabled).</p><p>The startup sequence is:</p><ol><li>Power-up. <ul><li>System now prearmed: non-throttling actuators can move (e.g. ailerons).</li><li>Not possible to arm.</li></ul></li><li>Safety switch is pressed. <ul><li>System safety is off: Arming possible.</li></ul></li><li>Arm command is issued. <ul><li>The system is armed.</li><li>All motors and actuators can move.</li></ul></li></ol><h3 id="com-prearm-mode-safety-or-disabled-and-no-safety-switch" tabindex="-1">COM_PREARM_MODE=Safety or Disabled and No Safety Switch <a class="header-anchor" href="#com-prearm-mode-safety-or-disabled-and-no-safety-switch" aria-label="Permalink to &quot;COM_PREARM_MODE=Safety or Disabled and No Safety Switch&quot;">​</a></h3><p>With no safety switch, when <code>COM_PREARM_MODE</code> is set to <em>Safety</em> or <em>Disabled</em> prearm mode cannot be enabled (same as disarmed). This corresponds to <a href="#COM_PREARM_MODE">COM_PREARM_MODE=0 or 1</a> (Disabled/Safety Switch) and <a href="#CBRK_IO_SAFETY">CBRK_IO_SAFETY=22027</a> (I/O safety circuit breaker engaged).</p><p>The startup sequence is:</p><ol><li>Power-up. <ul><li>All actuators locked into disarmed position</li><li>System safety is off: Arming possible.</li></ul></li><li>Arm command is issued. <ul><li>The system is armed.</li><li>All motors and actuators can move.</li></ul></li></ol><h3 id="com-prearm-mode-always-and-no-safety-switch" tabindex="-1">COM_PREARM_MODE=Always and No Safety Switch <a class="header-anchor" href="#com-prearm-mode-always-and-no-safety-switch" aria-label="Permalink to &quot;COM_PREARM_MODE=Always and No Safety Switch&quot;">​</a></h3><p>When prearm mode is <em>Always</em>, prearm mode is enabled from power up. This corresponds to <a href="#COM_PREARM_MODE">COM_PREARM_MODE=2</a> (Always) and <a href="#CBRK_IO_SAFETY">CBRK_IO_SAFETY=22027</a> (I/O safety circuit breaker engaged).</p><p>The startup sequence is:</p><ol><li>Power-up. <ul><li>System now prearmed: non-throttling actuators can move (e.g. ailerons).</li><li>System safety is off: Arming possible.</li></ul></li><li>Arm command is issued. <ul><li>The system is armed.</li><li>All motors and actuators can move.</li></ul></li></ol><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><a id="COM_PREARM_MODE"></a><a href="./../advanced_config/parameter_reference.html#COM_PREARM_MODE">COM_PREARM_MODE</a></td><td>Condition to enter prearmed mode. <code>0</code>: Disabled, <code>1</code>: Safety switch (prearm mode enabled by safety switch; if no switch present cannot be enabled), <code>2</code>: Always (prearm mode enabled from power up). Default: <code>1</code> (safety button).</td></tr><tr><td><a id="CBRK_IO_SAFETY"></a><a href="./../advanced_config/parameter_reference.html#CBRK_IO_SAFETY">CBRK_IO_SAFETY</a></td><td>Circuit breaker for IO safety.</td></tr></tbody></table>',64)]))}const u=a(o,[["render",s]]);export{f as __pageData,u as default};
