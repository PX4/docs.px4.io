import{_ as h,c as l,a8 as a,j as s,a as i,o as e}from"./chunks/framework.BDnHobkS.js";const c=JSON.parse('{"title":"仿真调试","description":"","frontmatter":{},"headers":[],"relativePath":"zh/debug/simulation_debugging.md","filePath":"zh/debug/simulation_debugging.md"}'),n={name:"zh/debug/simulation_debugging.md"};function k(p,t,d,F,r,g){return e(),l("div",null,t[0]||(t[0]=[a(`<h1 id="仿真调试" tabindex="-1">仿真调试 <a class="header-anchor" href="#仿真调试" aria-label="Permalink to &quot;仿真调试&quot;">​</a></h1><p>当模拟在主机上运行时，所有桌面开发工具都可用。</p><h2 id="clang-address-sanitizer-mac-os-linux" tabindex="-1">CLANG Address Sanitizer (Mac OS, Linux) <a class="header-anchor" href="#clang-address-sanitizer-mac-os-linux" aria-label="Permalink to &quot;CLANG Address Sanitizer (Mac OS, Linux)&quot;">​</a></h2><p>The Clang address sanitizer can help to find alignment (bus) errors and other memory faults like segmentation faults. The command below sets the right compile options. 下面的命令设置了正确的编译选项。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 仅需在常规编译后，第一次运行 address sanitizer 时使用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_ASAN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><h2 id="valgrind" tabindex="-1">Valgrind <a class="header-anchor" href="#valgrind" aria-label="Permalink to &quot;Valgrind&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> valgrind</span></span></code></pre></div><p>或</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> valgrind</span></span></code></pre></div><p>SITL can be launched with and without debugger attached and with either jMAVSim or Gazebo as simulation backend. This results in the start options below:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 通过 cmake 配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim___gdb</span></span></code></pre></div><h2 id="launch-gazebo-classic-sitl-without-debugger" tabindex="-1">Launch Gazebo Classic SITL Without Debugger <a class="header-anchor" href="#launch-gazebo-classic-sitl-without-debugger" aria-label="Permalink to &quot;Launch Gazebo Classic SITL Without Debugger&quot;">​</a></h2><p>By default SITL is launched without a debugger attached when using any simulator backend:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><p>For Gazebo Classic (only) you can also start the simulator with a debugger attached. Note however, that you must provide the vehicle type in the simulator target, as shown below:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_gdb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_lldb</span></span></code></pre></div><p>This will start the debugger and launch the SITL application with Gazebo and the Iris simulator. In order to break into the debugger shell and halt the execution, hit <code>CTRL-C</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Process</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16529</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stopped</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thread </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#1: tid = 0x114e6d, 0x00007fff90f4430a libsystem_kernel.dylib\`__read_nocancel + 10, name = &#39;px4&#39;, queue = &#39;com.apple.main-thread&#39;, stop reason = signal SIGSTOP</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    frame</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #0: 0x00007fff90f4430a libsystem_kernel.dylib\`__read_nocancel + 10</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">libsystem_kernel.dylib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">__read_nocancel:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x7fff90f4430a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: jae    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x7fff90f44314</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+20</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    0x7fff90f4430c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: movq   %rax, %rdi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    0x7fff90f4430f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">5&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: jmp    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x7fff90f3fc53</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cerror_nocancel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    0x7fff90f44314</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: retq</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lldb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span></code></pre></div><p>In order to not have the DriverFrameworks scheduling interfere with the debugging session <code>SIGCONT</code> should be masked in LLDB and GDB:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lldb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> handle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SIGCONT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span></code></pre></div><p>或者在 GDB 下：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gdb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SIGCONT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> noprint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nostop</span></span></code></pre></div><p>之后，lldb 或 gdb 脚本的行为类似于正常会话，请参阅 ldb/gdbb 文档。</p><p>The last parameter, the &lt;viewer_model_debugger&gt; triplet, is actually passed to make in the build directory, so</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_gdb</span></span></code></pre></div><p>等价于</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# Configure with cmake</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> classic_iris_gdb</span></span></code></pre></div><p>A full list of the available make targets in the build directory can be obtained with:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span></span></code></pre></div><h2 id="attaching-gdb-to-running-sitl" tabindex="-1">Attaching GDB to running SITL <a class="header-anchor" href="#attaching-gdb-to-running-sitl" aria-label="Permalink to &quot;Attaching GDB to running SITL&quot;">​</a></h2><p>You can also start your simulation, and <em>then</em> attach <code>gdb</code>:</p>`,31),s("ol",null,[s("li",null,[s("p",null,"In one terminal screen enter the command to start your simulation:"),s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"make"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," px4_sitl_default"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," gazebo-classic")])])])]),s("p",null,[i("As the script runs, note the "),s("strong",null,"SITL COMMAND:"),i(' output text located right above the large "PX4" text. It will list the location of your px4 bin file for later use.')]),s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SITL"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," COMMAND:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "<px4 bin file>"'),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "<build dir>"/etc')]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"______"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"  __"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"   __"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    ___")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," ___"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," \\ \\ \\ "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"   /"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"   |")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"_/"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"  \\ "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"V"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"   /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"  __/"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"   /"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"   \\ "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /_"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"     /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /^"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\ \\ \\_"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"__"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  |")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"\\_"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"     \\/"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"   \\/"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"     |"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"_/")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"px4"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," starting.")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"INFO"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  [px4] startup script: /bin/sh etc/init.d-posix/rcS 0")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"INFO"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  [init] found model autostart file as SYS_AUTOSTART"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"10015")])])])])]),s("li",null,[s("p",null,"Open another terminal and type:"),s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ps"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -a")])])])]),s("p",null,'You will want to note the PID of the process named "PX4"'),s("p",null,"(In this example it is 14149)"),s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"atlas:~/px4/main/PX4-Autopilot$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ps"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -a")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    PID"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TTY"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"          TIME"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," CMD")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"1796"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," tty2"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"     00:01:59"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Xorg")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"1836"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," tty2"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"     00:00:00"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," gnome-session-b")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"14027"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pts/1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    00:00:00"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," make")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"14077"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pts/1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    00:00:00"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," sh")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"14078"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pts/1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    00:00:00"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," cmake")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"14079"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pts/1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    00:00:00"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ninja")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"14090"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pts/1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    00:00:00"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," sh")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"14091"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pts/1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    00:00:00"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," bash")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"14095"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pts/1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    00:01:23"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," gzserver")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"14149"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pts/1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    00:02:48"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," px4")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"14808"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pts/2"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    00:00:00"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ps")])])])])]),s("li",null,[s("p",null,"Then type in the same window"),s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"sudo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," gdb"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," [px4 "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"bin"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," file"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," path"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (from "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"step"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") here]")])])])]),s("p",null,[i("would suppress optimization of the targets: platforms*_posix"),s("strong",{"x-id":"1"},"px4_layer, modules"),i("systemlib, modules"),s("strong",{"x-id":"1"},"uORB, examples"),i("px4_simple_app, modules**uORB*_uORB_tests and px4.")]),s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"sudo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," gdb"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /home/atlas/px4/base/PX4-Autopilot/build/px4_sitl_default/bin/px4")])])])]),s("p",null,"Now, you can attach to the PX4 instance by entering the PID noted in step 2."),s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"attach"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," [PID "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"on"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," px4]")])])])]),s("p",null,"You should now have a GDB interface to debug with.")])],-1),a('<h2 id="编译器优化" tabindex="-1">编译器优化 <a class="header-anchor" href="#编译器优化" aria-label="Permalink to &quot;编译器优化&quot;">​</a></h2><p>It is possible to suppress compiler optimization for given executables and/or modules (as added by cmake with <code>add_executable</code> or <code>add_library</code>) when configuring for <code>posix_sitl_*</code>. This can be handy when it is necessary to step through code with a debugger or print variables that would otherwise be optimized out.</p><p>To do so, set the environment variable <code>PX4_NO_OPTIMIZATION</code> to be a semi-colon separated list of regular expressions that match the targets that need to be compiled without optimization. This environment variable is ignored when the configuration isn&#39;t <code>posix_sitl_*</code>.</p>',3),s("p",null,[i("would suppress optimization of the targets: platforms*_posix"),s("strong",{"x-id":"1"},"px4_layer, modules"),i("systemlib, modules"),s("strong",{"x-id":"1"},"uORB, examples"),i("px4_simple_app, modules**uORB*_uORB_tests and px4.")],-1),a('<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_NO_OPTIMIZATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;px4;^modules__uORB;^modules__systemlib$&#39;</span></span></code></pre></div><p>would suppress optimization of the targets: platforms__posix__px4_layer, modules__systemlib, modules__uORB, examples__px4_simple_app, modules__uORB__uORB_tests and px4.</p><p>The targets that can be matched with these regular expressions can be printed with the command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/posix_sitl_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list_cmake_targets</span></span></code></pre></div>',4)]))}const y=h(n,[["render",k]]);export{c as __pageData,y as default};
