import{_ as a,c as t,a8 as i,j as e,o as l}from"./chunks/framework.BDnHobkS.js";const F=JSON.parse('{"title":"Середовище розробки MacOS","description":"","frontmatter":{},"headers":[],"relativePath":"uk/dev_setup/dev_env_mac.md","filePath":"uk/dev_setup/dev_env_mac.md"}'),n={name:"uk/dev_setup/dev_env_mac.md"};function h(p,s,k,o,r,d){return l(),t("div",null,s[0]||(s[0]=[i('<h1 id="середовище-розробки-macos" tabindex="-1">Середовище розробки MacOS <a class="header-anchor" href="#середовище-розробки-macos" aria-label="Permalink to &quot;Середовище розробки MacOS&quot;">​</a></h1><p>Наступні інструкції для встановлення середовища розробки PX4 для macOS. Це середовище може бути використане для збірки PX4 для:</p><ul><li>Pixhawk та іншого апаратного забезпечення на основі NuttX</li><li><a href="./../sim_gazebo_classic/">Gazebo Classic Simulation</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This setup is supported by the PX4 dev team. To build other targets you will need to use a <a href="./../dev_setup/dev_env.html#supported-targets">different OS</a> (or an <a href="./../advanced/community_supported_dev_env.html">unsupported development environment</a>).</p></div><h2 id="відеоінструкція" tabindex="-1">Відеоінструкція <a class="header-anchor" href="#відеоінструкція" aria-label="Permalink to &quot;Відеоінструкція&quot;">​</a></h2>',5),e("lite-youtube",{videoid:"tMbMGiMs1cQ",title:"Setting up your PX4 development environment on macOS"},null,-1),i(`<h2 id="базове-налаштування" tabindex="-1">Базове налаштування <a class="header-anchor" href="#базове-налаштування" aria-label="Permalink to &quot;Базове налаштування&quot;">​</a></h2><p>&quot;Базове&quot; налаштування macOS встановлює інструменти, необхідні для збірки прошивки та включає загальні інструменти, які будуть потрібні для встановлення/використання симуляторів.</p><h3 id="налаштування-середовища" tabindex="-1">Налаштування середовища <a class="header-anchor" href="#налаштування-середовища" aria-label="Permalink to &quot;Налаштування середовища&quot;">​</a></h3><details class="details custom-block"><summary>Details</summary><p>Apple Silicon Macbook users! If you have an Apple M1, M2 etc. Macbook, make sure to run the terminal as x86 by setting up an x86 terminal:</p><ol><li>Locate the Terminal application within the Utilities folder (<strong>Finder &gt; Go menu &gt; Utilities</strong>)</li><li>Select <em>Terminal.app</em> and right-click on it, then choose <strong>Duplicate</strong>.</li><li>Rename the duplicated Terminal app, e.g. to <em>x86 Terminal</em></li><li>Now select the renamed <em>x86 Terminal</em> app and right-click and choose *<em>Get Info</em></li><li>Check the box for <strong>Open using Rosetta</strong>, then close the window</li><li>Run the <em>x86 Terminal</em> as usual, which will fully support the current PX4 toolchain</li></ol></details><p>Спочатку налаштуйте середовище</p><ol><li><p>Enable more open files by appending the following line to the <code>~/.zshenv</code> file (creating it if necessary):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ulimit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2048</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshenv</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If you don&#39;t do this, the build toolchain may report the error: <code>&quot;LD: too many open files&quot;</code></p></div></li></ol><p>:::</p><ol start="2"><li><p>Enforce Python 3 by appending the following lines to <code>~/.zshenv</code></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Point pip3 to MacOS system python 3 pip</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pip3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/bin/pip3</span></span></code></pre></div></li></ol><h3 id="загальні-інструменти" tabindex="-1">Загальні інструменти <a class="header-anchor" href="#загальні-інструменти" aria-label="Permalink to &quot;Загальні інструменти&quot;">​</a></h3><p>Для налаштування середовища з можливістю збірки для обладнання Pixhawk/NuttX (і встановлення загальних інструментів для використання симуляторів):</p><ol><li><p>Install Homebrew by following these <a href="https://brew.sh" target="_blank" rel="noreferrer">installation instructions</a>.</p></li><li><p>Виконайте ці команди в командній оболонці для встановлення загальних інструментів:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4/px4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4-dev</span></span></code></pre></div></li><li><p>Встановіть необхідні пакети Python:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># install required packages using pip3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyserial</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> empty</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> numpy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pandas</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jinja2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyyaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyros-genmsg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packaging</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kconfiglib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> future</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jsonschema</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># if this fails with a permissions error, your Python install is in a system path - use this command instead:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyserial</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> empty</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> numpy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pandas</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jinja2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyyaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyros-genmsg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packaging</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kconfiglib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> future</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jsonschema</span></span></code></pre></div></li></ol><h2 id="симуляція-gazebo-classic" tabindex="-1">Симуляція Gazebo Classic <a class="header-anchor" href="#симуляція-gazebo-classic" aria-label="Permalink to &quot;Симуляція Gazebo Classic&quot;">​</a></h2><p>To setup the environment for <a href="./../sim_gazebo_classic/">Gazebo Classic</a> simulation:</p><ol><li><p>Виконайте наступні команди в командній оболонці:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tbb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i.bak</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/disable! date:/s/^/  /; /disable! date:/s/./#/3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Library/Taps/homebrew/homebrew-core/Formula/tbb@2020.rb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tbb@2020</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tbb@2020</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>September 2021: The commands above are a workaround to this bug: <a href="https://github.com/PX4/PX4-Autopilot/issues/17644" target="_blank" rel="noreferrer">PX4-Autopilot#17644</a>. Вони можуть бути видалені після того, як вона буде виправлена (разом з цією нотаткою).</p></div></li></ol><p>:::</p><ol start="2"><li><p>Для встановлення симуляції SITL з Gazebo Classic:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> temurin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xquartz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4-sim-gazebo</span></span></code></pre></div></li><li><p>Run the macOS setup script: <code>PX4-Autopilot/Tools/setup/macos.sh</code> The easiest way to do this is to clone the PX4 source, and then run the script from the directory, as shown:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot.git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot/Tools/setup</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> macos.sh</span></span></code></pre></div></li></ol><h2 id="наступні-кроки" tabindex="-1">Наступні кроки <a class="header-anchor" href="#наступні-кроки" aria-label="Permalink to &quot;Наступні кроки&quot;">​</a></h2><p>Після того, як ви закінчите налаштування інструментів командного рядка:</p><ul><li><p>Install <a href="./../dev_setup/vscode.html">VSCode</a> (if you prefer using an IDE to the command line).</p></li><li><p>Install the <a href="./../dev_setup/qgc_daily_build.html">QGroundControl Daily Build</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <em>daily build</em> includes development tools that are hidden in release builds. Вона також може надати доступ до нових функцій PX4, які ще не підтримуються в релізних збірках.</p></div></li></ul><p>:::</p><ul><li>Continue to the <a href="./../dev_setup/building_px4.html">build instructions</a>.</li></ul>`,21)]))}const g=a(n,[["render",h]]);export{F as __pageData,g as default};
