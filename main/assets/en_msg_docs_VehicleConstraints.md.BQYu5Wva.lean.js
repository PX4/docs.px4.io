import{_ as i,c as a,a8 as n,o as e}from"./chunks/framework.BDnHobkS.js";const d=JSON.parse('{"title":"VehicleConstraints (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"en/msg_docs/VehicleConstraints.md","filePath":"en/msg_docs/VehicleConstraints.md"}'),t={name:"en/msg_docs/VehicleConstraints.md"};function l(p,s,h,o,r,c){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="vehicleconstraints-uorb-message" tabindex="-1">VehicleConstraints (UORB message) <a class="header-anchor" href="#vehicleconstraints-uorb-message" aria-label="Permalink to &quot;VehicleConstraints (UORB message)&quot;">â€‹</a></h1><p>Local setpoint constraints in NED frame setting something to NaN means that no limit is provided</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/VehicleConstraints.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Local setpoint constraints in NED frame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># setting something to NaN means that no limit is provided</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 speed_up # in meters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sec</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 speed_down # in meters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sec</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> want_takeoff # tell the controller to initiate takeoff when </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">idling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ignored during </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">flight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,4)]))}const E=i(t,[["render",l]]);export{d as __pageData,E as default};
