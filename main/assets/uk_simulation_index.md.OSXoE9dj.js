import{_ as a,a as t}from"./chunks/px4_sitl_overview.C_WnxCTy.js";import{_ as i,c as s,a8 as o,o as n}from"./chunks/framework.BDnHobkS.js";const g=JSON.parse('{"title":"Симуляція","description":"","frontmatter":{},"headers":[],"relativePath":"uk/simulation/index.md","filePath":"uk/simulation/index.md"}'),l={name:"uk/simulation/index.md"};function r(h,e,p,d,c,m){return n(),s("div",null,e[0]||(e[0]=[o('<h1 id="симуляція" tabindex="-1">Симуляція <a class="header-anchor" href="#симуляція" aria-label="Permalink to &quot;Симуляція&quot;">​</a></h1><p>Симулятори дозволяють польотному коду PX4 керувати комп&#39;ютерно змодельованим апаратом у змодельованому &quot;світі&quot;. You can interact with this vehicle just as you might with a real vehicle, using <em>QGroundControl</em>, an offboard API, or a radio controller/gamepad.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Simulation is a quick, easy, and most importantly, <em>safe</em> way to test changes to PX4 code before attempting to fly in the real world. Це також хороший спосіб почати літати з PX4, якщо у вас ще немає апарату для експериментів.</p></div><p>PX4 supports both <em>Software In the Loop (SITL)</em> simulation, where the flight stack runs on computer (either the same computer or another computer on the same network) and <em>Hardware In the Loop (HITL)</em> simulation using a simulation firmware on a real flight controller board.</p><p>Інформація про доступні тренажери та способи їх налаштування наведена в наступному розділі. The other sections provide general information about how the simulator works, and are not required to <em>use</em> the simulators.</p><h2 id="підтримувані-симулятори" tabindex="-1">Підтримувані симулятори <a class="header-anchor" href="#підтримувані-симулятори" aria-label="Permalink to &quot;Підтримувані симулятори&quot;">​</a></h2><p>Наступні симулятори підтримуються основною командою розробників PX4.</p><table tabindex="0"><thead><tr><th>Симулятор</th><th>Опис</th></tr></thead><tbody><tr><td><a href="./../sim_gazebo_gz/">Gazebo</a></td><td><p><strong>This simulator is highly recommended.</strong></p><p>Gazebo supersedes <a href="./../sim_gazebo_classic/">Gazebo Classic</a>, featuring more advanced rendering, physics and sensor models. It is the only version of Gazebo available from Ubuntu Linux 22.04</p><p>A powerful 3D simulation environment that is particularly suitable for testing object-avoidance and computer vision. Він також може бути використаний для <a href="./../simulation/multi-vehicle-simulation.html">multi-vehicle simulation</a> і зазвичай використовується з <a href="./../simulation/ros_interface.html">ROS</a>, набором інструментів для автоматизації керування апаратами. </p><p><strong>Supported Vehicles:</strong> Quad, Standard VTOL, Plane</p></td></tr><tr><td><a href="./../sim_gazebo_classic/">Gazebo Classic</a></td><td><p><strong>This simulator is highly recommended.</strong></p><p>A powerful 3D simulation environment that is particularly suitable for testing object-avoidance and computer vision. It can also be used for <a href="./../simulation/multi-vehicle-simulation.html">multi-vehicle simulation</a> and is commonly used with <a href="./../simulation/ros_interface.html">ROS</a>, a collection of tools for automating vehicle control.</p><p><strong>Supported Vehicles:</strong> Quad (<a href="./../airframes/airframe_reference.html#copter_quadrotor_x_generic_quadcopter">Iris</a>, Hex (Typhoon H480), <a href="./../airframes/airframe_reference.html#vtol_standard_vtol_generic_standard_vtol">Generic Standard VTOL (QuadPlane)</a>, Tailsitter, Plane, Rover, Submarine </p></td></tr></tbody></table><p>There are also a number of <a href="./../simulation/community_supported_simulators.html">Community Supported Simulators</a>.</p><hr><p>Решта цієї теми - це &quot;дещо загальний&quot; опис того, як працює інфраструктура симуляції. It is not required to <em>use</em> the simulators.</p><h2 id="симулятор-mavlink-api" tabindex="-1">Симулятор MAVLink API <a class="header-anchor" href="#симулятор-mavlink-api" aria-label="Permalink to &quot;Симулятор MAVLink API&quot;">​</a></h2><p>Всі симулятори, крім Gazebo, взаємодіють з PX4 за допомогою API симулятора MAVLink. Цей API визначає набір повідомлень MAVLink, які передають дані датчиків з модельованого світу в PX4 і повертають значення двигуна і приводу з польотного коду, які будуть застосовані до модельованого апарату. На зображенні нижче показано потік повідомлень.</p><p><img src="'+a+'" alt="Simulator MAVLink API"></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>A SITL build of PX4 uses <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/simulation/simulator_mavlink/SimulatorMavlink.cpp" target="_blank" rel="noreferrer">SimulatorMavlink.cpp</a> to handle these messages while a hardware build in HIL mode uses <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/mavlink_receiver.cpp" target="_blank" rel="noreferrer">mavlink_receiver.cpp</a>. Дані датчиків з симулятора записуються в теми PX4 uORB. Всі двигуни/приводи заблоковані, але внутрішнє програмне забезпечення повністю функціонує.</p></div><p>Повідомлення описані нижче (див. посилання для більш детальної інформації).</p><table tabindex="0"><thead><tr><th>Повідомлення</th><th>Напрямок</th><th>Опис</th></tr></thead><tbody><tr><td><a href="https://mavlink.io/en/messages/common.html#MAV_MODE_FLAG_HIL_ENABLED" target="_blank" rel="noreferrer">MAV_MODE:MAV_MODE_FLAG_HIL_ENABLED</a></td><td>NA</td><td>Прапорець режиму при використанні симуляції. Всі двигуни/приводи заблоковані, але внутрішнє програмне забезпечення повністю функціонує.</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_ACTUATOR_CONTROLS" target="_blank" rel="noreferrer">HIL_ACTUATOR_CONTROLS</a></td><td>PX4 -&gt; Sim</td><td>Виходи керування PX4 (до двигунів, приводів).</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_SENSOR" target="_blank" rel="noreferrer">HIL_SENSOR</a></td><td>Sim -&gt; PX4</td><td>Імітація показань IMU в одиницях СІ в рамі корпусу NED.</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_GPS" target="_blank" rel="noreferrer">HIL_GPS</a></td><td>Sim -&gt; PX4</td><td>Симульоване значення датчика GPS RAW.</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_OPTICAL_FLOW" target="_blank" rel="noreferrer">HIL_OPTICAL_FLOW</a></td><td>Sim -&gt; PX4</td><td>Імітація оптичного потоку від датчика потоку (наприклад, PX4FLOW або датчика оптичної миші)</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_STATE_QUATERNION" target="_blank" rel="noreferrer">HIL_STATE_QUATERNION</a></td><td>Sim -&gt; PX4</td><td>Містить фактичне &quot;змодельоване&quot; положення апарату, орієнтацію, швидкість і т.д. Це може бути записано в журнал і співставлено з оцінками PX4 для аналізу і діагностики (наприклад, перевірка того, наскільки добре оцінювач працює для зашумлених (імітованих) вхідних сигналів датчика).</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_RC_INPUTS_RAW" target="_blank" rel="noreferrer">HIL_RC_INPUTS_RAW</a></td><td>Sim -&gt; PX4</td><td>Отримані RAW-значення каналів РК.</td></tr></tbody></table><p>PX4 directly uses the <a href="https://gazebosim.org/docs" target="_blank" rel="noreferrer">Gazebo API</a> to interface with <a href="./../sim_gazebo_gz/">Gazebo</a> and MAVlink is not required.</p><h2 id="порти-udp-px4-mavlink-за-замовчуванням" tabindex="-1">Порти UDP PX4 MAVLink за замовчуванням <a class="header-anchor" href="#порти-udp-px4-mavlink-за-замовчуванням" aria-label="Permalink to &quot;Порти UDP PX4 MAVLink за замовчуванням&quot;">​</a></h2><p>By default, PX4 uses commonly established UDP ports for MAVLink communication with ground control stations (e.g. <em>QGroundControl</em>), Offboard APIs (e.g. MAVSDK, MAVROS) and simulator APIs (e.g. Gazebo). Ці порти:</p><ul><li>PX4&#39;s remote UDP Port <strong>14550</strong> is used for communication with ground control stations. Очікується, що GCS прослуховуватиме з&#39;єднання на цьому порту. <em>QGroundControl</em> listens to this port by default.</li><li>PX4&#39;s remote UDP Port <strong>14540</strong> is used for communication with offboard APIs. Очікується, що зовнішні API будуть чекати на з&#39;єднання через цей порт.<div class="info custom-block"><p class="custom-block-title">INFO</p><p>Multi-vehicle simulations use a separate remote port for each instance, allocated sequentially from <code>14540</code> to <code>14549</code> (additional instances all use port <code>14549</code>).</p></div></li></ul><p>:::</p><ul><li>The simulator&#39;s local TCP Port, <strong>4560</strong>, is used for communication with PX4. Симулятор слухає цей порт, і PX4 ініціює TCP-з&#39;єднання з ним.</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The ports for the GCS, offboard APIs and simulator are specified by startup scripts. See <a href="./../concept/system_startup.html">System Startup</a> to learn more.</p></div><h2 id="середовище-симуляціі-sitl" tabindex="-1">Середовище симуляції SITL <a class="header-anchor" href="#середовище-симуляціі-sitl" aria-label="Permalink to &quot;Середовище симуляції SITL&quot;">​</a></h2><p>На схемі нижче показано типове середовище симуляції SITL для будь-якого з підтримуваних тренажерів, що використовують MAVLink (тобто всіх, окрім Gazebo).</p><p><img src="'+t+`" alt="PX4 SITL overview"></p><p>Різні частини системи з&#39;єднуються через протокол UDP і можуть працювати як на одному комп&#39;ютері, так і на іншому комп&#39;ютері в тій самій мережі.</p><ul><li><p>PX4 використовує спеціальний модуль для підключення до локального TCP-порту 4560 симулятора. Simulators then exchange information with PX4 using the <a href="#simulator-mavlink-api">Simulator MAVLink API</a> described above. PX4 на SITL і симулятор можуть працювати як на одному комп&#39;ютері, так і на різних комп&#39;ютерах в одній мережі.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Simulators can also use the <em>uxrce-dds bridge</em> (<a href="./../middleware/uxrce_dds.html">XRCE-DDS</a>) to directly interact with PX4 (i.e. via <a href="./../middleware/uorb.html">UORB topics</a> rather than MAVLink). This approach <em>may</em> used by Gazebo Classic for <a href="./../sim_gazebo_classic/multi_vehicle_simulation.html#build-and-test-xrce-dds">multi-vehicle simulation</a>.</p></div></li></ul><p>:::</p><ul><li><p>PX4 використовує звичайний модуль MAVLink для підключення до наземних станцій і зовнішніх API розробників, таких як MAVSDK або ROS</p><ul><li>Ground stations listen to PX4&#39;s remote UDP port: <code>14550</code></li><li>External developer APIs listen to PX4&#39;s remote UDP port: <code>14540</code>. For multi-vehicle simulations, PX4 sequentially allocates a separate remote port for each instance from <code>14540</code> to <code>14549</code> (additional instances all use port <code>14549</code>).</li></ul></li><li><p>PX4 defines a number of <em>local</em> UDP ports (<code>14580</code>,<code>18570</code>), which are sometimes used when networking with PX4 running in a container or virtual machine. Вони не рекомендуються для &quot;загального&quot; використання і можуть змінюватися в майбутньому.</p></li><li><p>A serial connection may be used to connect <a href="./../config/joystick.html">Joystick/Gamepad</a> hardware via <em>QGroundControl</em>.</p></li></ul><p>If you use the normal build system SITL <code>make</code> configuration targets (see next section) then both SITL and the Simulator will be launched on the same computer and the ports above will automatically be configured. Ви можете налаштувати додаткові UDP-з&#39;єднання MAVLink та іншим чином змінити середовище моделювання у файлах конфігурації та ініціалізації збірки.</p><h3 id="запуск-створення-симуляціі-sitl" tabindex="-1">Запуск/створення симуляції SITL <a class="header-anchor" href="#запуск-створення-симуляціі-sitl" aria-label="Permalink to &quot;Запуск/створення симуляції SITL&quot;">​</a></h3><p>Система збірки дозволяє дуже легко зібрати і запустити PX4 на SITL, активувати симулятор і з&#39;єднати їх. Синтаксис (спрощений) виглядає наступним чином:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> simulator[_vehicle-model]</span></span></code></pre></div><p>where <code>simulator</code> is <code>gz</code> (for Gazebo), <code>gazebo-classic</code>, <code>jmavsim</code> or some other simulator, and vehicle-model is a particular vehicle type supported by that simulator (<a href="./../sim_gazebo_gz/">Gazebo</a> and <a href="./../sim_jmavsim/">jMAVSim</a> only support multicopters at time of writing, while <a href="./../sim_gazebo_classic/">Gazebo Classic</a> supports many different types).</p><p>Нижче наведено кілька прикладів, і їх набагато більше на окремих сторінках для кожного з симуляторів:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start Gazebo with the x500 multicopter</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start Gazebo Classic with plane</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_plane</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start Gazebo Classic with iris and optical flow</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_opt_flow</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start JMavSim with iris (default vehicle model)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start PX4 with no simulator (i.e. to use your own &quot;custom&quot; simulator)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> none_iris</span></span></code></pre></div><p>Симуляцію можна додатково налаштувати за допомогою змінних середовища:</p><ul><li><code>PX4_ESTIMATOR</code>: This variable configures which estimator to use. Possible options are: <code>ekf2</code> (default), <code>lpe</code> (deprecated). It can be set via <code>export PX4_ESTIMATOR=lpe</code> before running the simulation.</li></ul><p>The syntax described here is simplified, and there are many other options that you can configure via <em>make</em> - for example, to set that you wish to connect to an IDE or debugger. For more information see: <a href="./../dev_setup/building_px4.html#px4-make-build-targets">Building the Code &gt; PX4 Make Build Targets</a>.</p><p><a id="simulation_speed"></a></p><h3 id="запуск-симуляціі-швидше-ніж-у-реальному-часі" tabindex="-1">Запуск симуляції швидше, ніж у реальному часі <a class="header-anchor" href="#запуск-симуляціі-швидше-ніж-у-реальному-часі" aria-label="Permalink to &quot;Запуск симуляції швидше, ніж у реальному часі&quot;">​</a></h3><p>SITL можна запустити швидше або повільніше, ніж у реальному часі, використовуючи jMAVSim або Gazebo Classic.</p><p>The speed factor is set using the environment variable <code>PX4_SIM_SPEED_FACTOR</code>. Наприклад, запустити симуляцію jMAVSim зі швидкістю у 2 рази більшою за швидкість реального часу:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_SIM_SPEED_FACTOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><p>Запустити в половину реального часу:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_SIM_SPEED_FACTOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0.5</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><p>You can apply the factor to all SITL runs in the current session using <code>EXPORT</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_SIM_SPEED_FACTOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>At some point IO or CPU will limit the speed that is possible on your machine and it will be slowed down &quot;automatically&quot;. Потужні комп&#39;ютери зазвичай можуть запускати симуляцію зі швидкістю близько 6-10 разів, для ноутбуків досягається швидкість близько 3-4 разів.</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>To avoid PX4 detecting data link timeouts, increase the value of param <a href="./../advanced_config/parameter_reference.html#COM_DL_LOSS_T">COM_DL_LOSS_T</a> proportional to the simulation rate. For example, if <code>COM_DL_LOSS_T</code> is 10 in realtime, at 10x simulation rate increase to 100.</p></div><h3 id="симуляція-lockstep" tabindex="-1">Симуляція Lockstep <a class="header-anchor" href="#симуляція-lockstep" aria-label="Permalink to &quot;Симуляція Lockstep&quot;">​</a></h3><p>PX4 SITL and the simulators (jMAVSim or Gazebo Classic) have been set up to run in <em>lockstep</em>. Це означає, що PX4 і симулятор чекають один на одного для отримання повідомлень від датчиків і приводів, а не працюють зі своїми власними швидкостями.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Lockstep makes it possible to <a href="#simulation_speed">run the simulation faster or slower than realtime</a>, and also to pause it in order to step through code.</p></div><p>Послідовність кроків для lockstep наступна:</p><ol><li>The simulation sends a sensor message <a href="https://mavlink.io/en/messages/common.html#HIL_SENSOR" target="_blank" rel="noreferrer">HIL_SENSOR</a> including a timestamp <code>time_usec</code> to update the sensor state and time of PX4.</li><li>PX4 receives this and does one iteration of state estimation, controls, etc. and eventually sends an actuator message <a href="https://mavlink.io/en/messages/common.html#HIL_ACTUATOR_CONTROLS" target="_blank" rel="noreferrer">HIL_ACTUATOR_CONTROLS</a>.</li><li>Симуляція чекає, поки не отримає повідомлення від приводу/двигуна, потім моделює фізику і обчислює наступне повідомлення від датчика, яке знову надсилається до PX4.</li></ol><p>Система починається з &quot;вільного ходу&quot;, під час якого симуляція надсилає повідомлення від датчиків, зокрема про час, і, таким чином, запускає PX4, доки він не ініціалізується і не надішле відповідне повідомлення від приводу.</p><h4 id="вимкнення-lockstep-симуляціі" tabindex="-1">Вимкнення Lockstep симуляції <a class="header-anchor" href="#вимкнення-lockstep-симуляціі" aria-label="Permalink to &quot;Вимкнення Lockstep симуляції&quot;">​</a></h4><p>Lockstep симуляцію можна вимкнути, якщо, наприклад, SITL потрібно використовувати з тренажером, який не підтримує цю функцію. У цьому випадку симулятор і PX4 використовують системний час хоста і не чекають один на одного.</p><p>To disable lockstep in PX4, run <code>make px4_sitl_default boardconfig</code> and set the <code>BOARD_NOLOCKSTEP</code> &quot;Force disable lockstep&quot; symbol which is located under toolchain.</p><p>To disable lockstep in Gazebo, edit <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/blob/3062d287c322fabf1b41b8e33518eb449d4ac6ed/models/plane/plane.sdf#L449" target="_blank" rel="noreferrer">the model SDF file</a> and set <code>&lt;enable_lockstep&gt;false&lt;/enable_lockstep&gt;</code>.</p><p>To disable lockstep in jMAVSim, remove <code>-l</code> in <a href="https://github.com/PX4/PX4-Autopilot/blob/main/Tools/simulation/jsbsim/sitl_run.sh#L40" target="_blank" rel="noreferrer">sitl_run.sh</a>, or make sure otherwise that the java binary is started without the <code>-lockstep</code> flag.</p><h3 id="сценаріі-запуску" tabindex="-1">Сценарії запуску <a class="header-anchor" href="#сценаріі-запуску" aria-label="Permalink to &quot;Сценарії запуску&quot;">​</a></h3><p>Scripts are used to control which parameter settings to use or which modules to start. They are located in the <a href="https://github.com/PX4/PX4-Autopilot/tree/main/ROMFS/px4fmu_common/init.d-posix" target="_blank" rel="noreferrer">ROMFS/px4fmu_common/init.d-posix</a> directory, the <code>rcS</code> file is the main entry point. See <a href="./../concept/system_startup.html">System Startup</a> for more information.</p><h3 id="імітація-збоів-та-відмов-датчиків-обладнання" tabindex="-1">Імітація збоїв та відмов датчиків/обладнання <a class="header-anchor" href="#імітація-збоів-та-відмов-датчиків-обладнання" aria-label="Permalink to &quot;Імітація збоїв та відмов датчиків/обладнання&quot;">​</a></h3><p><a href="./../simulation/failsafes.html">Simulate Failsafes</a> explains how to trigger safety failsafes like GPS failure and battery drain.</p><h2 id="середовище-симуляціі-hitl" tabindex="-1">Середовище симуляції HITL <a class="header-anchor" href="#середовище-симуляціі-hitl" aria-label="Permalink to &quot;Середовище симуляції HITL&quot;">​</a></h2><p>У симуляції з апаратним забезпеченням у контурі (HITL) звичайна прошивка PX4 виконується на реальному обладнані. The HITL Simulation Environment in documented in: <a href="./../simulation/hitl.html">HITL Simulation</a>.</p><h2 id="інтеграція-джоистиків-геимпада" tabindex="-1">Інтеграція джойстиків/геймпада <a class="header-anchor" href="#інтеграція-джоистиків-геимпада" aria-label="Permalink to &quot;Інтеграція джойстиків/геймпада&quot;">​</a></h2><p><em>QGroundControl</em> desktop versions can connect to a USB Joystick/Gamepad and send its movement commands and button presses to PX4 over MAVLink. Це працює як на SITL, так і на HITL симуляціях, і дозволяє вам безпосередньо керувати симульованим апаратом. Якщо у вас немає джойстика, ви можете керувати апаратом за допомогою екранних віртуальних паличок QGroundControl.</p><p>For setup information see the <em>QGroundControl User Guide</em>:</p><ul><li><a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/setup_view/joystick.html" target="_blank" rel="noreferrer">Joystick Setup</a></li><li><a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/settings_view/virtual_joystick.html" target="_blank" rel="noreferrer">Virtual Joystick</a></li></ul><h2 id="симуляція-камери" tabindex="-1">Симуляція камери <a class="header-anchor" href="#симуляція-камери" aria-label="Permalink to &quot;Симуляція камери&quot;">​</a></h2><p>PX4 supports capture of both still images and video from within the <a href="./../sim_gazebo_classic/">Gazebo Classic</a> simulated environment. This can be enabled/set up as described in <a href="./../sim_gazebo_classic/#video-streaming">Gazebo Glassic &gt; Video Streaming</a>.</p><p>The simulated camera is a gazebo classic plugin that implements the <a href="https://mavlink.io/en/protocol/camera.html" target="_blank" rel="noreferrer">MAVLink Camera Protocol</a> . PX4 connects/integrates with this camera in <em>exactly the same way</em> as it would with any other MAVLink camera:</p><ol><li><a href="./../advanced_config/parameter_reference.html#TRIG_INTERFACE">TRIG_INTERFACE</a> must be set to <code>3</code> to configure the camera trigger driver for use with a MAVLink camera<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>In this mode the driver just sends a <a href="https://mavlink.io/en/messages/common.html#CAMERA_TRIGGER" target="_blank" rel="noreferrer">CAMERA_TRIGGER</a> message whenever an image capture is requested. For more information see <a href="./../camera/fc_connected_camera.html">Cameras Connected to Flight Controller Outputs</a>.</p></div></li></ol><p>::: 2. PX4 повинен перенаправляти всі команди камери між GCS і (симулятором) MAVLink Camera. You can do this by starting <a href="./../modules/modules_communication.html#mavlink">MAVLink</a> with the <code>-f</code> flag as shown, specifying the UDP ports for the new connection.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14558</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14530</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> camera</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>More than just the camera MAVLink messages will be forwarded, but the camera will ignore those that it doesn&#39;t consider relevant.</p></div><p>Інші симулятори можуть використовувати такий самий підхід для реалізації підтримки камери.</p><h2 id="запуск-симуляціі-на-віддаленому-сервері" tabindex="-1">Запуск симуляції на віддаленому сервері <a class="header-anchor" href="#запуск-симуляціі-на-віддаленому-сервері" aria-label="Permalink to &quot;Запуск симуляції на віддаленому сервері&quot;">​</a></h2><p>Симулятор можна запустити на одному комп&#39;ютері, а доступ до нього отримати з іншого комп&#39;ютера в тій же мережі (або в іншій мережі з відповідною маршрутизацією). Це може бути корисно, наприклад, якщо ви хочете протестувати програму для безпілотника, що працює на реальному комп&#39;ютері-компаньйоні на фоні змодельованого транспортного засобу.</p><p>Це не працює &quot;з коробки&quot;, оскільки PX4 за замовчуванням не маршрутизує пакети на зовнішні інтерфейси (щоб уникнути спаму в мережі та втручання різних симуляцій одна в одну). Замість цього він спрямовує трафік всередину - на &quot;localhost&quot;.</p><p>Існує декілька способів зробити UDP-пакети доступними на зовнішніх інтерфейсах, як описано нижче.</p><h3 id="використання-mavlink-router" tabindex="-1">Використання MAVLink Router <a class="header-anchor" href="#використання-mavlink-router" aria-label="Permalink to &quot;Використання MAVLink Router&quot;">​</a></h3><p>The <a href="https://github.com/mavlink-router/mavlink-router" target="_blank" rel="noreferrer">mavlink-router</a> can be used to route packets from localhost to an external interface.</p><p>To route packets between SITL running on one computer (sending MAVLink traffic to localhost on UDP port 14550), and QGC running on another computer (e.g. at address <code>10.73.41.30</code>) you could:</p><ul><li><p>Start <em>mavlink-router</em> with the following command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavlink-routerd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10.73.41.30:14550</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 127.0.0.1:14550</span></span></code></pre></div></li><li><p>Use a <em>mavlink-router</em> conf file.</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[UdpEndpoint QGC]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = Normal</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 10.73.41.30</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 14550</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[UdpEndpoint SIM]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = Eavesdropping</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 14550</span></span></code></pre></div></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>More information about <em>mavlink-router</em> configuration can be found <a href="https://github.com/mavlink-router/mavlink-router#running" target="_blank" rel="noreferrer">here</a>.</p></div><h3 id="увімкнення-трансляціі-udp" tabindex="-1">Увімкнення трансляції UDP <a class="header-anchor" href="#увімкнення-трансляціі-udp" aria-label="Permalink to &quot;Увімкнення трансляції UDP&quot;">​</a></h3><p>The <a href="./../modules/modules_communication.html#mavlink_usage">mavlink module</a> routes to <em>localhost</em> by default, but you can enable UDP broadcasting of heartbeats using its <code>-p</code> option. Any remote computer on the network can then connect to the simulator by listening to the appropriate port (i.e. 14550 for <em>QGroundControl</em>).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>UDP broadcasting provides a simple way to set up the connection when there is only one simulation running on the network. Do not use this approach if there are multiple simulations running on the network (you might instead <a href="#enable-streaming-to-specific-address">publish to a specific address</a>).</p></div><p>This should be done in an appropriate configuration file where <code>mavlink start</code> is called. For example: <a href="https://github.com/PX4/PX4-Autopilot/blob/main/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink" target="_blank" rel="noreferrer">/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink</a>.</p><h3 id="увімкнення-стрімінгу-на-певну-адресу" tabindex="-1">Увімкнення стрімінгу на певну адресу <a class="header-anchor" href="#увімкнення-стрімінгу-на-певну-адресу" aria-label="Permalink to &quot;Увімкнення стрімінгу на певну адресу&quot;">​</a></h3><p>The <a href="./../modules/modules_communication.html#mavlink_usage">mavlink module</a> routes to <em>localhost</em> by default, but you can specify an external IP address to stream to using its <code>-t</code> option. The specified remote computer can then connect to the simulator by listening to the appropriate port (i.e. 14550 for <em>QGroundControl</em>).</p><p>This should be done in various configuration files where <code>mavlink start</code> is called. For example: <a href="https://github.com/PX4/PX4-Autopilot/blob/main/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink" target="_blank" rel="noreferrer">/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink</a>.</p><h3 id="тунелювання-по-ssh" tabindex="-1">Тунелювання по SSH <a class="header-anchor" href="#тунелювання-по-ssh" aria-label="Permalink to &quot;Тунелювання по SSH&quot;">​</a></h3><p>Тунелювання SSH є гнучким варіантом, оскільки комп&#39;ютер для моделювання та система, що його використовує, не обов&#39;язково повинні знаходитися в одній мережі.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You might similarly use VPN to provide a tunnel to an external interface (on the same network or another network).</p></div><p>Одним із способів створення тунелю є використання параметрів тунелювання SSH. The tunnel itself can be created by running the following command on <em>localhost</em>, where <code>remote.local</code> is the name of a remote computer:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14551:localhost:14551</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote.local</span></span></code></pre></div><p>UDP-пакети потрібно перетворити на TCP-пакети, щоб їх можна було перенаправляти через SSH. The <a href="https://en.wikipedia.org/wiki/Netcat" target="_blank" rel="noreferrer">netcat</a> utility can be used on both sides of the tunnel - first to convert packets from UDP to TCP, and then back to UDP at the other end.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>QGC must be running before executing <em>netcat</em>.</p></div><p>On the <em>QGroundControl</em> computer, UDP packet translation may be implemented by running following commands:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkfifo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/tcp2udp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netcat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lvp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14551</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/tcp2udp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> netcat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14550</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/tcp2udp</span></span></code></pre></div><p>Команда на стороні симулятора тунелю SSH:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkfifo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/udp2tcp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netcat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lvup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14550</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/udp2tcp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> netcat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14551</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/udp2tcp</span></span></code></pre></div><p>The port number <code>14550</code> is valid for connecting to QGroundControl or another GCS, but should be adjusted for other endpoints (e.g. developer APIs etc.).</p><p>The tunnel may in theory run indefinitely, but <em>netcat</em> connections may need to be restarted if there is a problem.</p><p>The <a href="https://raw.githubusercontent.com/ThunderFly-aerospace/sitl_gazebo/autogyro-sitl/scripts/QGC_remote_connect.bash" target="_blank" rel="noreferrer">QGC_remote_connect.bash</a> script can be run on the QGC computer to automatically setup/run the above instructions. Симуляція вже має бути запущена на віддаленому сервері, і ви повинні мати доступ по SSH до цього сервера.</p>`,111)]))}const b=i(l,[["render",r]]);export{g as __pageData,b as default};
