import{_ as a,c as t,a8 as r,o}from"./chunks/framework.BDnHobkS.js";const m=JSON.parse('{"title":"测试 MC_01 - 手动模式","description":"","frontmatter":{},"headers":[],"relativePath":"zh/test_cards/mc_01_manual_modes.md","filePath":"zh/test_cards/mc_01_manual_modes.md"}'),s={name:"zh/test_cards/mc_01_manual_modes.md"};function l(i,e,n,c,p,d){return o(),t("div",null,e[0]||(e[0]=[r('<h1 id="测试-mc-01-手动模式" tabindex="-1">测试 MC_01 - 手动模式 <a class="header-anchor" href="#测试-mc-01-手动模式" aria-label="Permalink to &quot;测试 MC_01 - 手动模式&quot;">​</a></h1><h2 id="解锁并起飞" tabindex="-1">解锁并起飞 <a class="header-anchor" href="#解锁并起飞" aria-label="Permalink to &quot;解锁并起飞&quot;">​</a></h2><p>❏ 设置飞行模式以稳定和布防</p><p>❏ 升高油门起飞</p><h2 id="飞行" tabindex="-1">飞行 <a class="header-anchor" href="#飞行" aria-label="Permalink to &quot;飞行&quot;">​</a></h2><p>❏ 自稳</p><p>    ❏ Pitch/Roll/Yaw response 1:1</p><p>    ❏ Throttle response 1:1</p><p>❏ 高度</p><p>    ❏ Vertical position should hold current value with stick centered</p><p>    ❏ Pitch/Roll/Yaw response 1:1</p><p>    ❏ Throttle response set to Climbs/Descend rate</p><p>❏ 定点</p><p>    ❏ Horizontal position should hold current value with stick centered</p><p>    ❏ Vertical position should hold current value with stick centered</p><p>    ❏ Throttle response set to Climbs/Descend rate</p><p>    ❏ Pitch/Roll/Yaw response set to Pitch/Roll/Yaw rates</p><h2 id="降落" tabindex="-1">降落 <a class="header-anchor" href="#降落" aria-label="Permalink to &quot;降落&quot;">​</a></h2><p>❏ 降落位置模式，油门低于 40％</p><p>❏ Upon touching ground, copter should disarm automatically within 2 seconds (disarm time set by parameter: <a href="./../advanced_config/parameter_reference.html#COM_DISARM_LAND">COM_DISARM_LAND</a>)</p><h2 id="预期成果" tabindex="-1">预期成果 <a class="header-anchor" href="#预期成果" aria-label="Permalink to &quot;预期成果&quot;">​</a></h2><ul><li>当油门升高时，起飞应该是平稳的</li><li>在上述任何飞行模式中都不应出现振荡</li><li>着陆时，直升机不应在地面上反弹</li></ul>',22)]))}const u=a(s,[["render",l]]);export{m as __pageData,u as default};
