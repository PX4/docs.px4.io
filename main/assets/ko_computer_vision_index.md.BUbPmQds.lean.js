import{_ as o,c as i,a8 as a,o as t}from"./chunks/framework.BDnHobkS.js";const d=JSON.parse('{"title":"컴퓨터 비전 (Optical Flow, MoCap, VIO, Avoidance)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/computer_vision/index.md","filePath":"ko/computer_vision/index.md"}'),n={name:"ko/computer_vision/index.md"};function r(s,e,l,p,c,m){return t(),i("div",null,e[0]||(e[0]=[a('<h1 id="컴퓨터-비전-optical-flow-mocap-vio-avoidance" tabindex="-1">컴퓨터 비전 (Optical Flow, MoCap, VIO, Avoidance) <a class="header-anchor" href="#컴퓨터-비전-optical-flow-mocap-vio-avoidance" aria-label="Permalink to &quot;컴퓨터 비전 (Optical Flow, MoCap, VIO, Avoidance)&quot;">​</a></h1><p><a href="https://en.wikipedia.org/wiki/Computer_vision" target="_blank" rel="noreferrer">Computer vision</a> techniques enable computers to use visual data to make sense of their environment.</p><p>PX4 uses computer vision systems (primarily running on <a href="./../companion_computer/">Companion Computers</a>) in order to support the following features:</p><ul><li>Pose/Velocity Estimation: <ul><li><a href="./../sensor/optical_flow.html">Optical Flow</a> provides 2D velocity estimation (using a downward facing camera and a downward facing distance sensor).</li><li><a href="./../computer_vision/motion_capture.html">Motion Capture</a> provides 3D pose estimation using a vision system that is <em>external</em> to the vehicle. 주로 실내 내비게이션에 사용됩니다.</li><li><a href="./../computer_vision/visual_inertial_odometry.html">Visual Inertial Odometry (VIO)</a> provides 3D pose and velocity estimation using an onboard vision system and IMU. It is used for navigation when global position information is absent or unreliable.</li></ul></li><li>Avoidance/Path Planning: <ul><li><a href="./../computer_vision/collision_prevention.html">Collision Prevention</a> is used to stop MC vehicles before they can crash into an obstacle (primarily when flying in manual modes).</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <a href="./../complete_vehicles_mc/px4_vision_kit.html">PX4 Vision Autonomy Development Kit</a> (Holybro) is a robust and inexpensive kit for developers working with computer vision on PX4.</p></div><h2 id="외부-참고-자료" tabindex="-1">외부 참고 자료 <a class="header-anchor" href="#외부-참고-자료" aria-label="Permalink to &quot;외부 참고 자료&quot;">​</a></h2><ul><li><a href="https://github.com/robin-shaun/XTDrone/blob/master/README.en.md" target="_blank" rel="noreferrer">XTDrone</a> - ROS + PX4 v1.9 simulation environment for computer vision. The <a href="https://www.yuque.com/xtdrone/manual_en" target="_blank" rel="noreferrer">XTDrone Manual</a> has everything you need to get started!</li></ul>',7)]))}const h=o(n,[["render",r]]);export{d as __pageData,h as default};
