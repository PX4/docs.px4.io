import{_ as s,c as n,a8 as e,o as t}from"./chunks/framework.BDnHobkS.js";const u=JSON.parse('{"title":"Modules Reference: System","description":"","frontmatter":{},"headers":[],"relativePath":"uk/modules/modules_system.md","filePath":"uk/modules/modules_system.md"}'),p={name:"uk/modules/modules_system.md"};function l(i,a,o,r,c,d){return t(),n("div",null,a[0]||(a[0]=[e(`<h1 id="modules-reference-system" tabindex="-1">Modules Reference: System <a class="header-anchor" href="#modules-reference-system" aria-label="Permalink to &quot;Modules Reference: System&quot;">​</a></h1><h2 id="battery-simulator" tabindex="-1">battery_simulator <a class="header-anchor" href="#battery-simulator" aria-label="Permalink to &quot;battery_simulator&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/simulation/battery_simulator" target="_blank" rel="noreferrer">modules/simulation/battery_simulator</a></p><h3 id="опис" tabindex="-1">Опис <a class="header-anchor" href="#опис" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="battery_simulator_usage"></a></p><h3 id="використання" tabindex="-1">Використання <a class="header-anchor" href="#використання" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>battery_simulator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="battery-status" tabindex="-1">battery_status <a class="header-anchor" href="#battery-status" aria-label="Permalink to &quot;battery_status&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/battery_status" target="_blank" rel="noreferrer">modules/battery_status</a></p><h3 id="опис-1" tabindex="-1">Опис <a class="header-anchor" href="#опис-1" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Надана функціональність включає в себе:</p><ul><li>Read the output from the ADC driver (via ioctl interface) and publish <code>battery_status</code>.</li></ul><h3 id="імплементація" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p>Він запускається у власній темі і проводить опитування на поточну обрану тему гіроскопа.</p><p><a id="battery_status_usage"></a></p><h3 id="використання-1" tabindex="-1">Використання <a class="header-anchor" href="#використання-1" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>battery_status &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="camera-feedback" tabindex="-1">camera_feedback <a class="header-anchor" href="#camera-feedback" aria-label="Permalink to &quot;camera_feedback&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/camera_feedback" target="_blank" rel="noreferrer">modules/camera_feedback</a></p><h3 id="опис-2" tabindex="-1">Опис <a class="header-anchor" href="#опис-2" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>The camera_feedback module publishes <code>CameraCapture</code> UORB topics when image capture has been triggered.</p><p>If camera capture is enabled, then trigger information from the camera capture pin is published; otherwise trigger information at the point the camera was commanded to trigger is published (from the <code>camera_trigger</code> module).</p><p>The <code>CAMERA_IMAGE_CAPTURED</code> message is then emitted (by streaming code) following <code>CameraCapture</code> updates. <code>CameraCapture</code> topics are also logged and can be used for geotagging.</p><h3 id="імплементація-1" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація-1" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p><code>CameraTrigger</code> topics are published by the <code>camera_trigger</code> module (<code>feedback</code> field set <code>false</code>) when image capture is triggered, and may also be published by the <code>camera_capture</code> driver (with <code>feedback</code> field set <code>true</code>) if the camera capture pin is activated.</p><p>The <code>camera_feedback</code> module subscribes to <code>CameraTrigger</code>. It discards topics from the <code>camera_trigger</code> module if camera capture is enabled. For the topics that are not discarded it creates a <code>CameraCapture</code> topic with the timestamp information from the <code>CameraTrigger</code> and position information from the vehicle.</p><p><a id="camera_feedback_usage"></a></p><h3 id="використання-2" tabindex="-1">Використання <a class="header-anchor" href="#використання-2" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>camera_feedback &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="cdcacm-autostart" tabindex="-1">cdcacm_autostart <a class="header-anchor" href="#cdcacm-autostart" aria-label="Permalink to &quot;cdcacm_autostart&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/drivers/cdcacm_autostart" target="_blank" rel="noreferrer">drivers/cdcacm_autostart</a></p><h3 id="опис-3" tabindex="-1">Опис <a class="header-anchor" href="#опис-3" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Цей модуль прослуховує USB і автоматично налаштовує протокол в залежності від отриманих байтів. Підтримувані протоколи: MAVLink, nsh та ublox послідовний прохід. Якщо параметр SYS_USB_AUTO=2 модуль буде намагатися запустити mavlink лише тоді, коли буде виявлено USB VBUS. В іншому випадку він буде обертатися і продовжувати перевіряти VBUS та запускати mavlink, як тільки він виявиться.</p><p><a id="cdcacm_autostart_usage"></a></p><h3 id="використання-3" tabindex="-1">Використання <a class="header-anchor" href="#використання-3" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cdcacm_autostart &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="commander" tabindex="-1">commander <a class="header-anchor" href="#commander" aria-label="Permalink to &quot;commander&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/commander" target="_blank" rel="noreferrer">modules/commander</a></p><h3 id="опис-4" tabindex="-1">Опис <a class="header-anchor" href="#опис-4" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Модуль командира містить машину станів для перемикання режимів та аварійної поведінки.</p><p><a id="commander_usage"></a></p><h3 id="використання-4" tabindex="-1">Використання <a class="header-anchor" href="#використання-4" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>commander &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-h]        Enable HIL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   calibrate     Run sensor calibration</span></span>
<span class="line"><span>     mag|baro|accel|gyro|level|esc|airspeed Calibration type</span></span>
<span class="line"><span>     quick       Quick calibration (accel only, not recommended)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   check         Run preflight checks</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   arm</span></span>
<span class="line"><span>     [-f]        Force arming (do not run preflight checks)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   disarm</span></span>
<span class="line"><span>     [-f]        Force disarming (disarm in air)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   takeoff</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   land</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   transition    VTOL transition</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   mode          Change flight mode</span></span>
<span class="line"><span>     manual|acro|offboard|stabilized|altctl|posctl|position:slow|auto:mission|au</span></span>
<span class="line"><span>                 to:loiter|auto:rtl|auto:takeoff|auto:land|auto:precland|ext1</span></span>
<span class="line"><span>                 Flight mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   pair</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   lockdown</span></span>
<span class="line"><span>     on|off      Turn lockdown on or off</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   set_ekf_origin</span></span>
<span class="line"><span>     lat, lon, alt Origin Latitude, Longitude, Altitude</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   lat|lon|alt   Origin latitude longitude altitude</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   poweroff      Power off board (if supported)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="dataman" tabindex="-1">dataman <a class="header-anchor" href="#dataman" aria-label="Permalink to &quot;dataman&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/dataman" target="_blank" rel="noreferrer">modules/dataman</a></p><h3 id="опис-5" tabindex="-1">Опис <a class="header-anchor" href="#опис-5" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Модуль для забезпечення постійного сховища для решти системи у вигляді простої бази даних через C API. Підтримується декілька бекендів:</p><ul><li>файл (наприклад, на SD-карті)</li><li>Оперативна пам&#39;ять (очевидно, що вона не є постійною)</li></ul><p>Використовується для зберігання структурованих даних різних типів: маршрутні точки місії, стан місії та полігони геозони. Кожен тип має певний тип і фіксовану максимальну кількість елементів зберігання, щоб забезпечити швидкий випадковий доступ.</p><h3 id="імплементація-2" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація-2" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p>Читання і запис одного елемента завжди атомарні.</p><p><a id="dataman_usage"></a></p><h3 id="використання-5" tabindex="-1">Використання <a class="header-anchor" href="#використання-5" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dataman &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-f &lt;val&gt;]  Storage file</span></span>
<span class="line"><span>                 values: &lt;file&gt;</span></span>
<span class="line"><span>     [-r]        Use RAM backend (NOT persistent)</span></span>
<span class="line"><span></span></span>
<span class="line"><span> The options -f and -r are mutually exclusive. If nothing is specified, a file</span></span>
<span class="line"><span> &#39;dataman&#39; is used</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="dmesg" tabindex="-1">dmesg <a class="header-anchor" href="#dmesg" aria-label="Permalink to &quot;dmesg&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/systemcmds/dmesg" target="_blank" rel="noreferrer">systemcmds/dmesg</a></p><h3 id="опис-6" tabindex="-1">Опис <a class="header-anchor" href="#опис-6" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Інструмент командного рядка для показу повідомлень консолі завантаження. Зауважте, що вивід з робочих черг NuttX та syslog не перехоплюється.</p><h3 id="приклади" tabindex="-1">Приклади <a class="header-anchor" href="#приклади" aria-label="Permalink to &quot;Приклади&quot;">​</a></h3><p>Продовжує друкувати всі повідомлення у фоновому режимі:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dmesg -f &amp;</span></span></code></pre></div><p><a id="dmesg_usage"></a></p><h3 id="використання-6" tabindex="-1">Використання <a class="header-anchor" href="#використання-6" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dmesg &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>     [-f]        Follow: wait for new messages</span></span></code></pre></div><h2 id="esc-battery" tabindex="-1">esc_battery <a class="header-anchor" href="#esc-battery" aria-label="Permalink to &quot;esc_battery&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/esc_battery" target="_blank" rel="noreferrer">modules/esc_battery</a></p><h3 id="опис-7" tabindex="-1">Опис <a class="header-anchor" href="#опис-7" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Це реалізує використання інформації зі статусу ESC і публікує її як стан батареї.</p><p><a id="esc_battery_usage"></a></p><h3 id="використання-7" tabindex="-1">Використання <a class="header-anchor" href="#використання-7" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>esc_battery &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="gyro-calibration" tabindex="-1">gyro_calibration <a class="header-anchor" href="#gyro-calibration" aria-label="Permalink to &quot;gyro_calibration&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/gyro_calibration" target="_blank" rel="noreferrer">modules/gyro_calibration</a></p><h3 id="опис-8" tabindex="-1">Опис <a class="header-anchor" href="#опис-8" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Просте онлайн-калібрування гіроскопа.</p><p><a id="gyro_calibration_usage"></a></p><h3 id="використання-8" tabindex="-1">Використання <a class="header-anchor" href="#використання-8" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gyro_calibration &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="gyro-fft" tabindex="-1">gyro_fft <a class="header-anchor" href="#gyro-fft" aria-label="Permalink to &quot;gyro_fft&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/gyro_fft" target="_blank" rel="noreferrer">modules/gyro_fft</a></p><h3 id="опис-9" tabindex="-1">Опис <a class="header-anchor" href="#опис-9" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="gyro_fft_usage"></a></p><h3 id="використання-9" tabindex="-1">Використання <a class="header-anchor" href="#використання-9" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gyro_fft &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="heater" tabindex="-1">heater <a class="header-anchor" href="#heater" aria-label="Permalink to &quot;heater&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/drivers/heater" target="_blank" rel="noreferrer">drivers/heater</a></p><h3 id="опис-10" tabindex="-1">Опис <a class="header-anchor" href="#опис-10" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Фоновий процес, що періодично запускається в робочій черзі LP для регулювання температури IMU на заданому рівні.</p><p>Це завдання можна запустити під час завантаження зі скриптів запуску, встановивши SENS_EN_THERMAL, або через CLI.</p><p><a id="heater_usage"></a></p><h3 id="використання-10" tabindex="-1">Використання <a class="header-anchor" href="#використання-10" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>heater &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="i2c-launcher" tabindex="-1">i2c_launcher <a class="header-anchor" href="#i2c-launcher" aria-label="Permalink to &quot;i2c_launcher&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/systemcmds/i2c_launcher" target="_blank" rel="noreferrer">systemcmds/i2c_launcher</a></p><h3 id="опис-11" tabindex="-1">Опис <a class="header-anchor" href="#опис-11" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Демон, який запускає драйвери на основі виявлених пристроїв I2C.</p><p><a id="i2c_launcher_usage"></a></p><h3 id="використання-11" tabindex="-1">Використання <a class="header-anchor" href="#використання-11" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>i2c_launcher &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     -b &lt;val&gt;    Bus number</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="land-detector" tabindex="-1">land_detector <a class="header-anchor" href="#land-detector" aria-label="Permalink to &quot;land_detector&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/land_detector" target="_blank" rel="noreferrer">modules/land_detector</a></p><h3 id="опис-12" tabindex="-1">Опис <a class="header-anchor" href="#опис-12" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Module to detect the freefall and landed state of the vehicle, and publishing the <code>vehicle_land_detected</code> topic. Each vehicle type (multirotor, fixedwing, vtol, ...) provides its own algorithm, taking into account various states, such as commanded thrust, arming state and vehicle motion.</p><h3 id="імплементація-3" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація-3" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p>Кожен тип реалізовано у власному класі зі спільним базовим класом. Базовий клас підтримує стан (landed, maybe_landed, ground_contact). Кожен можливий стан реалізується в похідних класах. Гістерезис та фіксований пріоритет кожного внутрішнього стану визначає фактичний стан land_detector.</p><h4 id="мультикоптер-land-detector" tabindex="-1">Мультикоптер Land Detector <a class="header-anchor" href="#мультикоптер-land-detector" aria-label="Permalink to &quot;Мультикоптер Land Detector&quot;">​</a></h4><p><strong>ground_contact</strong>: thrust setpoint and velocity in z-direction must be below a defined threshold for time GROUND_CONTACT_TRIGGER_TIME_US. При виявленні контакту з землею регулятор положення вимикає задане значення тяги у тілі x та y.</p><p><strong>maybe_landed</strong>: it requires ground_contact together with a tighter thrust setpoint threshold and no velocity in the horizontal direction. Час спрацьовування визначається параметром MAYBE_LAND_TRIGGER_TIME. Коли виявляється maybe_landed, контролер положення встановлює задане значення тяги на нуль.</p><p><strong>landed</strong>: it requires maybe_landed to be true for time LAND_DETECTOR_TRIGGER_TIME_US.</p><p>Модуль періодично запускається у черзі робіт HP.</p><p><a id="land_detector_usage"></a></p><h3 id="використання-12" tabindex="-1">Використання <a class="header-anchor" href="#використання-12" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>land_detector &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span>     fixedwing|multicopter|vtol|rover|airship Select vehicle type</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="load-mon" tabindex="-1">load_mon <a class="header-anchor" href="#load-mon" aria-label="Permalink to &quot;load_mon&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/load_mon" target="_blank" rel="noreferrer">modules/load_mon</a></p><h3 id="опис-13" tabindex="-1">Опис <a class="header-anchor" href="#опис-13" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Background process running periodically on the low priority work queue to calculate the CPU load and RAM usage and publish the <code>cpuload</code> topic.</p><p>У NuttX він також перевіряє використання стеку кожним процесом, і якщо воно падає нижче 300 байт, виводиться попередження, яке також буде показано у файлі логу.</p><p><a id="load_mon_usage"></a></p><h3 id="використання-13" tabindex="-1">Використання <a class="header-anchor" href="#використання-13" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>load_mon &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="logger" tabindex="-1">logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;logger&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/logger" target="_blank" rel="noreferrer">modules/logger</a></p><h3 id="опис-14" tabindex="-1">Опис <a class="header-anchor" href="#опис-14" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>System logger which logs a configurable set of uORB topics and system printf messages (<code>PX4_WARN</code> and <code>PX4_ERR</code>) to ULog files. Вони можуть бути використані для оцінки продуктивності системи та польоту, налаштування, відтворення та аналізу збоїв.</p><p>Він підтримує 2 бекенди:</p><ul><li>Файли: запис файлів ULog до файлової системи (SD-карта)</li><li>MAVLink: передача даних ULog через MAVLink клієнту (клієнт повинен це підтримувати)</li></ul><p>Обидва бекенди можуть бути активовані та використовуватися одночасно.</p><p>Файловий бекенд підтримує 2 типи логів: повний (звичайний лог) і журнал місій. Журнал місії - це скорочений файл ulog, який можна використовувати, наприклад, для географічних міток або управління транспортним засобом. Його можна увімкнути та налаштувати за допомогою параметра SDLOG_MISSION. Звичайний журнал завжди є підмножиною журналу місій.</p><h3 id="імплементація-4" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація-4" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p>Реалізація використовує два потоки:</p><ul><li>The main thread, running at a fixed rate (or polling on a topic if started with -p) and checking for data updates</li><li>Потік запису, що записує дані у файл</li></ul><p>Між ними знаходиться буфер запису з конфігурованим розміром (і ще один буфер фіксованого розміру для журналу місій). Він повинен бути великим, щоб уникнути втрати даних.</p><h3 id="приклади-1" tabindex="-1">Приклади <a class="header-anchor" href="#приклади-1" aria-label="Permalink to &quot;Приклади&quot;">​</a></h3><p>Типове використання для початку ведення журналу негайно:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>logger start -e -t</span></span></code></pre></div><p>Або якщо вже працює:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>logger on</span></span></code></pre></div><p><a id="logger_usage"></a></p><h3 id="використання-14" tabindex="-1">Використання <a class="header-anchor" href="#використання-14" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>logger &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-m &lt;val&gt;]  Backend mode</span></span>
<span class="line"><span>                 values: file|mavlink|all, default: all</span></span>
<span class="line"><span>     [-x]        Enable/disable logging via Aux1 RC channel</span></span>
<span class="line"><span>     [-a]        Log 1st armed until shutdown</span></span>
<span class="line"><span>     [-e]        Enable logging right after start until disarm (otherwise only</span></span>
<span class="line"><span>                 when armed)</span></span>
<span class="line"><span>     [-f]        Log until shutdown (implies -e)</span></span>
<span class="line"><span>     [-t]        Use date/time for naming log directories and files</span></span>
<span class="line"><span>     [-r &lt;val&gt;]  Log rate in Hz, 0 means unlimited rate</span></span>
<span class="line"><span>                 default: 280</span></span>
<span class="line"><span>     [-b &lt;val&gt;]  Log buffer size in KiB</span></span>
<span class="line"><span>                 default: 12</span></span>
<span class="line"><span>     [-p &lt;val&gt;]  Poll on a topic instead of running with fixed rate (Log rate</span></span>
<span class="line"><span>                 and topic intervals are ignored if this is set)</span></span>
<span class="line"><span>                 values: &lt;topic_name&gt;</span></span>
<span class="line"><span>     [-c &lt;val&gt;]  Log rate factor (higher is faster)</span></span>
<span class="line"><span>                 default: 1.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   on            start logging now, override arming (logger must be running)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   off           stop logging now, override arming (logger must be running)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   trigger_watchdog manually trigger the watchdog now</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="mag-bias-estimator" tabindex="-1">mag_bias_estimator <a class="header-anchor" href="#mag-bias-estimator" aria-label="Permalink to &quot;mag_bias_estimator&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/mag_bias_estimator" target="_blank" rel="noreferrer">modules/mag_bias_estimator</a></p><h3 id="опис-15" tabindex="-1">Опис <a class="header-anchor" href="#опис-15" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Онлайн-оцінювач похибки магнітометра.</p><p><a id="mag_bias_estimator_usage"></a></p><h3 id="використання-15" tabindex="-1">Використання <a class="header-anchor" href="#використання-15" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mag_bias_estimator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="manual-control" tabindex="-1">manual_control <a class="header-anchor" href="#manual-control" aria-label="Permalink to &quot;manual_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/manual_control" target="_blank" rel="noreferrer">modules/manual_control</a></p><h3 id="опис-16" tabindex="-1">Опис <a class="header-anchor" href="#опис-16" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Модуль споживає вхідні дані вручним керуванням, публікуючи одну установку керування вручну.</p><p><a id="manual_control_usage"></a></p><h3 id="використання-16" tabindex="-1">Використання <a class="header-anchor" href="#використання-16" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>manual_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="netman" tabindex="-1">netman <a class="header-anchor" href="#netman" aria-label="Permalink to &quot;netman&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/systemcmds/netman" target="_blank" rel="noreferrer">systemcmds/netman</a></p><h3 id="опис-17" tabindex="-1">Опис <a class="header-anchor" href="#опис-17" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Network configuration manager saves the network settings in non-volatile memory. On boot the <code>update</code> option will be run. Якщо конфігурація мережі не існує. Значення за замовчуванням буде збережено в неплавучій пам&#39;яті та система перезавантажена.</p><h4 id="update" tabindex="-1">update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;update&quot;">​</a></h4><p><code>netman update</code> is run automatically by <a href="./../concept/system_startup.html#system-startup">a startup script</a>. When run, the <code>update</code> option will check for the existence of <code>net.cfg</code> in the root of the SD Card. It then saves the network settings from <code>net.cfg</code> in non-volatile memory, deletes the file and reboots the system.</p><h4 id="save" tabindex="-1">save <a class="header-anchor" href="#save" aria-label="Permalink to &quot;save&quot;">​</a></h4><p>The <code>save</code> option will save settings from non-volatile memory to a file named <code>net.cfg</code> on the SD Card filesystem for editing. Використовуйте це, щоб відредагувати налаштування. Збереження не негайно застосовує мережеві налаштування; користувач повинен перезавантажити стек польоту. By contrast, the <code>update</code> command is run by the start-up script, commits the settings to non-volatile memory, and reboots the flight controller (which will then use the new settings).</p><h4 id="show" tabindex="-1">show <a class="header-anchor" href="#show" aria-label="Permalink to &quot;show&quot;">​</a></h4><p>The <code>show</code> option will display the network settings in <code>net.cfg</code> to the console.</p><h3 id="приклади-2" tabindex="-1">Приклади <a class="header-anchor" href="#приклади-2" aria-label="Permalink to &quot;Приклади&quot;">​</a></h3><p>$ netman save # Save the parameters to the SD card. $ netman show # відображення поточних налаштувань. $ netman update -i eth0 # зробити оновлення</p><p><a id="netman_usage"></a></p><h3 id="використання-17" tabindex="-1">Використання <a class="header-anchor" href="#використання-17" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>netman &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   show          Display the current persistent network settings to the console.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   update        Check SD card for net.cfg and update network persistent network</span></span>
<span class="line"><span>                 settings.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   save          Save the current network parameters to the SD card.</span></span>
<span class="line"><span>     [-i &lt;val&gt;]  Set the interface name</span></span>
<span class="line"><span>                 default: eth0</span></span></code></pre></div><h2 id="pwm-input" tabindex="-1">pwm_input <a class="header-anchor" href="#pwm-input" aria-label="Permalink to &quot;pwm_input&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/drivers/pwm_input" target="_blank" rel="noreferrer">drivers/pwm_input</a></p><h3 id="опис-18" tabindex="-1">Опис <a class="header-anchor" href="#опис-18" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Вимірює вхід PWM на AUX5 (або MAIN5) через таймер захоплення ISR та публікує через повідомлення uORB &#39;pwm_input&#39;.</p><p><a id="pwm_input_usage"></a></p><h3 id="використання-18" tabindex="-1">Використання <a class="header-anchor" href="#використання-18" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pwm_input &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="rc-update" tabindex="-1">rc_update <a class="header-anchor" href="#rc-update" aria-label="Permalink to &quot;rc_update&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/rc_update" target="_blank" rel="noreferrer">modules/rc_update</a></p><h3 id="опис-19" tabindex="-1">Опис <a class="header-anchor" href="#опис-19" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>The rc_update module handles RC channel mapping: read the raw input channels (<code>input_rc</code>), then apply the calibration, map the RC channels to the configured channels &amp; mode switches and then publish as <code>rc_channels</code> and <code>manual_control_input</code>.</p><h3 id="імплементація-5" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація-5" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p>Щоб зменшити затримку управління, модуль запланований на опублікування введення_управління.</p><p><a id="rc_update_usage"></a></p><h3 id="використання-19" tabindex="-1">Використання <a class="header-anchor" href="#використання-19" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rc_update &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="replay" tabindex="-1">replay <a class="header-anchor" href="#replay" aria-label="Permalink to &quot;replay&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/replay" target="_blank" rel="noreferrer">modules/replay</a></p><h3 id="опис-20" tabindex="-1">Опис <a class="header-anchor" href="#опис-20" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Цей модуль використовується для відтворення файлів ULog.</p><p>There are 2 environment variables used for configuration: <code>replay</code>, which must be set to an ULog file name - it&#39;s the log file to be replayed. The second is the mode, specified via <code>replay_mode</code>:</p><ul><li><code>replay_mode=ekf2</code>: specific EKF2 replay mode. It can only be used with the ekf2 module, but allows the replay to run as fast as possible.</li><li>Generic otherwise: this can be used to replay any module(s), but the replay will be done with the same speed as the log was recorded.</li></ul><p>Модуль зазвичай використовується разом з правилами видавця uORB, щоб вказати, які повідомлення потрібно відтворити. Модуль відтворення просто опублікує всі повідомлення, які знаходяться в журналі. Це також застосовує параметри з журналу.</p><p>The replay procedure is documented on the <a href="https://docs.px4.io/main/en/debug/system_wide_replay.html" target="_blank" rel="noreferrer">System-wide Replay</a> page.</p><p><a id="replay_usage"></a></p><h3 id="використання-20" tabindex="-1">Використання <a class="header-anchor" href="#використання-20" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>replay &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start replay, using log file from ENV variable &#39;replay&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   trystart      Same as &#39;start&#39;, but silently exit if no log file given</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   tryapplyparams Try to apply the parameters from the log file</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="send-event" tabindex="-1">send_event <a class="header-anchor" href="#send-event" aria-label="Permalink to &quot;send_event&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/events" target="_blank" rel="noreferrer">modules/events</a></p><h3 id="опис-21" tabindex="-1">Опис <a class="header-anchor" href="#опис-21" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Фоновий процес, що періодично виконується в черзі завдань LP для виконання рутинних завдань. Зараз він відповідає лише за сигнал тривоги на втрату RC.</p><p>Завдання можна почати через CLI або теми uORB (vehicle_command з MAVLink тощо).</p><p><a id="send_event_usage"></a></p><h3 id="використання-21" tabindex="-1">Використання <a class="header-anchor" href="#використання-21" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>send_event &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-arispeed-sim" tabindex="-1">sensor_arispeed_sim <a class="header-anchor" href="#sensor-arispeed-sim" aria-label="Permalink to &quot;sensor_arispeed_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/simulation/sensor_airspeed_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_airspeed_sim</a></p><h3 id="опис-22" tabindex="-1">Опис <a class="header-anchor" href="#опис-22" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="sensor_arispeed_sim_usage"></a></p><h3 id="використання-22" tabindex="-1">Використання <a class="header-anchor" href="#використання-22" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sensor_arispeed_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-baro-sim" tabindex="-1">sensor_baro_sim <a class="header-anchor" href="#sensor-baro-sim" aria-label="Permalink to &quot;sensor_baro_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/simulation/sensor_baro_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_baro_sim</a></p><h3 id="опис-23" tabindex="-1">Опис <a class="header-anchor" href="#опис-23" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="sensor_baro_sim_usage"></a></p><h3 id="використання-23" tabindex="-1">Використання <a class="header-anchor" href="#використання-23" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sensor_baro_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-gps-sim" tabindex="-1">sensor_gps_sim <a class="header-anchor" href="#sensor-gps-sim" aria-label="Permalink to &quot;sensor_gps_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/simulation/sensor_gps_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_gps_sim</a></p><h3 id="опис-24" tabindex="-1">Опис <a class="header-anchor" href="#опис-24" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="sensor_gps_sim_usage"></a></p><h3 id="використання-24" tabindex="-1">Використання <a class="header-anchor" href="#використання-24" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sensor_gps_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-mag-sim" tabindex="-1">sensor_mag_sim <a class="header-anchor" href="#sensor-mag-sim" aria-label="Permalink to &quot;sensor_mag_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/simulation/sensor_mag_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_mag_sim</a></p><h3 id="опис-25" tabindex="-1">Опис <a class="header-anchor" href="#опис-25" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="sensor_mag_sim_usage"></a></p><h3 id="використання-25" tabindex="-1">Використання <a class="header-anchor" href="#використання-25" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sensor_mag_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensors" tabindex="-1">sensors <a class="header-anchor" href="#sensors" aria-label="Permalink to &quot;sensors&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/sensors" target="_blank" rel="noreferrer">modules/sensors</a></p><h3 id="опис-26" tabindex="-1">Опис <a class="header-anchor" href="#опис-26" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Модуль сенсорів є центральним у всій системі. Він отримує вихід низького рівня від драйверів, перетворює його в більш придатну форму і публікує його для решти системи.</p><p>Надана функціональність включає в себе:</p><ul><li>Read the output from the sensor drivers (<code>SensorGyro</code>, etc.). Якщо існують кілька екземплярів того самого типу, виконуйте голосування та обробку аварійної ситуації. Потім застосуйте обертання дошки та калібрування температури (якщо ввімкнено). And finally publish the data; one of the topics is <code>SensorCombined</code>, used by many parts of the system.</li><li>Make sure the sensor drivers get the updated calibration parameters (scale &amp; offset) when the parameters change or on startup. Драйвери сенсора використовують інтерфейс ioctl для оновлення параметрів. For this to work properly, the sensor drivers must already be running when <code>sensors</code> is started.</li><li>Do sensor consistency checks and publish the <code>SensorsStatusImu</code> topic.</li></ul><h3 id="імплементація-6" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація-6" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p>Він запускається у власній темі і проводить опитування на поточну обрану тему гіроскопа.</p><p><a id="sensors_usage"></a></p><h3 id="використання-26" tabindex="-1">Використання <a class="header-anchor" href="#використання-26" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sensors &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-h]        Start in HIL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="tattu-can" tabindex="-1">tattu_can <a class="header-anchor" href="#tattu-can" aria-label="Permalink to &quot;tattu_can&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/drivers/tattu_can" target="_blank" rel="noreferrer">drivers/tattu_can</a></p><h3 id="опис-27" tabindex="-1">Опис <a class="header-anchor" href="#опис-27" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Драйвер для зчитування даних з розумної батареї Tattu 12S 16000mAh.</p><p><a id="tattu_can_usage"></a></p><h3 id="використання-27" tabindex="-1">Використання <a class="header-anchor" href="#використання-27" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tattu_can &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="temperature-compensation" tabindex="-1">temperature_compensation <a class="header-anchor" href="#temperature-compensation" aria-label="Permalink to &quot;temperature_compensation&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/temperature_compensation" target="_blank" rel="noreferrer">modules/temperature_compensation</a></p><h3 id="опис-28" tabindex="-1">Опис <a class="header-anchor" href="#опис-28" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Модуль компенсації температури дозволяє всім гіроскопам, акселерометрам та барометрам у системі бути температурно компенсованими. Модуль відстежує дані, які надходять від датчиків та оновлює пов&#39;язану тему sensor_correction кожного разу, коли виявляється зміна температури. Модуль також може бути налаштований для виконання обчислення коефіцієнта наступного завантаження, що дозволяє обчислити калібрувальні коефіцієнти теплової калібрації під час циклу температури автомобіля.</p><p><a id="temperature_compensation_usage"></a></p><h3 id="використання-28" tabindex="-1">Використання <a class="header-anchor" href="#використання-28" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>temperature_compensation &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the module, which monitors the sensors and updates the</span></span>
<span class="line"><span>                 sensor_correction topic</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   calibrate     Run temperature calibration process</span></span>
<span class="line"><span>     [-a]        calibrate the accel</span></span>
<span class="line"><span>     [-g]        calibrate the gyro</span></span>
<span class="line"><span>     [-m]        calibrate the mag</span></span>
<span class="line"><span>     [-b]        calibrate the baro (if none of these is given, all will be</span></span>
<span class="line"><span>                 calibrated)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="time-persistor" tabindex="-1">time_persistor <a class="header-anchor" href="#time-persistor" aria-label="Permalink to &quot;time_persistor&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/time_persistor" target="_blank" rel="noreferrer">modules/time_persistor</a></p><h3 id="опис-29" tabindex="-1">Опис <a class="header-anchor" href="#опис-29" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Writes the RTC time cyclically to a file and reloads this value on startup. This allows monotonic time on systems that only have a software RTC (that is not battery powered). Explicitly setting the time backwards (e.g. via system_time) is still possible.</p><p><a id="time_persistor_usage"></a></p><h3 id="використання-29" tabindex="-1">Використання <a class="header-anchor" href="#використання-29" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>time_persistor &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="tune-control" tabindex="-1">tune_control <a class="header-anchor" href="#tune-control" aria-label="Permalink to &quot;tune_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/systemcmds/tune_control" target="_blank" rel="noreferrer">systemcmds/tune_control</a></p><h3 id="опис-30" tabindex="-1">Опис <a class="header-anchor" href="#опис-30" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Command-line tool to control &amp; test the (external) tunes.</p><p>Мелодії використовуються для надання слухових сповіщень та попереджень (наприклад, коли система озброєна, отримує позицію блокування тощо). Інструмент вимагає, щоб був запущений драйвер, який може керувати темою управління tune_control uorb.</p><p>Інформацію про формат мелодії та попередньо визначені системні мелодії можна знайти тут: <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/lib/tunes/tune_definition.desc" target="_blank" rel="noreferrer">https://github.com/PX4/PX4-Autopilot/blob/main/src/lib/tunes/tune_definition.desc</a></p><h3 id="приклади-3" tabindex="-1">Приклади <a class="header-anchor" href="#приклади-3" aria-label="Permalink to &quot;Приклади&quot;">​</a></h3><p>Грайте системний мелодію #2:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tune_control play -t 2</span></span></code></pre></div><p><a id="tune_control_usage"></a></p><h3 id="використання-30" tabindex="-1">Використання <a class="header-anchor" href="#використання-30" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tune_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   play          Play system tune or single note.</span></span>
<span class="line"><span>     error       Play error tune</span></span>
<span class="line"><span>     [-t &lt;val&gt;]  Play predefined system tune</span></span>
<span class="line"><span>                 default: 1</span></span>
<span class="line"><span>     [-f &lt;val&gt;]  Frequency of note in Hz (0-22kHz)</span></span>
<span class="line"><span>     [-d &lt;val&gt;]  Duration of note in us</span></span>
<span class="line"><span>     [-s &lt;val&gt;]  Volume level (loudness) of the note (0-100)</span></span>
<span class="line"><span>                 default: 40</span></span>
<span class="line"><span>     [-m &lt;val&gt;]  Melody in string form</span></span>
<span class="line"><span>                 values: &lt;string&gt; - e.g. &quot;MFT200e8a8a&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   libtest       Test library</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop          Stop playback (use for repeated tunes)</span></span></code></pre></div><h2 id="uxrce-dds-client" tabindex="-1">uxrce_dds_client <a class="header-anchor" href="#uxrce-dds-client" aria-label="Permalink to &quot;uxrce_dds_client&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/uxrce_dds_client" target="_blank" rel="noreferrer">modules/uxrce_dds_client</a></p><h3 id="опис-31" tabindex="-1">Опис <a class="header-anchor" href="#опис-31" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Клієнт UXRCE-DDS використовується для спілкування з агентом за допомогою тем uORB через послідовний або UDP.</p><h3 id="приклади-4" tabindex="-1">Приклади <a class="header-anchor" href="#приклади-4" aria-label="Permalink to &quot;Приклади&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>uxrce_dds_client start -t serial -d /dev/ttyS3 -b 921600</span></span>
<span class="line"><span>uxrce_dds_client start -t udp -h 127.0.0.1 -p 15555</span></span></code></pre></div><p><a id="uxrce_dds_client_usage"></a></p><h3 id="використання-31" tabindex="-1">Використання <a class="header-anchor" href="#використання-31" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>uxrce_dds_client &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-t &lt;val&gt;]  Transport protocol</span></span>
<span class="line"><span>                 values: serial|udp, default: udp</span></span>
<span class="line"><span>     [-d &lt;val&gt;]  serial device</span></span>
<span class="line"><span>                 values: &lt;file:dev&gt;</span></span>
<span class="line"><span>     [-b &lt;val&gt;]  Baudrate (can also be p:&lt;param_name&gt;)</span></span>
<span class="line"><span>                 default: 0</span></span>
<span class="line"><span>     [-h &lt;val&gt;]  Agent IP. If not provided, defaults to UXRCE_DDS_AG_IP</span></span>
<span class="line"><span>                 values: &lt;IP&gt;</span></span>
<span class="line"><span>     [-p &lt;val&gt;]  Agent listening port. If not provided, defaults to</span></span>
<span class="line"><span>                 UXRCE_DDS_PRT</span></span>
<span class="line"><span>     [-n &lt;val&gt;]  Client DDS namespace</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="work-queue" tabindex="-1">work_queue <a class="header-anchor" href="#work-queue" aria-label="Permalink to &quot;work_queue&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/systemcmds/work_queue" target="_blank" rel="noreferrer">systemcmds/work_queue</a></p><h3 id="опис-32" tabindex="-1">Опис <a class="header-anchor" href="#опис-32" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Інструмент командного рядка для відображення статусу черги роботи.</p><p><a id="work_queue_usage"></a></p><h3 id="використання-32" tabindex="-1">Використання <a class="header-anchor" href="#використання-32" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>work_queue &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div>`,289)]))}const m=s(p,[["render",l]]);export{u as __pageData,m as default};
