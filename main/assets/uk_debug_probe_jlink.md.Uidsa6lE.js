import{_ as i}from"./chunks/connector_jlink_mini.DZUtG3s6.js";import{_ as t,c as e,a8 as a,o as n}from"./chunks/framework.BDnHobkS.js";const c=JSON.parse('{"title":"JLink Debug Probe","description":"","frontmatter":{},"headers":[],"relativePath":"uk/debug/probe_jlink.md","filePath":"uk/debug/probe_jlink.md"}'),l={name:"uk/debug/probe_jlink.md"};function h(p,s,r,d,k,o){return n(),e("div",null,s[0]||(s[0]=[a(`<h1 id="jlink-debug-probe" tabindex="-1">JLink Debug Probe <a class="header-anchor" href="#jlink-debug-probe" aria-label="Permalink to &quot;JLink Debug Probe&quot;">​</a></h1><p>The <a href="https://www.segger.com/products/debug-probes/j-link/" target="_blank" rel="noreferrer">J-Link debug probe</a> is a closed-source, commercial hardware probe which supports almost all ARM Cortex-M devices. You need to install the <a href="https://www.segger.com/downloads/jlink/" target="_blank" rel="noreferrer">J-Link drivers</a> for this probe to work:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --post-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;accept_license_agreement=accepted&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://www.segger.com/downloads/jlink/JLink_Linux_x86_64.deb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JLink_Linux_x86_64.deb</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># macOS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> segger-jlink</span></span></code></pre></div><p>Після встановлення ви можете запустити сервер за допомогою:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">JLinkGDBServer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> swd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -device</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STM32F765II</span></span></code></pre></div><p>Можливо, перед вами відобразиться запит на оновлення JLink, що й рекомендується зробити, а потім вказати, з яким пристроєм він взаємодіє. Перевірте документацію вашого автопілота для конкретного пристрою.</p><p>Once that&#39;s done, the GDB server should be start listening on port <code>2331</code>, e.g. like so:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Checking</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> voltage...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Target</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> voltage:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.28</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> V</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Listening</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TCP/IP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2331</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Connecting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Connected</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Waiting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GDB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connection...</span></span></code></pre></div><p>Тепер ви можете запустити GDB з точним elf-файлом, який зараз вивантажений на автопілот (у окремому терміналі):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm-none-eabi-gdb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/px4_fmu-v5x_default/px4_fmu-v5x_default.elf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;target extended-remote :2331&quot;</span></span></code></pre></div><p>Тепер ви повинні бути підключені.</p><p>To use an IDE instead, see the instructions for <a href="./../debug/eclipse_jlink.html">Eclipse</a> or <a href="./../dev_setup/vscode.html#hardware-debugging">VSCode</a>. See the <a href="https://pypi.org/project/emdbg/" target="_blank" rel="noreferrer">Embedded Debug Tools</a> for more advanced debug options.</p><p><a id="segger_jlink_edu_mini"></a></p><h3 id="embedded-debug-tools" tabindex="-1">Embedded Debug Tools <a class="header-anchor" href="#embedded-debug-tools" aria-label="Permalink to &quot;Embedded Debug Tools&quot;">​</a></h3><p>The <a href="https://www.segger.com/products/debug-probes/j-link/models/j-link-edu-mini/" target="_blank" rel="noreferrer">Segger JLink EDU Mini</a> is an inexpensive and popular SWD debug probe. The probe&#39;s connector pinout looks like the image below (connect to this using an ARM 10-pin mini connector like <a href="https://www.digikey.com/products/en?keywords=SAM8796-ND" target="_blank" rel="noreferrer">FTSH-105-01-F-DV-K</a>).</p><p><img src="`+i+'" alt="connectorjlinkmini.png"></p><p>The pin mapping to connect the J-Link Edu Mini to <a href="./swd_debug.html#pixhawk-debug-mini">Pixhawk Debug Mini</a> is shown below.</p><table tabindex="0"><thead><tr><th style="text-align:right;">Pin</th><th style="text-align:left;">Сигнал</th><th style="text-align:right;">JLink</th></tr></thead><tbody><tr><td style="text-align:right;">1</td><td style="text-align:left;"><strong>VREF</strong></td><td style="text-align:right;">1</td></tr><tr><td style="text-align:right;">2</td><td style="text-align:left;">Console TX</td><td style="text-align:right;"></td></tr><tr><td style="text-align:right;">3</td><td style="text-align:left;">Console RX</td><td style="text-align:right;"></td></tr><tr><td style="text-align:right;">4</td><td style="text-align:left;"><strong>SWDIO</strong></td><td style="text-align:right;">2</td></tr><tr><td style="text-align:right;">5</td><td style="text-align:left;"><strong>SWDCLK</strong></td><td style="text-align:right;">4</td></tr><tr><td style="text-align:right;">6</td><td style="text-align:left;"><strong>GND</strong></td><td style="text-align:right;">3, 5</td></tr></tbody></table><p>Зверніть увагу, що жоден з JLink debug зондів не має вбудованого послідовного з&#39;єднання, тому вам потрібно підключити консоль окремо.</p>',19)]))}const b=t(l,[["render",h]]);export{c as __pageData,b as default};
