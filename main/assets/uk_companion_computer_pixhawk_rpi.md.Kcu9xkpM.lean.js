import{_ as s,a}from"./chunks/rpi_gpio.BJfcpOCw.js";import{_ as t,c as e,a8 as n,o as l}from"./chunks/framework.BDnHobkS.js";const F=JSON.parse('{"title":"Супутник Raspberry Pi з Pixhawk","description":"","frontmatter":{},"headers":[],"relativePath":"uk/companion_computer/pixhawk_rpi.md","filePath":"uk/companion_computer/pixhawk_rpi.md"}'),p={name:"uk/companion_computer/pixhawk_rpi.md"};function h(o,i,d,r,k,c){return l(),e("div",null,i[0]||(i[0]=[n('<h1 id="супутник-raspberry-pi-з-pixhawk" tabindex="-1">Супутник Raspberry Pi з Pixhawk <a class="header-anchor" href="#супутник-raspberry-pi-з-pixhawk" aria-label="Permalink to &quot;Супутник Raspberry Pi з Pixhawk&quot;">​</a></h1><p>This topic describes how to setup a Raspberry Pi (&quot;RPi&quot;) companion companion running <a href="./../ros2/user_guide.html">ROS 2</a> on Linux Ubuntu OS, connecting to a <a href="./../flight_controller/autopilot_pixhawk_standard.html">Pixhawk</a> flight controller using a serial connection between the Pixhawk <code>TELEM2</code> port and the RPi&#39;s TX/RX pins.</p><p>Ці інструкції мають бути легко розширювані для інших конфігурацій контролерів RPi та польотів.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Інші загальні способи підключення RaPi та Pixhawk це:</p><ul><li>Ethernet-з&#39;єднання між RPi та Pixhawk. Контролери Pixhawk на основі FMUv5x, FMUv6x та пізніших можуть мати вбудований порт Ethernet. Див. <a href="./../advanced_config/ethernet_setup.html#supported-flight-controllers">PX4 Ethernet &gt; Підтримувані контролери</a>.</li><li>Серійне підключення до USB-порту RPi. Це просто і надійно, але потребує додаткової плати адаптера USB-серійного інтерфейсу від FTDI Chip. Ця опція описана в <a href="./../companion_computer/pixhawk_companion.html#serial-port-setup">Pixhawk Companion &gt; Налаштування послідовного порту</a>.</li></ul></div><h2 id="підключення" tabindex="-1">Підключення <a class="header-anchor" href="#підключення" aria-label="Permalink to &quot;Підключення&quot;">​</a></h2><h3 id="послідовне-з-єднання" tabindex="-1">Послідовне з&#39;єднання <a class="header-anchor" href="#послідовне-з-єднання" aria-label="Permalink to &quot;Послідовне з&#39;єднання&quot;">​</a></h3><p>Спочатку підключіть послідовне з&#39;єднання між RPi та PX4, яке буде використовуватися для управління ззовні.</p><p>Це налаштування з&#39;єднує Pixhawk <code>TELEM2</code>, що загалом рекомендується для офлайн керування. Спочатку вона налаштована в PX4 для використання з MAVLink, що ми змінимо пізніше при налаштуванні ROS 2. Порти Pixhawk можуть бути розташовані де завгодно на контролері польоту, але майже завжди добре позначені, і повинні бути очевидними на вашому конкретному <a href="./../flight_controller/">контролері польоту</a>.</p><p>Підключіть контакти Pixhawk <code>TELEM2</code> <code>TX</code>/<code>RX</code>/<code>GND</code> до відповідних контактів <code>RXD</code>/<code>TXD</code>/<code>Ground</code> на платі GPIO RPi:</p><table tabindex="0"><thead><tr><th>PX4 TELEM2 Pin</th><th>RPi GPIO Pin</th></tr></thead><tbody><tr><td>UART5_TX (2)</td><td>RXD (GPIO 15 - pin 10)</td></tr><tr><td>UART5_RX (3)</td><td>TXD (GPIO 14 - pin 8)</td></tr><tr><td>GND (6)</td><td>Ground (pin 6)</td></tr></tbody></table><p>Діаграма показує контакти порту Pixhawk <code>TELEM2</code> зліва та контакти плати GPIO RPi справа. Контакти на порті <code>TELEM2</code> зазвичай нумеруються справа наліво, як показано.</p><table tabindex="0"><thead><tr><th><code>TELEM2</code></th><th>RPi GPIO</th></tr></thead><tbody><tr><td><img src="'+s+'" alt="Pin numbering showing left-most pin is pin 1"></td><td><img src="'+a+`" alt=""></td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Майже всі останні плати Pixhawk, такі як Pixhawk-6C, використовують ті ж самі роз&#39;єми та номери контактів для відповідних портів, як визначено в Стандарті роз&#39;ємів Pixhawk. Ви можете перевірити конкретну документацію дошки, щоб підтвердити розташування контактів.</p><p>Стандартні призначення контактів <code>TELEM2</code> показані нижче.</p><table tabindex="0"><thead><tr><th>Піни</th><th>Сигнал</th><th>Напруга</th></tr></thead><tbody><tr><td>1 (Red)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (Black)</td><td>UART5_TX (out)</td><td>+3.3V</td></tr><tr><td>3 (Black)</td><td>UART5_RX (in)</td><td>+3.3V</td></tr><tr><td>4 (Black)</td><td>UART5_CTS (in)</td><td>+3.3V</td></tr><tr><td>5 (Black)</td><td>UART5_RTS (out)</td><td>+3.3V</td></tr><tr><td>6 (Black)</td><td>GND</td><td>GND</td></tr></tbody></table></div><h3 id="telem1-телеметріине-радіо" tabindex="-1">TELEM1/Телеметрійне радіо <a class="header-anchor" href="#telem1-телеметріине-радіо" aria-label="Permalink to &quot;TELEM1/Телеметрійне радіо&quot;">​</a></h3><p>Порт Pixhawk <code>TELEM1</code> попередньо налаштований для підключення до GCS через MAVLink через радіоканал телеметрії.</p><p>Ви можете підключити <a href="./../telemetry/">відповідне радіо</a> до порту Pixhawk <code>TELEM1</code> і у більшості випадків воно повинно працювати. Зазвичай інший радіоприймач повинен бути підключений до USB-порту наземної станції. Якщо у вас виникли проблеми, перевірте документацію радіо.</p><h3 id="джерело-живлення" tabindex="-1">Джерело живлення <a class="header-anchor" href="#джерело-живлення" aria-label="Permalink to &quot;Джерело живлення&quot;">​</a></h3><p>Плати Pixhawk зазвичай потребують надійного джерела живлення 5 В постійного струму, яке зазвичай постачається від акумуляторів LiPO через <a href="./../power_module/">Модуль живлення та/або розподільник живлення</a> до порту, позначеного як <code>POWER</code> (або схоже).</p><p>Інструкції для вашого керування польотом зазвичай пояснюють рекомендовану настройку. Наприклад:</p><ul><li><a href="./../flight_controller/pixhawk6c.html#voltage-ratings">Holybro Pixhawk 6C &gt; Voltage Ratings</a></li><li><a href="./../assembly/quick_start_pixhawk6c.html#power">Швидке підключення Holybro Pixhawk 6X &gt; Живлення</a></li></ul><p>Контролери Pixhawk можуть постачати живлення для <em>невеликої кількості</em> низькопотужних периферійних пристроїв, таких як модулі GPS та радіо телеметрії низького діапазону. The RPi companion computer, servos, high power radios, and other peripherals require a separate power supply, which is usually from a battery elimination circuit (BEC) wired to the same or another battery. Деякі модулі живлення мають окремий BEC включений.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Перевантаження вашого Pixhawk - це хороший спосіб його знищення.</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Під час налаштування та конфігурації PX4 USB-підключення до ноутбука вашої наземної станції є достатнім для живлення плати Pixhawk, а ваш компаньйон може бути живлений від настільного зарядного пристрою.</p></div><h2 id="налаштування-px4" tabindex="-1">Налаштування PX4 <a class="header-anchor" href="#налаштування-px4" aria-label="Permalink to &quot;Налаштування PX4&quot;">​</a></h2><p>Ці інструкції працюють на PX4 v1.14 та пізніших версіях.</p><p>Якщо вам потрібно оновити прошивку, підключіть Pixhawk до вашого ноутбука / настільного комп&#39;ютера через порт <code>USB</code> та використовуйте QGroundControl для оновлення прошивки, як описано <a href="./../config/firmware.html#install-stable-px4">Прошивка &gt; Встановлення стабільної PX4</a>. Якщо ви хочете отримати останню розробницьку версію, оновіть прошивку на &quot;main&quot;, як описано в <a href="./../config/firmware.html#installing-px4-main-beta-or-custom-firmware">Прошивка &gt; Встановлення PX4 Master, Beta або власної прошивки</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Ви також можете <a href="./../dev_setup/dev_env.html">налаштувати середовище розробки</a>, <a href="./../dev_setup/building_px4.html#building-for-nuttx">зібрати</a> та <a href="./../dev_setup/building_px4.html#uploading-firmware-flashing-the-board">завантажити</a> прошивку вручну.</p></div><h2 id="налаштування-ubuntu-на-rpi" tabindex="-1">Налаштування Ubuntu на RPi <a class="header-anchor" href="#налаштування-ubuntu-на-rpi" aria-label="Permalink to &quot;Налаштування Ubuntu на RPi&quot;">​</a></h2><p>Наступні кроки показують, як встановити та налаштувати Ubuntu 22.04 на RPi. Зверніть увагу, що версії ROS 2 спрямовані на конкретні версії Ubuntu. Ми використовуємо Ubuntu 22.04 для відповідності ROS 2 &quot;Humble&quot;, тому якщо ви працюєте з ROS 2 &quot;Foxy&quot;, ви замість цього могли б встановити Ubuntu 20.04.</p><p>Спочатку встановіть Ubuntu на RPi:</p><ol><li>Prepare a Ubuntu 22.04 bootable Ubuntu Desktop SD card by following the official tutorial: <a href="https://ubuntu.com/tutorials/how-to-install-ubuntu-desktop-on-raspberry-pi-4#1-overview" target="_blank" rel="noreferrer">How to install Ubuntu Desktop on Raspberry Pi 4</a></li><li>Під&#39;єднайте мишу, клавіатуру, монітор і підключіть RPi до джерела живлення 5 В (зовнішнє джерело/зарядний пристрій).</li><li>Вставте SD-карту в RPi і увімкніть RPi для завантаження з карти SD.</li><li>Дотримуйтесь інструкцій на екрані для встановлення Ubuntu.</li></ol><p>Введіть наступні команди (у послідовності) у термінал для налаштування Ubuntu на RPi:</p><ol><li><p>Встановіть <code>raspi-config</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> raspi-config</span></span></code></pre></div></li><li><p>Open <code>raspi-config</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> raspi-config</span></span></code></pre></div></li><li><p>Перейдіть до <strong>Варіанти інтерфейсу</strong>, а потім клацніть <strong>Серійний порт</strong>.</p><ul><li>Виберіть <strong>No</strong>, щоб вимкнути послідовний вхід у оболонку.</li><li>Виберіть <strong>Так</strong>, щоб увімкнути послідовний інтерфейс.</li><li>Клацніть <strong>Завершити</strong> та перезапустіть RPi.</li></ul></li><li><p>Відкрийте файл конфігурації завантаження прошивки в редакторі <code>nano</code> на RaPi:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /boot/firmware/config.txt</span></span></code></pre></div></li><li><p>Додайте наступний текст в кінець файлу (після останнього рядка):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">enable_uart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dtoverlay</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">disable-bt</span></span></code></pre></div></li><li><p>Далі збережіть файл і перезапустіть RPi.</p><ul><li>У <code>nano</code> ви можете зберегти файл за допомогою такої послідовності комбінацій клавіш: <strong>ctrl+x</strong>, <strong>ctrl+y</strong>, <strong>Enter</strong>.</li></ul></li><li><p>Перевірте, чи доступний послідовний порт. В даному випадку ми використовуємо наступні команди для перегляду серійних пристроїв:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/ttyAMA0</span></span></code></pre></div><p>Результат команди повинен містити підключення RX/TX <code>/dev/ttyAMA0</code> (зверніть увагу, що цей послідовний порт також доступний як <code>/dev/serial0</code>).</p></li></ol><p>RPi наразі налаштований для роботи з RPi та зв&#39;язку за допомогою послідовного порту <code>/dev/ttyAMA0</code>. Зверніть увагу, що ми встановимо додаткове програмне забезпечення в наступних розділах для роботи з MAVLink та ROS 2.</p><h2 id="зв-язок-mavlink" tabindex="-1">Зв&#39;язок MAVLink <a class="header-anchor" href="#зв-язок-mavlink" aria-label="Permalink to &quot;Зв&#39;язок MAVLink&quot;">​</a></h2><p><a href="https://mavlink.io/en/" target="_blank" rel="noreferrer">MAVLink</a> є стандартним і стабільним інтерфейсом зв&#39;язку для роботи з PX4. Додатки MAVLink, які працюють на супутниковому комп&#39;ютері, можуть підключатися до послідовного порту <code>/dev/ttyAMA0</code>, який ви щойно налаштували на RPi, і за замовчуванням повинні автоматично підключатися до <code>TELEM 2</code> на Pixhawk.</p><p>PX4 рекомендує використовувати <a href="https://mavsdk.mavlink.io/main/en/index.html" target="_blank" rel="noreferrer">MAVSDK</a> для написання додатків супутникового комп&#39;ютера, що використовують MAVLink, оскільки він надає прості API для використання багатьох загальних сервісів MAVLink на багатьох різних мов програмування. Ви також можете писати додатки, використовуючи бібліотеки, надані <a href="https://mavlink.io/en/#mavlink-project-generatorslanguages" target="_blank" rel="noreferrer">MAVLink</a>, такі як <a href="https://mavlink.io/en/mavgen_python/" target="_blank" rel="noreferrer">Pymavlink</a>, але в такому випадку вам, ймовірно, доведеться надати власні реалізації деяких мікрослужб.</p><p>У цьому підручнику ми не будемо вдаватися в докладності щодо управління MAVLink (воно добре описане в відповідних SDK). Однак ми встановимо та використаємо простий розробницький GCS MAVLink, званий <code>mavproxy</code>. Це дозволить нам перевірити підключення MAVLink, а отже, правильність налаштування нашого фізичного з&#39;єднання. Дуже схожий шаблон підключення використовуватиметься для MAVSDK та інших додатків MAVLink.</p><p>Спочатку перевірте конфігурацію Pixhawk <code>TELEM 2</code>:</p><ol><li><p>Підключіть Pixhawk до ноутбука за допомогою USB-кабеля.</p></li><li><p>Відкрийте QGroundControl (повинно з&#39;єднатися з транспортним засобом).</p></li><li><p><a href="./../advanced_config/parameters.html">Перевірте/змініть наступні параметри</a> в QGroundControl:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MAV_1_CONFIG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = TELEM2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UXRCE_DDS_CFG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 0 (Disabled)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SER_TEL2_BAUD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 57600</span></span></code></pre></div><p>Зверніть увагу, що параметри можуть вже бути налаштовані належним чином. Для отримання інформації про те, як працюють послідовні порти та конфігурація MAVLink, див. <a href="./../peripherals/serial_configuration.html">Конфігурація послідовного порту</a> та <a href="./../peripherals/mavlink_peripherals.html">Периферійні пристрої MAVLink</a>.</p></li></ol><p>Потім встановіть налаштування MAVProxy на RPi за допомогою наступних термінальних команд:</p><ol><li><p>Встановіть MAVProxy:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-pip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mavproxy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modemmanager</span></span></code></pre></div></li><li><p>Запустіть MAVProxy, встановивши порт для підключення до <code>/dev/ttyAMA0</code> та швидкість передачі даних, щоб відповідати PX4:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mavproxy.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --master=/dev/serial0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --baudrate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 57600</span></span></code></pre></div><p>Зверніть увагу, що вище ми використовували <code>/dev/serial0</code>, але ми могли б так само добре використовувати <code>/dev/ttyAMA0</code>. Якщо ми підключалися через USB, тоді ми замість цього встановили порт як <code>/dev/ttyACM0</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a+rw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/ttyACM0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mavproxy.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --master=/dev/ttyACM0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --baudrate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 57600</span></span></code></pre></div></li></ol><p>:::</p><p>MAVProxy на RPi тепер повинен підключатися до Pixhawk через контакти RX/TX. Ви повинні бачити це в терміналі RPi.</p><p>Тепер ми підтвердили, що наше підключення пов&#39;язано належним чином. У наступному розділі ми налаштуємо як Pixhawk, так і RPi для використання uXRCE-DDS та ROS2 замість MAVLink.</p><h2 id="ros-2-та-uxrce-dds" tabindex="-1">ROS 2 та uXRCE-DDS <a class="header-anchor" href="#ros-2-та-uxrce-dds" aria-label="Permalink to &quot;ROS 2 та uXRCE-DDS&quot;">​</a></h2><p>The <a href="./../ros2/user_guide.html">ROS 2 Guide</a> and <a href="./../middleware/uxrce_dds.html">uXRCE-DDS</a> pages cover the options for setting up the uXRCE-DDS and ROS, focussing on ROS 2 &quot;Foxy&quot;. Цей посібник використовує ROS 2 &quot;Humble&quot; та охоплює конкретну настройку для роботи з RPi. Варто прочитати обидва!</p><h3 id="налаштування-pixhawk-px4" tabindex="-1">Налаштування Pixhawk/PX4 <a class="header-anchor" href="#налаштування-pixhawk-px4" aria-label="Permalink to &quot;Налаштування Pixhawk/PX4&quot;">​</a></h3><p>Наступним кроком ми налаштовуємо ROS 2 замість MAVLink на <code>TELEM2</code>. Ми робимо це, змінюючи параметри в QGroundControl, яке може бути підключене через USB або використовуючи телеметричне радіо, підключене до <code>TELEM1</code>.</p><p>Етапи конфігурації:</p><ol><li><p>Підключіть Pixhawk до ноутбука за допомогою USB-кабелю та відкрийте QGroundControl (якщо він не підключений в даний момент).</p></li><li><p><a href="./../advanced_config/parameters.html">Перевірте/змініть наступні параметри</a> в QGroundControl:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MAV_1_CONFIG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 0 (Disabled)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UXRCE_DDS_CFG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 102 (TELEM2)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SER_TEL2_BAUD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 921600</span></span></code></pre></div><p><a href="./../advanced_config/parameter_reference.html#MAV_1_CONFIG">MAV_1_CONFIG=0</a> та <a href="./../advanced_config/parameter_reference.html#UXRCE_DDS_CFG">UXRCE_DDS_CFG=102</a> вимикають MAVLink на TELEM2 та увімкнюють клієнт uXRCE-DDS на TELEM2, відповідно. Швидкість <code>SER_TEL2_BAUD</code> встановлює швидкість передачі даних зв&#39;язку.<br> Ви так само можете налаштувати підключення до <code>TELEM1</code>, використовуючи або <code>MAV_1_CONFIG</code>, або <code>MAV_0_CONFIG</code>.</p><p>Вам потрібно перезавантажити керування польотом, щоб застосувати будь-які зміни до цих параметрів.</p></li></ol><p>:::</p><ol start="3"><li><p>Перевірте, що модуль <a href="./../modules/modules_system.html#uxrce-dds-client">uxrce_dds_client</a> зараз працює. Ви можете це зробити, запустивши наступну команду в QGroundControl <a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/analyze_view/mavlink_console.html" target="_blank" rel="noreferrer">MAVLink Console</a>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uxrce_dds_client</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span></code></pre></div></li></ol><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Якщо модуль клієнта не працює, ви можете запустити його вручну в консолі MAVLink:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uxrce_dds_client</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serial</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/ttyS3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 921600</span></span></code></pre></div><p>Зверніть увагу, що <code>/dev/ttyS3</code> є портом PX4 для <code>TELEM2</code> на <a href="./../flight_controller/pixhawk6c.html#serial-port-mapping">Holybro Pixhawk 6c</a>. Для інших контролерів польоту перевірте розділ відображення послідовного порту на їх сторінці огляду.</p></div><h3 id="ros-setup-on-rpi" tabindex="-1">ROS Setup on RPi <a class="header-anchor" href="#ros-setup-on-rpi" aria-label="Permalink to &quot;ROS Setup on RPi&quot;">​</a></h3><p>Кроки для налаштування ROS 2 та агента Micro XRCE-DDS на RPi такі:</p><ol><li><p>Встановіть ROS 2 Humble, слідуючи за <a href="https://docs.ros.org/en/humble/Installation/Ubuntu-Install-Debians.html" target="_blank" rel="noreferrer">офіційним посібником</a>.</p></li><li><p>Встановіть git за допомогою терміналу RPi:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div></li><li><p>Встановіть агент uXRCE_DDS:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/eProsima/Micro-XRCE-DDS-Agent.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Micro-XRCE-DDS-Agent</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ldconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/lib/</span></span></code></pre></div><p>Див. <a href="./../middleware/uxrce_dds.html#micro-xrce-dds-agent-installation">uXRCE-DDS &gt; Встановлення агента Micro XRCE-DDS</a> для альтернативних способів встановлення агента.</p></li><li><p>Запустіть агента в терміналі RPi:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MicroXRCEAgent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serial</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/serial0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 921600</span></span></code></pre></div><p>Зверніть увагу, як ми використовуємо раніше налаштований послідовний порт і ту саму швидкість передачі даних, що й для PX4.</p></li></ol><p>Тепер, коли обидва агент та клієнт працюють, ви повинні бачити активність як на консолі MAVLink, так і на терміналі RPi. Ви можете переглянути доступні теми за допомогою наступної команди на RPi:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/ros/humble/setup.bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> topic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><p>Ось і все. Once you have the connection working, see the <a href="./../ros2/user_guide.html">ROS 2 Guide</a> for more information about working with PX4 and ROS 2.</p>`,60)]))}const b=t(p,[["render",h]]);export{F as __pageData,b as default};
