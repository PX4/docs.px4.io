import{_ as r}from"./chunks/uavcan_wiring.CS4soJep.js";import{_ as o,c as t,a8 as n,j as e,a as i,o as l}from"./chunks/framework.BDnHobkS.js";const A=JSON.parse('{"title":"CAN","description":"","frontmatter":{},"headers":[],"relativePath":"zh/can/index.md","filePath":"zh/can/index.md"}'),s={name:"zh/can/index.md"};function c(p,a,h,d,u,m){return l(),t("div",null,a[0]||(a[0]=[n('<h1 id="can" tabindex="-1">CAN <a class="header-anchor" href="#can" aria-label="Permalink to &quot;CAN&quot;">​</a></h1><p><a href="https://en.wikipedia.org/wiki/CAN_bus" target="_blank" rel="noreferrer">Controller Area Network (CAN)</a> is a robust wired network that allows drone components such as flight controller, ESCs, sensors, and other peripherals, to communicate with each other. 因为它的设计有仲裁，使用差分信号，即使在较长的电缆 (大型车辆上) 上也非常强大，避免单点故障。 CAN 还允许来自外设的状态反馈，并通过总线方便的进行固件升级。</p><p>PX4 支持与 CAN 设备通信的两个软件协议：</p><ul><li><a href="./../dronecan/">DroneCAN</a>: PX4 recommends this for most common setups. 它得到了 PX4 的很好支持，是一个成熟的产品，具有广泛的外围支持，并经过多年的测试。</li><li><a href="https://opencyphal.org" target="_blank" rel="noreferrer">Cyphal</a>: PX4 support is a &quot;work in progress&quot;. Cyphal 是一种更新的协议，允许更多的灵活性和配置，尤其是对于较大和较复杂的载具。 它还没有被广泛应用。</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Both DroneCAN and Cyphal originate from an earlier project named UAVCAN. 在2022年，该项目分为两个部分：原始版本的 UAVCAN (UAVCAN v0) 更名为 DroneCAN，较新的 UAVCAN v1 更名为 Cyphal。 The differences between the two protocols are outlined in <a href="https://forum.opencyphal.org/t/cyphal-vs-dronecan/1814" target="_blank" rel="noreferrer">Cyphal vs. DroneCAN</a>.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>PX4 does not support other CAN software protocols for drones such as KDECAN (at time of writing).</p></div><h2 id="布线" tabindex="-1">布线 <a class="header-anchor" href="#布线" aria-label="Permalink to &quot;布线&quot;">​</a></h2><p>CAN 网络的接线对于 DroneCAN 和 Cyphal/CAN 是一样 (实际上对所有的 CAN 网络都一样)。</p><p>设备以任意顺序连接成链。 在链的任一端，应该在两个数据线之间连接一个 120Ω 的终端电阻。 飞控和一些 GNSS 模块为了方便使用内置了终端电阻， 因此应该放在链的终端。 Otherwise, you can use a termination resistor such as <a href="https://shop.zubax.com/products/uavcan-micro-termination-plug?variant=6007985111069" target="_blank" rel="noreferrer">this one from Zubax Robotics</a>, or solder one yourself if you have access to a JST-GH crimper.</p><p>下图显示了一个 CAN 总线连接飞控到 4 个 CAN 电调和一个 GNSS 的示例。</p><p><img src="'+r+'" alt="CAN Wiring"></p><p>图中未显示任何电源接线。 参考制造商的说明，确认组件是否需要单独供电，还是可以通过 CAN 总线供电。</p><p>For more information, see <a href="https://kb.zubax.com/pages/viewpage.action?pageId=2195476" target="_blank" rel="noreferrer">Cyphal/CAN device interconnection</a> (kb.zubax.com). 虽然本文是以 Cyphal 协议为基础编写的，但同样适用于 DroneCAN 硬件和任何其他 CAN 设置。 For more advanced scenarios, consult with <a href="https://forum.opencyphal.org/t/on-can-bus-topology-and-termination/1685" target="_blank" rel="noreferrer">On CAN bus topology and termination</a>.</p><h3 id="连接器" tabindex="-1">连接器 <a class="header-anchor" href="#连接器" aria-label="Permalink to &quot;连接器&quot;">​</a></h3><p>Pixhawk standard compatible CAN devices use 4 pin JST-GH connectors for CAN. Two connectors are used for input and output when wiring in a chain (except for flight controllers and some GNSS devices with builtin termination, which only have a single JST-GH connector).</p><p>Other (non-Pixhawk compatible) devices may use different connectors. However, as long as the device firmware supports DroneCAN or Cyphal, it can be used.</p><h3 id="redundancy" tabindex="-1">Redundancy <a class="header-anchor" href="#redundancy" aria-label="Permalink to &quot;Redundancy&quot;">​</a></h3><p>DroneCAN and Cyphal/CAN support using a second (redundant) CAN interface. This is completely optional but increases the robustness of the connection. All Pixhawk flight controllers come with 2 CAN interfaces; if your peripherals support 2 CAN interfaces as well, it is recommended to wire both up for increased safety.</p><h2 id="固件" tabindex="-1">固件 <a class="header-anchor" href="#固件" aria-label="Permalink to &quot;固件&quot;">​</a></h2><p>CAN peripherals may run proprietary or open source firmware (check manufacturer guides to confirm the required setup).</p><p>PX4 can be built to run as open-source DroneCAN firmware on supported CAN hardware. See <a href="./../dronecan/px4_cannode_fw.html">PX4 DroneCAN Firmware</a> for more information.</p><h2 id="支持和配置" tabindex="-1">支持和配置 <a class="header-anchor" href="#支持和配置" aria-label="Permalink to &quot;支持和配置&quot;">​</a></h2><p><a href="./../dronecan/">DroneCAN Setup and Configuration</a></p><p><a href="./../dronecan/px4_cannode_fw.html">PX4 DroneCAN Firmware</a></p><h2 id="视频" tabindex="-1">视频 <a class="header-anchor" href="#视频" aria-label="Permalink to &quot;视频&quot;">​</a></h2><h3 id="dronecan" tabindex="-1">DroneCAN <a class="header-anchor" href="#dronecan" aria-label="Permalink to &quot;DroneCAN&quot;">​</a></h3><p>关于 DroneCAN (UAVCANv0) 的介绍和在 QGroundControl 中设置的实用示例：</p>',27),e("lite-youtube",{videoid:"IZMTq9fTiOM",title:"Intro to DroneCAN (UAVCANv0) and practical example with setup in QGroundControl"},null,-1),e("h3",{id:"cyphal",tabindex:"-1"},[i("Cyphal "),e("a",{class:"header-anchor",href:"#cyphal","aria-label":'Permalink to "Cyphal"'},"​")],-1),e("p",null,"UAVCAN v1 for drones (Cyphal) — PX4 Developer Summit Virtual 2020",-1),e("lite-youtube",{videoid:"6Bvtn_g8liU",title:"UAVCAN v1 for drones — PX4 Developer Summit Virtual 2020"},null,-1),e("hr",null,null,-1),e("p",null,"Getting started using UAVCAN v1 with PX4 on the NXP UAVCAN Board — PX4 Developer Summit Virtual 2020",-1),e("lite-youtube",{videoid:"MwdHwjaXYKs",title:"Getting started using UAVCAN v1 with PX4 on the NXP UAVCAN Board"},null,-1),e("hr",null,null,-1),e("p",null,"UAVCAN：一个高度可靠的发布-订阅协议，用于硬实时车辆内网络 — PX4 开发者虚拟峰会 2019",-1),e("lite-youtube",{videoid:"MBtROivYPik",title:"UAVCAN: a highly dependable publish-subscribe protocol for hard ..."},null,-1)]))}const N=o(s,[["render",c]]);export{A as __pageData,N as default};
