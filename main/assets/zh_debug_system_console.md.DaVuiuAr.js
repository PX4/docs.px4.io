import{_ as t,c as a,a8 as o,o as i}from"./chunks/framework.BDnHobkS.js";const u=JSON.parse('{"title":"PX4 系统控制台","description":"","frontmatter":{},"headers":[],"relativePath":"zh/debug/system_console.md","filePath":"zh/debug/system_console.md"}'),s={name:"zh/debug/system_console.md"};function l(n,e,d,r,h,c){return i(),a("div",null,e[0]||(e[0]=[o('<h1 id="px4-系统控制台" tabindex="-1">PX4 系统控制台 <a class="header-anchor" href="#px4-系统控制台" aria-label="Permalink to &quot;PX4 系统控制台&quot;">​</a></h1><p>The PX4 <em>System Console</em> provides low-level access to the system, debug output and analysis of the system boot process.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The console should be used for debugging if the system won&#39;t boot. The <a href="./../debug/mavlink_shell.html">MAVLink Shell</a> may otherwise be more suitable, as it is much easier to set up and can be used for <a href="./../debug/consoles.html#console_vs_shell">many of the same tasks</a>.</p></div><h2 id="system-console-vs-shells" tabindex="-1">System Console vs. Shells <a class="header-anchor" href="#system-console-vs-shells" aria-label="Permalink to &quot;System Console vs. Shells&quot;">​</a></h2><p>The console is made available through a (board-specific) UART that can be connected to a computer USB port using a <a href="https://www.digikey.com/en/products/detail/TTL-232R-3V3/768-1015-ND/1836393" target="_blank" rel="noreferrer">3.3V FTDI</a> cable. This allows the console to be accessed using a terminal application.</p><p>Pixhawk controller manufacturers are expected to expose the console UART and SWD (JTAG) debug interfaces through a dedicated <em>debug port</em> that complies with the <a href="#pixhawk_debug_port">Pixhawk Connector Standard</a>. Unfortunately some boards predate this standard or a non-compliant.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Developers targeting a number of different boards may wish to use a <a href="./../debug/swd_debug.html#debug-adapters">debug adapter</a> to simplify connecting boards to FTDI cables and <a href="./../debug/swd_debug.html#debug-probes-for-px4-hardware">debug probes</a>.</p></div><p>Connect the 6-pos JST SH 1:1 cable to the Dronecode probe or connect the individual pins of the cable to a FTDI cable like this:</p><h3 id="connecting-via-dronecode-probe" tabindex="-1">Connecting via Dronecode Probe <a class="header-anchor" href="#connecting-via-dronecode-probe" aria-label="Permalink to &quot;Connecting via Dronecode Probe&quot;">​</a></h3><p>The System Console UART pinouts/debug ports are typically documented in <a href="./../flight_controller/">autopilot overview pages</a> (some are linked below):</p><ul><li><a href="./../flight_controller/pixhawk.html#console-port">3DR Pixhawk v1 Flight Controller</a> (also applies to <a href="./../flight_controller/mro_pixhawk.html#debug-ports">mRo Pixhawk</a>, <a href="./../flight_controller/holybro_pix32.html#debug-port">Holybro pix32</a>)</li><li><a href="./../flight_controller/pixhawk3_pro.html#debug-port">Pixhawk 3</a></li><li><a href="./../flight_controller/pixracer.html#debug-port">Pixracer</a></li></ul><p><a id="pixhawk_debug_port"></a></p><h3 id="connecting-via-ftdi-3-3v-cable" tabindex="-1">Connecting via FTDI 3.3V Cable <a class="header-anchor" href="#connecting-via-ftdi-3-3v-cable" aria-label="Permalink to &quot;Connecting via FTDI 3.3V Cable&quot;">​</a></h3><p>Pixhawk flight controllers usually come with a <a href="./../debug/swd_debug.html#pixhawk-connector-standard-debug-ports">Pixhawk Connector Standard Debug Port</a> which will be either the 10 pin <a href="./../debug/swd_debug.html#pixhawk-debug-full">Pixhawk Debug Full</a> or 6 pin <a href="./../debug/swd_debug.html#pixhawk-debug-mini">Pixhawk Debug Mini</a> port.</p><p>These ports have pins for console TX and RX which can connect to an FTDI cable. The mapping for the <a href="./../debug/swd_debug.html#pixhawk-debug-mini">Pixhawk Debug Mini</a> to FTDI is shown below.</p><table tabindex="0"><thead><tr><th>Connecting via FTDI 3.3V Cable</th><th>-</th><th>FTDI</th><th>-</th></tr></thead><tbody><tr><td>1（红）</td><td>+ 5v (红色)</td><td></td><td>N/C</td></tr><tr><td>2</td><td>UART7 Tx</td><td>5</td><td>FTDI RX （黄色）</td></tr><tr><td>3</td><td>UART7 Rx</td><td>4</td><td>FTDI TX （橙色）</td></tr><tr><td>4（黑）</td><td>SWDIO</td><td></td><td>N/C</td></tr><tr><td>6</td><td>SWCLK</td><td></td><td>N/C</td></tr><tr><td>6</td><td>GND</td><td>1</td><td>FTDI GND (黑色)</td></tr></tbody></table><p>The <a href="./../debug/swd_debug.html">SWD Debug Port</a> page and individual flight controller pages have more information about debug port pinouts.</p><h2 id="打开控制台" tabindex="-1">打开控制台 <a class="header-anchor" href="#打开控制台" aria-label="Permalink to &quot;打开控制台&quot;">​</a></h2><p>After the console connection is wired up, use the default serial port tool of your choice or the defaults described below:</p><h3 id="linux-mac-os-screen" tabindex="-1">Linux / Mac OS: Screen <a class="header-anchor" href="#linux-mac-os-screen" aria-label="Permalink to &quot;Linux / Mac OS: Screen&quot;">​</a></h3><p>下载 <a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html">PuTTY</a> 并启动它。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> screen</span></span></code></pre></div><ul><li>串口：pixhawk v1/pixracer 使用 57600 波特率</li></ul><p>Connect screen at BAUDRATE baud, 8 data bits, 1 stop bit to the right serial port (use <code>ls /dev/tty*</code> and watch what changes when unplugging / replugging the USB device). Common names are <code>/dev/ttyUSB0</code> and <code>/dev/ttyACM0</code> for Linux and <code>/dev/tty.usbserial-ABCBD</code> for Mac OS.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screen</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/ttyXXX</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BAUDRATE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8N1</span></span></code></pre></div><h3 id="windows-putty" tabindex="-1">Windows: PuTTY <a class="header-anchor" href="#windows-putty" aria-label="Permalink to &quot;Windows: PuTTY&quot;">​</a></h3><p>Download <a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html" target="_blank" rel="noreferrer">PuTTY</a> and start it.</p><p>Then select &#39;serial connection&#39; and set the port parameters to:</p><ul><li>57600 波特率</li><li>8 数据位</li><li>1 个停止位</li></ul>',29)]))}const b=t(s,[["render",l]]);export{u as __pageData,b as default};
