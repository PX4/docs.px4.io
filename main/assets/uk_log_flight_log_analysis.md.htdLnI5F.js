import{_ as i,a,b as l,c as t,d as e,e as n}from"./chunks/data_comets_overview.CdOGRg3d.js";import{_ as h,c as p,a8 as r,o}from"./chunks/framework.BDnHobkS.js";const f=JSON.parse('{"title":"Аналіз журналу польотів","description":"","frontmatter":{},"headers":[],"relativePath":"uk/log/flight_log_analysis.md","filePath":"uk/log/flight_log_analysis.md"}'),k={name:"uk/log/flight_log_analysis.md"};function g(d,s,F,c,u,y){return o(),p("div",null,s[0]||(s[0]=[r('<h1 id="аналіз-журналу-польотів" tabindex="-1">Аналіз журналу польотів <a class="header-anchor" href="#аналіз-журналу-польотів" aria-label="Permalink to &quot;Аналіз журналу польотів&quot;">​</a></h1><p>Ця тема містить огляд інструментів і методів, які можна використовувати для аналізу бортових журналів PX4 (у деяких випадках нижче є посилання на більш детальні теми).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><a href="./../getting_started/flight_reporting.html">Flight Reporting</a> explains how to download a log and report/discuss issues about a flight with the development team.</p></div><h2 id="структуровании-аналіз" tabindex="-1">Структурований аналіз <a class="header-anchor" href="#структуровании-аналіз" aria-label="Permalink to &quot;Структурований аналіз&quot;">​</a></h2><p>Перш ніж аналізувати бортовий журнал, важливо визначити його контекст:</p><ul><li>Якщо аналіз проводиться після несправності, чи зафіксував бортовий журнал збій, чи він зупинився в польоті?</li><li>Чи всі контролери відстежували свої посилання? Найпростіший спосіб визначити це - порівняти показники крену і тангажу з їхніми заданими значеннями.</li><li>Чи виглядають дані датчика достовірними? Чи була дуже сильна вібрація (розумним порогом для сильної вібрації є будь-яка вібрація з піковою швидкістю понад 2-3 м/с/с).</li><li>If the root cause is not specific to the vehicle make sure to report it with a link to the log file (and video if one exists) on the <a href="https://github.com/PX4/PX4-Autopilot/issues/new" target="_blank" rel="noreferrer">PX4 issue tracker</a>.</li></ul><h2 id="виключення-перебоів-з-живленням" tabindex="-1">Виключення перебоїв з живленням <a class="header-anchor" href="#виключення-перебоів-з-живленням" aria-label="Permalink to &quot;Виключення перебоїв з живленням&quot;">​</a></h2><p>If a log file ends mid-air, two main causes are possible: a power failure <em>or</em> a hard fault of the operating system.</p><p>On autopilots based on the <a href="http://www.st.com/en/microcontrollers/stm32-32-bit-arm-cortex-mcus.html" target="_blank" rel="noreferrer">STM32 series</a>, hard faults are logged to the SD card. These are located on the top level of the SD card and named <em>fault_date.log</em>, e.g. <strong>fault_2017_04_03_00_26_05.log</strong>. Ви повинні перевірити наявність цього файлу, якщо журнал польоту раптово закінчується.</p><h2 id="інструменти-аналізу" tabindex="-1">Інструменти аналізу <a class="header-anchor" href="#інструменти-аналізу" aria-label="Permalink to &quot;Інструменти аналізу&quot;">​</a></h2><h3 id="flight-review-онлаин-інструмент" tabindex="-1">Flight Review (Онлайн інструмент) <a class="header-anchor" href="#flight-review-онлаин-інструмент" aria-label="Permalink to &quot;Flight Review (Онлайн інструмент)&quot;">​</a></h3><p><a href="http://logs.px4.io" target="_blank" rel="noreferrer">Flight Review</a> is the successor of <em>Log Muncher</em>. It is used in combination with the new <a href="./../dev_log/ulog_file_format.html">ULog</a> logging format.</p><p>Основні функції:</p><ul><li>Веб-орієнтований, відмінно підходить для кінцевих користувачів.</li><li>Users can upload logs through the web interface, and then share report with others (bulk upload is supported using the <a href="https://github.com/PX4/PX4-Autopilot/blob/main/Tools/upload_log.py" target="_blank" rel="noreferrer">upload_log.py</a> script)</li><li>Інтерактивні графіки.</li></ul><p><img src="'+i+'" alt="Flight Review Charts"></p><p>See <a href="./../log/flight_review.html">Log Analysis using Flight Review</a> for an introduction.</p><h3 id="plotjuggler" tabindex="-1">PlotJuggler <a class="header-anchor" href="#plotjuggler" aria-label="Permalink to &quot;PlotJuggler&quot;">​</a></h3><p><a href="https://github.com/facontidavide/PlotJuggler" target="_blank" rel="noreferrer">PlotJuggler</a> is a desktop application that allows users to easily visualize and analyze data expressed in the form of time series. This is one of the best ULog analysis tools as it exposes all information in the log (<a href="#flight-review-online-tool">Flight Review</a>, by comparison, only shows a small subset of the data).</p><p>Підтримує файли ULog (.ulg) починаючи з версії 2.1.4.</p><p>Основні функції:</p><ul><li>Intuitive drag &amp; drop interface.</li><li>Розташовуйте дані на кількох графіках, вкладках або вікнах.</li><li>Всі теми uORB показані і можуть бути відображені на графіку.</li><li>Після того, як ви впорядкували свої дані, збережіть їх у файл &quot;Layout&quot; й завантажуйте багато разів.</li><li>Process your data inside <em>PlotJuggler</em> itself, using custom &quot;data transformations&quot;.</li></ul><p>Source code and downloads are available on <a href="https://github.com/facontidavide/PlotJuggler" target="_blank" rel="noreferrer">Github</a>.</p><p><img src="'+a+`" alt="PlotJuggler"></p><p>See <a href="./../log/plotjuggler_log_analysis.html">Log Analysis using Plot Juggler</a> for an introduction.</p><h3 id="pyulog" tabindex="-1">pyulog <a class="header-anchor" href="#pyulog" aria-label="Permalink to &quot;pyulog&quot;">​</a></h3><p><a href="https://github.com/PX4/pyulog" target="_blank" rel="noreferrer">pyulog</a> is a python package to parse ULog files, along with a set of command-line scripts to extract/display ULog information and convert them to other file formats.</p><p>Основні функції:</p><ul><li>Бібліотека Python для розбору файлів ULog. Базова бібліотека, що використовується рядом інших інструментів аналізу та візуалізації ULog.</li><li>Скрипти для вилучення/відображення інформації ULog: <ul><li><em>ulog_info</em>: display information from an ULog file.</li><li><em>ulog_messages</em>: display logged messages from an ULog file.</li><li><em>ulog_params</em>: extract parameters from an ULog file.</li></ul></li><li>Скрипти для конвертації ULog файлів в інші формати: <ul><li><em>ulog2csv</em>: convert ULog to (several) CSV files.</li><li><em>ulog2kml</em>: convert ULog to (several) KML files.</li></ul></li></ul><p>All scripts are installed as system-wide applications (i.e. they be called on the command line - provided Python is installed), and support the <code>-h</code> flag for getting usage instructions. Наприклад:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ulog_info</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usage:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ulog_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-h] [-v] file.ulg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Display</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> information</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> an</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ULog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">positional</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arguments:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  file.ulg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       ULog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">optional</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arguments:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -h,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -v,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Verbose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output</span></span></code></pre></div><p>Below we see the kind of information exported from a sample file using <em>ulog_info</em>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ulog_info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sample.ulg</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Logging</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0:01:52,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> duration:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0:01:08</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Dropouts:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 4,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> duration:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 62</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ms,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mean:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 29</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ms</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Messages:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sys_name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> time_ref_utc:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ver_hw:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AUAV_X21</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ver_sw:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fd483321a5cf50ead91164356d15aa474643aa73</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (multi </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">id,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> size</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)    number of data points, total bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> actuator_controls_0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                 3269     156912</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> actuator_outputs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">76</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                    1311      99636</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> commander_state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                       678       6102</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> control_state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">122</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                      3268     398696</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cpuload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                               69       1104</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ekf2_innovations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">140</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                   3271     457940</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> estimator_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">309</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                   1311     405099</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sensor_combined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">72</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                    17070    1229040</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sensor_preflight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                   17072     273152</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> telemetry_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                      70       2520</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vehicle_attitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                    6461     232596</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vehicle_attitude_setpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">55</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)           3272     179960</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vehicle_local_position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)              678      83394</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vehicle_rates_setpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)              6448     154752</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vehicle_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                       294      13230</span></span></code></pre></div><h3 id="flightplot" tabindex="-1">FlightPlot <a class="header-anchor" href="#flightplot" aria-label="Permalink to &quot;FlightPlot&quot;">​</a></h3><p><a href="https://github.com/PX4/FlightPlot" target="_blank" rel="noreferrer">FlightPlot</a> is a desktop based tool for log analysis. It can be downloaded from <a href="https://github.com/PX4/FlightPlot/releases" target="_blank" rel="noreferrer">FlightPlot Downloads</a> (Linux, MacOS, Windows).</p><p>Основні функції:</p><ul><li>На основі Java, кросплатформенний.</li><li>Інтуїтивний GUI, не потрібні знання програмування.</li><li>Підтримує як нові, так і старі формати журналів PX4 (.ulg, .px4log, .bin)</li><li>Дозволяє зберігати графіки як зображення.</li></ul><p><img src="`+l+'" alt="FlightPlot Charts"></p><h3 id="px4tools" tabindex="-1">PX4Tools <a class="header-anchor" href="#px4tools" aria-label="Permalink to &quot;PX4Tools&quot;">​</a></h3><p><a href="https://github.com/dronecrew/px4tools" target="_blank" rel="noreferrer">PX4Tools</a> is a log analysis toolbox for the PX4 autopilot written in Python. The recommended installation procedure is to use <a href="https://conda.io/docs/index.html" target="_blank" rel="noreferrer">anaconda3</a>. See <a href="https://github.com/dronecrew/px4tools" target="_blank" rel="noreferrer">px4tools github page</a> for details.</p><p>Основні функції:</p><ul><li>Easy to share, users can view notebooks on Github (e.g. <a href="https://github.com/jgoppert/lpe-analysis/blob/master/15-09-30%20Kabir%20Log.ipynb" target="_blank" rel="noreferrer">15-09-30 Kabir Log.ipynb</a>)</li><li>На основі Python, кросплатформенний, працює з anaconda 2 та anaconda3</li><li>Блокноти iPython/jupyter можна використовувати для легкого обміну аналізом</li><li>Розширені можливості графіків для детального аналізу</li></ul><p><img src="'+t+'" alt="PX4Tools-based analysis"></p><h3 id="mavgcl" tabindex="-1">MAVGCL <a class="header-anchor" href="#mavgcl" aria-label="Permalink to &quot;MAVGCL&quot;">​</a></h3><p><a href="https://github.com/ecmnet/MAVGCL" target="_blank" rel="noreferrer">MAVGCL</a> is an in-flight log analyzer for PX4. Його також можна використовувати в офлайн режимі із завантаженими файлами uLog.</p><p>Основні функції:</p><ul><li>Збір даних в реальному часі (вибірка 50 мс, відображення 100 мс) на основі повідомлень MAVLink або даних ULOG через MAVLink</li><li>Часова діаграма, анотована повідомленнями (MAVLink та ULog) та змінами параметрів (тільки MAVLink)</li><li>XY-аналіз для обраних ключових фігур</li><li>3D-вигляд (перспектива транспортного засобу та спостерігача)</li><li>Інспектор MAVLink (звітування про необроблені повідомлення MAVLink)</li><li>Офлайн-режим: Імпорт ключових показників з PX4Log/ULog (файл або останній лог з пристрою через WiFi)</li><li>На основі Java. Відомо, що працює в macOS та Ubuntu.</li><li>Та багато іншого...</li></ul><p><img src="'+e+'" alt="MAVGCL"></p><h3 id="data-comets" tabindex="-1">Data Comets <a class="header-anchor" href="#data-comets" aria-label="Permalink to &quot;Data Comets&quot;">​</a></h3><p><a href="https://github.com/dsaffo/DataComets" target="_blank" rel="noreferrer">Data Comets</a> is a interactive PX4 flight log analysis tool that allows you to encode flight data onto the flight path, filter and brush the data by time - and much more!</p><p>You can use the online version of the tool for small log files (&lt; 32Mb), or run it locally in order to analyze longer flights.</p><p><img src="'+n+'" alt="Data Comets"></p>',51)]))}const C=h(k,[["render",g]]);export{f as __pageData,C as default};
