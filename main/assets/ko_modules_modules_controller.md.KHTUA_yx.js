import{_ as s,c as n,a8 as e,o as t}from"./chunks/framework.BDnHobkS.js";const u=JSON.parse('{"title":"모듈 참조: 콘트롤러","description":"","frontmatter":{},"headers":[],"relativePath":"ko/modules/modules_controller.md","filePath":"ko/modules/modules_controller.md"}'),o={name:"ko/modules/modules_controller.md"};function p(l,a,r,i,c,h){return t(),n("div",null,a[0]||(a[0]=[e(`<h1 id="모듈-참조-콘트롤러" tabindex="-1">모듈 참조: 콘트롤러 <a class="header-anchor" href="#모듈-참조-콘트롤러" aria-label="Permalink to &quot;모듈 참조: 콘트롤러&quot;">​</a></h1><h2 id="airship-att-control" tabindex="-1">airship_att_control <a class="header-anchor" href="#airship-att-control" aria-label="Permalink to &quot;airship_att_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/airship_att_control" target="_blank" rel="noreferrer">modules/airship_att_control</a></p><h3 id="설명" tabindex="-1">설명 <a class="header-anchor" href="#설명" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>이것은 비행선 자세 및 속도 컨트롤러를 구현합니다. Ideally it would take attitude setpoints (<code>vehicle_attitude_setpoint</code>) or rate setpoints (in acro mode via <code>manual_control_setpoint</code> topic) as inputs and outputs actuator control messages.</p><p>Currently it is feeding the <code>manual_control_setpoint</code> topic directly to the actuators.</p><h3 id="구현" tabindex="-1">구현 <a class="header-anchor" href="#구현" aria-label="Permalink to &quot;구현&quot;">​</a></h3><p>제어 대기 시간을 줄이기 위하여, 모듈은 IMU 드라이버에서 게시한 자이로 주제를 직접 폴링합니다.</p><p><a id="airship_att_control_usage"></a></p><h3 id="사용법" tabindex="-1">사용법 <a class="header-anchor" href="#사용법" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>airship_att_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="control-allocator" tabindex="-1">control_allocator <a class="header-anchor" href="#control-allocator" aria-label="Permalink to &quot;control_allocator&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/control_allocator" target="_blank" rel="noreferrer">modules/control_allocator</a></p><h3 id="설명-1" tabindex="-1">설명 <a class="header-anchor" href="#설명-1" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>이것은 제어 할당을 구현합니다. 토크 및 추력 설정값을 입력으로 사용하고, 액추에이터 설정값 메시지를 출력합니다.</p><p><a id="control_allocator_usage"></a></p><h3 id="사용법-1" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-1" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>control_allocator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="flight-mode-manager" tabindex="-1">flight_mode_manager <a class="header-anchor" href="#flight-mode-manager" aria-label="Permalink to &quot;flight_mode_manager&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/flight_mode_manager" target="_blank" rel="noreferrer">modules/flight_mode_manager</a></p><h3 id="설명-2" tabindex="-1">설명 <a class="header-anchor" href="#설명-2" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>이것은 모든 모드에 대한 설정값 생성을 구현합니다. 차량의 현재 모드 상태를 컨트롤러에 대한 입력 및 출력 설정값으로 사용합니다.</p><p><a id="flight_mode_manager_usage"></a></p><h3 id="사용법-2" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-2" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>flight_mode_manager &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="fw-att-control" tabindex="-1">fw_att_control <a class="header-anchor" href="#fw-att-control" aria-label="Permalink to &quot;fw_att_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/fw_att_control" target="_blank" rel="noreferrer">modules/fw_att_control</a></p><h3 id="설명-3" tabindex="-1">설명 <a class="header-anchor" href="#설명-3" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>fw_att_control은 고정익 자세 컨트롤러입니다.</p><p><a id="fw_att_control_usage"></a></p><h3 id="사용법-3" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-3" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fw_att_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [vtol]      VTOL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="fw-pos-control" tabindex="-1">fw_pos_control <a class="header-anchor" href="#fw-pos-control" aria-label="Permalink to &quot;fw_pos_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/fw_pos_control" target="_blank" rel="noreferrer">modules/fw_pos_control</a></p><h3 id="설명-4" tabindex="-1">설명 <a class="header-anchor" href="#설명-4" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>fw_pos_control is the fixed-wing position controller.</p><p><a id="fw_pos_control_usage"></a></p><h3 id="사용법-4" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-4" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fw_pos_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [vtol]      VTOL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="fw-rate-control" tabindex="-1">fw_rate_control <a class="header-anchor" href="#fw-rate-control" aria-label="Permalink to &quot;fw_rate_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/fw_rate_control" target="_blank" rel="noreferrer">modules/fw_rate_control</a></p><h3 id="설명-5" tabindex="-1">설명 <a class="header-anchor" href="#설명-5" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>fw_rate_control is the fixed-wing rate controller.</p><p><a id="fw_rate_control_usage"></a></p><h3 id="사용법-5" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-5" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fw_rate_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [vtol]      VTOL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="mc-att-control" tabindex="-1">mc_att_control <a class="header-anchor" href="#mc-att-control" aria-label="Permalink to &quot;mc_att_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/mc_att_control" target="_blank" rel="noreferrer">modules/mc_att_control</a></p><h3 id="설명-6" tabindex="-1">설명 <a class="header-anchor" href="#설명-6" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>이것은 멀티콥터 자세 컨트롤러를 구현합니다. It takes attitude setpoints (<code>vehicle_attitude_setpoint</code>) as inputs and outputs a rate setpoint.</p><p>컨트롤러에는 각도 오류에 대한 P 루프가 있습니다.</p><p>간행물: 구현된 쿼터니언 태도 제어를 문서화, 제목: 비선형 쿼드로콥터 자세 제어(2013), 저자: Dario Brescianini, Markus Hehn and Raffaello D&#39;Andrea 동적 시스템 및 제어 연구소(IDSC), ETH 취리히</p><p><a href="https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/154099/eth-7387-01.pdf" target="_blank" rel="noreferrer">https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/154099/eth-7387-01.pdf</a></p><p><a id="mc_att_control_usage"></a></p><h3 id="사용법-6" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-6" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mc_att_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [vtol]      VTOL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="mc-pos-control" tabindex="-1">mc_pos_control <a class="header-anchor" href="#mc-pos-control" aria-label="Permalink to &quot;mc_pos_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/mc_pos_control" target="_blank" rel="noreferrer">modules/mc_pos_control</a></p><h3 id="설명-7" tabindex="-1">설명 <a class="header-anchor" href="#설명-7" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>컨트롤러에는 위치 오류용 P 루프와 속도 오류용 PID 루프의 두 가지 루프가 있습니다. 속도 컨트롤러의 출력은 추력 방향(즉, 멀티콥터 방향에 대한 회전 행렬)과 추력 스칼라(즉, 멀티콥터 추력 자체)로 분할되는 추력 벡터입니다.</p><p>컨트롤러는 작업에 오일러 각도를 사용하지 않으며, 보다 인간 친화적인 제어 및 로깅을 위해서만 생성됩니다.</p><p><a id="mc_pos_control_usage"></a></p><h3 id="사용법-7" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-7" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mc_pos_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [vtol]      VTOL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="mc-rate-control" tabindex="-1">mc_rate_control <a class="header-anchor" href="#mc-rate-control" aria-label="Permalink to &quot;mc_rate_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/mc_rate_control" target="_blank" rel="noreferrer">modules/mc_rate_control</a></p><h3 id="설명-8" tabindex="-1">설명 <a class="header-anchor" href="#설명-8" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>이것은 멀티콥터 속도 컨트롤러를 구현합니다. It takes rate setpoints (in acro mode via <code>manual_control_setpoint</code> topic) as inputs and outputs actuator control messages.</p><p>컨트롤러에는 각속도 오류에 대한 PID 루프가 있습니다.</p><p><a id="mc_rate_control_usage"></a></p><h3 id="사용법-8" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-8" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mc_rate_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [vtol]      VTOL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="navigator" tabindex="-1">navigator <a class="header-anchor" href="#navigator" aria-label="Permalink to &quot;navigator&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/navigator" target="_blank" rel="noreferrer">modules/navigator</a></p><h3 id="설명-9" tabindex="-1">설명 <a class="header-anchor" href="#설명-9" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>자율 비행 모드를 담당하는 모듈입니다. 여기에는 임무(데이터맨에서 읽기), 이륙 및 RTL이 포함됩니다. 또한, 지오펜스 위반 검사를 담당합니다.</p><h3 id="구현-1" tabindex="-1">구현 <a class="header-anchor" href="#구현-1" aria-label="Permalink to &quot;구현&quot;">​</a></h3><p>The different internal modes are implemented as separate classes that inherit from a common base class <code>NavigatorMode</code>. The member <code>_navigation_mode</code> contains the current active mode.</p><p>Navigator publishes position setpoint triplets (<code>position_setpoint_triplet_s</code>), which are then used by the position controller.</p><p><a id="navigator_usage"></a></p><h3 id="사용법-9" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-9" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>navigator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   fencefile     load a geofence file from SD card, stored at etc/geofence.txt</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   fake_traffic  publishes 24 fake transponder_report_s uORB messages</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="rover-ackermann" tabindex="-1">rover_ackermann <a class="header-anchor" href="#rover-ackermann" aria-label="Permalink to &quot;rover_ackermann&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/rover_ackermann" target="_blank" rel="noreferrer">modules/rover_ackermann</a></p><h3 id="설명-10" tabindex="-1">설명 <a class="header-anchor" href="#설명-10" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>Rover ackermann module.</p><p><a id="rover_ackermann_usage"></a></p><h3 id="사용법-10" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-10" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rover_ackermann &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="rover-differential" tabindex="-1">rover_differential <a class="header-anchor" href="#rover-differential" aria-label="Permalink to &quot;rover_differential&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/rover_differential" target="_blank" rel="noreferrer">modules/rover_differential</a></p><h3 id="설명-11" tabindex="-1">설명 <a class="header-anchor" href="#설명-11" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>Rover Differential controller.</p><p><a id="rover_differential_usage"></a></p><h3 id="사용법-11" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-11" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rover_differential &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="rover-mecanum" tabindex="-1">rover_mecanum <a class="header-anchor" href="#rover-mecanum" aria-label="Permalink to &quot;rover_mecanum&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/rover_mecanum" target="_blank" rel="noreferrer">modules/rover_mecanum</a></p><h3 id="설명-12" tabindex="-1">설명 <a class="header-anchor" href="#설명-12" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>Rover Mecanum controller.</p><p><a id="rover_mecanum_usage"></a></p><h3 id="사용법-12" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-12" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rover_mecanum &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="rover-pos-control" tabindex="-1">rover_pos_control <a class="header-anchor" href="#rover-pos-control" aria-label="Permalink to &quot;rover_pos_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/rover_pos_control" target="_blank" rel="noreferrer">modules/rover_pos_control</a></p><h3 id="설명-13" tabindex="-1">설명 <a class="header-anchor" href="#설명-13" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>L1 컨트롤러를 사용하여 그라운드 로버의 위치를 제어합니다.</p><p>Publishes <code>vehicle_thrust_setpoint (only in x) and vehicle_torque_setpoint (only yaw)</code> messages at IMU_GYRO_RATEMAX.</p><h3 id="구현-2" tabindex="-1">구현 <a class="header-anchor" href="#구현-2" aria-label="Permalink to &quot;구현&quot;">​</a></h3><p>현재 이 구현은 일부 모드만 지원합니다.</p><ul><li>완전 수동: 스로틀 및 편요각 제어가 액츄에이터에 직접 전달됩니다.</li><li>자동 미션: 로버가 미션을 실행합니다.</li><li>배회: 로버가 배회 반경 내로 이동한 다음 모터를 중지합니다.</li></ul><h3 id="예" tabindex="-1">예 <a class="header-anchor" href="#예" aria-label="Permalink to &quot;예&quot;">​</a></h3><p>CLI 사용 예:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rover_pos_control start</span></span>
<span class="line"><span>rover_pos_control status</span></span>
<span class="line"><span>rover_pos_control stop</span></span></code></pre></div><p><a id="rover_pos_control_usage"></a></p><h3 id="사용법-13" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-13" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rover_pos_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="uuv-att-control" tabindex="-1">uuv_att_control <a class="header-anchor" href="#uuv-att-control" aria-label="Permalink to &quot;uuv_att_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/uuv_att_control" target="_blank" rel="noreferrer">modules/uuv_att_control</a></p><h3 id="설명-14" tabindex="-1">설명 <a class="header-anchor" href="#설명-14" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>무인수중선(UUV)의 자세를 제어합니다.</p><p>Publishes <code>vehicle_thrust_setpont</code> and <code>vehicle_torque_setpoint</code> messages at a constant 250Hz.</p><h3 id="구현-3" tabindex="-1">구현 <a class="header-anchor" href="#구현-3" aria-label="Permalink to &quot;구현&quot;">​</a></h3><p>현재 이 구현은 일부 모드만 지원합니다.</p><ul><li>완전 수동: 롤, 피치, 요 및 스로틀 컨트롤이 액추에이터에 직접 전달됩니다.</li><li>자동 임무: 무인수중선이 임무를 실행합니다.</li></ul><h3 id="예-1" tabindex="-1">예 <a class="header-anchor" href="#예-1" aria-label="Permalink to &quot;예&quot;">​</a></h3><p>CLI 사용 예:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>uuv_att_control start</span></span>
<span class="line"><span>uuv_att_control status</span></span>
<span class="line"><span>uuv_att_control stop</span></span></code></pre></div><p><a id="uuv_att_control_usage"></a></p><h3 id="사용법-14" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-14" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>uuv_att_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="uuv-pos-control" tabindex="-1">uuv_pos_control <a class="header-anchor" href="#uuv-pos-control" aria-label="Permalink to &quot;uuv_pos_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/uuv_pos_control" target="_blank" rel="noreferrer">modules/uuv_pos_control</a></p><h3 id="설명-15" tabindex="-1">설명 <a class="header-anchor" href="#설명-15" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>무인수중선(UUV)의 자세를 제어합니다. Publishes <code>attitude_setpoint</code> messages.</p><h3 id="구현-4" tabindex="-1">구현 <a class="header-anchor" href="#구현-4" aria-label="Permalink to &quot;구현&quot;">​</a></h3><p>현재 이 구현은 일부 모드만 지원합니다.</p><ul><li>완전 수동: 롤, 피치, 요 및 스로틀 컨트롤이 액추에이터에 직접 전달됩니다.</li><li>자동 임무: 무인수중선이 임무를 실행합니다.</li></ul><h3 id="예-2" tabindex="-1">예 <a class="header-anchor" href="#예-2" aria-label="Permalink to &quot;예&quot;">​</a></h3><p>CLI 사용 예:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>uuv_pos_control start</span></span>
<span class="line"><span>uuv_pos_control status</span></span>
<span class="line"><span>uuv_pos_control stop</span></span></code></pre></div><p><a id="uuv_pos_control_usage"></a></p><h3 id="사용법-15" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-15" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>uuv_pos_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="vtol-att-control" tabindex="-1">vtol_att_control <a class="header-anchor" href="#vtol-att-control" aria-label="Permalink to &quot;vtol_att_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/vtol_att_control" target="_blank" rel="noreferrer">modules/vtol_att_control</a></p><h3 id="설명-16" tabindex="-1">설명 <a class="header-anchor" href="#설명-16" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>fw_att_control은 고정익 자세 컨트롤러입니다.</p><p><a id="vtol_att_control_usage"></a></p><h3 id="사용법-16" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-16" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vtol_att_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div>`,151)]))}const m=s(o,[["render",p]]);export{u as __pageData,m as default};
