import{_ as t,c as i,a8 as a,o as s}from"./chunks/framework.BDnHobkS.js";const m=JSON.parse('{"title":"Multi-Vehicle Simulation with ROS 2","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ros2/multi_vehicle.md","filePath":"ko/ros2/multi_vehicle.md"}'),o={name:"ko/ros2/multi_vehicle.md"};function n(d,e,l,c,r,h){return s(),i("div",null,e[0]||(e[0]=[a('<h1 id="multi-vehicle-simulation-with-ros-2" tabindex="-1">Multi-Vehicle Simulation with ROS 2 <a class="header-anchor" href="#multi-vehicle-simulation-with-ros-2" aria-label="Permalink to &quot;Multi-Vehicle Simulation with ROS 2&quot;">​</a></h1><p><a href="./../middleware/uxrce_dds.html">XRCE-DDS</a> allows for multiple clients to be connected to the same agent over UDP. This is particular useful in simulation as only one agent needs to be started.</p><h2 id="setup-and-requirements" tabindex="-1">Setup and Requirements <a class="header-anchor" href="#setup-and-requirements" aria-label="Permalink to &quot;Setup and Requirements&quot;">​</a></h2><p>The only requirements are</p><ul><li>To be able to run <a href="./../simulation/multi-vehicle-simulation.html">multi-vehicle simulation</a> without ROS 2 with the desired simulator (<a href="./../sim_gazebo_gz/multi_vehicle_simulation.html">Gazebo</a>, <a href="./../sim_gazebo_classic/multi_vehicle_simulation.html#multiple-vehicle-with-gazebo-classic">Gazebo Classic</a>, <a href="./../sim_flightgear/multi_vehicle.html">FlightGear</a> and <a href="./../sim_jmavsim/multi_vehicle.html">JMAVSim</a>).</li><li>To be able to use <a href="./../ros2/user_guide.html">ROS 2</a> in a single vehicle simulation.</li></ul><h2 id="principle-of-operation" tabindex="-1">Principle of Operation <a class="header-anchor" href="#principle-of-operation" aria-label="Permalink to &quot;Principle of Operation&quot;">​</a></h2><p>In simulation each PX4 instance receives a unique <code>px4_instance</code> number starting from <code>0</code>. This value is used to assign a unique value to <a href="./../advanced_config/parameter_reference.html#UXRCE_DDS_KEY">UXRCE_DDS_KEY</a>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UXRCE_DDS_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $((</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4_instance+1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>By doing so, <code>UXRCE_DDS_KEY</code> will always coincide with <a href="./../advanced_config/parameter_reference.html#MAV_SYS_ID">MAV_SYS_ID</a>.</p></div><p>Moreover, when <code>px4_instance</code> is greater than zero, a unique ROS 2 <a href="./../middleware/uxrce_dds.html#customizing-the-topic-namespace">namespace prefix</a> in the form <code>px4_$px4_instance</code> is added:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uxrce_dds_ns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-n px4_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$px4_instance</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The environment variable <code>PX4_UXRCE_DDS_NS</code>, if set, will override the namespace behavior described above.</p></div><p>The first instance (<code>px4_instance=0</code>) does not have an additional namespace in order to be consistent with the default behavior of the <code>xrce-dds</code> client on a real vehicle. This mismatch can be fixed by manually using <code>PX4_UXRCE_DDS_NS</code> on the first instance or by starting adding vehicles from index <code>1</code> instead of <code>0</code> (this is the default behavior adopted by <a href="https://github.com/PX4/PX4-Autopilot/blob/main/Tools/simulation/gazebo-classic/sitl_multiple_run.sh" target="_blank" rel="noreferrer">sitl_multiple_run.sh</a> for Gazebo Classic).</p><p>The default client configuration in simulation is summarized as follows:</p><table tabindex="0"><thead><tr><th><code>PX4_UXRCE_DDS_NS</code></th><th><code>px4_instance</code></th><th><code>UXRCE_DDS_KEY</code></th><th>client namespace</th></tr></thead><tbody><tr><td>not provided</td><td>0</td><td><code>px4_instance+1</code></td><td>none</td></tr><tr><td>provided</td><td>0</td><td><code>px4_instance+1</code></td><td><code>PX4_UXRCE_DDS_NS</code></td></tr><tr><td>not provided</td><td>&gt; 0</td><td><code>px4_instance+1</code></td><td><code>px4_${px4_instance}</code></td></tr><tr><td>provided</td><td>&gt; 0</td><td><code>px4_instance+1</code></td><td><code>PX4_UXRCE_DDS_NS</code></td></tr></tbody></table><h2 id="adjusting-the-target-system-value" tabindex="-1">Adjusting the <code>target_system</code> value <a class="header-anchor" href="#adjusting-the-target-system-value" aria-label="Permalink to &quot;Adjusting the `target_system` value&quot;">​</a></h2><p>PX4 accepts <a href="./../msg_docs/VehicleCommand.html">VehicleCommand</a> messages only if their <code>target_system</code> field is zero (broadcast communication) or coincides with <code>MAV_SYS_ID</code>. In all other situations, the messages are ignored. Therefore, when ROS 2 nodes want to send <code>VehicleCommand</code> to PX4, they must ensure that the messages are filled with the appropriate <code>target_system</code> value.</p><p>For example, if you want to send a command to your third vehicle, which has <code>px4_instance=2</code>, you need to set <code>target_system=3</code> in all your <code>VehicleCommand</code> messages.</p>',18)]))}const u=t(o,[["render",n]]);export{m as __pageData,u as default};
