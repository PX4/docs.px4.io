import{_ as i,c as a,a8 as t,o as n}from"./chunks/framework.BDnHobkS.js";const d=JSON.parse('{"title":"RtlStatus (UORB повідомлення)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/msg_docs/RtlStatus.md","filePath":"uk/msg_docs/RtlStatus.md"}'),e={name:"uk/msg_docs/RtlStatus.md"};function l(p,s,h,k,o,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="rtlstatus-uorb-повідомлення" tabindex="-1">RtlStatus (UORB повідомлення) <a class="header-anchor" href="#rtlstatus-uorb-повідомлення" aria-label="Permalink to &quot;RtlStatus (UORB повідомлення)&quot;">​</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/RtlStatus.msg" target="_blank" rel="noreferrer">вихідний файл</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp                      # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 safe_points_id 		      # unique ID of active set of safe_point_items</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> is_evaluation_pending 	      # flag </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the RTL point needs </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reevaluation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e.g. new safe points </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">available</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, but need </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">loading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has_vtol_approach 		      # flag </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> approaches are defined </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> current RTL_TYPE parameter setting</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 rtl_type	      		      # Type of RTL chosen</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 safe_point_index 		      # index of the chosen safe point, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in RTL_STATUS_TYPE_DIRECT_SAFE_POINT mode</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 RTL_STATUS_TYPE_NONE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       		# pending </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evaluation can</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t pe performed currently e.g. when it is still loading the safe points</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">uint8 RTL_STATUS_TYPE_DIRECT_SAFE_POINT=1 	# chosen to directly go to a safe point or home position</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">uint8 RTL_STATUS_TYPE_DIRECT_MISSION_LAND=2 	# going straight to the beginning of the mission landing</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">uint8 RTL_STATUS_TYPE_FOLLOW_MISSION=3 		# Following the mission from start index to mission landing. Start index is current WP if in Mission mode, and closest WP otherwise.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">uint8 RTL_STATUS_TYPE_FOLLOW_MISSION_REVERSE=4 	# Following the mission in reverse from start index to the beginning of the mission. Start index is previous WP if in Mission mode, and closest WP otherwise.</span></span></code></pre></div>`,3)]))}const g=i(e,[["render",l]]);export{d as __pageData,g as default};
