import{_ as t}from"./chunks/cube_yellow_hero.nlNk5CGK.js";import{_ as l,a as r}from"./chunks/cube_ports_usb_sdcard.CwzOMre7.js";import{_ as i}from"./chunks/cube_ports_debug.DfxMJPv0.js";import{_ as a,c as o,a8 as s,o as n}from"./chunks/framework.BDnHobkS.js";const _=JSON.parse('{"title":"CubePilot Cube Yellow Flight Controller","description":"","frontmatter":{},"headers":[],"relativePath":"ko/flight_controller/cubepilot_cube_yellow.md","filePath":"ko/flight_controller/cubepilot_cube_yellow.md"}'),u={name:"ko/flight_controller/cubepilot_cube_yellow.md"};function d(c,e,h,p,b,m){return n(),o("div",null,e[0]||(e[0]=[s('<h1 id="cubepilot-cube-yellow-flight-controller" tabindex="-1">CubePilot Cube Yellow Flight Controller <a class="header-anchor" href="#cubepilot-cube-yellow-flight-controller" aria-label="Permalink to &quot;CubePilot Cube Yellow Flight Controller&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>PX4 does not manufacture this (or any) autopilot. Contact the <a href="https://cubepilot.org/#/home" target="_blank" rel="noreferrer">manufacturer</a> for hardware support or compliance issues.</p></div><p>The Cube Yellow flight controller is a flexible autopilot intended primarily for manufacturers of commercial systems.</p><p><img src="'+t+'" alt="Cube Yellow"></p><p>배선을 줄이고 신뢰성을 높이며 조립을 쉽게하기 위해 도메인별 캐리어 보드와 함께 사용하도록 설계되었습니다. 예를 들어, 상용 검사 기체 캐리어보드에는 보조 컴퓨터용 연결이 포함될 수 있는 반면, 레이서 용 캐리어보드는 기체 프레임을 형성하는 ESC를 포함할 수 있습니다.</p><p>Cube에는 2 개의 IMU에 진동 차단이 포함되어 있으며, 세 번째 고정 IMU는 참조 백업용으로 사용됩니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The manufacturer <a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview" target="_blank" rel="noreferrer">Cube Docs</a> contain detailed information, including an overview of the <a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview#differences-between-cube-colours" target="_blank" rel="noreferrer">Differences between Cube Colours</a>.</p></div><h2 id="주요-특징" tabindex="-1">주요 특징 <a class="header-anchor" href="#주요-특징" aria-label="Permalink to &quot;주요 특징&quot;">​</a></h2><ul><li>32bit STM32F777VI (32bit <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M7" target="_blank" rel="noreferrer">ARM Cortex M7</a>, 400 MHz, Flash 2MB, RAM 512 KB).</li><li>32 bit STM32F103 failsafe co-processor </li><li>14 개 PWM/서보 출력(페일세이프 및 수동 오버라이드 포함 8 개, 보조, 고전력 호환 6 개)</li><li>추가 주변 장치(UART, I2C, CAN) 다양한 연결 옵션</li><li>전용 프로세서와 독립형 전원 공급 장치(고정익 적용)로 비행중 복구 기능과 수동 오버라이드 통합 백업 시스템</li><li>Backup system integrates mixing, providing consistent autopilot and manual override mixing modes (fixed-wing use)</li><li>중복 전원공급장치 및 자동 장애 조치</li><li>외부 안전 스위치</li><li>다색 LED 주시각 표시기</li><li>고전력 멀티톤 피에조 오디오 표시기</li><li>장기간 고속 로깅용 microSD 카드</li></ul><p><a id="stores"></a></p><h2 id="구매처" tabindex="-1">구매처 <a class="header-anchor" href="#구매처" aria-label="Permalink to &quot;구매처&quot;">​</a></h2><ul><li><a href="https://www.cubepilot.com/#/reseller/list" target="_blank" rel="noreferrer">Reseller list</a></li></ul><h2 id="조립" tabindex="-1">조립 <a class="header-anchor" href="#조립" aria-label="Permalink to &quot;조립&quot;">​</a></h2><p><a href="./../assembly/quick_start_cube.html">Cube Wiring Quickstart</a></p><h2 id="사양" tabindex="-1">사양 <a class="header-anchor" href="#사양" aria-label="Permalink to &quot;사양&quot;">​</a></h2><ul><li><strong>Processor:</strong><ul><li>STM32F777VI (32bit <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M7" target="_blank" rel="noreferrer">ARM Cortex M7</a>)</li><li>400 MHz</li><li>512 KB MB RAM</li><li>2 MB Flash</li></ul></li><li><strong>Failsafe co-processor:</strong><ul><li>STM32F100 (32bit <em>ARM Cortex-M3</em>)</li><li>24 MHz</li><li>8 KB SRAM</li></ul></li><li><strong>Sensors:</strong> (all connected via SPI) <ul><li><strong>Accelerometer:</strong> (3) ICM20948, ICM20649, ICM20602</li><li><strong>Gyroscope:</strong> (3) ICM20948, ICM20649, ICM20602</li><li><strong>Compass:</strong> (1) ICM20948</li><li><strong>Barometric Pressure Sensor:</strong> (2) MS5611</li></ul></li><li><strong>Operating Conditions:</strong><ul><li><strong>Operating Temp:</strong> -10C to 55C</li><li><strong>IP rating/Waterproofing:</strong> Not waterproof</li><li><strong>Servo rail input voltage:</strong> 3.3V / 5V</li><li><strong>USB port input:</strong><ul><li>전압: 4V - 5.7V</li><li>정격 전류: 250 mA</li></ul></li><li><strong>POWER:</strong><ul><li>입력 전압: 4.1V - 5.7V</li><li>정격 입력 전류: 2.5A</li><li>정격 입/출력 전력: 14W</li></ul></li></ul></li><li><strong>Dimensions:</strong><ul><li><strong>Cube:</strong> 38.25mm x 38.25mm x 22.3mm</li><li><strong>Carrier:</strong> 94.5mm x 44.3mm x 17.3mm</li></ul></li><li><strong>Interfaces</strong><ul><li>IO 포트: 14 개의 PWM 서보 출력(IO에서 8 개, FMU에서 6 개)</li><li>UART (직렬 포트) 5개, 1 개의 고전력 지원, 2x (HW 흐름 제어 포함)</li><li>CAN 2개(하나는 내부 3.3V 트랜시버, 하나는 확장 커넥터에 있음)</li><li><strong>R/C inputs:</strong><ul><li>Spektrum DSM/DSM2/DSM-X® Satellite 호환 입력</li><li>Futaba S.BUS® 호환 입력 및 출력</li><li>PPM 합계 신호 입력</li></ul></li><li>RSSI(PWM 또는 전압) 입력</li><li>I2C</li><li>SPI</li><li>3.3v ADC 입력</li><li>내부 microUSB 포트 및 외부 microUSB 포트 확장</li></ul></li></ul><h2 id="핀배열과-회로도" tabindex="-1">핀배열과 회로도 <a class="header-anchor" href="#핀배열과-회로도" aria-label="Permalink to &quot;핀배열과 회로도&quot;">​</a></h2><p>Board schematics and other documentation can be found here: <a href="https://github.com/proficnc/The-Cube" target="_blank" rel="noreferrer">The Cube Project</a>.</p><h2 id="포트" tabindex="-1">포트 <a class="header-anchor" href="#포트" aria-label="Permalink to &quot;포트&quot;">​</a></h2><h3 id="위쪽-gps-telem-등" tabindex="-1">위쪽(GPS, TELEM 등) <a class="header-anchor" href="#위쪽-gps-telem-등" aria-label="Permalink to &quot;위쪽(GPS, TELEM 등)&quot;">​</a></h3><p><img src="'+l+'" alt="Cube Ports - Top (GPS, TELEM etc) and Main/AUX"></p><h2 id="시리얼-포트-매핑" tabindex="-1">시리얼 포트 매핑 <a class="header-anchor" href="#시리얼-포트-매핑" aria-label="Permalink to &quot;시리얼 포트 매핑&quot;">​</a></h2><table tabindex="0"><thead><tr><th>UART</th><th>장치</th><th>포트</th></tr></thead><tbody><tr><td>USART2</td><td>/dev/ttyS0</td><td>TELEM1 (흐름 제어)</td></tr><tr><td>USART3</td><td>/dev/ttyS1</td><td>TELEM2 (흐름 제어)</td></tr><tr><td>UART4</td><td>/dev/ttyS2</td><td>GPS1</td></tr><tr><td>USART6</td><td>/dev/ttyS3</td><td>PX4IO</td></tr><tr><td>UART7</td><td>/dev/ttyS4</td><td>CONSOLE/ADSB-IN</td></tr><tr><td>UART8</td><td>/dev/ttyS5</td><td>GPS2</td></tr></tbody></table><h3 id="디버그-포트" tabindex="-1">디버그 포트 <a class="header-anchor" href="#디버그-포트" aria-label="Permalink to &quot;디버그 포트&quot;">​</a></h3><p><img src="'+i+'" alt="Cube Debug Ports"></p><h3 id="usb-sdcard-포트" tabindex="-1">USB/SDCard 포트 <a class="header-anchor" href="#usb-sdcard-포트" aria-label="Permalink to &quot;USB/SDCard 포트&quot;">​</a></h3><p><img src="'+r+'" alt="Cube USB/SDCard Ports"></p><h2 id="펌웨어-빌드" tabindex="-1">펌웨어 빌드 <a class="header-anchor" href="#펌웨어-빌드" aria-label="Permalink to &quot;펌웨어 빌드&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Most users will not need to build this firmware! It is pre-built and automatically installed by <em>QGroundControl</em> when appropriate hardware is connected.</p></div><p>To <a href="./../dev_setup/building_px4.html">build PX4</a> for this target:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>make cubepilot_cubeyellow</span></span></code></pre></div><h2 id="문제점" tabindex="-1">문제점 <a class="header-anchor" href="#문제점" aria-label="Permalink to &quot;문제점&quot;">​</a></h2><p>Cube의 CAN1과 CAN2의 실크 스크린이 뒤집힙니다. CAN1은 CAN2이고 그 반대의 경우도 마찬가지입니다.</p><h2 id="추가-정보-및-문서" tabindex="-1">추가 정보 및 문서 <a class="header-anchor" href="#추가-정보-및-문서" aria-label="Permalink to &quot;추가 정보 및 문서&quot;">​</a></h2><ul><li><a href="./../assembly/quick_start_cube.html">Cube Wiring Quickstart</a></li><li>Cube 문서 (제조사) : <ul><li><a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview" target="_blank" rel="noreferrer">Cube Module Overview</a></li><li><a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-user-manual" target="_blank" rel="noreferrer">Cube User Manual</a></li><li><a href="https://docs.cubepilot.org/user-guides/carrier-boards/mini-carrier-board" target="_blank" rel="noreferrer">Mini Carrier Board</a></li></ul></li></ul>',35)]))}const k=a(u,[["render",d]]);export{_ as __pageData,k as default};
