import{_ as a,c as i,a8 as e,o as n}from"./chunks/framework.BDnHobkS.js";const c=JSON.parse('{"title":"Керування вихідним кодом","description":"","frontmatter":{},"headers":[],"relativePath":"uk/contribute/code.md","filePath":"uk/contribute/code.md"}'),t={name:"uk/contribute/code.md"};function l(p,s,h,r,o,k){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="керування-вихідним-кодом" tabindex="-1">Керування вихідним кодом <a class="header-anchor" href="#керування-вихідним-кодом" aria-label="Permalink to &quot;Керування вихідним кодом&quot;">​</a></h1><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2><p>Проект PX4 використовує модель розгалуження Git із трьома гілками:</p><ul><li><a href="https://github.com/PX4/PX4-Autopilot/tree/main" target="_blank" rel="noreferrer">main</a> is by default unstable and sees rapid development.</li><li><a href="https://github.com/PX4/PX4-Autopilot/tree/beta" target="_blank" rel="noreferrer">beta</a> has been thoroughly tested. Він призначений для тестерів на польоти.</li><li><a href="https://github.com/PX4/PX4-Autopilot/tree/stable" target="_blank" rel="noreferrer">stable</a> points to the last release.</li></ul><p>We try to retain a <a href="https://www.atlassian.com/git/tutorials/rewriting-history" target="_blank" rel="noreferrer">linear history through rebases</a> and avoid the <a href="https://docs.github.com/en/get-started/quickstart/github-flow" target="_blank" rel="noreferrer">Github flow</a>. Однак через глобальну команду і швидкий розвиток ми можемо одночасно вдаватися до збоїв.</p><p>To contribute new functionality, <a href="https://docs.github.com/en/get-started/signing-up-for-github/signing-up-for-a-new-github-account" target="_blank" rel="noreferrer">sign up for Github</a>, then <a href="https://docs.github.com/en/get-started/quickstart/fork-a-repo" target="_blank" rel="noreferrer">fork</a> the repository, <a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-and-deleting-branches-within-your-repository" target="_blank" rel="noreferrer">create a new branch</a>, add your <a href="#commits-and-commit-messages">changes as commits</a>, and finally <a href="#pull-requests">send a pull request</a>. Changes will be merged when they pass our <a href="https://en.wikipedia.org/wiki/Continuous_integration" target="_blank" rel="noreferrer">continuous integration</a> tests.</p><p>All code contributions have to be under the permissive <a href="https://opensource.org/licenses/BSD-3-Clause" target="_blank" rel="noreferrer">BSD 3-clause license</a> and all code must not impose any further constraints on the use.</p><h2 id="стиль-коду" tabindex="-1">Стиль Коду <a class="header-anchor" href="#стиль-коду" aria-label="Permalink to &quot;Стиль Коду&quot;">​</a></h2><p>PX4 uses the <a href="https://google.github.io/styleguide/cppguide.html" target="_blank" rel="noreferrer">Google C++ style guide</a>, with the following (minimal) modifications:</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Not all PX4 source code matches the style guide, but any <em>new code</em> that you write should do so — in both new and existing files. Якщо ви оновлюєте існуючий файл, від вас не вимагається, щоб весь файл відповідав інструкції зі стилю, а лише код, який ви змінили.</p></div><h3 id="вкладки" tabindex="-1">Вкладки <a class="header-anchor" href="#вкладки" aria-label="Permalink to &quot;Вкладки&quot;">​</a></h3><ul><li>Вкладки використовуються для відступу (еквівалентно 8 пробілу).</li><li>Пробіли використовуються для вирівнювання.</li></ul><h3 id="довжина-рядка" tabindex="-1">Довжина рядка <a class="header-anchor" href="#довжина-рядка" aria-label="Permalink to &quot;Довжина рядка&quot;">​</a></h3><ul><li>Максимальна довжина рядка становить 120 символів.</li></ul><h3 id="розширення-фаилів" tabindex="-1">Розширення файлів <a class="header-anchor" href="#розширення-фаилів" aria-label="Permalink to &quot;Розширення файлів&quot;">​</a></h3><ul><li>Source files use extension <code>*.cpp</code> instead of <code>*.cc</code>.</li></ul><h3 id="іменування-функціи-та-методів" tabindex="-1">Іменування функцій та методів <a class="header-anchor" href="#іменування-функціи-та-методів" aria-label="Permalink to &quot;Іменування  функцій та методів&quot;">​</a></h3><ul><li><code>lowerCamelCase()</code> is used for functions and methods to <em>visually</em> distinguish them from <code>ClassConstructors()</code> and <code>ClassNames</code>.</li></ul><h3 id="імена-змінних-членів-приватного-класу" tabindex="-1">Імена змінних членів приватного класу <a class="header-anchor" href="#імена-змінних-членів-приватного-класу" aria-label="Permalink to &quot;Імена змінних членів приватного класу&quot;">​</a></h3><ul><li><code>_underscore_prefixed_snake_case</code> is used for private class member variable names, as oppose to <code>underscore_postfixed_</code>.</li></ul><h3 id="ключові-слова-класу" tabindex="-1">Ключові слова класу <a class="header-anchor" href="#ключові-слова-класу" aria-label="Permalink to &quot;Ключові слова класу&quot;">​</a></h3><ul><li><em>zero</em> spaces before <code>public:</code>, <code>private:</code>, or <code>protected:</code> keywords.</li></ul><h3 id="приклад-сніпета-коду" tabindex="-1">Приклад сніпета коду <a class="header-anchor" href="#приклад-сніпета-коду" aria-label="Permalink to &quot;Приклад сніпета коду&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@brief</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Description of what this function does.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">input_param</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Clear description of the input [units]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Whatever we are returning [units]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> doSomething</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> input_param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in_scope_variable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> input_param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kConstantFloat;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in_scope_variable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _private_member_variable;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setPrivateMember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> private_member_variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { _private_member_variable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> private_member_variable; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Whatever we are &quot;getting&quot; [units]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getPrivateMember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _private_member_variable; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Clear description of the constant if not completely obvious from the name [units]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> constexpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kConstantFloat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Clear description of the variable if not completely obvious from the name [units]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _private_member_variable{...};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="вбудована-документація" tabindex="-1">Вбудована документація <a class="header-anchor" href="#вбудована-документація" aria-label="Permalink to &quot;Вбудована документація&quot;">​</a></h2><p>PX4 розробників заохочують до створення відповідної документації через джерело.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Стандарти документації вихідного коду не застосовуються, і код в даний час непослідовно документований. Ми б хотіли зробити краще!</p></div><p>В даний час у нас є два типи базової документації:</p><ul><li><p><code>PRINT_MODULE_*</code> methods are used for both module run time usage instructions and for the <a href="./../modules/modules_main.html">Modules &amp; Commands Reference</a> in this guide.</p><ul><li>The API is documented <a href="https://github.com/PX4/PX4-Autopilot/blob/v1.8.0/src/platforms/px4_module.h#L381" target="_blank" rel="noreferrer">in the source code here</a>.</li><li>Good examples of usage include the <a href="./../modules/module_template.html">Application/Module Template</a> and the files linked from the modules reference.</li></ul></li><li><p>We encourage other in-source documentation <em>where it adds value/is not redundant</em>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Developers should name C++ entities (classes, functions, variables etc.) such that their purpose can be inferred - reducing the need for explicit documentation.</p></div></li></ul><p>:::</p><ul><li>Не додавати документацію, яку тривіально можна вивести з імен об&#39;єктів С++.</li><li>ЗАВЖДИ вказуйте одиниці змінних, констант і параметрів введення/повернення там, де вони визначені.</li><li>ЗАВЖДИ вказуйте одиниці змінних, постійних і параметрів введення/повернення там, де вони визначені.</li><li><a href="http://www.doxygen.nl/" target="_blank" rel="noreferrer">Doxgyen</a> tags should be used if documentation is needed: <code>@class</code>, <code>@file</code>, <code>@param</code>, <code>@return</code>, <code>@brief</code>, <code>@var</code>, <code>@see</code>, <code>@note</code>. A good example of usage is <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/events/send_event.h" target="_blank" rel="noreferrer">src/modules/events/send_event.h</a>.</li></ul><p>Будь ласка, уникайте &quot;магічних чисел&quot;, наприклад, звідки прийшло це число? А як щодо множника при введенні ручки повороту?</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fabsf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(yaw_stick_normalized_input) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        yaw_rate_setpoint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        yaw_rate_setpoint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.52</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yaw_stick_normalized_input;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Натомість визначте цифри як константи з відповідним контекстом у заголовку:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Порогове значення мертвої зони для нормалізованого введення повороту</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> constexpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kYawStickDeadzone </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [рад/с] Порогове значення мертвої зони для нормалізованого введення повороту</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> constexpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kMaxYawRate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">radians</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>і оновіть реалізацію вихідного коду.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fabsf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(yaw_stick_normalized_input) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kYawStickDeadzone) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        yaw_rate_setpoint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        yaw_rate_setpoint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kMaxYawRate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yaw_stick_normalized_input;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="коміти-та-повідомлення-комітів" tabindex="-1">Коміти та повідомлення комітів <a class="header-anchor" href="#коміти-та-повідомлення-комітів" aria-label="Permalink to &quot;Коміти та повідомлення комітів&quot;">​</a></h2><p>Використовуйте описові повідомлення з кількома абзацами для всіх нетривіальних змін. Добре структуруйте їх, щоб вони мали сенс у підсумку в один рядок, але також надавали повну деталізацію.</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Component: Explain the change in one sentence. Fixes #1234</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Prepend the software component to the start of the summary</span></span>
<span class="line"><span>line, either by the module name or a description of it.</span></span>
<span class="line"><span>(e.g. &quot;mc_att_ctrl&quot; or &quot;multicopter attitude controller&quot;).</span></span>
<span class="line"><span></span></span>
<span class="line"><span>If the issue number is appended as &lt;Fixes #1234&gt;, Github</span></span>
<span class="line"><span>will automatically close the issue when the commit is</span></span>
<span class="line"><span>merged to the master branch.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>The body of the message can contain several paragraphs.</span></span>
<span class="line"><span>Describe in detail what you changed. Link issues and flight</span></span>
<span class="line"><span>logs either related to this fix or to the testing results</span></span>
<span class="line"><span>of this commit.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Describe the change and why you changed it, avoid to</span></span>
<span class="line"><span>paraphrase the code change (Good: &quot;Adds an additional</span></span>
<span class="line"><span>safety check for vehicles with low quality GPS reception&quot;.</span></span>
<span class="line"><span>Bad: &quot;Add gps_reception_check() function&quot;).</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Reported-by: Name &lt;email@px4.io&gt;</span></span></code></pre></div><p><strong>Use <strong><code>git commit -s</code></strong> to sign off on all of your commits.</strong> This will add <code>signed-off-by:</code> with your name and email as the last line.</p><p>This commit guide is based on best practices for the Linux Kernel and other <a href="https://github.com/torvalds/subsurface-for-dirk/blob/a48494d2fbed58c751e9b7e8fbff88582f9b2d02/README#L88-L115" target="_blank" rel="noreferrer">projects maintained</a> by Linus Torvalds.</p><h2 id="запити-на-злиття" tabindex="-1">Запити на злиття <a class="header-anchor" href="#запити-на-злиття" aria-label="Permalink to &quot;Запити на злиття&quot;">​</a></h2><p>Github <a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests" target="_blank" rel="noreferrer">Pull Requests (PRs)</a> are the primary mechanism used to submit new functionality and bug fixes to PX4.</p><p>They include the new set of <a href="#commits-and-commit-messages">commits</a> in your branch (relative the main branch), and a description of the changes.</p><p>Опис повинен включати:</p><ul><li>Огляд того, що доставляють дані зміни; достатньо для розуміння широкої мети коду</li><li>Посилання на пов&#39;язані з питаннями або підтримка інформації.</li><li>Інформація про те як було виконано тестування PR функціональності з посиланнями на журнали польотів.</li><li>Where possible, the results from general <a href="./../test_and_ci/test_flights.html">Test Flights</a> both before and after the change.</li></ul>`,47)]))}const g=a(t,[["render",l]]);export{c as __pageData,g as default};
