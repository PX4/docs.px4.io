import{_ as i,a,b as s,c as t,d as l,e as o,f as n}from"./chunks/linkselection.CtPU_htY.js";import{_ as r,c as p,a8 as h,o as c}from"./chunks/framework.BDnHobkS.js";const C=JSON.parse('{"title":"이리듐/락블록 위성 통신 시스템","description":"","frontmatter":{},"headers":[],"relativePath":"ko/advanced_features/satcom_roadblock.md","filePath":"ko/advanced_features/satcom_roadblock.md"}'),d={name:"ko/advanced_features/satcom_roadblock.md"};function k(u,e,g,b,m,F){return c(),p("div",null,e[0]||(e[0]=[h('<h1 id="이리듐-락블록-위성-통신-시스템" tabindex="-1">이리듐/락블록 위성 통신 시스템 <a class="header-anchor" href="#이리듐-락블록-위성-통신-시스템" aria-label="Permalink to &quot;이리듐/락블록 위성 통신 시스템&quot;">​</a></h1><p>위성통신 시스템은 기체와 지상국간의 광역 통신을 제공합니다.</p><p>이리듐 SBD 위성 통신 시스템의 서비스 공급자 RockBlock을 이용한 시스템 설정 방법을 설명합니다. 신호 품질이 우수한 경우에도 10~15초 정도의 시간 지연이 있을 수 있습니다.</p><h2 id="개요" tabindex="-1">개요 <a class="header-anchor" href="#개요" aria-label="Permalink to &quot;개요&quot;">​</a></h2><p>위성 통신에는 다음의 요소들이 필요합니다.</p><ul><li>A <a href="https://www.iridium.com/products/rock-seven-rockblock-9603/" target="_blank" rel="noreferrer">RockBlock 9603 Iridium Satellite Modem</a> module connected to a Pixhawk flashed with the PX4 Autopilot.</li><li>Ubuntu Linux를 실행하는 메시지 릴레이 서버</li><li>A ground station computer running <em>QGroundControl</em> on Ubuntu Linux</li></ul><p>전체 시스템 아키텍처는 다음과 같습니다.</p><p><img src="'+i+'" alt="Architecture"></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The setup was tested with the current release of <em>QGroundControl</em> running on Ubuntu 14.04 and 16.04.</p><ul><li>다른 지상국 및 운영체제를 사용할 수 있지만, 아직 테스트되지 않았습니다.</li><li>The <a href="https://www.groundcontrol.com/us/product/rockblock-9602-satellite-modem/" target="_blank" rel="noreferrer">RockBlock MK2</a> module can also be used. RockBlock 9603 모듈은 크기가 작고 가볍우면서도 동일한 기능을 제공하기 때문에 권장됩니다.</li></ul></div><h2 id="비용" tabindex="-1">비용 <a class="header-anchor" href="#비용" aria-label="Permalink to &quot;비용&quot;">​</a></h2><p>영국 링크 실행 비용은 회선 대여 및 메시지 당 비용으로 구성됩니다.</p><ul><li>각 모듈을 활성화해야 하며, 가격은 월 10파운드입니다</li><li>Each message transmitted over the system costs one <em>credit</em> per 50 bytes. 번들 크기에 따라 RockBlock에서 신용당 0.04파운드 0.11파운드에 신용대출을 구입할 수 있습니다.</li></ul><p>Refer to the <a href="https://docs.rockblock.rock7.com/docs" target="_blank" rel="noreferrer">RockBlock Documentation</a> for a detailed explanation of the modules, running costs and <em>RockBlock</em> in general.</p><h2 id="기체-설정" tabindex="-1">기체 설정 <a class="header-anchor" href="#기체-설정" aria-label="Permalink to &quot;기체 설정&quot;">​</a></h2><h3 id="배선" tabindex="-1">배선 <a class="header-anchor" href="#배선" aria-label="Permalink to &quot;배선&quot;">​</a></h3><p>RockBlock 모듈을 Pixhawk의 직렬 포트에 연결합니다. 모듈의 전원 요구 사항으로 인하여 5V에서 최대 0.5A가 필요하므로 고출력 직렬 포트를 통해서만 전원을 공급할 수 있습니다. 사용 가능한 별도의 전원을 사용시에는 Pixhawk와 동일한 접지이어야 합니다. The details of the <a href="https://docs.rockblock.rock7.com/docs/connectors" target="_blank" rel="noreferrer">connectors</a> and the <a href="https://docs.rockblock.rock7.com/docs/power-supply" target="_blank" rel="noreferrer">power requirements</a> can be found in the RockBlock documentation.</p><h3 id="모듈" tabindex="-1">모듈 <a class="header-anchor" href="#모듈" aria-label="Permalink to &quot;모듈&quot;">​</a></h3><p>모듈은 내부 안테나 또는 SMA 커넥터에 연결된 외부 안테나를 사용할 수 있습니다. To <a href="https://docs.rockblock.rock7.com/docs/switching-rockblock-9603-antenna-mode" target="_blank" rel="noreferrer">switch between the two antennas modes</a> the position of a small RF link cable needs to changed. 외부 안테나를 사용하는 경우 모듈 손상을 방지하기 위해 안테나의 전원을 켜기 전에 항상 안테나가 모듈에 연결되어 있는 지 확인하십시오.</p><p>모듈의 기본 보드 속도는 19200입니다. However, the PX4 <em>iridiumsbd</em> driver requires a baud rate of 115200 so it needs to be changed using the <a href="https://www.groundcontrol.com/en/wp-content/uploads/2022/02/IRDM_ISU_ATCommandReferenceMAN0009_Rev2.0_ATCOMM_Oct2012.pdf" target="_blank" rel="noreferrer">AT commands</a>.</p><ol><li><p>Connect to the module with using a 19200/8-N-1 setting and check if the communication is working using the command: <code>AT</code>. The response should be: <code>OK</code>.</p></li><li><p>baudrate 속도를 변경합니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>AT+IPR=9</span></span></code></pre></div></li><li><p>이제 115200/8-N-1 설정을 사용하여 모델에 다시 연결하고 다음을 사용하여 설정을 저장합니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>AT&amp;W0</span></span></code></pre></div></li></ol><p>이제 이 모듈을 PX4에서 사용할 수 있습니다.</p><h3 id="소프트웨어" tabindex="-1">소프트웨어 <a class="header-anchor" href="#소프트웨어" aria-label="Permalink to &quot;소프트웨어&quot;">​</a></h3><p><a href="./../peripherals/serial_configuration.html">Configure the serial port</a> on which the RockBlock module will run using <a href="./../advanced_config/parameter_reference.html#ISBD_CONFIG">ISBD_CONFIG</a>. 포트 전송속도는 드라이버에 의해 설정되므로, 추가로 설정하지 않아도 됩니다.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If the configuration parameter is not available in <em>QGroundControl</em> then you may need to <a href="./../peripherals/serial_configuration.html#parameter_not_in_firmware">add the driver to the firmware</a>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>drivers/telemetry/iridiumsbd</span></span></code></pre></div></div><h2 id="rockblock-설정" tabindex="-1">RockBlock 설정 <a class="header-anchor" href="#rockblock-설정" aria-label="Permalink to &quot;RockBlock 설정&quot;">​</a></h2><p>RockBlock의 첫 번째 모듈을 구입시의 첫 번째 단계는 사용자 계정을 생성하는 것입니다.</p><p>Log in to the <a href="https://rockblock.rock7.com/Operations" target="_blank" rel="noreferrer">account</a> and register the RockBlock module under the <code>My RockBLOCKs</code>. 모듈에 대한 라인 렌탈을 활성화하고 계정에서 예상 비행 시간에 충분한 크레딧을 사용할 수 있는 지 확인합니다. 기본 설정을 사용할 경우 분당 1개의 메시지가 차량에서 지상국으로 전송됩니다.</p><p>메시지 릴레이 서버에 대한 배달 그룹을 설정하고 모듈을 해당 배달 그룹에 추가합니다.</p><p><img src="'+a+`" alt="Delivery Groups"></p><h2 id="릴레이-서버-설정" tabindex="-1">릴레이 서버 설정 <a class="header-anchor" href="#릴레이-서버-설정" aria-label="Permalink to &quot;릴레이 서버 설정&quot;">​</a></h2><p>릴레이 서버는 Ubuntu 16.04 또는 14.04 버전에서 실행하여야 합니다.</p><ol><li><p>메시지 릴레이로 작동하는 서버에는 고정 IP 주소와 열린 TCP 포트 2개가 있어야 합니다.</p><ul><li><code>5672</code> for the <em>RabbitMQ</em> message broker (can be changed in the <em>rabbitmq</em> settings)</li><li><code>45679</code> for the HTTP POST interface (can be changed in the <strong>relay.cfg</strong> file)</li></ul></li><li><p>필요한 Python 모듈을 설치합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pika</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tornado</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> future</span></span></code></pre></div></li><li><p>Install the <code>rabbitmq</code> message broker:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmq-server</span></span></code></pre></div></li><li><p>브로커 자격 증명을 구성합니다(암호를 PWD로 변경).</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmqctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iridiumsbd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PWD</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmqctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set_permissions</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iridiumsbd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;.*&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;.*&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;.*&quot;</span></span></code></pre></div></li><li><p>Clone the <a href="https://github.com/acfloria/SatComInfrastructure.git" target="_blank" rel="noreferrer">SatComInfrastructure</a> repository:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/acfloria/SatComInfrastructure.git</span></span></code></pre></div></li><li><p>Go to the location of the <em>SatComInfrastructure</em> repo and configure the broker&#39;s queues:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./setup_rabbit.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iridiumsbd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PWD</span></span></code></pre></div></li><li><p>설정을 확인합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmqctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list_queues</span></span></code></pre></div><p>This should give you a list of 4 queues: <code>MO</code>, <code>MO_LOG</code>, <code>MT</code>, <code>MT_LOG</code></p></li><li><p>Edit the <code>relay.cfg</code> configuration file to reflect your settings.</p></li><li><p>분리 모드에서 릴레이 스크립트를 실행합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -dm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cd SatcomInfrastructure/; ./relay.py</span></span></code></pre></div></li></ol><p>기타 지침은 다음과 같습니다.</p><ul><li><p>화면에서 분리:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ctrl+a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> d</span></span></code></pre></div></li><li><p>스크립트 실행 중지:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ctrl+a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :quit</span></span></code></pre></div></li><li><p>Reattach to the screen:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -dr</span></span></code></pre></div></li></ul><h2 id="지상국-컴퓨터" tabindex="-1">지상국 컴퓨터 <a class="header-anchor" href="#지상국-컴퓨터" aria-label="Permalink to &quot;지상국 컴퓨터&quot;">​</a></h2><p>지상국을 설정 방법:</p><ol><li><p>필요한 Python 모듈을 설치합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pika</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tornado</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> future</span></span></code></pre></div></li><li><p>SatComInfrarastructure 저장소 복제:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/acfloria/SatComInfrastructure.git</span></span></code></pre></div></li><li><p>Edit the <strong>udp2rabbit.cfg</strong> configuration file to reflect your settings.</p></li><li><p><a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/getting_started/download_and_install.html" target="_blank" rel="noreferrer">Install <em>QGroundControl</em></a> (daily build).</p></li><li><p>다음 매개 변수를 사용하여 QGC에서 UDP 연결을 추가합니다.</p><ul><li>접속 포트: 10000</li><li>대상 호스트: 127.0.0.1:10001</li><li>높은 지연 시간: 확인됨</li></ul><p><img src="`+s+'" alt="High Latency Link Settings"></p></li></ol><h3 id="검증" tabindex="-1">검증 <a class="header-anchor" href="#검증" aria-label="Permalink to &quot;검증&quot;">​</a></h3><ol><li><p>Open a terminal on the ground station computer and change to the location of the <em>SatComInfrastructure</em> repository. Then start the <strong>udp2rabbit.py</strong> script:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./udp2rabbit.py</span></span></code></pre></div></li><li><p>Send a test message from <a href="https://rockblock.rock7.com/Operations" target="_blank" rel="noreferrer">RockBlock Account</a> to the created delivery group in the <code>Test Delivery Groups</code> tab.</p></li></ol><p>If in the terminal where the <code>udp2rabbit.py</code> script is running within a couple of seconds the acknowledge for a message can be observed, then the RockBlock delivery group, the relay server and the udp2rabbit script are set up correctly:</p><p><img src="'+t+'" alt="udp2rabbit message acknowledge"></p><h2 id="시스템-실행" tabindex="-1">시스템 실행 <a class="header-anchor" href="#시스템-실행" aria-label="Permalink to &quot;시스템 실행&quot;">​</a></h2><ol><li><p>Start <em>QGroundControl</em>. 먼저 높은 지연 시간 링크를 수동으로 연결한 다음, 일반 텔레메트리 링크를 연결합니다.</p><p><img src="'+l+'" alt="Connect the High Latency link"></p></li><li><p>Open a terminal on the ground station computer and change to the location of the <em>SatComInfrastructure</em> repository. Then start the <strong>udp2rabbit.py</strong> script:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./udp2rabbit.py</span></span></code></pre></div></li><li><p>기체의 전원을 켭니다.</p></li><li><p>Wait until the first <code>HIGH_LATENCY2</code> message is received on QGC. This can be checked either using the <em>MAVLink Inspector</em> widget or on the toolbar with the <em>LinkIndicator</em>. If more than one link is connected to the active vehicle the <em>LinkIndicator</em> shows all of them by clicking on the name of the shown link:</p><p><img src="'+o+'" alt="Link Toolbar"></p><p>링크 표시기는 항상 우선 순위 링크의 이름을 표시합니다.</p></li><li><p>이제 위성 통신 시스템을 사용할 준비가 되었습니다.우선 순위 링크(명령 전송 링크)는 다음 방법으로 결정됩니다.</p><ul><li><p>사용자가 링크를 명령하지 않으면, 지연 시간이 큰 링크보다 일반적인 텔레메트리 링크가 선호됩니다.</p></li><li><p>기체가 시동을 켜고 텔레메트리 링크가 끊어지면(특정 시간 동안 MAVLink 메시지가 수신되지 않을 경우), 오토파일럿과 QGC는 일반 텔레메트리에서 긴 대기 시간 링크로 되돌아갑니다. 텔레메트리 링크가 복구되는 즉시 QGC와 자동 조종기가 다시 이 링크로 전환됩니다.</p></li><li><p>The user can select a priority link over the <code>LinkIndicator</code> on the toolbar. 이 링크가 활성화되어 있거나 사용자가 다른 우선 순위 링크를 선택하면 이 링크는 우선 순위 링크로 유지됩니다.</p><p><img src="'+n+'" alt="Prioritylink Selection"></p></li></ul></li></ol><h2 id="문제-해결" tabindex="-1">문제 해결 <a class="header-anchor" href="#문제-해결" aria-label="Permalink to &quot;문제 해결&quot;">​</a></h2><ul><li><p>비행기에서 위성 통신 메시지를 수신하지만 명령을 전송할 수 없습니다(차량이 반응하지 않음).</p><ul><li>릴레이 서버의 설정을 확인하고 해당 설정이 올바른지 확인합니다(특히 IMEI).</li></ul></li><li><p>비행기의 위성 통신 메시지는 지상국에 도착하지 않습니다.</p><ul><li><p>Check using the system console if the <em>iridiumsbd</em> driver started and if it did that a signal from any satellite is received by the module:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iridiumsbd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span></code></pre></div></li><li><p>Make sure using the verification steps from above that the relay server, the delivery group and the <code>udp2rabbit.py</code> script are set up correctly.</p></li><li><p>링크가 연결되어 있고 설정이 정확한 지 확인하십시오.</p></li></ul></li><li><p>IridiumSBD 드라이버가 시작되지 않음:</p><ul><li>기체를 재부팅합니다. If that helps increase the sleep time in the <code>extras.txt</code> before the driver is started. 그래도 Pixhawk와 모듈이 동일한 접지 레벨을 유지하는지 확인할 수 있습니다. 모듈의 보레이트가 115200으로 설정되어 있는 지 확인하십시오.</li></ul></li><li><p>지상에서 첫 번째 메시지가 수신되지만, 기체가 비행하는 즉시 메시지를 전송할 수 없거나 대기 시간이 훨씬 더 길어집니다(분 단위).</p><ul><li>비행 후 신호 품질을 확인합니다. 비행 중에 감소하는 경우 내부 안테나 보다 외부 안테나를 사용하는 것이 좋습니다. 이미 외부 안테나를 전자 장치 또는 신호를 방해 할 수있는 모든 것에서 최대한 멀리 이동하십시오. 또한 안테나가 손상되지 않았는 지 확인합니다.</li></ul></li></ul>',45)]))}const f=r(d,[["render",k]]);export{C as __pageData,f as default};
