import{_ as a,c as t,a8 as i,o}from"./chunks/framework.BDnHobkS.js";const u=JSON.parse('{"title":"Video Streaming Data-link using WiFi in Raw Mode (WFB-ng)","description":"","frontmatter":{},"headers":[],"relativePath":"en/companion_computer/video_streaming_wfb_ng_wifi.md","filePath":"en/companion_computer/video_streaming_wfb_ng_wifi.md"}'),r={name:"en/companion_computer/video_streaming_wfb_ng_wifi.md"};function n(s,e,l,d,c,p){return o(),t("div",null,e[0]||(e[0]=[i(`<h1 id="video-streaming-data-link-using-wifi-in-raw-mode-wfb-ng" tabindex="-1">Video Streaming Data-link using WiFi in Raw Mode (WFB-ng) <a class="header-anchor" href="#video-streaming-data-link-using-wifi-in-raw-mode-wfb-ng" aria-label="Permalink to &quot;Video Streaming Data-link using WiFi in Raw Mode (WFB-ng)&quot;">​</a></h1><p>This tutorial shows how to set up a <a href="./../companion_computer/">companion computer</a> with a Logitech C920 or RaspberryPi camera, such that the video stream is transferred from the UAV to a ground computer and displayed in <em>QGroundControl</em>. The setup uses WiFi in unconnected (broadcast) mode and software from the <a href="https://github.com/svpcom/wfb-ng" target="_blank" rel="noreferrer">WFB-ng project</a>.</p><p>The channel can also be used as a bidirectional <a href="./../telemetry/">telemetry</a> link and TCP/IP tunnel for drone control during flight. If you manually control the drone with a Joystick from QGroundControl (which uses MAVLink) then you can use WFB-ng as single link for all drone communications (Video, MAVLink telemetry, remote control using a Joystick).</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Before using <em>WFB-ng</em> check regulators allow this kind of WiFi use in your country.</p></div><h2 id="wfb-ng-overview" tabindex="-1">WFB-ng Overview <a class="header-anchor" href="#wfb-ng-overview" aria-label="Permalink to &quot;WFB-ng Overview&quot;">​</a></h2><p>The <em>WFB-ng project</em> provides a data transport that use low-level WiFi packets to avoid the distance and latency limitations of the ordinary IEEE 802.11 stack.</p><p>The high level benefits of <em>WFB-ng</em> include:</p><ul><li>Low-latency video link.</li><li>Bidirectional telemetry link (MAVLink).</li><li>TCP/IP tunnel.</li><li>Automatic TX diversity - use multiple cards on the ground to avoid antenna tracker.</li><li>Full link encryption and authentication (using <a href="https://download.libsodium.org/doc/" target="_blank" rel="noreferrer">libsodium</a>).</li><li>Aggregation of MAVLink packets (pack small packets into batches before transmitting).</li><li>Enhanced <a href="https://github.com/svpcom/wfb-ng-osd" target="_blank" rel="noreferrer">OSD</a> for Raspberry PI or generic linux desktop with gstreamer.</li></ul><p>Additional information is provided in the <a href="#faq">FAQ</a> below.</p><h2 id="hardware" tabindex="-1">Hardware <a class="header-anchor" href="#hardware" aria-label="Permalink to &quot;Hardware&quot;">​</a></h2><h3 id="vehicle-setup" tabindex="-1">Vehicle Setup <a class="header-anchor" href="#vehicle-setup" aria-label="Permalink to &quot;Vehicle Setup&quot;">​</a></h3><p>The vehicle setup consists of:</p><ul><li><p>Raspberry PI 3B/3B+/ZeroW</p></li><li><p>A camera. These have been tested:</p><ul><li><a href="https://www.raspberrypi.org/products/camera-module-v2/" target="_blank" rel="noreferrer">Raspberry Pi camera</a> connected via CSI.</li><li><a href="https://www.logitech.com/en-us/product/hd-pro-webcam-c920?crid=34" target="_blank" rel="noreferrer">Logitech camera C920</a> connected via USB</li></ul></li><li><p>WiFi module <a href="https://www.alfa.com.tw/products_detail/1.htm" target="_blank" rel="noreferrer">ALPHA AWUS036ACH</a> or any other <strong>RTL8812au</strong> card.</p></li></ul><h3 id="ground-station" tabindex="-1">Ground Station <a class="header-anchor" href="#ground-station" aria-label="Permalink to &quot;Ground Station&quot;">​</a></h3><ul><li><p>Ground Station Computer. These options have been tested:</p><ul><li>Any Linux computer with a USB port (tested on Ubuntu 18.04 x86-64)</li><li>A computer with any OS running QGround control and Raspberry PI connected via Ethernet (RPi provides the wifi connection).</li></ul></li><li><p>WiFi module <a href="https://www.alfa.com.tw/products_detail/1.htm" target="_blank" rel="noreferrer">ALPHA AWUS036ACH</a> or any other <strong>RTL8812au</strong> card. See <a href="https://github.com/svpcom/wfb-ng/wiki/WiFi-hardware" target="_blank" rel="noreferrer">WFB-ng wiki &gt; WiFi hardware</a> for more information on supported modules.</p></li></ul><h2 id="hardware-modification" tabindex="-1">Hardware Modification <a class="header-anchor" href="#hardware-modification" aria-label="Permalink to &quot;Hardware Modification&quot;">​</a></h2><p>Alpha AWUS036ACH is a medium power card that uses a lot of current while transmitting. If you power it from ordinary USB2 it will reset the port on most <strong>ARM boards</strong>. If you connect it to <strong>USB3</strong> port via <strong>native USB3 cable</strong> to a <strong>Linux laptop</strong> you can use it without modification.</p><p>For <strong>Raspberry PI</strong> (UAV or ground) it must be directly connected to 5V BEC (or high current power adapter in case of ground pi) in one of two ways:</p><ul><li>Make a custom USB cable ([cut <code>+5V</code> wire from USB plug and connect it to BEC])(<a href="https://electronics.stackexchange.com/questions/218500/usb-charge-and-data-separate-cables" target="_blank" rel="noreferrer">https://electronics.stackexchange.com/questions/218500/usb-charge-and-data-separate-cables</a>)</li><li>Cut a <code>+5V</code> wire on PCB near USB port and wire it to BEC (don&#39;t do this if doubt - use custom cable instead).</li></ul><p>You must also add a 470uF <strong>low ESR capacitor</strong> (like ESC has) between <strong>card +5v and ground</strong> to filter voltage spikes. You should integrate the capacitor with a custom USB cable. Without the capacitor you can get packet corruption or packet loss. Be aware of <a href="https://en.wikipedia.org/wiki/Ground_loop_%28electricity%29" target="_blank" rel="noreferrer">ground loop</a> when using several ground wires.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If you use a special &quot;very&quot; high power cards from Taobao/Aliexpress then you MUST power it as described above in ANY case.</p></div><h3 id="uav-configuration" tabindex="-1">UAV Configuration <a class="header-anchor" href="#uav-configuration" aria-label="Permalink to &quot;UAV Configuration&quot;">​</a></h3><ol><li>Download Raspberry PI image from <a href="https://github.com/svpcom/wfb-ng/releases/" target="_blank" rel="noreferrer">latest wfb-ng release</a></li><li>Flash it to the <strong>UAV</strong> Raspberry PI</li><li>Reboot it and ssh with standard credentials (pi/raspberry).</li><li>Run actions for <strong>air</strong> role as displayed in motd.</li><li>Setup camera pipeline. Open <code>/etc/systemd/system/fpv-camera.service</code> and uncomment pipeline according to your camera (PI camera or Logitech camera)</li><li>Open <code>/etc/wifibroadcast.cfg</code> and configure WiFi channel according to your antenna setup (or use default #165 for 5.8GHz)</li><li>Configure PX4 to output telemetry stream at speed 1500 Kbps (other UART speeds doesn&#39;t match well to RPi frequency dividers). Connect Pixhawk UART to Raspberry Pi UART. In <code>/etc/wifibroadcast.cfg</code> uncomment <code>peer = &#39;serial:ttyS0:1500000&#39;</code> in <code>[drone_mavlink]</code> section.</li></ol><h3 id="using-a-linux-laptop-as-gcs-harder-than-using-a-rpi" tabindex="-1">Using a Linux Laptop as GCS (Harder than using a RPi) <a class="header-anchor" href="#using-a-linux-laptop-as-gcs-harder-than-using-a-rpi" aria-label="Permalink to &quot;Using a Linux Laptop as GCS (Harder than using a RPi)&quot;">​</a></h3><ol><li><p>On <strong>ground</strong> Linux development computer:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libpcap-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libsodium-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-all</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-twisted</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/svpcom/wfb-ng.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wfb-ng</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./deb_dist/wfb-ng</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.deb</span></span></code></pre></div></li><li><p>Follow the <a href="https://github.com/svpcom/wfb-ng/wiki/Setup-HOWTO" target="_blank" rel="noreferrer">Setup HOWTO</a> to complete installation</p></li><li><p>Don&#39;t forget to copy <code>/etc/gs.key</code> from <strong>UAV</strong> side to <strong>ground</strong> side to bind two setups.</p></li><li><p>Also don&#39;t forget to use the same frequency channel as on the UAV side.</p></li></ol><h3 id="using-raspberry-pi-as-gcs-easier" tabindex="-1">Using Raspberry PI as GCS (Easier) <a class="header-anchor" href="#using-raspberry-pi-as-gcs-easier" aria-label="Permalink to &quot;Using Raspberry PI as GCS (Easier)&quot;">​</a></h3><p>If you have Windows or OSX, or don&#39;t want to setup WFB-ng to your Linux laptop then you can use the same prebuilt image and another Raspberry Pi:</p><ol><li>Flash image to the <strong>ground</strong> Raspberry Pi.</li><li>Reboot it and SSH in with standard credentials (pi/raspberry).</li><li>Run actions for <strong>ground</strong> role as displayed in motd, but skip setup of <code>fpv-video</code> service and <code>osd</code> service.</li><li>Connect your laptop and ground RPi via ethernet and configure IP addresses</li><li>Edit <code>/etc/wifibroadcast.cfg</code> and set the IP address of the laptop in <code>[gs_mavlink]</code> and <code>[gs_video]</code> sections (replacing <code>127.0.0.1</code>).</li></ol><h3 id="qgroundcontrol-setup" tabindex="-1">QGroundControl Setup <a class="header-anchor" href="#qgroundcontrol-setup" aria-label="Permalink to &quot;QGroundControl Setup&quot;">​</a></h3><ol><li>Run <em>QGroundControl</em> and set <code>RTP h264</code> on port 5600 as video source</li><li>Use default settings (udp on port 14550) as mavlink source</li></ol><h2 id="tuning-radio-settings" tabindex="-1">Tuning Radio Settings <a class="header-anchor" href="#tuning-radio-settings" aria-label="Permalink to &quot;Tuning Radio Settings&quot;">​</a></h2><p>With default settings WFB use radio channel 165 (5825 MHz), width 20MHz, MCS #1 (QPSK 1/2) with long GI. This provides ~7 mbit/s of <strong>effective</strong> speed (i.e. usable speed after FEC and packet encoding) for <strong>both directions</strong> in sum, because WiFi is half-duplex. So it is suitable for video down stream 720p@49fps (4 mbit/s) + two full-speed telemetry streams (uplink and downlink). If you need a higher bandwidth you can use other MCS index (for example 2 or greater)</p><h2 id="antennas-and-diversity" tabindex="-1">Antennas and Diversity <a class="header-anchor" href="#antennas-and-diversity" aria-label="Permalink to &quot;Antennas and Diversity&quot;">​</a></h2><p>For simple cases you can use omnidirectional antennas with linear (that bundled with wifi cards) or circular leaf (<a href="http://www.antenna-theory.com/antennas/cloverleaf.php" target="_blank" rel="noreferrer">circularly polarized Coverleaf Antenna</a>) polarization. If you want to setup long distance link you can use multiple wifi adapters with directional and omnidirectional antennas. TX/RX diversity for multiple adapters supported out of box (just add multiple NICs to <code>/etc/default/wifibroadcast</code>). If your WiFi adapter has two antennas (like Alfa AWU036ACH) TX diversity is implemented via <a href="https://en.wikipedia.org/wiki/Space%E2%80%93time_block_code" target="_blank" rel="noreferrer">STBC</a>. Cards with 4 ports (like Alfa AWUS1900) are currently not supported.</p><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><p><strong>Q:</strong> <em>What type of data can be transmitted using wfb-ng?</em></p><p><strong>A:</strong> Any UDP with packet size &lt;= 1445. For example x264 inside RTP or MAVLink.</p><p><strong>Q:</strong> <em>What are transmission guarantees?</em></p><p><strong>A:</strong> Wifibroadcast uses FEC (forward error correction). You can tune it (both TX and RX simultaneously!) to fit your needs.</p><p><strong>Q</strong> <em>How far I can fly and still connect?</em></p><p><strong>A</strong> It depends on your antennas and WiFi cards. With Alfa AWU036ACH and 20dBi patch antenna on the ground ~20km is possible.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Don&#39;t use band that the RC TX operates on! Or setup RTL properly to avoid model loss.</p></div><p><strong>Q:</strong> <em>Is only Raspberry PI supported?</em></p><p><strong>A:</strong> WFB-ng is not tied to any GPU - it operates with UDP packets. But to get RTP stream you need a video encoder (which encodes raw data from camera to x264 stream), or you must use a camera with a hardware video codec like Logitech C920 or Ethernet security cameras.</p><h4 id="what-arm-boards-are-recommended-for-the-uav" tabindex="-1">What ARM Boards are Recommended for the UAV? <a class="header-anchor" href="#what-arm-boards-are-recommended-for-the-uav" aria-label="Permalink to &quot;What ARM Boards are Recommended for the UAV?&quot;">​</a></h4><ul><li>RPI3b/3b+/ZeroW. Prebuilt images are available, but it supports only h264 video for CSI cameras.</li><li>Jetson Nano. It supports h264 and h265 but you need to setup it yourself according to <a href="https://github.com/svpcom/wfb-ng/wiki/Setup-HOWTO" target="_blank" rel="noreferrer">Setup HOWTO</a></li></ul><p>You can use any other Linux ARM board, but you need to use an Ethernet or USB camera with built-in hardware video codecs (such as Logitech C920).</p><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>WFB-ng puts the WiFi cards into monitor mode. This mode allows to send and receive arbitrary packets without association and waiting for ACK packets. <a href="https://github.com/svpcom/wfb-ng/blob/master/doc/Analysis%20of%20Injection%20Capabilities%20and%20Media%20Access%20of%20IEEE%20802.11%20Hardware%20in%20Monitor%20Mode.pdf" target="_blank" rel="noreferrer">Analysis of Injection Capabilities and Media Access of IEEE 802.11 Hardware in Monitor Mode</a><a href="https://github.com/ewa/802.11-data" target="_blank" rel="noreferrer">802.11 timings</a></p>`,49)]))}const g=a(r,[["render",n]]);export{u as __pageData,g as default};
