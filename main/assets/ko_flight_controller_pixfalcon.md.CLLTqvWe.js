import{_ as r}from"./chunks/hardware-pixfalcon.uMTjHTOS.js";import{_ as o,c as l,j as t,a as i,G as s,a8 as n,B as d,o as h}from"./chunks/framework.BDnHobkS.js";const _=JSON.parse('{"title":"Pixfalcon 비행 콘트롤러 (단종됨)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/flight_controller/pixfalcon.md","filePath":"ko/flight_controller/pixfalcon.md"}'),p={name:"ko/flight_controller/pixfalcon.md"};function c(u,e,m,b,f,g){const a=d("Badge");return h(),l("div",null,[e[0]||(e[0]=t("h1",{id:"pixfalcon-비행-콘트롤러-단종됨",tabindex:"-1"},[i("Pixfalcon 비행 콘트롤러 (단종됨) "),t("a",{class:"header-anchor",href:"#pixfalcon-비행-콘트롤러-단종됨","aria-label":'Permalink to "Pixfalcon 비행 콘트롤러 (단종됨)"'},"​")],-1)),s(a,{type:"info",text:"Discontinued"}),e[1]||(e[1]=n('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This flight controller has been <a href="./../flight_controller/autopilot_experimental.html">discontinued</a> and is no longer commercially available.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>PX4 does not manufacture this (or any) autopilot. Contact the <a href="https://holybro.com/" target="_blank" rel="noreferrer">manufacturer</a> for hardware support or compliance issues.</p></div><p>The Pixfalcon autopilot (designed by <a href="https://holybro.com/" target="_blank" rel="noreferrer">Holybro<sup>®</sup></a>) is binary-compatible (FMUv2) derivative of the <a href="./../flight_controller/pixhawk.html">Pixhawk 1</a> design that has been optimized for space-constrained applications such as FPV racers. It has less IO to allow for the reduction in size.</p><p><img src="'+r+'" alt="Pixfalcon hero image"></p><h2 id="요약" tabindex="-1">요약 <a class="header-anchor" href="#요약" aria-label="Permalink to &quot;요약&quot;">​</a></h2><ul><li>Main System-on-Chip: <a href="http://www.st.com/web/en/catalog/mmc/FM141/SC1169/SS1577/LN1789" target="_blank" rel="noreferrer">STM32F427</a><ul><li>CPU : 단정밀도 FPU의 180MHz ARM<sup>®</sup> Cortexex<sup>®</sup> M4</li><li>RAM : 256KB SRAM (L1)</li></ul></li><li>페일세이프 시스템 온칩 : STM32F100 <ul><li>CPU: 24 MHz ARM Cortex M3</li><li>RAM : 8KB SRAM</li></ul></li><li>GPS: u-blox<sup>®</sup> M8 (번들)</li></ul><h3 id="연결성" tabindex="-1">연결성 <a class="header-anchor" href="#연결성" aria-label="Permalink to &quot;연결성&quot;">​</a></h3><ul><li>I2C 1개</li><li>UART 2개(하나는 원격 측정/OSD 용, 흐름 제어 없음)</li><li>수동 오버라이드 기능이 있는 PWM 8개</li><li>S.BUS / PPM 입력</li></ul><h2 id="구매처" tabindex="-1">구매처: <a class="header-anchor" href="#구매처" aria-label="Permalink to &quot;구매처:&quot;">​</a></h2><p>From distributor <a href="https://hobbyking.com/en_us/pixfalcon-micro-px4-autopilot-plus-micro-m8n-gps-and-mega-pbd-power-module.html" target="_blank" rel="noreferrer">Hobbyking<sup>®</sup></a></p><p>Optional hardware:</p><ul><li>Optical flow: PX4 Flow unit from manufacturer <a href="https://holybro.com/products/px4flow" target="_blank" rel="noreferrer">Holybro</a></li><li>Digital Airspeed sensor from manufacturer <a href="https://holybro.com/products/digital-air-speed-sensor" target="_blank" rel="noreferrer">Holybro</a> or distributor <a href="https://hobbyking.com/en_us/hkpilot-32-digital-air-speed-sensor-and-pitot-tube-set.html" target="_blank" rel="noreferrer">Hobbyking</a></li><li>텔레메트리가 통합 화면 디스플레이 <ul><li><a href="https://hobbyking.com/en_us/micro-hkpilot-telemetry-radio-module-with-on-screen-display-osd-unit-433mhz.html" target="_blank" rel="noreferrer">Hobbyking OSD + EU Telemetry (433 MHz)</a></li></ul></li><li>순수 텔레메트리 옵션: <ul><li><a href="https://hobbyking.com/en_us/apm-pixhawk-wireless-wifi-radio-module.html" target="_blank" rel="noreferrer">Hobbyking Wifi Telemetry</a></li><li><a href="./../telemetry/sik_radio.html">SIK Radios</a></li></ul></li></ul><h2 id="펌웨어-빌드" tabindex="-1">펌웨어 빌드 <a class="header-anchor" href="#펌웨어-빌드" aria-label="Permalink to &quot;펌웨어 빌드&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Most users will not need to build this firmware! It is pre-built and automatically installed by <em>QGroundControl</em> when appropriate hardware is connected.</p></div><p>To <a href="./../dev_setup/building_px4.html">build PX4</a> for this target:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>make px4_fmu-v2_default</span></span></code></pre></div><h2 id="디버그-포트" tabindex="-1">디버그 포트 <a class="header-anchor" href="#디버그-포트" aria-label="Permalink to &quot;디버그 포트&quot;">​</a></h2><p>This board does not have a debug port (i.e it does not have a port for accessing the <a href="./../debug/system_console.html">System Console</a> or the <a href="./../debug/swd_debug.html">SWD interface</a> (JTAG).</p><p>개발자는 SWD용 보드 테스트 패드와 STM32F4 (IC) TX와 RX에 와이어를 납땜하여 콘솔을 획득할 수 있습니다.</p><h2 id="시리얼-포트-매핑" tabindex="-1">시리얼 포트 매핑 <a class="header-anchor" href="#시리얼-포트-매핑" aria-label="Permalink to &quot;시리얼 포트 매핑&quot;">​</a></h2><table tabindex="0"><thead><tr><th>UART</th><th>장치</th><th>포트</th></tr></thead><tbody><tr><td>UART1</td><td>/dev/ttyS0</td><td>IO 디버그</td></tr><tr><td>USART2</td><td>/dev/ttyS1</td><td>TELEM1 (흐름 제어)</td></tr><tr><td>UART4</td><td>/dev/ttyS2</td><td>GPS</td></tr></tbody></table>',21))])}const y=o(p,[["render",c]]);export{_ as __pageData,y as default};
