import{_ as i}from"./chunks/realtime_debugging.CsJe_UIY.js";import{_ as a,c as e,a8 as n,o as t}from"./chunks/framework.BDnHobkS.js";const g=JSON.parse('{"title":"uORB 메시징","description":"","frontmatter":{},"headers":[],"relativePath":"ko/middleware/uorb.md","filePath":"ko/middleware/uorb.md"}'),h={name:"ko/middleware/uorb.md"};function l(p,s,k,r,o,d){return t(),e("div",null,s[0]||(s[0]=[n(`<h1 id="uorb-메시징" tabindex="-1">uORB 메시징 <a class="header-anchor" href="#uorb-메시징" aria-label="Permalink to &quot;uORB 메시징&quot;">​</a></h1><h2 id="소개" tabindex="-1">소개 <a class="header-anchor" href="#소개" aria-label="Permalink to &quot;소개&quot;">​</a></h2><p>The uORB is an asynchronous <code>publish()</code> / <code>subscribe()</code> messaging API used for inter-thread/inter-process communication.</p><p>Look at the <a href="./../modules/hello_sky.html">tutorial</a> to learn how to use it in C++.</p><p>많은 응용 프로그램이 uORB에 의존하므로 uORB는 부팅시에 자동으로 시작됩니다. It is started with <code>uorb start</code>. Unit tests can be started with <code>uorb_tests</code>.</p><h2 id="새로운-토픽-추가하기" tabindex="-1">새로운 토픽 추가하기 <a class="header-anchor" href="#새로운-토픽-추가하기" aria-label="Permalink to &quot;새로운 토픽 추가하기&quot;">​</a></h2><p>새로운 uORB 토픽은 메인 PX4/PX4-Autopilot 저장소에 추가하거나 트리 외부 메시지 정의에 추가할 수 있습니다. For information on adding out-of-tree uORB message definitions, please see <a href="./../advanced/out_of_tree_modules.html#out-of-tree-uorb-message-definitions">this section</a>.</p><p>To add a new topic, you need to create a new <strong>.msg</strong> file in the <code>msg/</code> directory and add the file name to the <code>msg/CMakeLists.txt</code> list. 이렇게 하면, 필요한 C/C++ 코드가 자동으로 생성됩니다.</p><p>Have a look at the existing <code>msg</code> files for supported types. 메시지는 다른 메시지에 중첩되어 사용될 수 있습니다.</p><p>To each generated C/C++ struct, a field <code>uint64_t timestamp</code> will be added. 이것은 로거에 사용되며, 메시지 게시시에 입력하여야 합니다.</p><p>코드에서 주제를 사용하려면 헤더를 포함하십시오.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;uORB/topics/topic_name.h&gt;</span></span></code></pre></div><p>By adding a line like the following in the <code>.msg</code> file, a single message definition can be used for multiple independent topics:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># TOPICS mission offboard_mission onboard_mission</span></span></code></pre></div><p>Then in the code, use them as topic id: <code>ORB_ID(offboard_mission)</code>.</p><h2 id="퍼블리시-게시" tabindex="-1">퍼블리시(게시) <a class="header-anchor" href="#퍼블리시-게시" aria-label="Permalink to &quot;퍼블리시(게시)&quot;">​</a></h2><p>Publishing a topic can be done from anywhere in the system, including interrupt context (functions called by the <code>hrt_call</code> API). However, the topic needs to be advertised and published outside of an interrupt context (at least once) before it can be published in an interrupt context.</p><h2 id="토픽-나열-및-듣기" tabindex="-1">토픽 나열 및 듣기 <a class="header-anchor" href="#토픽-나열-및-듣기" aria-label="Permalink to &quot;토픽 나열 및 듣기&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The <code>listener</code> command is only available on Pixracer (FMUv4) and Linux / OS X.</p></div><p>모든 토픽을 나열하려면, 파일 핸들을 나열하십시오.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /obj</span></span></code></pre></div><p>5개의 메시지에 대해 한 토픽의 내용을 들으려면, 리스너를 실행하십시오.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listener</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sensor_accel</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span></code></pre></div><p>출력은 주제 내용의 n배입니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TOPIC:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sensor_accel</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timestamp:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 84978861</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integral_dt:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4044</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error_count:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">x:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">y:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">z:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">x_integral:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">y_integral:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">z_integral:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">temperature:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 46</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">range_m_s2:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 78</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scaling:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TOPIC:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sensor_accel</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timestamp:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 85010833</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integral_dt:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3980</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error_count:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">x:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">y:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">z:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">x_integral:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">y_integral:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">z_integral:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">temperature:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 46</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">range_m_s2:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 78</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scaling:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>On NuttX-based systems (Pixhawk, Pixracer, etc) the <code>listener</code> command can be called from within the <em>QGroundControl</em> MAVLink Console to inspect the values of sensors and other topics. 이것은 QGC가 무선 틍신으로 연결된 경우에도(예: 차량이 비행 중일 때) 사용할 수 있는 강력한 디버깅 도구입니다. For more information see: <a href="./../debug/sensor_uorb_topic_debugging.html">Sensor/Topic Debugging</a>.</p></div><h3 id="uorb-top-명령어" tabindex="-1">uorb top 명령어 <a class="header-anchor" href="#uorb-top-명령어" aria-label="Permalink to &quot;uorb top 명령어&quot;">​</a></h3><p>The command <code>uorb top</code> shows the publishing frequency of each topic in real-time:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1s,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> num</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> topics:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 77</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TOPIC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        INST</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #SUB #MSG #LOST #QSIZE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">actuator_armed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                       0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">actuator_controls_0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  242</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1044</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">battery_status</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                       0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  500</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2694</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">commander_state</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                      0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   98</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    89</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">control_state</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  242</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   433</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ekf2_innovations</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                     0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  242</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   223</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ekf2_timestamps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                      0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  242</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    23</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">estimator_status</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                     0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  242</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   488</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mc_att_ctrl_status</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                   0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  242</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sensor_accel</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                         0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  242</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sensor_accel</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                         1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  249</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    43</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sensor_baro</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                          0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   42</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sensor_combined</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                      0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  242</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   636</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><p>각 칼럼은 주제 이름, 다중 인스턴스 인덱스, 구독자 수, 게시 빈도(Hz), 초당 손실된 메시지 수(모든 구독자가 결합된 경우) 및 대기열 크기입니다.</p><h2 id="plotting-changes-in-topics" tabindex="-1">Plotting Changes in Topics <a class="header-anchor" href="#plotting-changes-in-topics" aria-label="Permalink to &quot;Plotting Changes in Topics&quot;">​</a></h2><p>Topic changes can be plotted in realtime using PlotJuggler and the PX4 ROS 2 integration (note that this actually plots ROS topics that correspond to uORB topics, but the effect is the same).</p><p>For more information see: <a href="./../debug/plotting_realtime_uorb_data.html">Plotting uORB Topic Data in Real Time using PlotJuggler</a>.</p><p><video src="`+i+'" width="720" controls></video></p><h2 id="다중-인스턴스" tabindex="-1">다중 인스턴스 <a class="header-anchor" href="#다중-인스턴스" aria-label="Permalink to &quot;다중 인스턴스&quot;">​</a></h2><p>uORB provides a mechanism to publish multiple independent instances of the same topic through <code>orb_advertise_multi</code>. 게시자에게 인스턴스 인덱스를 반환합니다. A subscriber will then have to choose to which instance to subscribe to using <code>orb_subscribe_multi</code> (<code>orb_subscribe</code> subscribes to the first instance). 예를 들어, 시스템에 동일 유형의 센서가 여러 개 있는 경우에는 인스턴스가 여러 개 있으면 유용합니다.</p><p>Make sure not to mix <code>orb_advertise_multi</code> and <code>orb_advertise</code> for the same topic.</p><p>The full API is documented in <a href="https://github.com/PX4/PX4-Autopilot/blob/main/platforms/common/uORB/uORBManager.hpp" target="_blank" rel="noreferrer">platforms/common/uORB/uORBManager.hpp</a>.</p><h2 id="deprecation" tabindex="-1">Message/Field Deprecation <a class="header-anchor" href="#deprecation" aria-label="Permalink to &quot;Message/Field Deprecation {#deprecation}&quot;">​</a></h2><p>As there are external tools using uORB messages from log files, such as <a href="https://github.com/PX4/flight_review" target="_blank" rel="noreferrer">Flight Review</a>, certain aspects need to be considered when updating existing messages:</p><ul><li>업데이트에 대한 타당한 이유가 있는 경우에는, 외부 도구가 의존하는 기존 필드 또는 메시지를 변경하는 것이 일반적으로 허용됩니다. In particular for breaking changes to <em>Flight Review</em>, <em>Flight Review</em> must be updated before code is merged to <code>master</code>.</li><li>외부 도구가 두 메시지 버전을 확실하게 구별하려면, 다음 단계를 따라야 합니다. <ul><li>Removed or renamed messages must be added to the <code>deprecated_msgs</code> list in <a href="https://github.com/PX4/PX4-Autopilot/blob/c5a6a60903455c3600f47e3c45ecaa48614559c8/msg/CMakeLists.txt#L189" target="_blank" rel="noreferrer">msg/CMakeLists.txt</a> and the <strong>.msg</strong> file needs to be deleted.</li><li>제거되거나 이름이 변경된 필드는 주석을 달고 더 이상 사용되지 않는 것으로 표시하여야 합니다. For example <code>uint8 quat_reset_counter</code> would become <code># DEPRECATED: uint8 quat_reset_counter</code>. 이것은 제거된 필드(또는 메시지)가 다시 추가되지 않도록 하기 위한 것입니다.</li><li>의미 변경의 경우(예: 단위가 도에서 라디안으로 변경) 필드 이름도 변경하여야 하며, 이전 필드도 위와 같이 더 이상 사용되지 않는 것으로 표시되어야 합니다.</li></ul></li></ul>',41)]))}const C=a(h,[["render",l]]);export{g as __pageData,C as default};
