import{_ as a,c as i,a8 as n,o as t}from"./chunks/framework.BDnHobkS.js";const c=JSON.parse('{"title":"OffboardControlMode (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/msg_docs/OffboardControlMode.md","filePath":"uk/msg_docs/OffboardControlMode.md"}'),e={name:"uk/msg_docs/OffboardControlMode.md"};function o(l,s,p,r,h,d){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="offboardcontrolmode-uorb-message" tabindex="-1">OffboardControlMode (UORB message) <a class="header-anchor" href="#offboardcontrolmode-uorb-message" aria-label="Permalink to &quot;OffboardControlMode (UORB message)&quot;">â€‹</a></h1><p>Off-board control mode</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/OffboardControlMode.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Off</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">board control mode</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp		# time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> velocity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> acceleration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attitude</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body_rate</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thrust_and_torque</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> direct_actuator</span></span></code></pre></div>`,4)]))}const E=a(e,[["render",o]]);export{c as __pageData,E as default};
