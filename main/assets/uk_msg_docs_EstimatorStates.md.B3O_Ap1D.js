import{_ as t,c as a,a8 as i,o as e}from"./chunks/framework.BDnHobkS.js";const c=JSON.parse('{"title":"EstimatorStates (повідомлення UORB)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/msg_docs/EstimatorStates.md","filePath":"uk/msg_docs/EstimatorStates.md"}'),n={name:"uk/msg_docs/EstimatorStates.md"};function l(p,s,r,h,o,k){return e(),a("div",null,s[0]||(s[0]=[i(`<h1 id="estimatorstates-повідомлення-uorb" tabindex="-1">EstimatorStates (повідомлення UORB) <a class="header-anchor" href="#estimatorstates-повідомлення-uorb" aria-label="Permalink to &quot;EstimatorStates (повідомлення UORB)&quot;">​</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/EstimatorStates.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp		# time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp_sample         # the timestamp of the raw </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] states		# Internal filter states</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 n_states		# Number of states effectively used</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] covariances	# Diagonal Elements of Covariance Matrix</span></span></code></pre></div>`,3)]))}const d=t(n,[["render",l]]);export{c as __pageData,d as default};
