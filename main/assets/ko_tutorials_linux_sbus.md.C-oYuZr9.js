import{_ as a,a as i}from"./chunks/driver_sbus_signal_inverter_breadboard.DGOJdj4c.js";import{_ as t,c as s,a8 as r,o}from"./chunks/framework.BDnHobkS.js";const b=JSON.parse('{"title":"Connecting an RC Receiver to a PX4 Linux-based Autopilot","description":"","frontmatter":{},"headers":[],"relativePath":"ko/tutorials/linux_sbus.md","filePath":"ko/tutorials/linux_sbus.md"}'),n={name:"ko/tutorials/linux_sbus.md"};function l(c,e,p,u,d,h){return o(),s("div",null,e[0]||(e[0]=[r('<h1 id="connecting-an-rc-receiver-to-a-px4-linux-based-autopilot" tabindex="-1">Connecting an RC Receiver to a PX4 Linux-based Autopilot <a class="header-anchor" href="#connecting-an-rc-receiver-to-a-px4-linux-based-autopilot" aria-label="Permalink to &quot;Connecting an RC Receiver to a PX4 Linux-based Autopilot&quot;">​</a></h1><p>This topic shows how to setup a PX4 Linux-based autopilot to connect and use a <a href="./../getting_started/rc_transmitter_receiver.html">supported RC receiver</a> on any serial port.</p><p>S.Bus 이외의 RC 유형의 경우 수신기는 직렬 포트에 직접 연결하거나 USB-TTY 직렬 케이블(예: PL2302 USB-직렬 TTL 변환기)을 통하여 USB에 연결할 수 있습니다.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>For an S.Bus receiver (or encoder - e.g. from Futaba, RadioLink, etc.) you will usually need to connect the receiver and device via a <a href="#signal_inverter_circuit">signal inverter circuit</a>, but otherwise the setup is the same.</p></div><p>Then <a href="#start_driver">Start the PX4 RC Driver</a> on the device, as shown below.</p><p><a id="start_driver"></a></p><h2 id="드라이버-시작" tabindex="-1">드라이버 시작 <a class="header-anchor" href="#드라이버-시작" aria-label="Permalink to &quot;드라이버 시작&quot;">​</a></h2><p>To start the RC driver on a particular UART (e.g. in this case <code>/dev/ttyS2</code>):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rc_input</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/ttyS2</span></span></code></pre></div><p>For other driver usage information see: <a href="./../modules/modules_driver.html#rc-input">rc_input</a>.</p><p><a id="signal_inverter_circuit"></a></p><h2 id="신호-반전-회로-s-bus-전용" tabindex="-1">신호 반전 회로(S.Bus 전용) <a class="header-anchor" href="#신호-반전-회로-s-bus-전용" aria-label="Permalink to &quot;신호 반전 회로(S.Bus 전용)&quot;">​</a></h2><p>S.Bus is an <em>inverted</em> UART communication signal.</p><p>일부 직렬 포트/비행 컨트롤러는 반전된 UART 신호를 읽을 수 있지만, 대부분은 신호 반전을 복원하기 위하여 수신기와 직렬 포트 사이에 신호 인버터 회로가 필요합니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This circuit is also required to read S.Bus remote control signals through the serial port or USB-to-TTY serial converter.</p></div><p>이 섹션에서는 적절한 회로를 만드는 방법을 설명합니다.</p><h3 id="필수-부품" tabindex="-1">필수 부품 <a class="header-anchor" href="#필수-부품" aria-label="Permalink to &quot;필수 부품&quot;">​</a></h3><ul><li>1x NPN 트랜지스터 (예: NPN S9014 TO92)</li><li>1x 10K 저항</li><li>1x 1K 저항</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Any type/model of transistor can be used because the current drain is very low.</p></div><h3 id="회로-구성도-연결" tabindex="-1">회로 구성도/연결 <a class="header-anchor" href="#회로-구성도-연결" aria-label="Permalink to &quot;회로 구성도/연결&quot;">​</a></h3><p>아래에 설명(그리고 회로 구성도)하는 바와 같이 회로 소자를 연결하십시오:</p><ul><li>S.Bus 신호선 → 1K 저항 → NPN 트랜지스터 베이스</li><li>NPN 트랜지스터 방출 → GND</li><li>3.3VCC → 10K 저항 → NPN 트랜지스터 컬렉션 → USB-to-TTY rxd</li><li>5.0VCC → S.Bus VCC</li><li>GND → S.Bus GND</li></ul><p><img src="'+a+'" alt="Signal inverter circuit diagram"></p><p>아래 이미지에서는 빵판에서 연결된 모습을 보여줍니다.</p><p><img src="'+i+'" alt="Signal inverter breadboard"></p>',25)]))}const g=t(n,[["render",l]]);export{b as __pageData,g as default};
