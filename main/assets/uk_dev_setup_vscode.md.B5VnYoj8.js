import{_ as t,a as o,b as a,c as i,d as l,e as r,f as s,g as n,h as d,i as p}from"./chunks/vscode_intellisense.CXZ8jIR2.js";import{_ as u,c,a8 as h,o as m}from"./chunks/framework.BDnHobkS.js";const y=JSON.parse('{"title":"Visual Studio Code IDE (VSCode)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/dev_setup/vscode.md","filePath":"uk/dev_setup/vscode.md"}'),g={name:"uk/dev_setup/vscode.md"};function f(b,e,k,v,_,S){return m(),c("div",null,e[0]||(e[0]=[h('<h1 id="visual-studio-code-ide-vscode" tabindex="-1">Visual Studio Code IDE (VSCode) <a class="header-anchor" href="#visual-studio-code-ide-vscode" aria-label="Permalink to &quot;Visual Studio Code IDE (VSCode)&quot;">​</a></h1><p><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">Visual Studio Code</a> is a powerful cross-platform source code editor/IDE that can be used for PX4 development on Ubuntu, Windows, and macOS.</p><p>Є багато причин використання VSCode для розробки PX4:</p><ul><li>Getting setup <em>really</em> only takes a few minutes.</li><li>A rich extension ecosystem that enables a huge range of tools needed for PX4 development: C/C++ (with solid <em>cmake</em> integration), <em>Python</em>, <em>Jinja2</em>, ROS messages, and even DroneCAN dsdl.</li><li>Чудова інтеграція з Github.</li></ul><p>Цей розділ пояснює, як налаштувати IDE і почати розробку.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>There are other powerful IDEs, but they typically take more effort to integrate with PX4. With <em>VScode</em>, configuration is stored in the PX4/PX4-Autopilot tree (<a href="https://github.com/PX4/PX4-Autopilot/tree/main/.vscode" target="_blank" rel="noreferrer">PX4-Autopilot/.vscode</a>) so the setup process is as simple as adding the project folder.</p></div><h2 id="передумови" tabindex="-1">Передумови <a class="header-anchor" href="#передумови" aria-label="Permalink to &quot;Передумови&quot;">​</a></h2><p>You must already have installed the command line <a href="./../dev_setup/dev_env.html">PX4 developer environment</a> for your platform and downloaded the <em>Firmware</em> source code repo.</p><h2 id="installation-setup" tabindex="-1">Installation &amp; Setup <a class="header-anchor" href="#installation-setup" aria-label="Permalink to &quot;Installation &amp; Setup&quot;">​</a></h2><ol><li><p><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">Download and install VSCode</a> (you will be offered the correct version for your OS).</p></li><li><p>Відкрийте VSCode і додайте вихідний код PX4:</p><ul><li>Select <em>Open folder ...</em> option on the welcome page (or using the menu: <strong>File &gt; Open Folder</strong>): <img src="'+t+'" alt="Open Folder"></li><li>З&#39;явиться діалогове вікно вибору файлу. Select the <strong>PX4-Autopilot</strong> directory and then press <strong>OK</strong>.</li></ul><p>The project files and configuration will then load into <em>VSCode</em>.</p></li><li><p>Press <strong>Install All</strong> on the <em>This workspace has extension recommendations</em> prompt (this will appear on the bottom right of the IDE). <img src="'+o+'" alt="Install extensions"></p><p>VSCode will open the <em>Extensions</em> panel on the left hand side so you can watch the progress of installation.</p><p><img src="'+a+'" alt="PX4 loaded into VSCode Explorer"></p></li><li><p>Багато повідомлень/підказок може з&#39;явитися в правому нижньому куті</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If the prompts disappear, click the little &quot;alarm&quot; icon on the right of the bottom blue bar.</p></div></li></ol><p>:::</p><ul><li>If prompted to install a new version of <em>cmake</em>: <ul><li>Say <strong>No</strong> (the right version is installed with the <a href="./../dev_setup/dev_env.html">PX4 developer environment</a>).</li></ul></li><li>If prompted to sign into <em>github.com</em> and add your credentials: <ul><li>Це ваш розсуд! Це забезпечує глибоку інтеграцію між Github та IDE, що може спростити ваш робочий процес.</li></ul></li><li>Інші підказки необов&#39;язкові та можуть бути встановлені, якщо вважаються корисними. </li></ul><p><a id="building"></a></p><h2 id="збірка-px4" tabindex="-1">Збірка PX4 <a class="header-anchor" href="#збірка-px4" aria-label="Permalink to &quot;Збірка PX4&quot;">​</a></h2><p>Для збірки:</p><ol><li><p>Оберіть свою ціль збірки (&quot;cmake build config&quot;):</p><ul><li><p>The current <em>cmake build target</em> is shown on the blue <em>config</em> bar at the bottom (if this is already your desired target, skip to next step). <img src="'+i+'" alt="Select Cmake build target"></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The cmake target you select affects the targets offered for when <a href="#debugging">building/debugging</a> (i.e. for hardware debugging you must select a hardware target like <code>px4_fmu-v6</code>).</p></div></li></ul></li></ol><p>:::</p><ul><li><p>Натисніть на ціль на панелі config, щоб показати інші параметри та вибрати ту, яка вам потрібна (це замінить обрану ціль).</p></li><li><p><em>Cmake</em> will then configure your project (see notification in bottom right). <img src="'+l+'" alt="Cmake config project"></p></li><li><p>Зачекайте, поки налаштування завершиться. When this is done the notification will disappear and you&#39;ll be shown the build location: <img src="'+r+'" alt="Cmake config project">.</p></li></ul><ol start="2"><li>You can then kick off a build from the config bar (select either <strong>Build</strong> or <strong>Debug</strong>). <img src="'+s+'" alt="Run debug or build"></li></ol><p>After building at least once you can now use [code completion](#code completion) and other <em>VSCode</em> features.</p><h2 id="відлагодження" tabindex="-1">Відлагодження <a class="header-anchor" href="#відлагодження" aria-label="Permalink to &quot;Відлагодження&quot;">​</a></h2><p><a id="debugging_sitl"></a></p><h3 id="налагодження-sitl" tabindex="-1">Налагодження SITL <a class="header-anchor" href="#налагодження-sitl" aria-label="Permalink to &quot;Налагодження SITL&quot;">​</a></h3><p>Для налагодження PX4 в SITL:</p><ol><li><p>Select the debug icon on the sidebar (marked in red) to display the debug panel. <img src="'+n+'" alt="Run debug"></p></li><li><p>Then choose your debug target (e.g. <em>Debug SITL (Gazebo Iris)</em>) from the top bar debug dropdown (purple box).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The debug targets that are offered (purple box) match your build target (yellow box on the bottom bar). Наприклад, для налагодження цілей збірки SITL, ваша ціль повинна містити SITL.</p></div></li></ol><p>:::</p><ol start="3"><li>Почніть налагодження, натиснувши стрілку &quot;play&quot; налагодження (поруч із ціллю налагодження у верхній панелі - позначено рожевою рамкою).</li></ol><p>Під час налагодження ви можете встановити точки зупинки, переходити до коду, на відміну від нормального процесу розробки.</p><h3 id="апаратне-налагодження" tabindex="-1">Апаратне налагодження <a class="header-anchor" href="#апаратне-налагодження" aria-label="Permalink to &quot;Апаратне налагодження&quot;">​</a></h3><p>The instructions in <a href="./../debug/swd_debug.html">SWD Debug Port</a> explain how to connect to the SWD interface on common flight controllers (for example, using the Dronecode or Blackmagic probes).</p><p>After connecting to the SWD interface, hardware debugging in VSCode is then the same as for <a href="#debugging_sitl">SITL Debugging</a> except that you select a debug target appropriate for your debugger type (and firmware) - e.g. <code>jlink (px4_fmu-v5)</code>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To see the <code>jlink</code> option you must have selected a <a href="#building-px4">cmake target for building firmware</a>.</p></div><p><img src="'+d+'" alt="Image showing hardware targets with options for the different probes"></p><p><a id="code completion"></a></p><h2 id="автодоповнення-коду" tabindex="-1">Автодоповнення коду <a class="header-anchor" href="#автодоповнення-коду" aria-label="Permalink to &quot;Автодоповнення коду&quot;">​</a></h2><p>In order for the code completion to work (and other IntelliSense magic) you need an active configuration and to have <a href="#building">built the code</a>.</p><p>Після того, як це зроблено, вам не потрібно нічого робити; інструментарій автоматично запропонує вам символи мови поки ви друкуєте.</p><p><img src="'+p+'" alt="IntelliSense"></p><h2 id="усунення-проблем" tabindex="-1">Усунення проблем <a class="header-anchor" href="#усунення-проблем" aria-label="Permalink to &quot;Усунення проблем&quot;">​</a></h2><p>Цей розділ включає вказівки для помилок з налаштування та збірки.</p><h3 id="ubuntu-18-04-visual-studio-code-не-може-спостерігати-за-змінами-в-коді-у-великому-робочому-середовищі" tabindex="-1">Ubuntu 18.04: &quot;Visual Studio Code не може спостерігати за змінами в коді у великому робочому середовищі&quot; <a class="header-anchor" href="#ubuntu-18-04-visual-studio-code-не-може-спостерігати-за-змінами-в-коді-у-великому-робочому-середовищі" aria-label="Permalink to &quot;Ubuntu 18.04: &quot;Visual Studio Code не може спостерігати за змінами в коді у великому робочому середовищі&quot;&quot;">​</a></h3><p>Ця помилка з&#39;являється при старті. On some systems, there is an upper-limit of 8192 file handles imposed on applications, which means that VSCode might not be able to detect file modifications in <code>/PX4-Autopilot</code>.</p><p>Ви можете збільшити цей ліміт, щоб уникнути помилки, коштом споживання пам&#39;яті. Follow the <a href="https://code.visualstudio.com/docs/setup/linux#_visual-studio-code-is-unable-to-watch-for-file-changes-in-this-large-workspace-error-enospc" target="_blank" rel="noreferrer">instructions here</a>. Значення 65536 має бути більш ніж достатнім.</p>',43)]))}const I=u(g,[["render",f]]);export{y as __pageData,I as default};
