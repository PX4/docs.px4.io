import{_ as t,a,b as o,c as i,d as r,e as n,f as s,g as l,h,i as p,j as d}from"./chunks/esp8266_flashing_ftdi.C_IpcG2S.js";import{_ as c,c as u,a8 as m,o as f}from"./chunks/framework.BDnHobkS.js";const x=JSON.parse('{"title":"ESP8266 WiFi 模块","description":"","frontmatter":{},"headers":[],"relativePath":"zh/telemetry/esp8266_wifi_module.md","filePath":"zh/telemetry/esp8266_wifi_module.md"}'),g={name:"zh/telemetry/esp8266_wifi_module.md"};function w(b,e,k,P,y,_){return f(),u("div",null,e[0]||(e[0]=[m('<h1 id="esp8266-wifi-模块" tabindex="-1">ESP8266 WiFi 模块 <a class="header-anchor" href="#esp8266-wifi-模块" aria-label="Permalink to &quot;ESP8266 WiFi 模块&quot;">​</a></h1><p>The ESP8266 and its clones are low-cost and readily available Wi-Fi modules with full TCP/IP stack and microcontroller capability. They can be used with any Pixhawk series controller.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>ESP8266 is the <em>defacto</em> default WiFi module for use with <a href="./../flight_controller/pixracer.html">Pixracer</a> (and is usually bundled with it).</p></div><h2 id="购买渠道" tabindex="-1">购买渠道 <a class="header-anchor" href="#购买渠道" aria-label="Permalink to &quot;购买渠道&quot;">​</a></h2><p>The ESP8266 module is readily available from a number of suppliers. A few vendors are listed below.</p><p>Most modules support 3.3 V input (only), while some flight controllers (e.g. Pixhawk 4) output at 5V (you will need to check compatibility and step down the voltage if needed).</p><p>Modules that accept 3.3V supply:</p><ul><li><a href="https://www.sparkfun.com/products/13678" target="_blank" rel="noreferrer">WRL-17146</a> (Sparkfun)</li><li><a href="https://us.gearbest.com/boards-shields/pp_009604906563.html" target="_blank" rel="noreferrer">AI Cloud</a> - discontinued (GearBeast)</li></ul><p>Modules that accept 5.0V supply:</p><ul><li><p><a href="https://www.banggood.com/Wireless-Wifi-to-Uart-Telemetry-Module-With-Antenna-for-Mini-APM-Flight-Controller-p-1065339.html" target="_blank" rel="noreferrer">AI Thinker</a> (Banggood)</p></li><li><p><a href="https://www.banggood.com/MAVLink-Wifi-Bridge-2_4G-Wireless-Wifi-Telemetry-Module-with-Antenna-for-Pixhawk-APM-Flight-Controller-p-1428590.html" target="_blank" rel="noreferrer">AlphaUAVLink</a> (Banggood)</p></li><li><p><a href="https://www.beyondrobotix.com/products/kahuna?utm_source=px4-esp8266-docs" target="_blank" rel="noreferrer">Kahuna</a> (Beyond Robotix)</p><p>A plug and play ESP8266 module.</p><p>The Kahuna comes with a cable to connect directly to the Pixhawk-standard <code>TELEM1</code> or <code>TELEM2</code> ports. It is pre-flashed with the latest firmware, and has a u.fl connector for an external antenna. At most you may need to set the baud rate parameter, which for <code>TELEM1</code> is <code>SER_TEL1_BAUD = 57600 (57600 8N1)</code>. The <a href="https://docs.google.com/document/d/1VyOsp9_q6dIAdYdWuDFcWoqqrNy_vbFMANubZA3Uz5g/edit?pli=1&amp;tab=t.0" target="_blank" rel="noreferrer">User Guide</a> include WiFi setup and other relevant information.</p><p><img src="'+t+'" alt="Kahuna ESP8266 WiFi Module"></p></li></ul><h2 id="px4_config" tabindex="-1">Pixhawk/PX4 Setup &amp; Configuration <a class="header-anchor" href="#px4_config" aria-label="Permalink to &quot;Pixhawk/PX4 Setup &amp; Configuration {#px4_config}&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You <em>may</em> first need to update the radio with PX4-compatible ESP8266 firmware (<a href="#esp8266-flashing-firmware-advanced">see below</a>). The manufacture instructions should explain if this is needed.</p></div><p>Connect your ESP8266 to your Pixhawk-series flight controller (e.g. Pixracer) on any free UART.</p><p>Connect the flight controller to your ground station via USB (as WiFi is not yet fully set up).</p><p>使用 <em>QGroundControl</em>:</p><ul><li><a href="./../config/firmware.html">Load recent PX4 firmware onto the flight controller</a>.</li><li><a href="./../peripherals/serial_configuration.html">Configure the serial port</a> used to connect the ESP8266. Remember to set the baud rate to 921600 in order to match the value set for the ESP8266.</li><li><a href="./../peripherals/mavlink_peripherals.html">Configure MAVLink</a> on the corresponding serial port in order to receive telemetry and transmit commands over the ESP8266.</li></ul><p>Once you have configured the flight controller serial port used for connecting to the radio, you can remove the physical USB connection between the ground station and the vehicle.</p><h2 id="connect-via-esp8266-to-qgc" tabindex="-1">Connect via ESP8266 to QGC <a class="header-anchor" href="#connect-via-esp8266-to-qgc" aria-label="Permalink to &quot;Connect via ESP8266 to QGC&quot;">​</a></h2><p>The module exposes a WiFi hotspot that your ground station computer can use to connect to the vehicle.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The settings for the ESP8266 hotspot should be provided with the board (e.g. typically printed on the reverse side of the board or on the packaging).</p><p>A common factory network setting is:</p><ul><li><strong>SSID:</strong> PixRacer</li><li><strong>Password:</strong> pixracer</li><li><strong>WiFi Channel:</strong> 11</li><li><strong>UART speed:</strong> 921600</li></ul><p>Other modules may use settings like this:</p><ul><li><strong>SSID:</strong> IFFRC_xxxxxxxx</li><li><strong>Password:</strong> 12345678</li><li><strong>IP:</strong> 192.168.4.1</li><li><strong>Port:</strong> 6789 (TCP)</li></ul><p>Examples of boards from AlphaUILink and DOITING are shown below:</p><p><img src="'+a+'" width="250px" alt="AlphaUAVLink - Back"> <img src="'+o+'" width="250px" alt="AlphaUAVLink - Front"> <img src="'+i+'" width="250px" alt="DOITING EPS 12F - Back"> <img src="'+r+'" width="250px" alt="DOITING EPS 12F - Front"></p></div><p>On your wifi-enabled <em>QGroundControl</em> ground station computer/tablet, find and connect to the open wireless network for your ESP8266. On a Windows computer the connection settings for a network with name <strong>Pixracer</strong> and default password <strong>pixracer</strong> point will look like this:</p><p><img src="'+n+'" alt="Windows Network Setup: Connection"><img src="'+s+'" alt="Windows Network Setup: Security"></p><p><em>QGroundControl</em> will automatically connect to the vehicle when the ground station computer is attached to a WiFi access point named &quot;Pixracer&quot;.</p><p>If you&#39;re using a module with any other WiFi name you will need to manually set up the QGroundControl WiFi connection, as shown in the following section.</p><h2 id="configure-qgc-with-non-standard-wifi-connections" tabindex="-1">Configure QGC with non-standard WiFi connections <a class="header-anchor" href="#configure-qgc-with-non-standard-wifi-connections" aria-label="Permalink to &quot;Configure QGC with non-standard WiFi connections&quot;">​</a></h2><p><em>QGroundControl</em> will automatically connect to the vehicle when the ground station computer is attached to the &quot;Pixracer&quot; WiFi access point. For any other access point name you will need to manually create a custom comm link:</p><ol><li>Go to <a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/settings_view/settings_view.html" target="_blank" rel="noreferrer">Application Settings &gt; Comm Links</a></li><li>Add new connection with appropriate settings.</li><li>Select the new connection, and click <strong>Connect</strong>.</li><li>The vehicle should now connect</li></ol><h2 id="verify" tabindex="-1">Verify <a class="header-anchor" href="#verify" aria-label="Permalink to &quot;Verify&quot;">​</a></h2><p>You should now see HUD movement on your QGC computer via wireless link and be able to view the summary panel for the ESP8266 WiFi Bridge (as shown below).</p><p><img src="'+l+'" alt="QGC Summary showing Wifi Bridge"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you have any problem connecting, see <a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/troubleshooting/qgc_usage.html" target="_blank" rel="noreferrer">QGC Usage Problems</a>.</p></div><h2 id="esp8266-flashing-firmware-advanced" tabindex="-1">ESP8266 Flashing/Firmware (Advanced) <a class="header-anchor" href="#esp8266-flashing-firmware-advanced" aria-label="Permalink to &quot;ESP8266 Flashing/Firmware (Advanced)&quot;">​</a></h2><p>ESP8266 modules from different manufacturers may not have appropriate ESP8266 firmware pre-installed. The instructions below explain how to update radios with the correct version.</p><h3 id="pre-built-binaries" tabindex="-1">Pre Built Binaries <a class="header-anchor" href="#pre-built-binaries" aria-label="Permalink to &quot;Pre Built Binaries&quot;">​</a></h3><p><a href="http://www.grubba.com/mavesp8266/firmware-1.2.2.bin" target="_blank" rel="noreferrer">MavLink ESP8266 Firmware V 1.2.2</a></p><h3 id="build-from-sources" tabindex="-1">Build From Sources <a class="header-anchor" href="#build-from-sources" aria-label="Permalink to &quot;Build From Sources&quot;">​</a></h3><p>The <a href="https://github.com/dogmaphobic/mavesp8266" target="_blank" rel="noreferrer">firmware repository</a> contains instructions and all the tools needed for building and flashing the ESP8266 firmware.</p><h3 id="updating-the-firmware-ota" tabindex="-1">Updating the Firmware OTA <a class="header-anchor" href="#updating-the-firmware-ota" aria-label="Permalink to &quot;Updating the Firmware OTA&quot;">​</a></h3><p>If you have firmware 1.0.4 or greater installed, you can do the update using the ESP&#39;s <em>Over The Air Update</em> feature. Just connect to its AP WiFi link and browse to: <code>http://192.168.4.1/update</code>. You can then select the firmware file you downloaded above and upload it to the WiFi Module.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This is the easiest way to update firmware!</p></div><h3 id="flashing-the-esp8266-firmware" tabindex="-1">Flashing the ESP8266 Firmware <a class="header-anchor" href="#flashing-the-esp8266-firmware" aria-label="Permalink to &quot;Flashing the ESP8266 Firmware&quot;">​</a></h3><p>Before flashing, make sure you boot the ESP8266 in <em>Flash Mode</em> as described below. If you cloned the <a href="https://github.com/dogmaphobic/mavesp8266" target="_blank" rel="noreferrer">MavESP8266</a> repository, you can build and flash the firmware using the provided <a href="http://platformio.org" target="_blank" rel="noreferrer">PlatformIO</a> tools and environment. If you downloaded the pre-built firmware above, download the <a href="https://github.com/espressif/esptool" target="_blank" rel="noreferrer">esptool</a> utility and use the command line below:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">esptool.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --baud</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 921600</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/your_serial_port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write_flash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0x00000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firmware_xxxxx.bin</span></span></code></pre></div><p>Where:</p><ul><li><strong>firmware_xxxxx.bin</strong> is the firmware you downloaded above</li><li><strong>your_serial_port</strong> is the name of the serial port where the ESP8266 is connected to (<code>/dev/cu.usbmodem</code> for example)</li></ul><h3 id="下载固件接线" tabindex="-1">下载固件接线 <a class="header-anchor" href="#下载固件接线" aria-label="Permalink to &quot;下载固件接线&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Most ESP8266 modules support 3.3 volts (only), while some flight controllers (e.g. Pixhawk 4) output at 5V. Check compatibility and step down the voltage if needed.</p></div><p>There are various methods for setting the ESP8266 into <em>Flash Mode</em> but not all USB/UART adapters provide all the necessary pins for automatic mode switching. In order to boot the ESP8266 in <em>Flash Mode</em>, the GPIO-0 pin must be set low (GND) and the CH_PD pin must be set high (VCC). This is what my own setup looks like:</p><p><img src="'+h+'" alt="esp8266 flashing rig"></p><p>I built a cable where RX, TX, VCC, and GND are properly wired directly from the FTDI adapter to the ESP8266. From the ESP8266, I left two wires connected to GPIO-0 and CH_PD free so I can boot it either normally or in flash mode by connecting them to GND and VCC respectively.</p><h4 id="esp8266-esp-01-pinout" tabindex="-1">ESP8266 (ESP-01) Pinout <a class="header-anchor" href="#esp8266-esp-01-pinout" aria-label="Permalink to &quot;ESP8266 (ESP-01) Pinout&quot;">​</a></h4><p><img src="'+p+'" alt="esp8266 wifi module pinout"></p><h4 id="flashing-diagram-using-an-ftdi-usb-uart-adapter" tabindex="-1">Flashing Diagram using an FTDI USB/UART Adapter <a class="header-anchor" href="#flashing-diagram-using-an-ftdi-usb-uart-adapter" aria-label="Permalink to &quot;Flashing Diagram using an FTDI USB/UART Adapter&quot;">​</a></h4><p><img src="'+d+'" alt="esp8266 flashing"></p>',54)]))}const S=c(g,[["render",w]]);export{x as __pageData,S as default};
