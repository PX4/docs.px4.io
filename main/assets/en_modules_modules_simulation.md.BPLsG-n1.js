import{_ as e,c as s,a8 as t,o as i}from"./chunks/framework.BDnHobkS.js";const h=JSON.parse('{"title":"Modules Reference: Simulation","description":"","frontmatter":{},"headers":[],"relativePath":"en/modules/modules_simulation.md","filePath":"en/modules/modules_simulation.md"}'),n={name:"en/modules/modules_simulation.md"};function o(r,a,l,u,p,m){return i(),s("div",null,a[0]||(a[0]=[t(`<h1 id="modules-reference-simulation" tabindex="-1">Modules Reference: Simulation <a class="header-anchor" href="#modules-reference-simulation" aria-label="Permalink to &quot;Modules Reference: Simulation&quot;">​</a></h1><h2 id="simulator-sih" tabindex="-1">simulator_sih <a class="header-anchor" href="#simulator-sih" aria-label="Permalink to &quot;simulator_sih&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/simulation/simulator_sih" target="_blank" rel="noreferrer">modules/simulation/simulator_sih</a></p><h3 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>This module provides a simulator for quadrotors and fixed-wings running fully inside the hardware autopilot.</p><p>This simulator subscribes to &quot;actuator_outputs&quot; which are the actuator pwm signals given by the control allocation module.</p><p>This simulator publishes the sensors signals corrupted with realistic noise in order to incorporate the state estimator in the loop.</p><h3 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h3><p>The simulator implements the equations of motion using matrix algebra. Quaternion representation is used for the attitude. Forward Euler is used for integration. Most of the variables are declared global in the .hpp file to avoid stack overflow.</p><p><a id="simulator_sih_usage"></a></p><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>simulator_sih &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div>`,12)]))}const c=e(n,[["render",o]]);export{h as __pageData,c as default};
