import{_ as e,c as i,a8 as a,o as t}from"./chunks/framework.BDnHobkS.js";const k=JSON.parse('{"title":"SensorAirflow (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/msg_docs/SensorAirflow.md","filePath":"zh/msg_docs/SensorAirflow.md"}'),n={name:"zh/msg_docs/SensorAirflow.md"};function r(o,s,l,h,p,d){return t(),i("div",null,s[0]||(s[0]=[a(`<h1 id="sensorairflow-uorb-message" tabindex="-1">SensorAirflow (UORB message) <a class="header-anchor" href="#sensorairflow-uorb-message" aria-label="Permalink to &quot;SensorAirflow (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/SensorAirflow.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp		# time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 device_id                # unique device ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the sensor that does not change between power cycles</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 speed			# the speed being reported by the wind </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> airflow sensor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 direction		# the direction being reported by the wind </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> airflow sensor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 status			# Status code from the sensor</span></span></code></pre></div>`,3)]))}const E=e(n,[["render",r]]);export{k as __pageData,E as default};
