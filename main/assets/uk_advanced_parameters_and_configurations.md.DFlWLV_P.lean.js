import{_ as a,c as i,a8 as e,o as t}from"./chunks/framework.BDnHobkS.js";const c=JSON.parse('{"title":"Параметри та налаштування","description":"","frontmatter":{},"headers":[],"relativePath":"uk/advanced/parameters_and_configurations.md","filePath":"uk/advanced/parameters_and_configurations.md"}'),n={name:"uk/advanced/parameters_and_configurations.md"};function p(l,s,h,r,k,d){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="параметри-та-налаштування" tabindex="-1">Параметри та налаштування <a class="header-anchor" href="#параметри-та-налаштування" aria-label="Permalink to &quot;Параметри та налаштування&quot;">​</a></h1><p>PX4 використовує <em>param subsystem</em> (таблицю значень <code>float</code> і <code>int32_t</code>) і текстові файли (для скриптів запуску) для створення конфігурації.</p><p>This section discusses the <em>param</em> subsystem in detail. У ньому описано, як відображати, зберігати і завантажувати параметри, а також як їх описувати і робити доступними для наземних станцій.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="./../concept/system_startup.html">Запуск системи</a> та роботу скриптів запуску <a href="./../dev_airframes/adding_a_new_frame.html">конфігурації фреймів</a> описано на інших сторінках.</p></div><h2 id="використання-командного-рядка" tabindex="-1">Використання командного рядка <a class="header-anchor" href="#використання-командного-рядка" aria-label="Permalink to &quot;Використання командного рядка&quot;">​</a></h2><p><a href="./../debug/system_console.html">Системна консоль PX4</a> пропонує інструмент <a href="./../modules/modules_command.html#param">param</a>, за допомогою якого можна встановлювати параметри, зчитувати їх значення, зберігати їх, а також експортувати й зберігати у файлах та відновлювати з них.</p><h3 id="отримання-та-встановлення-параметрів" tabindex="-1">Отримання та встановлення параметрів <a class="header-anchor" href="#отримання-та-встановлення-параметрів" aria-label="Permalink to &quot;Отримання та встановлення параметрів&quot;">​</a></h3><p>Команда <code>param show</code> виводить усі параметри системи:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span></span></code></pre></div><p>Для більшої вибірковості можна використовувати часткове ім&#39;я параметра з символом підстановки &quot;*&quot;:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nsh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RC_MAP_A</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Symbols:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> used,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> saved,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unsaved</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   RC_MAP_AUX1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [359,498] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   RC_MAP_AUX2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [360,499] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   RC_MAP_AUX3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [361,500] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   RC_MAP_ACRO_SW</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [375,514] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 723</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parameters</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> total,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 532</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> used.</span></span></code></pre></div><p>Ви можете використовувати прапорець <code>-c</code>, щоб показати всі параметри, які було змінено (порівняно з їх значеннями за замовчуванням):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span></span></code></pre></div><p>Ви можете використати <code>param show-for-airframe</code>, щоб показати всі параметри, які було змінено від значень за замовчуванням лише для поточного файлу літального апарату (та значень за замовчуванням, які він імпортує).</p><h3 id="параметри-експорту-та-завантаження" tabindex="-1">Параметри експорту та завантаження <a class="header-anchor" href="#параметри-експорту-та-завантаження" aria-label="Permalink to &quot;Параметри експорту та завантаження&quot;">​</a></h3><p>Ви можете зберігати будь-які параметри, які були <em>змінені</em> (які відрізняються від параметрів за замовчуванням).</p><p>Стандартна команда <code>param save</code> збереже параметри у поточному файлі за замовчуванням:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> save</span></span></code></pre></div><p>Якщо вказати аргумент, вона збереже параметри у новому каталозі:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> save</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /fs/microsd/vtol_param_backup</span></span></code></pre></div><p>Існує дві різні команди для <em>завантаження</em> параметрів:</p><ul><li><code>param load</code> спочатку виконує повне скидання всіх параметрів до значень за замовчуванням, а потім перезаписує значення параметрів будь-якими значеннями, збереженими у файлі.</li><li><code>param import</code> просто перезаписує значення параметрів значеннями з файлу, а потім зберігає результат (тобто фактично викликає <code>param save</code>).</li></ul><p>Команда <code>load</code> ефективно скидає параметри до стану, у якому вони були збережені (ми говоримо &quot;ефективно&quot;, тому що будь-які параметри, збережені у файлі, буде оновлено, але інші параметри можуть мати інші значення за замовчуванням, визначені у прошивці, ніж під час створення файлу параметрів).</p><p>By contrast, <code>import</code> merges the parameters in the file with the current state of the vehicle. Наприклад, можна просто імпортувати файл параметрів, що містить дані калібрування, не перезаписуючи решту конфігурації системи.</p><p>Приклади для обох випадків показані нижче:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Reset the parameters to when file was saved</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> load</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /fs/microsd/vtol_param_backup</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Optionally save params (not done automatically with load)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> save</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Merge the saved parameters with current parameters</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /fs/microsd/vtol_param_backup</span></span></code></pre></div><h2 id="створення-визначення-параметрів" tabindex="-1">Створення/визначення параметрів <a class="header-anchor" href="#створення-визначення-параметрів" aria-label="Permalink to &quot;Створення/визначення параметрів&quot;">​</a></h2><p>Опис параметрів складається з двох частин:</p><ul><li><a href="#parameter-metadata">Метадані параметрів</a> визначають значення за замовчуванням для кожного параметра у прошивці разом з іншими метаданими для відображення (і редагування) параметрів на наземних станціях керування та у документації.</li><li><a href="#c-c-api">Код C/C++</a>, який надає доступ до отримання та/або зміни значень параметрів з модулів та драйверів PX4.</li></ul><p>Нижче описано кілька підходів до написання метаданих та коду. Where possible code should use newer <a href="#yaml-metadata">YAML metadata</a> and <a href="#c-api">C++ API</a> over the older C parameter/code definitions, as these are more flexible and robust.</p><p>Метадані параметрів <a href="#publishing-parameter-metadata-to-a-gcs">компілюються у прошивку</a>, і надаються наземним станціям за посередництвом служби <a href="https://mavlink.io/en/services/component_information.html" target="_blank" rel="noreferrer">MAVLink Component Information service</a>.</p><h3 id="назви-параметрів" tabindex="-1">Назви параметрів: <a class="header-anchor" href="#назви-параметрів" aria-label="Permalink to &quot;Назви параметрів:&quot;">​</a></h3><p>Назви параметрів не повинні перевищувати 16 ASCII символів.</p><p>By convention, every parameter in a group should share the same (meaningful) string prefix followed by an underscore, and <code>MC_</code> and <code>FW_</code> are used for parameters related specifically to Multicopter or Fixed-wing systems. Ця конвенція не є обов&#39;язковою.</p><p>Назва має збігатися як у коді, так і у метаданих <a href="#parameter-metadata">параметру</a>, щоб правильно асоціювати параметр з його метаданими (включно зі значенням за замовчуванням у прошивці).</p><h3 id="c-c-api" tabindex="-1">C / C++ API <a class="header-anchor" href="#c-c-api" aria-label="Permalink to &quot;C / C++ API&quot;">​</a></h3><p>Існують окремі C і C++ API, які можна використовувати для отримання доступу до значень параметрів з модулів і драйверів PX4.</p><p>Однією з важливих відмінностей між API є те, що версія на C++ має більш ефективний стандартизований механізм синхронізації зі змінами значень параметрів (наприклад, з GCS).</p><p>Синхронізація важлива, оскільки параметр може бути змінений на інше значення в будь-який момент. Your code should <em>always</em> use the current value from the parameter store. If getting the latest version is not possible, then a reboot will be required after the parameter is changed (set this requirement using the <code>@reboot_required</code> metadata).</p><p>Крім того, версія на C++ має кращу типізацію та менші витрати оперативної пам&#39;яті. Недоліком є те, що ім&#39;я параметра має бути відоме під час компіляції, тоді як C API може приймати динамічно створене ім&#39;я як рядок.</p><h4 id="c-api" tabindex="-1">C++ API <a class="header-anchor" href="#c-api" aria-label="Permalink to &quot;C++ API&quot;">​</a></h4><p>The C++ API provides macros to declare parameters as <em>class attributes</em>. You add some &quot;boilerplate&quot; code to regularly listen for changes in the <a href="./../middleware/uorb.html">uORB Topic</a> associated with <em>any</em> parameter update. Потім код фреймворку (невидимо) відстежує повідомлення uORB, які впливають на атрибути ваших параметрів, і підтримує їх синхронізацію. У решті коду ви можете просто використовувати визначені атрибути параметрів, і вони завжди будуть актуальними!</p><p>Насамперед включіть необхідні заголовки до заголовка класу вашого модуля або драйвера:</p><ul><li><p><strong>px4_platform_common/module_params.h</strong> для отримання макросу <code>DEFINE_PARAMETERS</code>:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;px4_platform_common/module_params.h&gt;</span></span></code></pre></div></li><li><p><strong>parameter_update.h</strong> для доступу до повідомлень uORB <code>parameter_update</code>:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;uORB/topics/parameter_update.h&gt;</span></span></code></pre></div></li><li><p><strong>Subscription.hpp</strong> для uORB C++ API підписки:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;uORB/Subscription.hpp&gt;</span></span></code></pre></div></li></ul><p>Derive your class from <code>ModuleParams</code>, and use <code>DEFINE_PARAMETERS</code> to specify a list of parameters and their associated parameter attributes. Назви параметрів мають збігатися з визначеннями метаданих параметрів.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : ..., </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ModuleParams</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * Check for parameter changes and update them if needed.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parameters_update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	DEFINE_PARAMETERS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		(ParamInt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::SYS_AUTOSTART</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_sys_autostart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   /**&lt; example parameter */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		(ParamFloat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ATT_BIAS_MAX</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_att_bias_max</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**&lt; another parameter */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// Subscriptions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	uORB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::SubscriptionInterval _parameter_update_sub{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORB_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parameter_update), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Оновіть файл cpp за допомогою шаблону, щоб перевірити наявність повідомлення uORB, пов&#39;язаного з оновленням параметрів.</p><p>Періодично викликайте <code>parameters_update();</code> у коді, щоб перевірити, чи відбулося оновлення:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parameters_update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (_parameter_update_sub.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		parameter_update_s param_update;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		_parameter_update_sub.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">param_update);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// If any parameter updated, call updateParams() to check if</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// this class attributes need updating (and do so).</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">		updateParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>У наведеному вище методі:</p><ul><li><code>_param_update_sub.updated()</code> повідомляє нам, чи є <em>будь-яке</em> оновлення в uORB-повідомленні <code>param_update</code> (але не вказує, який саме параметр змінено).</li><li>Якщо було оновлено &quot;деякий&quot; параметр, ми копіюємо оновлення у <code>parameter_update_s</code> (<code>param_update</code>), щоб очистити очікуване оновлення.</li><li>Then we call <code>ModuleParams::updateParams()</code>. This &quot;under the hood&quot; updates all parameter attributes listed in our <code>DEFINE_PARAMETERS</code> list.</li></ul><p>Атрибути параметрів (<code>_sys_autostart</code> і <code>_att_bias_max</code> у цьому випадку) можна використовувати для відображення параметрів, і вони будуть оновлюватися щоразу, коли значення параметра змінюватиметься.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Шаблон <a href="./../modules/module_template.html">Програми/Модуля</a> використовує новий стиль C++ API, але не включає метадані <a href="#parameter-metadata">параметрів</a>.</p></div><h4 id="c-api-1" tabindex="-1">C API <a class="header-anchor" href="#c-api-1" aria-label="Permalink to &quot;C API&quot;">​</a></h4><p>C API можна використовувати як у модулях, так і в драйверах.</p><p>Спочатку включіть параметр API:</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;parameters/param.h&gt;</span></span></code></pre></div><p>Then retrieve the parameter and assign it to a variable (here <code>my_param</code>), as shown below for <code>PARAM_NAME</code>. The variable <code>my_param</code> can then be used in your module code.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> my_param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param_get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param_find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PARAM_NAME&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">my_param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Якщо у метаданих параметра було оголошено <code>PARAM_NAME</code>, то буде встановлене його значення за замовчуванням, і наведений вище виклик для пошуку параметра завжди буде успішним.</p></div><p><code>param_find()</code> is an &quot;expensive&quot; operation, which returns a handle that can be used by <code>param_get()</code>. If you&#39;re going to read the parameter multiple times, you may cache the handle and use it in <code>param_get()</code> when needed</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Get the handle to the parameter</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">param_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> my_param_handle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PARAM_INVALID;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_param_handle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> param_find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PARAM_NAME&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Query the value of the parameter when needed</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> my_param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param_get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_param_handle, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_param);</span></span></code></pre></div><h3 id="метадані-параметра" tabindex="-1">Метадані параметра <a class="header-anchor" href="#метадані-параметра" aria-label="Permalink to &quot;Метадані параметра&quot;">​</a></h3><p>PX4 використовує розгалужену систему метаданих параметрів для управління дружнім до користувача представленням параметрів, а також для встановлення значень за замовчуванням для кожного параметра у прошивці.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Правильні метадані мають вирішальне значення для якісного користувацького досвіду на наземній станції.</p></div><p>Parameter metadata can be stored anywhere in the source tree as either <strong>.c</strong> or <strong>.yaml</strong> parameter definitions (the YAML definition is newer, and more flexible). Зазвичай він зберігається разом з відповідним модулем.</p><p>Система збірки витягує метадані (за допомогою <code>make parameters_metadata</code>) для створення <a href="./../advanced_config/parameter_reference.html">довідника параметрів</a> та інформації про параметри, <a href="#publishing-parameter-metadata-to-a-gcs">що використовуються наземними станціями</a>.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Після додавання файлу параметрів <em>new</em> вам слід викликати <code>make clean</code> перед збіркою, щоб згенерувати нові параметри (файли параметрів додаються як частина кроку конфігурації <em>cmake</em>, який відбувається для чистих збірок і якщо файл cmake змінено).</p></div><h4 id="метадані-yaml" tabindex="-1">Метадані YAML <a class="header-anchor" href="#метадані-yaml" aria-label="Permalink to &quot;Метадані YAML&quot;">​</a></h4><div class="info custom-block"><p class="custom-block-title">INFO</p><p>На момент написання статті визначення параметрів YAML не можна використовувати у <em>бібліотеках</em>.</p></div><p>YAML meta data is intended as a full replacement for the <strong>.c</strong> definitions. Він підтримує ті самі метадані, а також нові можливості, такі як множинні визначення.</p><ul><li><p>Схема метаданих параметрів YAML знаходиться тут: <a href="https://github.com/PX4/PX4-Autopilot/blob/main/validation/module_schema.yaml" target="_blank" rel="noreferrer">validation/module_schema.yaml</a>.</p></li><li><p>Приклад використання визначень YAML можна знайти у визначенні параметрів MAVLink: <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/module.yaml" target="_blank" rel="noreferrer">/src/modules/mavlink/module.yaml</a>.</p></li><li><p>YAML-файл реєструється у системі збірки cmake шляхом додавання</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MODULE_CONFIG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	module.yaml</span></span></code></pre></div><p>до секції <code>px4_add_module</code> файлу <code>CMakeLists.txt</code> цього модуля.</p></li></ul><h4 id="мета-дані-yaml-з-багатьма-екземплярами-шаблонами" tabindex="-1">Мета-дані YAML з багатьма екземплярами (шаблонами) <a class="header-anchor" href="#мета-дані-yaml-з-багатьма-екземплярами-шаблонами" aria-label="Permalink to &quot;Мета-дані YAML з багатьма екземплярами (шаблонами)&quot;">​</a></h4><p>Шаблонні визначення параметрів підтримуються у <a href="https://github.com/PX4/PX4-Autopilot/blob/main/validation/module_schema.yaml" target="_blank" rel="noreferrer">YAML визначеннях параметрів</a> (шаблонний код параметрів не підтримується).</p><p>The YAML allows you to define instance numbers in parameter names, descriptions, etc. using <code>\${i}</code>. Наприклад, нижче буде згенеровано MY_PARAM_1_RATE, MY_PARAM_2_RATE і т.д.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">MY_PARAM_\${i}_RATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    short</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Maximum rate for instance \${i}</span></span></code></pre></div><p>Наступні визначення YAML містять початковий та кінцевий індекси.</p><ul><li><code>num_instances</code> (за замовчуванням 1): Кількість інстансів, які потрібно згенерувати (&gt;=1)</li><li><code>instance_start</code> (default 0): First instance number. If 0, <code>\${i}</code> expands to [0, N-1]\`.</li></ul><p>For a full example see the MAVLink parameter definitions: <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/module.yaml" target="_blank" rel="noreferrer">/src/modules/mavlink/module.yaml</a></p><h4 id="c-параметр-метаданих" tabindex="-1">c параметр метаданих <a class="header-anchor" href="#c-параметр-метаданих" aria-label="Permalink to &quot;c параметр метаданих&quot;">​</a></h4><p>Застарілий підхід для визначення метаданих параметрів знаходиться у файлі з розширенням <strong>.c</strong> (на момент написання цієї статті це підхід, який найчастіше використовується у дереві коду).</p><p>Розділи метаданих параметрів виглядають так, як показано в наступних прикладах:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Pitch P gain</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Pitch proportional gain, i.e. desired angular speed in rad/s for error 1 rad.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @unit 1/s</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @min 0.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @max 10</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @decimal 2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @increment 0.0005</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @reboot_required true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @group Multicopter Attitude Control</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PARAM_DEFINE_FLOAT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MC_PITCH_P, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Acceleration compensation based on GPS</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * velocity.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @group Attitude Q estimator</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @boolean</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PARAM_DEFINE_INT32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ATT_ACC_COMP, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Макрос <code>PARAM_DEFINE_*</code> в кінці визначає тип параметра (<code>PARAM_DEFINE_FLOAT</code> або <code>PARAM_DEFINE_INT32</code>), ім&#39;я параметра (яке має відповідати імені, що використовується у коді) та значення за замовчуванням у прошивці.</p><p>Рядки в блоці коментарів є необов&#39;язковими, і в основному використовуються для керування параметрами відображення та редагування на наземній станції. The purpose of each line is given below (for more detail see <a href="https://github.com/PX4/PX4-Autopilot/blob/main/validation/module_schema.yaml" target="_blank" rel="noreferrer">module_schema.yaml</a>).</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * &lt;title&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * &lt;longer description, can be multi-line&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @unit &lt;the unit, e.g. m for meters&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @min &lt;the minimum sane value. Can be overridden by the user&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @max &lt;the maximum sane value. Can be overridden by the user&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @decimal &lt;the minimum sane value. Can be overridden by the user&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @increment &lt;the &quot;ticks&quot; in which this value will increment in the UI&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @reboot_required true &lt;add this if changing the param requires a system restart.&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @boolean &lt;add this for integer parameters that represent a boolean value&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @group &lt;a title for parameters that form a group&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span></code></pre></div><h2 id="публікація-метаданих-параметрів-у-gcs" tabindex="-1">Публікація метаданих параметрів у GCS <a class="header-anchor" href="#публікація-метаданих-параметрів-у-gcs" aria-label="Permalink to &quot;Публікація метаданих параметрів у GCS&quot;">​</a></h2><p>The parameter metadata JSON file is compiled into firmware (or hosted on the Internet), and made available to ground stations via the <a href="https://mavlink.io/en/services/component_information.html" target="_blank" rel="noreferrer">MAVLink Component Metadata service</a>. Для отримання додаткової інформації див. <a href="../advanced/px4_metadata.md"> Метадані PX4 (трансляція і публікація)</a>.</p><p>This process is the same as for <a href="./../concept/events_interface.html#publishing-event-metadata-to-a-gcs">events metadata</a>. For more information see <a href="./../advanced/px4_metadata.html">PX4 Metadata (Translation &amp; Publication)</a></p><h2 id="подальша-інформація" tabindex="-1">Подальша інформація <a class="header-anchor" href="#подальша-інформація" aria-label="Permalink to &quot;Подальша інформація&quot;">​</a></h2><ul><li><a href="./../advanced_config/parameters.html">Finding/Updating Parameters</a></li><li><a href="./../advanced_config/parameter_reference.html">Довідник параметрів</a></li><li><a href="https://github.com/PX4/PX4-Autopilot/blob/main/platforms/common/include/px4_platform_common/param.h#L129" target="_blank" rel="noreferrer">Реалізація параметрів</a> (information on <code>.get()</code>, <code>.commit()</code>, and other methods)</li></ul>`,93)]))}const g=a(n,[["render",p]]);export{c as __pageData,g as default};
