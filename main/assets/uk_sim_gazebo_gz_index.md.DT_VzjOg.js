import{_ as i,c as t,a8 as a,j as s,o}from"./chunks/framework.BDnHobkS.js";const k=JSON.parse('{"title":"Gazebo Simulation","description":"","frontmatter":{},"headers":[],"relativePath":"uk/sim_gazebo_gz/index.md","filePath":"uk/sim_gazebo_gz/index.md"}'),l={name:"uk/sim_gazebo_gz/index.md"};function n(d,e,h,r,p,c){return o(),t("div",null,e[0]||(e[0]=[a('<h1 id="gazebo-simulation" tabindex="-1">Gazebo Simulation <a class="header-anchor" href="#gazebo-simulation" aria-label="Permalink to &quot;Gazebo Simulation&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Gazebo was previously known as &quot;Gazebo Ignition&quot; (while <em>Gazebo Classic</em> was previously known as Gazebo). See the <a href="https://www.openrobotics.org/blog/2022/4/6/a-new-era-for-gazebo" target="_blank" rel="noreferrer">official blog post</a> for more information.</p></div><p><a href="https://gazebosim.org/home" target="_blank" rel="noreferrer">Gazebo</a> is an open source robotics simulator. It supersedes the older <a href="./../sim_gazebo_classic/">Gazebo Classic</a> simulator, and is the only supported version of Gazebo for Ubuntu 22.04 and onwards.</p><p><strong>Supported Vehicles:</strong> Quadrotor, Plane, VTOL, Rover</p>',4),s("lite-youtube",{videoid:"eRzdGD2vgkU",title:"PX4 SITL Ignition Gazebo Tunnel Environment"},null,-1),a('<div class="info custom-block"><p class="custom-block-title">INFO</p><p>See <a href="./../simulation/">Simulation</a> for general information about simulators, the simulation environment, and simulation configuration (e.g. supported vehicles).</p></div><h2 id="встановлення-ubuntu-linux" tabindex="-1">Встановлення (Ubuntu Linux) <a class="header-anchor" href="#встановлення-ubuntu-linux" aria-label="Permalink to &quot;Встановлення (Ubuntu Linux)&quot;">​</a></h2><p>Gazebo Harmonic is installed by default on Ubuntu 22.04 as part of the normal <a href="./../dev_setup/dev_env_linux_ubuntu.html#simulation-and-nuttx-pixhawk-targets">development environment setup</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The PX4 installation scripts are based on the instructions: <a href="https://gazebosim.org/docs/harmonic/install_ubuntu/" target="_blank" rel="noreferrer">Binary Installation on Ubuntu</a> (gazebosim.org).</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Gazebo Harmonic cannot be installed on Ubuntu 20.04 and earlier.</p><p>On Ubuntu 20.04 we recommend use <a href="./../sim_gazebo_classic/">Gazebo Classic</a>. If you really must use Gazebo then you should update to Ubuntu 22.04.</p><p>Until November 2024 it is possible to <a href="https://gazebosim.org/docs/garden/install_ubuntu/" target="_blank" rel="noreferrer">install Gazebo Garden</a> on Ubuntu 20.04. After that date Garden will reach end-of-life and should not be used.</p></div><h2 id="запуск-симуляціі" tabindex="-1">Запуск симуляції <a class="header-anchor" href="#запуск-симуляціі" aria-label="Permalink to &quot;Запуск симуляції&quot;">​</a></h2><p>Gazebo SITL simulation can be conveniently run using a <code>make</code> command as shown below:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/PX4-Autopilot</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500</span></span></code></pre></div><p>Це запускає як екземпляр PX4 SITL, так і клієнт Gazebo.</p><p>The supported vehicles and <code>make</code> commands are listed below. Note that all gazebo make targets have the prefix <code>gz_</code>.</p><table tabindex="0"><thead><tr><th>Транспортний засіб</th><th>Команда</th><th><code>PX4_SYS_AUTOSTART</code></th></tr></thead><tbody><tr><td><a href="./../sim_gazebo_gz/vehicles.html#x500-quadrotor">Quadrotor(x500)</a></td><td><code>make px4_sitl gz_x500</code></td><td>4001</td></tr><tr><td><a href="./../sim_gazebo_gz/vehicles.html#x500-quadrotor-with-depth-camera-front-facing">X500 Quadrotor with Depth Camera (Front-facing)</a></td><td><code>make px4_sitl gz_x500_depth</code></td><td>4002</td></tr><tr><td><a href="./../sim_gazebo_gz/vehicles.html#x500-quadrotor-with-visual-odometry">Quadrotor(x500) with Vision Odometry</a></td><td><code>make px4_sitl gz_x500_vision</code></td><td>4005</td></tr><tr><td><a href="./../sim_gazebo_gz/vehicles.html#x500-quadrotor-with-1d-lidar-down-facing">Quadrotor(x500) with 1D LIDAR (Down-facing)</a></td><td><code>make px4_sitl gz_x500_lidar_down</code></td><td>4016</td></tr><tr><td><a href="./../sim_gazebo_gz/vehicles.html#x500-quadrotor-with-2d-lidar">Quadrotor(x500) with 2D LIDAR</a></td><td><code>make px4_sitl gz_x500_lidar_2d</code></td><td>4013</td></tr><tr><td><a href="./../sim_gazebo_gz/vehicles.html#x500-quadrotor-with-1d-lidar-front-facing">Quadrotor(x500) with 1D LIDAR (Front-facing)</a></td><td><code>make px4_sitl gz_x500_lidar_front</code></td><td>4017</td></tr><tr><td><a href="./../sim_gazebo_gz/vehicles.html#standard-vtol">VTOL</a></td><td><code>make px4_sitl gz_standard_vtol</code></td><td>4004</td></tr><tr><td><a href="./../sim_gazebo_gz/vehicles.html#standard-plane">Plane</a></td><td><code>make px4_sitl gz_rc_cessna</code></td><td>4003</td></tr><tr><td><a href="./../sim_gazebo_gz/vehicles.html#advanced-plane">Advanced Plane</a></td><td><code>make px4_sitl gz_advanced_plane</code></td><td>4008</td></tr><tr><td><a href="./../sim_gazebo_gz/vehicles.html#differential-rover">Differential Rover</a></td><td><code>make px4_sitl gz_r1_rover</code></td><td>4009</td></tr><tr><td><a href="./../sim_gazebo_gz/vehicles.html#ackermann-rover">Ackermann Rover</a></td><td><code>make px4_sitl gz_rover_ackermann</code></td><td>4012</td></tr></tbody></table><p>All <a href="./../sim_gazebo_gz/vehicles.html">vehicle models</a> (and <a href="#specify-world">worlds</a>) are included as a submodule from the <a href="./../sim_gazebo_gz/gazebo_models.html">Gazebo Models Repository</a> repository.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The Advanced Lift Drag Plugin that is required to run the Advanced Plane is not yet part of the Gazebo distribution, so the Advanced Plane will not yet fly: <a href="https://github.com/PX4/PX4-Autopilot/issues/22337" target="_blank" rel="noreferrer">PX4-Autopilot#22337</a>.</p><p>As a workaround to enable Advanced Plane, you can compile the gz-sim library from <a href="https://github.com/gazebosim/gz-sim" target="_blank" rel="noreferrer">Gazebo source code</a>, go into the <code>build/lib</code> directory, copy out the advanced lift drag plugin <code>.so</code> file (depending on the exact Gazebo Version this is called something along the lines of <code>libgz-sim7-advanced-lift-drag-system.so</code>), and paste this into the <code>~/.gz/sim/plugins</code> folder.</p></div><p>Вищенаведені команди запускають єдиний засіб з повним користувацьким інтерфейсом. <em>QGroundControl</em> should be able to automatically connect to the simulated vehicle.</p><h3 id="автономнии-режим" tabindex="-1">Автономний режим <a class="header-anchor" href="#автономнии-режим" aria-label="Permalink to &quot;Автономний режим&quot;">​</a></h3><p>Another way that Gazebo SITL can be connected is in <em>standalone mode</em>. У цьому режимі PX4 SITL і Gazebo запускаються окремо у своїх власних терміналах. За замовчуванням ці термінали знаходяться на одному й тому ж комп&#39;ютері, але ви можете також під&#39;єднати екземпляри SITL та Gazebo, які працюють на будь-яких двох пристроях в мережі (або навіть різних мережах, якщо ви використовуєте VPN для їх з&#39;єднання).</p><p>You start PX4 in standalone mode by prefixing the <code>make</code> command with <code>PX4_GZ_STANDALONE=1</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/PX4-Autopilot</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_GZ_STANDALONE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500</span></span></code></pre></div><p>PX4 SITL will then wait until it detects an instance of <em>gz-server</em>, and then connect to it.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If you have not yet started <em>gz-server</em> when you run the <code>make</code> command, you will see the following warning until gazebo has been started and an instance of <em>gz-server</em> is detected by PX4:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WARN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [gz </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bridge]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> call</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> timed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> out</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Gazebo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> has</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> been</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> detected</span></span></code></pre></div></div><p>The simplest way to start the simulation is to use the Python script <a href="https://github.com/PX4/PX4-gazebo-models/blob/main/simulation-gazebo" target="_blank" rel="noreferrer">simulation-gazebo</a>, which can be found in the <a href="./../sim_gazebo_gz/gazebo_models.html">Gazebo Models Repository</a> repository. This can be used to launch a <em>gz-server</em> instance with any supported world and vehicle.</p><p>The script can be used without installing any additional dependencies, and will fetch the supported PX4 models and worlds on first use (by default) and save them to <code>~/.simulation-gazebo</code>. При повторному запуску цей скрипт використає цю директорію для отримання моделей та світів. Therefore if you want to use your own model and run it in standalone mode, you will have to place its source code in <code>~/.simulation-gazebo</code>.</p><p>You can fetch the script locally using any method you like, such as <code>wget</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/PX4/PX4-gazebo-models/main/simulation-gazebo</span></span></code></pre></div><p>Скрипт може бути запущено так:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/script/</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> simulation-gazebo</span></span></code></pre></div><p>For more information and arguments, see <a href="./../sim_gazebo_gz/gazebo_models.html">Gazebo Models</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If <code>make px4_sitl gz_x500</code> gives the error <code>ninja: error: unknown target &#39;gz_x500&#39;</code> then run <code>make distclean</code> to start from a clean slate, and try running <code>make px4_sitl gz_x500</code> again.</p></div><h3 id="режим-без-інтерфеису" tabindex="-1">Режим без інтерфейсу <a class="header-anchor" href="#режим-без-інтерфеису" aria-label="Permalink to &quot;Режим без інтерфейсу&quot;">​</a></h3><p>Можливо ви забажаєте запустити Gazebo у &quot;режимі без інтерфейсу&quot; (без графічного інтерфейсу Gazebo) оскільки він використовує менше ресурсів та не покладається на те, що ваша система має відеокарту яка належним чином підтримує рендеринг OpenGL. Це пришвидшує завантаження та запуск, та для багатьох простих випадків це може бути все що вам потрібно.</p><p>The simulation can be run in headless mode by prefixing the command with the <code>HEADLESS=1</code> environment variable:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HEADLESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500</span></span></code></pre></div><h3 id="вказання-світу" tabindex="-1">Вказання світу <a class="header-anchor" href="#вказання-світу" aria-label="Permalink to &quot;Вказання світу&quot;">​</a></h3><p>Симуляція може бути запущена в певному світі додаванням бажаного світу до імені бажаного рухомого засобу. For example, to run the windy world with the <code>x500</code> vehicle you can specify:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500_windy</span></span></code></pre></div><p>You can also specify the world using the <code>PX4_GZ_WORLD</code> environment variable:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_GZ_WORLD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">windy</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500</span></span></code></pre></div><p>The <a href="./../sim_gazebo_gz/worlds.html">supported worlds</a> are listed below.</p><table tabindex="0"><thead><tr><th>World</th><th>Команда</th><th>Опис</th></tr></thead><tbody><tr><td><code>default</code></td><td><code>make px4_sitl *</code></td><td>Порожній світ (сіра площина)</td></tr><tr><td><code>aruco</code></td><td><code>make px4_sitl *_aruco</code></td><td>Empty world with aruco marker for testing precision landing</td></tr><tr><td><code>baylands</code></td><td><code>make px4_sitl *_baylands</code></td><td>Світ Baylands оточений водою</td></tr><tr><td><code>lawn</code></td><td><code>make px4_sitl *_lawn</code></td><td>Lawn world for testing rovers</td></tr><tr><td><code>rover</code></td><td><code>make px4_sitl *_rover</code></td><td>Rover world (optimised/preferred)</td></tr><tr><td><code>walls</code></td><td><code>make px4_sitl *_walls</code></td><td>Wall world for testing collision prevention</td></tr><tr><td><code>windy</code></td><td><code>make px4_sitl *_windy</code></td><td>Порожній світ з увімкненим вітром</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Note that if no world is specified, PX4 will use the <code>default</code> world. However you must not <em>explicitly</em> specify <code>_default</code> on the model as this will prevent PX4 from launching. In other words, use <code>make px4_sitl gz_x500</code> instead of <code>make px4_sitl gz_x500_default</code> for the default.</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Baylands world throws a warning in Gazebo Harmonic because there are so many meshes. This can be ignored:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Wrn] [SDFFeatures.cc:843] The geometry element of collision [collision] couldn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t be created</span></span></code></pre></div></div><h2 id="використання-налаштування" tabindex="-1">Використання/Налаштування <a class="header-anchor" href="#використання-налаштування" aria-label="Permalink to &quot;Використання/Налаштування&quot;">​</a></h2><p>Конвеєр запуску дозволяє дуже гнучке налаштування. Зокрема можливо:</p><ul><li>Почати нову симуляцію з довільним світом або під&#39;єднатись до вже запущеної симуляції.</li><li>Додати новий засіб до симуляції або поєднати новий екземпляр PX4 з вже наявним.</li></ul><p>Ці сценарії керуються встановленням відповідних змінних середовища.</p><h3 id="синтаксис" tabindex="-1">Синтаксис <a class="header-anchor" href="#синтаксис" aria-label="Permalink to &quot;Синтаксис&quot;">​</a></h3><p>Синтаксис запуску набирає форми:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ARGS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./build/px4_sitl_default/bin/px4</span></span></code></pre></div><p>where <code>ARGS</code> is a list of environment variables including:</p><ul><li><p><code>PX4_SYS_AUTOSTART</code> (<strong>Mandatory</strong>): Sets the <a href="./../dev_airframes/adding_a_new_frame.html">airframe autostart id</a> of the PX4 airframe to start.</p></li><li><p><code>PX4_GZ_MODEL_NAME</code>: Sets the name of an <em>existing</em> model in the gazebo simulation. Якщо вказано, скрипт запуску намагається прив&#39;язати новий екземпляр PX4 до ресурсу Gazebo, що відповідає точно такому імені.</p><ul><li>The setting is mutually exclusive with <code>PX4_SIM_MODEL</code>.</li></ul></li><li><p><code>PX4_SIM_MODEL</code>: Sets the name of a new Gazebo model to be spawned in the simulator. Якщо вказано, скрипт запуску шукає модель у шляху ресурсів Gazebo, що відповідає даній змінній, відтворює її й пов&#39;язує новий екземпляр PX4 з нею.</p><ul><li>The setting is mutually exclusive with <code>PX4_GZ_MODEL_NAME</code>.</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The environmental variable <code>PX4_GZ_MODEL</code> has been deprecated and its functionality merged into <code>PX4_SIM_MODEL</code>.</p></div></li></ul><p>:::</p><ul><li><p><code>PX4_GZ_MODEL_POSE</code>: Sets the spawning position and orientation of the model when <code>PX4_SIM_MODEL</code> is adopted. If provided, the startup script spawns the model at a pose following the syntax <code>&quot;x,y,z,roll,pitch,yaw&quot;</code>, where the positions are given in metres and the angles are in radians.</p><ul><li>If omitted, the zero pose <code>[0,0,0,0,0,0]</code> is used.</li><li>Якщо надано менше ніж 6 значень, то відсутні фіксуються на нулі.</li><li>This can only be used with <code>PX4_SIM_MODEL</code> (not <code>PX4_GZ_MODEL_NAME</code>).</li></ul></li><li><p><code>PX4_GZ_WORLD</code>: Sets the Gazebo world file for a new simulation. If it is not given, then <a href="https://github.com/PX4/PX4-gazebo-models/blob/main/worlds/default.sdf" target="_blank" rel="noreferrer">default</a> is used.</p><ul><li>Ця змінна ігнорується, якщо наявна модель вже запущена.</li><li>This value should be <a href="#adding-new-worlds-and-models">specified for the selected airframe</a> but may be overridden using this argument.</li></ul></li><li><p><code>PX4_SIMULATOR=GZ</code>: Sets the simulator, which for Gazebo must be <code>gz</code>.</p><ul><li>This value should be <a href="#adding-new-worlds-and-models">set for the selected airframe</a>, in which case it does not need to be set as an argument.</li></ul></li><li><p><code>PX4_GZ_STANDALONE</code>: Lets PX4 know that it should not launch an instance of Gazebo. Gazebo will need to be launched separately, as described in <a href="#standalone-mode">Standalone Mode</a>.</p></li><li><p><code>PX4_GZ_SIM_RENDER_ENGINE</code>: Sets the render engine to be used by gazebo.</p><p>Рушій рендерингу за замовчуванням (OGRE 2) погано підтримується на деяких платформах/середовищах. Specify <code>PX4_GZ_SIM_RENDER_ENGINE=ogre</code> to set the rendering engine to OGRE 1 if you have rendering issues when running PX4 on a virtual machine.</p></li></ul><p>The PX4 Gazebo worlds and and models databases <a href="https://github.com/PX4/PX4-gazebo-models" target="_blank" rel="noreferrer">can be found on Github here</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>gz_env.sh.in</code> is compiled and made available in <code>$PX4_DIR/build/px4_sitl_default/rootfs/gz_env.sh</code></p></div><h3 id="приклади" tabindex="-1">Приклади <a class="header-anchor" href="#приклади" aria-label="Permalink to &quot;Приклади&quot;">​</a></h3><p>Ось кілька прикладів різних сценаріїв, описаних вище.</p><ol><li><p><strong>Start simulator + default world + spawn vehicle at default pose</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_SYS_AUTOSTART</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">4001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_SIM_MODEL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gz_x500</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ./build/px4_sitl_default/bin/px4</span></span></code></pre></div></li><li><p><strong>Start simulator + default world + spawn vehicle at custom pose (y=2m)</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_SYS_AUTOSTART</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">4001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_GZ_MODEL_POSE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0,2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_SIM_MODEL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gz_x500</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ./build/px4_sitl_default/bin/px4</span></span></code></pre></div></li><li><p><strong>Start simulator + default world + link to existing vehicle</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_SYS_AUTOSTART</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">4001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_GZ_MODEL_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">x500</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ./build/px4_sitl_default/bin/px4</span></span></code></pre></div></li><li><p><strong>Start simulator in standalone mode + connect to Gazebo instance running default world</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_GZ_STANDALONE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_SYS_AUTOSTART</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">4001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_SIM_MODEL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gz_x500</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ./build/px4_sitl_default/bin/px4</span></span></code></pre></div><p>В окремому терміналі запустіть:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/simulation-gazebo</span></span></code></pre></div></li></ol><h2 id="додавання-нових-світів-та-моделеи" tabindex="-1">Додавання нових світів та моделей <a class="header-anchor" href="#додавання-нових-світів-та-моделеи" aria-label="Permalink to &quot;Додавання нових світів та моделей&quot;">​</a></h2><p>SDF files, mesh files, textures and anything else to do with the functionality and appearance in Gazebo for worlds and models can be placed in the appropriate <code>/worlds</code> and <code>/models</code> directories in <a href="https://github.com/PX4/PX4-gazebo-models" target="_blank" rel="noreferrer">PX4-gazebo-models</a>.</p><p>В межах PX4 дотримуйтесь наступних кроків, щоб додати моделі та світи.</p><h3 id="додавання-моделі" tabindex="-1">Додавання моделі <a class="header-anchor" href="#додавання-моделі" aria-label="Permalink to &quot;Додавання моделі&quot;">​</a></h3><p>Щоб додати нову модель:</p><ol><li><p>Define an <a href="./../dev_airframes/adding_a_new_frame.html">airframe configuration file</a>.</p></li><li><p>Define the default parameters for Gazebo in the airframe configuration file (this example is from <a href="https://github.com/PX4/PX4-Autopilot/blob/main/ROMFS/px4fmu_common/init.d-posix/airframes/4001_gz_x500" target="_blank" rel="noreferrer">x500 quadcopter</a>):</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PX4_SIMULATOR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=${PX4_SIMULATOR:=gz}</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PX4_GZ_WORLD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=${PX4_GZ_WORLD:=default}</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PX4_SIM_MODEL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=${PX4_SIM_MODEL:=&lt;your model name&gt;}</span></span></code></pre></div><ul><li><p><code>PX4_SIMULATOR=${PX4_SIMULATOR:=gz}</code> sets the default simulator (Gz) for that specific airframe.</p></li><li><p><code>PX4_GZ_WORLD=${PX4_GZ_WORLD:=default}</code> sets the <a href="https://github.com/PX4/PX4-gazebo-models/blob/main/worlds/default.sdf" target="_blank" rel="noreferrer">default world</a> for that specific airframe.</p></li><li><p>Setting the default value of <code>PX4_SIM_MODEL</code> lets you start the simulation with just:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_SYS_AUTOSTART</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> airframe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./build/px4_sitl_default/bin/px4</span></span></code></pre></div></li></ul></li><li><p>Add CMake Target for the <a href="https://github.com/PX4/PX4-Autopilot/blob/main/ROMFS/px4fmu_common/init.d-posix/airframes/CMakeLists.txt" target="_blank" rel="noreferrer">airframe</a>.</p><ul><li>If you plan to use &quot;regular&quot; mode, add your model SDF to <code>Tools/simulation/gz/models/</code>.</li><li>If you plan to use <em>standalone</em> mode, add your model SDF to <code>~/.simulation-gazebo/models/</code></li></ul><p>Ви звичайно також можете використовувати обидва варіанти.</p></li></ol><h3 id="додавання-світу" tabindex="-1">Додавання світу <a class="header-anchor" href="#додавання-світу" aria-label="Permalink to &quot;Додавання світу&quot;">​</a></h3><p>Щоб додати новий світ:</p><ol><li><p>Add your world to the list of worlds found in the <a href="https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/simulation/gz_bridge/CMakeLists.txt" target="_blank" rel="noreferrer"><code>CMakeLists.txt</code> here</a>. This is required in order to allow <code>CMake</code> to generate correct targets.</p><ul><li>If you plan to use &quot;normal&quot; mode, add your world sdf to <code>Tools/simulation/gz/worlds/</code>.</li><li>If you plan to use <em>standalone</em> mode, add your world SDF to <code>~/.simulation-gazebo/worlds/</code></li></ul></li></ol><div class="info custom-block"><p class="custom-block-title">INFO</p><p>As long as the world file and the model file are in the Gazebo search path (<code>GZ_SIM_RESOURCE_PATH</code>) it is not necessary to add them to the PX4 world and model directories. However, <code>make px4_sitl gz_&lt;model&gt;_&lt;world&gt;</code> won&#39;t work with them.</p></div><h2 id="синхронізація-часу-px4-gazebo" tabindex="-1">Синхронізація часу PX4-Gazebo <a class="header-anchor" href="#синхронізація-часу-px4-gazebo" aria-label="Permalink to &quot;Синхронізація часу PX4-Gazebo&quot;">​</a></h2><p>На відміну від симуляторів Gazebo Classic та jMAVSim, PX4 та Gazebo не реалізують механізм синхронізації.</p><p>During Gazebo simulations PX4 subscribes to the Gazebo <code>\\clock</code> topic and uses it as clock source. Це гарантує, що PX4 завжди чекатиме Gazebo перед тим як рухатися вперед у часі, навіть якщо Gazebo працює з фактором реального часу відмінним від 1.</p><p>Зауважте, однак, оскільки синхронізація відсутня, Gazebo ніколи не чекатиме завершення обчислень PX4. У найгіршому випадку, PX4 може повністю відключитися, а Gazebo продовжить виконання з очевидними аваріями дронів, що симулюються.</p><h2 id="симуляція-кількох-рухомих-засобів" tabindex="-1">Симуляція кількох рухомих засобів <a class="header-anchor" href="#симуляція-кількох-рухомих-засобів" aria-label="Permalink to &quot;Симуляція кількох рухомих засобів&quot;">​</a></h2><p>Симуляція кількох засобів підтримується на комп&#39;ютерах з Linux.</p><p>For more information see: <a href="./../sim_gazebo_gz/multi_vehicle_simulation.html">Multi-Vehicle Simulation with Gazebo</a></p><h2 id="подальша-інформація" tabindex="-1">Подальша інформація <a class="header-anchor" href="#подальша-інформація" aria-label="Permalink to &quot;Подальша інформація&quot;">​</a></h2><ul><li><a href="https://github.com/Auterion/px4-simulation-ignition" target="_blank" rel="noreferrer">px4-simulation-ignition</a></li></ul>',76)]))}const g=i(l,[["render",n]]);export{k as __pageData,g as default};
