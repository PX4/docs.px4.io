import{_ as a,c as t,a8 as i,o as n}from"./chunks/framework.BDnHobkS.js";const E=JSON.parse('{"title":"PositionControllerStatus (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/msg_docs/PositionControllerStatus.md","filePath":"uk/msg_docs/PositionControllerStatus.md"}'),e={name:"uk/msg_docs/PositionControllerStatus.md"};function l(r,s,p,o,h,k){return n(),t("div",null,s[0]||(s[0]=[i(`<h1 id="positioncontrollerstatus-uorb-message" tabindex="-1">PositionControllerStatus (UORB message) <a class="header-anchor" href="#positioncontrollerstatus-uorb-message" aria-label="Permalink to &quot;PositionControllerStatus (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/main/msg/PositionControllerStatus.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp		# time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 nav_roll		# Roll setpoint [rad]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 nav_pitch		# Pitch setpoint [rad]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 nav_bearing 		# Bearing </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">angle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[rad]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 target_bearing		# Bearing angle from aircraft to current target [rad]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 xtrack_error		# Signed track error [m]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 wp_dist			# Distance to </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">active</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (next) waypoint [m]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 acceptance_radius	# Current horizontal acceptance radius [m]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 yaw_acceptance		# Yaw acceptance </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[rad]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 altitude_acceptance	# Current vertical acceptance error [m]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 type			# </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Current</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (applied) position setpoint </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (see PositionSetpoint.msg)</span></span></code></pre></div>`,3)]))}const d=a(e,[["render",l]]);export{E as __pageData,d as default};
