(window.webpackJsonp=window.webpackJsonp||[]).push([[1114],{2062:function(e,t,s){"use strict";s.r(t);var a=s(19),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"sensor-combined-uorb-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sensor-combined-uorb-message"}},[e._v("#")]),e._v(" sensor_combined (UORB message)")]),e._v(" "),s("p",[e._v("Sensor readings in SI-unit form.\nThese fields are scaled and offset-compensated where possible and do not\nchange with board revisions and sensor updates.")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/release/1.13/msg/sensor_combined.msg",target:"_blank",rel:"noopener noreferrer"}},[e._v("source file"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[e._v("Sensor readings in SI"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("unit form"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")])])]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[e._v("These fields are scaled and offset"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("compensated where possible and "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v(" not")])]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("change")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[e._v("with board revisions and sensor updates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")])])]),e._v("\n\nuint64 timestamp                                # time since system "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("start")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("microseconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\nint32 RELATIVE_TIMESTAMP_INVALID "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2147483647")]),e._v("   # "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0x7fffffff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" If one of the relative timestamps is set to this value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" it means the associated sensor values are invalid\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("gyro")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[e._v("timstamp is equal to the timestamp of the message")])]),e._v("\nfloat32"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" gyro_rad                     # average angular rate measured in the FRD body frame XYZ"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("axis in rad"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("s over the last gyro sampling period\nuint32 gyro_integral_dt                 # gyro measurement sampling period in microseconds\n\nint32 accelerometer_timestamp_relative  # timestamp "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" accelerometer_timestamp_relative "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" Accelerometer timestamp\nfloat32"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" accelerometer_m_s2           # average value acceleration measured in the FRD body frame XYZ"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("axis in m"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("^")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" over the last accelerometer sampling period\nuint32 accelerometer_integral_dt        # accelerometer measurement sampling period in microseconds\n\nuint8 CLIPPING_X "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\nuint8 CLIPPING_Y "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\nuint8 CLIPPING_Z "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\n\nuint8 accelerometer_clipping    # bitfield indicating "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" there was any accelerometer "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("clipping")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("per axis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" during the integration time frame\nuint8 gyro_clipping             # bitfield indicating "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" there was any gyro "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("clipping")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("per axis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" during the integration time frame\n\nuint8 accel_calibration_count   # Calibration changed counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" Monotonically increases whenever accelermeter calibration changes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\nuint8 gyro_calibration_count    # Calibration changed counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v(" Monotonically increases whenever rate gyro calibration changes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);