(window.webpackJsonp=window.webpackJsonp||[]).push([[643],{1349:function(s,t,e){s.exports=e.p+"assets/img/architecture_ros.a06cff99.png"},2164:function(s,t,e){"use strict";e.r(t);var a=e(19),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"ros-1-via-ros-2-bridge-user-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ros-1-via-ros-2-bridge-user-guide"}},[s._v("#")]),s._v(" ROS (1) via ROS 2 Bridge (User Guide)")]),s._v(" "),a("p",[s._v("This topic explains how use ROS (1) with PX4, by bridging via "),a("RouterLink",{attrs:{to:"/en/ros/ros2.html"}},[s._v("ROS 2")]),s._v(".")],1),s._v(" "),a("p",[s._v("It provides an overview of the ROS-ROS2-PX4 architecture, along with instructions on how to install all the needed software and build ROS (1) applications.\nIt also covers how to run/setup ROS 2 and ROS 1 workspaces at the same time.")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),a("p",[s._v("Generally you might use this setup rather than bridging "),a("RouterLink",{attrs:{to:"/en/ros/ros1.html"}},[s._v("ROS (1) with MAVROS")]),s._v(" if you want deeper access to PX4 than granted by MAVLink, or if you want to use both ROS2 and ROS (1) applications.")],1)]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),a("p",[s._v("This setup, and these instructions "),a("em",[s._v("depend")]),s._v(" on "),a("RouterLink",{attrs:{to:"/en/ros/ros2.html"}},[s._v("ROS 2")]),s._v(".\nWe highly recommend you read up on ROS 2 first.")],1)]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),a("p",[s._v("The PX4 development team recommend that all users "),a("RouterLink",{attrs:{to:"/en/ros/ros2.html"}},[s._v("upgrade to ROS 2")]),s._v(".")],1)]),s._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[s._v("#")]),s._v(" Overview")]),s._v(" "),a("p",[s._v("The application pipeline for ROS (1) bridged over ROS 2 is shown below.")]),s._v(" "),a("p",[a("img",{attrs:{src:e(1349),alt:"Architecture with ROS"}})]),s._v(" "),a("p",[s._v("Essentially it is the same as for ROS 2, except that there is an additional "),a("a",{attrs:{href:"https://github.com/ros2/ros1_bridge",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("ros1_bridge")]),a("OutboundLink")],1),s._v(" package (by Open Robotics) that translates messages between the two versions.\nThis is needed because the original version of ROS does not support RTPS.")]),s._v(" "),a("p",[s._v("The other main difference is that the "),a("code",[s._v("px4_ros_com")]),s._v(" and "),a("code",[s._v("px4_msgs")]),s._v(" packages a separate "),a("code",[s._v("ros1")]),s._v(" branch that generates the ROS message headers and source files for using "),a("strong",[s._v("with")]),s._v(" the "),a("code",[s._v("ros1_bridge")]),s._v(".\nThis branch also includes example listener and advertiser nodes.")]),s._v(" "),a("h2",{attrs:{id:"installation-setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation-setup"}},[s._v("#")]),s._v(" Installation & Setup")]),s._v(" "),a("p",[s._v("Follow the instructions in "),a("RouterLink",{attrs:{to:"/en/ros/ros2_comm.html#installation-setup"}},[s._v("ROS 2 User Guide > Installation & Setup")]),s._v(" to install ROS 2.")],1),s._v(" "),a("h3",{attrs:{id:"build-ros-1-workspace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-ros-1-workspace"}},[s._v("#")]),s._v(" Build ROS (1) Workspace")]),s._v(" "),a("p",[s._v("Since the ROS requires a different environments from ROS to you will need to create a separate workspace.\nThis will include the "),a("code",[s._v("ros")]),s._v(" branch of "),a("code",[s._v("px4_ros_com")]),s._v(" and "),a("code",[s._v("px4_msgs")]),s._v(", along with the "),a("code",[s._v("ros1_bridge")]),s._v(".")]),s._v(" "),a("p",[s._v("To create and build the workspace:")]),s._v(" "),a("ol",[a("li",[s._v("Create the ROS 1 workspace directory using:"),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p ~/px4_ros_com_ros1/src\n")])])])]),s._v(" "),a("li",[s._v("Clone the ROS 1 bridge packages "),a("code",[s._v("px4_ros_com")]),s._v(" and "),a("code",[s._v("px4_msgs")]),s._v(" to the "),a("code",[s._v("/src")]),s._v(" directory (the "),a("code",[s._v("ros1")]),s._v(" branch):"),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/PX4/px4_ros_com.git ~/px4_ros_com_ros1/src/px4_ros_com -b ros1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# clones the 'ros1' branch")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/PX4/px4_msgs.git ~/px4_ros_com_ros1/src/px4_msgs -b ros1\n")])])])]),s._v(" "),a("li",[s._v("Update the message definitions of the "),a("code",[s._v("ros1")]),s._v(" branch\n"),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f ~/px4_ros_com_ros1/src/px4_msgs/msg/*.msg\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" ~/px4_ros_com_ros2/src/px4_msgs/msg/*.msg ~/px4_ros_com_ros1/src/px4_msgs/msg/\n")])])])]),s._v(" "),a("li",[s._v("Use the "),a("code",[s._v("build_ros1_bridge.bash")]),s._v(" script to build the ROS workspace (including "),a("code",[s._v("px4_ros_com")]),s._v(", "),a("code",[s._v("px4_msgs")]),s._v(", and "),a("code",[s._v("ros1_bridge")]),s._v(").\n"),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout ros1\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" scripts\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" build_ros1_bridge.bash\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("You can also build both ROS (1) and ROS 2 workspaces with a single script: "),a("code",[s._v("build_all.bash")]),s._v(".\nThe most common way of using it, is by passing the ROS(1) workspace directory path and PX4 Autopilot directory path:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" build_all.bash --ros1_ws_dir "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path/to/px4_ros_com_ros1/ws"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])])])])]),s._v(" "),a("h3",{attrs:{id:"sanity-check-the-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sanity-check-the-installation"}},[s._v("#")]),s._v(" Sanity Check the Installation")]),s._v(" "),a("p",[s._v("As discussed in "),a("RouterLink",{attrs:{to:"/en/ros/ros2_comm.html#sanity-check-the-installation"}},[s._v("ROS 2 User Guide > Sanity Check the Installation")]),s._v(" a good way to verify the installation is to test that the bridge can communicate with PX4 by running it against the PX4 simulator.")],1),s._v(" "),a("p",[s._v("To use ROS (1) "),a("strong",[s._v("and")]),s._v(" ROS 2 (you need both for this!):")]),s._v(" "),a("ol",[a("li",[a("p",[a("RouterLink",{attrs:{to:"/en/dev_setup/dev_env_linux_ubuntu.html"}},[s._v("Setup your PX4 Ubuntu Linux development environment")]),s._v(" - the default instructions get the latest version of PX4 source and install all the needed tools.")],1),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),a("p",[s._v("The above instructions must be adjusted to get version v1.13 of PX4 source.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" https://github.com/PX4/PX4-Autopilot.git --recursive\n")])])]),a("p",[s._v("where "),a("code",[s._v("<tag>")]),s._v(" can be "),a("code",[s._v("release/1.13")]),s._v(" or any of the "),a("code",[s._v("v.13.*")]),s._v(" tags depending on the user specific scenarios.\nOtherwise, please refer to the "),a("a",{attrs:{href:"https://docs.px4.io/main/en/contribute/",target:"_blank",rel:"noopener noreferrer"}},[s._v("latest"),a("OutboundLink")],1),s._v(" documentation.")])])]),s._v(" "),a("li",[a("p",[s._v("Open a new terminal in the root of the "),a("strong",[s._v("PX4 Autopilot")]),s._v(" project, and then start a PX4 Gazebo simulation using:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" px4_sitl_rtps gazebo\n")])])]),a("p",[s._v("Once PX4 has fully started the terminal will display the "),a("RouterLink",{attrs:{to:"/en/debug/system_console.html"}},[s._v("NuttShell/System Console")]),s._v(".")],1)]),s._v(" "),a("li",[a("p",[s._v("On another terminal, source the ROS 2 environment and workspace and launch the "),a("code",[s._v("ros1_bridge")]),s._v(" (this allows ROS 2 and ROS nodes to communicate with each other).\nAlso set the "),a("code",[s._v("ROS_MASTER_URI")]),s._v(" where the "),a("code",[s._v("roscore")]),s._v(" is/will be running:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /opt/ros/dashing/setup.bash\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/px4_ros_com_ros2/install/local_setup.bash\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ROS_MASTER_URI")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://localhost:11311\n$ ros2 run ros1_bridge dynamic_bridge\n")])])])]),s._v(" "),a("li",[a("p",[s._v("On another terminal, source the ROS workspace and launch the "),a("code",[s._v("sensor_combined")]),s._v(" listener node.\nSince you are launching through "),a("code",[s._v("roslaunch")]),s._v(", this will also automatically start the "),a("code",[s._v("roscore")]),s._v(":")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/px4_ros_com_ros1/install/setup.bash\n$ roslaunch px4_ros_com sensor_combined_listener.launch\n")])])])]),s._v(" "),a("li",[a("p",[s._v("On another terminal, source the ROS 2 workspace and then start the "),a("code",[s._v("micrortps_agent")]),s._v(" daemon with UDP as the transport protocol:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/px4_ros_com_ros2/install/setup.bash\n$ micrortps_agent -t UDP\n")])])])]),s._v(" "),a("li",[a("p",[s._v("On the "),a("RouterLink",{attrs:{to:"/en/debug/system_console.html"}},[s._v("NuttShell/System Console")]),s._v(", start the "),a("code",[s._v("micrortps_client")]),s._v(" daemon also in UDP:")],1),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" micrortps_client start -t UDP\n")])])]),a("p",[s._v("If the bridge is working correctly you will be able to see the data being printed on the terminal/console where you launched the ROS listener.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("RECEIVED DATA FROM SENSOR COMBINED\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("\nts: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("870938190")]),s._v("\ngyro_rad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00341645")]),s._v("\ngyro_rad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00626475")]),s._v("\ngyro_rad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": -0.000515705\ngyro_integral_dt: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4739")]),s._v("\naccelerometer_timestamp_relative: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\naccelerometer_m_s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": -0.273381\naccelerometer_m_s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0949186")]),s._v("\naccelerometer_m_s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": -9.76044\naccelerometer_integral_dt: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4739")]),s._v("\n")])])])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),a("p",[s._v("When using the "),a("code",[s._v("build_all.bash")]),s._v(" script, it automatically opens and sources all the required terminals, so you just have to run the respective apps in each terminal.")])]),s._v(" "),a("h2",{attrs:{id:"creating-a-ros-1-listener"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-ros-1-listener"}},[s._v("#")]),s._v(" Creating a ROS (1) listener")]),s._v(" "),a("p",[s._v("Since the creation of ROS nodes is a well known and documented process, we are going to leave this section out from this guide, and you can find an example of a ROS listener for "),a("code",[s._v("sensor_combined")]),s._v(" messages the "),a("code",[s._v("ros1")]),s._v(" branch of the "),a("code",[s._v("px4_ros_com")]),s._v(" repository, under the following path "),a("code",[s._v("src/listeners/")]),s._v(".")])])}),[],!1,null,null,null);t.default=r.exports}}]);