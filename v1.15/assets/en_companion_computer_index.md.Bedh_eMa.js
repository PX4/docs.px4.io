import{_ as e}from"./chunks/px4_companion_computer_simple.DIdcS0D1.js";import{_ as o,c as t,o as a,ab as r}from"./chunks/framework.CUflZczI.js";const b=JSON.parse('{"title":"Companion Computers","description":"","frontmatter":{},"headers":[],"relativePath":"en/companion_computer/index.md","filePath":"en/companion_computer/index.md"}'),n={name:"en/companion_computer/index.md"},i=r('<h1 id="companion-computers" tabindex="-1">Companion Computers <a class="header-anchor" href="#companion-computers" aria-label="Permalink to &quot;Companion Computers&quot;">​</a></h1><p>Companion computers (&quot;mission computers&quot;), are separate on-vehicle computers that are connected to the flight controller, and which enable computationally expensive features like <a href="./../computer_vision/collision_prevention.html">collision prevention</a>.</p><p>The diagram below shows a possible architecture for an unmanned vehicle architecture that includes a flight controller and companion computer.</p><p><img src="'+e+'" alt="PX4 architecture - FC + Companion Computer"></p><p>The flight controller runs PX4 on NuttX, and provides core flight and safety code. The companion computer usually runs Linux, as this is a much better platform for &quot;general&quot; software development. They are connected using a fast serial or Ethernet link, and typically communicate using the <a href="https://mavlink.io/en/" target="_blank" rel="noreferrer">MAVLink protocol</a> or uXRCE-DDS.</p><p>Communications with the ground stations and the cloud are usually routed via the companion computer (e.g. using the <a href="https://github.com/mavlink-router/mavlink-router" target="_blank" rel="noreferrer">MAVLink Router</a>).</p><h2 id="pixhawk-autopilot-bus-carrier-boards-with-companion-computers" tabindex="-1">Pixhawk Autopilot Bus Carrier Boards with Companion Computers <a class="header-anchor" href="#pixhawk-autopilot-bus-carrier-boards-with-companion-computers" aria-label="Permalink to &quot;Pixhawk Autopilot Bus Carrier Boards with Companion Computers&quot;">​</a></h2><p>The following carrier boards make it easy to integrate Pixhawk flight controllers with a companion computer, significantly easing both hardware and software setup. The boards support the <a href="./../flight_controller/pixhawk_autopilot_bus.html">Pixhawk Autopilot Bus (PAB)</a> open standard so you can plug in any compliant controller:</p><ul><li><a href="https://holybro.com/products/pixhawk-jetson-baseboard" target="_blank" rel="noreferrer">Holybro Pixhawk Jetson Baseboard</a></li><li><a href="./../companion_computer/holybro_pixhawk_rpi_cm4_baseboard.html">Holybro Pixhawk RPI CM4 Baseboard</a></li><li><a href="https://arkelectron.gitbook.io/ark-documentation/flight-controllers/ark-jetson-pab-carrier" target="_blank" rel="noreferrer">ARK Jetson PAB Carrier</a></li></ul><h2 id="managed-integrated-systems" tabindex="-1">Managed Integrated Systems <a class="header-anchor" href="#managed-integrated-systems" aria-label="Permalink to &quot;Managed Integrated Systems&quot;">​</a></h2><p>The following integrated companion computer/flight controller systems use managed/custom versions of flight controller and companion computer software by default. They are listed here as they can be updated with &quot;vanilla&quot; PX4 firmware for testing/rapid development.</p><ul><li><a href="./../companion_computer/auterion_skynode.html">Auterion Skynode</a></li><li><a href="https://docs.modalai.com/voxl-2/" target="_blank" rel="noreferrer">ModalAI VOXL 2</a></li></ul><h2 id="companion-computer-options" tabindex="-1">Companion Computer Options <a class="header-anchor" href="#companion-computer-options" aria-label="Permalink to &quot;Companion Computer Options&quot;">​</a></h2><p>PX4 can be used with computers that can be configured to communicate via MAVLink or microROS/uXRCE-DDS over over a serial port (or Ethernet port, if present). A small subset of possible alternatives are listed below.</p><p>Larger high power examples:</p><ul><li><a href="https://docs.modalai.com/voxl2-external-flight-controller/" target="_blank" rel="noreferrer">ModalAI VOXL 2</a></li><li><a href="https://nxp.gitbook.io/navqplus/user-contributed-content/ros2/microdds" target="_blank" rel="noreferrer">NXP NavQPlus</a></li><li><a href="https://developer.nvidia.com/embedded/jetson-tx2" target="_blank" rel="noreferrer">Nvidia Jetson TX2</a></li></ul><ul><li><a href="https://www.intel.com/content/www/us/en/products/details/nuc.html" target="_blank" rel="noreferrer">Intel NUC</a></li><li><a href="https://www.gigabyte.com/Mini-PcBarebone/BRIX" target="_blank" rel="noreferrer">Gigabyte Brix</a></li></ul><p>Small/lower power examples:</p><ul><li><a href="./../companion_computer/pixhawk_rpi.html">Raspberry Pi</a></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The choice of computer will depend on the usual tradeoffs: cost, weight, power consumption, ease of setup, and computational resources required.</p></div><h2 id="companion-computer-software" tabindex="-1">Companion Computer Software <a class="header-anchor" href="#companion-computer-software" aria-label="Permalink to &quot;Companion Computer Software&quot;">​</a></h2><p>The companion computer needs to run software that communicates with the flight controller, and which routes traffic to ground stations and the cloud.</p><h4 id="drone-apps" tabindex="-1">Drone Apps <a class="header-anchor" href="#drone-apps" aria-label="Permalink to &quot;Drone Apps&quot;">​</a></h4><p>Drone APIs and SDKs allow you to write software that can control PX4. Popular alternatives include:</p><ul><li><a href="https://mavsdk.mavlink.io/main/en/index.html" target="_blank" rel="noreferrer">MAVSDK</a> - libraries in various programming languages to interface with MAVLink systems such as drones, cameras or ground systems.</li><li><a href="./../ros2/">ROS 2</a> to communicate to ROS 2 nodes (may also be used).</li><li><a href="./../ros/mavros_installation.html">ROS 1 and MAVROS</a></li></ul><p>MAVSDK is generally easier to learn and use, while ROS provides more pre-written software for advanced cases like computer vision. <a href="./../robotics/#what-api-should-i-use">Drone APIs and SDKs &gt; What API Should I Use?</a> explains the different options in detail.</p><p>You can also write your own custom MAVLink libraries from scratch:</p><ul><li><a href="https://github.com/mavlink/c_uart_interface_example" target="_blank" rel="noreferrer">C/C++ example code</a> shows how to connect custom code</li><li>MAVLink also can also be used with <a href="https://mavlink.io/en/#mavlink-project-generatorslanguages" target="_blank" rel="noreferrer">many other programming languages</a></li></ul><h4 id="routers" tabindex="-1">Routers <a class="header-anchor" href="#routers" aria-label="Permalink to &quot;Routers&quot;">​</a></h4><p>You will need a router if you need to bridge MAVLink from the vehicle to a ground station or IP network, or if you need multiple connections:</p><ul><li><a href="https://github.com/intel/mavlink-router" target="_blank" rel="noreferrer">MAVLink Router</a> (recommended)</li><li><a href="https://ardupilot.org/mavproxy/" target="_blank" rel="noreferrer">MAVProxy</a></li></ul><h2 id="ethernet-setup" tabindex="-1">Ethernet Setup <a class="header-anchor" href="#ethernet-setup" aria-label="Permalink to &quot;Ethernet Setup&quot;">​</a></h2><p>Ethernet is the recommended connection, if supported by your flight controller. See <a href="./../advanced_config/ethernet_setup.html">Ethernet Setup</a> for instructions.</p><h2 id="flight-controller-specific-setup" tabindex="-1">Flight Controller Specific Setup <a class="header-anchor" href="#flight-controller-specific-setup" aria-label="Permalink to &quot;Flight Controller Specific Setup&quot;">​</a></h2><p>The following topics explain how to set up companion computers for specific flight controllers, in particular when you are not using an Ethernet connection.</p><ul><li><a href="./../companion_computer/pixhawk_companion.html">Using a Companion Computer with Pixhawk Controllers</a></li></ul><h2 id="additional-information" tabindex="-1">Additional Information <a class="header-anchor" href="#additional-information" aria-label="Permalink to &quot;Additional Information&quot;">​</a></h2><ul><li><a href="./../companion_computer/companion_computer_peripherals.html">Companion Computer Peripherals</a></li><li><a href="./../concept/px4_systems_architecture.html#fc-and-companion-computer">PX4 System Architecture &gt; FC and Companion Computer</a></li></ul>',38),l=[i];function s(p,c,h,u,m,d){return a(),t("div",null,l)}const _=o(n,[["render",s]]);export{b as __pageData,_ as default};
