import{_ as a,a as e,b as t,c as n}from"./chunks/qgc_gazebo_video_stream_typhoon.B9_NloIR.js";import{_ as l,c as h,o,ab as i,m as s}from"./chunks/framework.CUflZczI.js";const w=JSON.parse('{"title":"Gazebo Classic 模拟","description":"","frontmatter":{},"headers":[],"relativePath":"zh/sim_gazebo_classic/index.md","filePath":"zh/sim_gazebo_classic/index.md"}'),r={name:"zh/sim_gazebo_classic/index.md"},p=i('<h1 id="gazebo-classic-模拟" tabindex="-1">Gazebo Classic 模拟 <a class="header-anchor" href="#gazebo-classic-模拟" aria-label="Permalink to &quot;Gazebo Classic 模拟&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><em>Gazebo Classic</em> 支持 PX4 到 Ubuntu Linux 20.04。 In Ubuntu 22.04 and later you must use <a href="./../sim_gazebo_gz/">Gazebo</a> (which was <a href="https://www.openrobotics.org/blog/2022/4/6/a-new-era-for-gazebo" target="_blank" rel="noreferrer">formerly known</a> as &quot;Gazebo Ignition&quot;).</p></div><p>Gazebo Classic 是一个功能强大的三维仿真环境，专门用于测试避障和计算机视觉等自主机器人技术。 本页描述了在SITL和单一载具上的使用方式。 Gazebo Classic can also be used with <a href="./../simulation/hitl.html">HITL</a> and for <a href="./../sim_gazebo_classic/multi_vehicle_simulation.html">multi-vehicle simulation</a>.</p>',3),d=s("p",null,[s("div",{class:"embed-responsive embed-responsive-16by9"},[s("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/qfFF9-0k4KA",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),c=i(`<p><a href="https://mermaid-js.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiZ3JhcGggTFI7XG4gIEdhemViby0tPlBsdWdpbjtcbiAgUGx1Z2luLS0-TUFWTGluaztcbiAgTUFWTGluay0tPlNJVEw7IiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifSwidXBkYXRlRWRpdG9yIjpmYWxzZX0" target="_blank" rel="noreferrer"><img src="https://mermaid.ink/img/eyJjb2RlIjoiZ3JhcGggTFI7XG4gIEdhemViby0tPlBsdWdpbjtcbiAgUGx1Z2luLS0-TUFWTGluaztcbiAgTUFWTGluay0tPlNJVEw7IiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifSwidXBkYXRlRWRpdG9yIjpmYWxzZX0" alt="Mermaid Graph: Gazebo plugin"></a></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>See <a href="./../simulation/">Simulation</a> for general information about simulators, the simulation environment, and simulation configuration (e.g. supported vehicles).</p></div><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>Gazebo Classic 9 or 11 setup is included in our <a href="./../dev_setup/dev_env.html">standard build instructions</a> for Linux, macOS, and Windows. 其他安装说明可在 <a href="http://gazebosim.org/tutorials?cat=guided_b&amp;tut=guided_b1" target="_blank" rel="noreferrer">gazebosim.org</a> 上找到。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If you plan to use PX4 with ROS you <strong>should follow the</strong> <a href="./../simulation/ros_interface.html">ROS Instructions</a> to install both ROS and Gazebo Classic (and thereby avoid installation conflicts).</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The following commands can be used to remove <a href="./../sim_gazebo_gz/">Gazebo (Garden)</a> and reinstall Gazebo-Classic 11:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz-garden</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aptitude</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aptitude</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgazebo11</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgazebo-dev</span></span></code></pre></div><p>Note that <code>aptitude</code> is needed because it can resolve dependency conflicts (by removing certain packages) that <code>apt</code> is unable to handle.</p></div><h2 id="running-the-simulation" tabindex="-1">Running the Simulation <a class="header-anchor" href="#running-the-simulation" aria-label="Permalink to &quot;Running the Simulation&quot;">​</a></h2><p>Run a simulation by starting PX4 SITL and Gazebo Classic with the airframe configuration to load (multicopters, planes, VTOL, optical flow and multi-vehicle simulations are supported).</p><p>The easiest way to do this is to open a terminal in the root directory of the PX4 <em>PX4-Autopilot</em> repository and call <code>make</code> for the desired target. For example, to start a quadrotor simulation (the default):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div><p>The supported vehicles and <code>make</code> commands are listed below (click links to see vehicle images).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>For the full list of build targets run <code>make px4_sitl list_vmd_make_targets</code> (and filter on those that start with <code>gazebo-classic_</code>).</p></div><table><thead><tr><th>Vehicle</th><th>Command</th></tr></thead><tbody><tr><td><a href="./../sim_gazebo_classic/vehicles.html#quadrotor-default">Quadrotor</a></td><td><code>make px4_sitl gazebo-classic</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#quadrotor-with-optical-flow">Quadrotor with Optical Flow</a></td><td><code>make px4_sitl gazebo-classic_iris_opt_flow</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#quadrotor-with-depth-camera">Quadrotor with Depth Camera</a> (forward-facing)</td><td><code>make px4_sitl gazebo-classic_iris_depth_camera</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#quadrotor-with-depth-camera">Quadrotor with Depth Camera</a> (downward-facing)</td><td><code>make px4_sitl gazebo-classic_iris_downward_depth_camera</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#3dr-solo-quadrotor">3DR Solo (Quadrotor)</a></td><td><code>make px4_sitl gazebo-classic_solo</code></td></tr><tr><td><a id="typhoon_h480"></a><a href="./../sim_gazebo_classic/vehicles.html#typhoon-h480-hexrotor">Typhoon H480 (Hexrotor)</a> (with video streaming)</td><td><code>make px4_sitl gazebo-classic_typhoon_h480</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#standard-plane">Standard Plane</a></td><td><code>make px4_sitl gazebo-classic_plane</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#standard-plane-with-catapult-launch">Standard Plane (with catapult launch)</a></td><td><code>make px4_sitl gazebo-classic_plane_catapult</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#standard-vtol">Standard VTOL</a></td><td><code>make px4_sitl gazebo-classic_standard_vtol</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#tailsitter-vtol">Tailsitter VTOL</a></td><td><code>make px4_sitl gazebo-classic_tailsitter</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#ackermann-ugv">Ackerman UGV (Rover)</a></td><td><code>make px4_sitl gazebo-classic_rover</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#differential-ugv">Differential UGV (Rover)</a></td><td><code>make px4_sitl gazebo-classic_r1_rover</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#unmanned-underwater-vehicle-uuv-submarine">HippoCampus TUHH (UUV: Unmanned Underwater Vehicle)</a></td><td><code>make px4_sitl gazebo-classic_uuv_hippocampus</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#hippocampus-tuhh-uuv">Boat (USV: Unmanned Surface Vehicle)</a></td><td><code>make px4_sitl gazebo-classic_boat</code></td></tr><tr><td><a href="./../sim_gazebo_classic/vehicles.html#airship">Cloudship (Airship)</a></td><td><code>make px4_sitl gazebo-classic_cloudship</code></td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The <a href="./../dev_setup/dev_env.html">Installing Files and Code</a> guide is a useful reference if there are build errors.</p></div><p>The commands above launch a single vehicle with the full UI. Other options include:</p><ul><li><a href="#starting-gazebo-and-px4-separately">Starting PX4 and Gazebo separately</a> so that you can keep Gazebo Classic running and only re-launch PX4 when needed (quicker than restarting both).</li><li>Run the simulation in <a href="#headless-mode">Headless Mode</a>, which does not start the Gazebo Classic UI (this uses fewer resources and is much faster).</li></ul><h2 id="taking-it-to-the-sky" tabindex="-1">Taking it to the Sky <a class="header-anchor" href="#taking-it-to-the-sky" aria-label="Permalink to &quot;Taking it to the Sky&quot;">​</a></h2><p>The <code>make</code> commands above first build PX4, and then run it along with the Gazebo Classic simulator.</p><p>Once PX4 has started it will launch the PX4 shell as shown below.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">______</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  __</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   __</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    ___</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ___</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\ \\ \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">V</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  __/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\ \\ \\_</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     \\/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   \\/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> starting.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [px4] Calling startup script: /bin/sh etc/init.d-posix/rcS 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [param] selected parameter default file eeprom/parameters_10016</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[param] Loaded: eeprom/parameters_10016</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [dataman] Unknown restart, data manager file </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./dataman&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> size is 11798680 bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [simulator] Waiting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> simulator to connect on TCP port 4560</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gazebo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multi-robot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> simulator,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9.0.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Copyright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (C) 2012 Open Source Robotics Foundation.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Released</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> under</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Apache</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> License.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http://gazebosim.org</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [ecl/EKF] 5188000: commencing GPS fusion</span></span></code></pre></div><p>The console will print out status as PX4 loads the airframe-specific initialisation and parameter files, waits for (and connects to) the simulator. Once there is an INFO print that [ecl/EKF] is <code>commencing GPS fusion</code> the vehicle is ready to arm.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Right-clicking the quadrotor model allows to enable follow mode from the context menu, which is handy to keep it in view.</p></div><p><img src="`+a+`" alt="Gazebo Classic UI"></p><p>You can bring it into the air by typing:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pxh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commander</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> takeoff</span></span></code></pre></div><h2 id="usage-configuration-options" tabindex="-1">Usage/Configuration Options <a class="header-anchor" href="#usage-configuration-options" aria-label="Permalink to &quot;Usage/Configuration Options&quot;">​</a></h2><p>Options that apply to all simulators are covered in the top level <a href="./../simulation/#sitl-simulation-environment">Simulation</a> topic (some of these may be duplicated below).</p><h3 id="simulating-sensor-hardware-failure" tabindex="-1">Simulating Sensor/Hardware Failure <a class="header-anchor" href="#simulating-sensor-hardware-failure" aria-label="Permalink to &quot;Simulating Sensor/Hardware Failure&quot;">​</a></h3><p><a href="./../simulation/failsafes.html">Simulate Failsafes</a> explains how to trigger safety failsafes like GPS failure and battery drain.</p><h3 id="headless-mode" tabindex="-1">Headless Mode <a class="header-anchor" href="#headless-mode" aria-label="Permalink to &quot;Headless Mode&quot;">​</a></h3><p>Gazebo Classic can be run in a <em>headless</em> mode in which the Gazebo Classic UI is not launched. This starts up more quickly and uses less system resources (i.e. it is a more &quot;lightweight&quot; way to run the simulation).</p><p>Simply prefix the normal <code>make</code> command with <code>HEADLESS=1</code> as shown:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HEADLESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_plane</span></span></code></pre></div><p><a id="custom_takeoff_location"></a></p><h3 id="set-custom-takeoff-location" tabindex="-1">Set Custom Takeoff Location <a class="header-anchor" href="#set-custom-takeoff-location" aria-label="Permalink to &quot;Set Custom Takeoff Location&quot;">​</a></h3><p>The takeoff location in Gazebo Classic can be set using environment variables. This will override both the default takeoff location, and any value <a href="#set-world-location">set for the world</a>.</p><p>The variables to set are: <code>PX4_HOME_LAT</code>, <code>PX4_HOME_LON</code>, and <code>PX4_HOME_ALT</code>.</p><p>For example:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_HOME_LAT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28.452386</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_HOME_LON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-13.867138</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_HOME_ALT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28.5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div><h3 id="change-simulation-speed" tabindex="-1">Change Simulation Speed <a class="header-anchor" href="#change-simulation-speed" aria-label="Permalink to &quot;Change Simulation Speed&quot;">​</a></h3><p>The simulation speed can be increased or decreased with respect to realtime using the environment variable <code>PX4_SIM_SPEED_FACTOR</code>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_SIM_SPEED_FACTOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div><p>For more information see: <a href="./../simulation/#simulation_speed">Simulation &gt; Run Simulation Faster than Realtime</a>.</p><h3 id="change-wind-speed" tabindex="-1">Change Wind Speed <a class="header-anchor" href="#change-wind-speed" aria-label="Permalink to &quot;Change Wind Speed&quot;">​</a></h3><p>To simulate wind speed, add this plugin to your world file and set <code>windVelocityMean</code> in m/s (replace <code>SET_YOUR_WIND_SPEED</code> with your desired speed). If needed, adapt the <code>windVelocityMax</code> parameter so that it is greater than <code>windVelocityMean</code>:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugin</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wind_plugin&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> filename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;libgazebo_wind_plugin.so&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">frameId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;base_link&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">frameId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">robotNamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windVelocityMean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;SET_YOUR_WIND_SPEED&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windVelocityMean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windVelocityMax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;20.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windVelocityMax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windVelocityVariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windVelocityVariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windDirectionMean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;0 1 0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windDirectionMean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windDirectionVariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windDirectionVariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustDuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustDuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustVelocityMean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustVelocityMean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustVelocityMax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;20.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustVelocityMax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustVelocityVariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustVelocityVariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustDirectionMean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1 0 0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustDirectionMean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustDirectionVariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windGustDirectionVariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windPubTopic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;world_wind&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">windPubTopic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Wind direction is passed as a direction vector (standard ENU convention), which will be normalized in the gazebo plugin. Additionally you can state wind velocity variance in (m/s)² and direction variance based on a normal distribution to add some random factor into the simulation. Gust is internally handled in the same way as wind, with the slight difference that you can state start time and duration with the following two parameters <code>windGustStart</code> and <code>windGustDuration</code>.</p><p>You can see how this is done in <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/blob/main/worlds/windy.world#L15-L31" target="_blank" rel="noreferrer">PX4/PX4-SITL_gazebo-classic/worlds/windy.world</a>.</p><h3 id="using-a-joystick" tabindex="-1">Using a Joystick <a class="header-anchor" href="#using-a-joystick" aria-label="Permalink to &quot;Using a Joystick&quot;">​</a></h3><p>Joystick and thumb-joystick support are supported through <em>QGroundControl</em> (<a href="./../simulation/#joystick-gamepad-integration">setup instructions here</a>).</p><h3 id="improving-distance-sensor-performance" tabindex="-1">Improving Distance Sensor Performance <a class="header-anchor" href="#improving-distance-sensor-performance" aria-label="Permalink to &quot;Improving Distance Sensor Performance&quot;">​</a></h3><p>The current default world is <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/tree/main/worlds" target="_blank" rel="noreferrer">PX4-Autopilot/Tools/simulation/gazebo-classic/sitl_gazebo-classic/worlds/<strong>iris.world</strong></a>), which uses a heightmap as ground.</p><p>This can cause difficulty when using a distance sensor. If there are unexpected results we recommend you change the model in <strong>iris.model</strong> from <code>uneven_ground</code> to <code>asphalt_plane</code>.</p><h3 id="simulating-gps-noise" tabindex="-1">Simulating GPS Noise <a class="header-anchor" href="#simulating-gps-noise" aria-label="Permalink to &quot;Simulating GPS Noise&quot;">​</a></h3><p>Gazebo Classic can simulate GPS noise that is similar to that typically found in real systems (otherwise reported GPS values will be noise-free/perfect). This is useful when working on applications that might be impacted by GPS noise - e.g. precision positioning.</p><p>GPS noise is enabled if the target vehicle&#39;s SDF file contains a value for the <code>gpsNoise</code> element (i.e. it has the line: <code>&lt;gpsNoise&gt;true&lt;/gpsNoise&gt;</code>). It is enabled by default in many vehicle SDF files: <strong>solo.sdf</strong>, <strong>iris.sdf</strong>, <strong>standard_vtol.sdf</strong>, <strong>delta_wing.sdf</strong>, <strong>plane.sdf</strong>, <strong>typhoon_h480</strong>, <strong>tailsitter.sdf</strong>.</p><p>To enable/disable GPS noise:</p><ol><li><p>Build any gazebo target in order to generate SDF files (for all vehicles). For example:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p></div></li></ol><p>The SDF files are not overwritten on subsequent builds. :::</p><ol start="2"><li><p>Open the SDF file for your target vehicle (e.g. <strong>./Tools/simulation/gazebo-classic/sitl_gazebo-classic/models/iris/iris.sdf</strong>).</p></li><li><p>Search for the <code>gpsNoise</code> element:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugin</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gps_plugin&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> filename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;libgazebo_gps_plugin.so&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">robotNamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gpsNoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gpsNoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li>If it is present, GPS is enabled. You can disable it by deleting the line: <code>&lt;gpsNoise&gt;true&lt;/gpsNoise&gt;</code></li><li>If it is not present, GPS is disabled. You can enable it by adding the <code>gpsNoise</code> element to the <code>gps_plugin</code> section (as shown above).</li></ul></li></ol><p>The next time you build/restart Gazebo Classic it will use the new GPS noise setting.</p><h2 id="loading-a-specific-world" tabindex="-1">Loading a Specific World <a class="header-anchor" href="#loading-a-specific-world" aria-label="Permalink to &quot;Loading a Specific World&quot;">​</a></h2><p>PX4 supports a number of <a href="./../sim_gazebo_classic/worlds.html">Worlds</a>, which are stored in <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/tree/main/worlds" target="_blank" rel="noreferrer">PX4-Autopilot/Tools/simulation/gazebo-classic/sitl_gazebo-classic/worlds</a>. By default Gazebo Classic displays a flat featureless plane, as defined in <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/blob/main/worlds/empty.world" target="_blank" rel="noreferrer">empty.world</a>.</p><p>You can load any of the worlds by specifying them as the final option in the PX4 configuration target.</p><p>For example, to load the <em>warehouse</em> world, you can append it as shown:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_plane_cam__warehouse</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>There are <em>two underscores</em> after the model (<code>plane_cam</code>) indicating that the default debugger is used (none). See <a href="./../dev_setup/building_px4.html#px4-make-build-targets">Building the Code &gt; PX4 Make Build Targets</a>.</p></div><p>You can also specify the full path to a world to load using the <code>PX4_SITL_WORLD</code> environment variable. This is useful if testing a new world that is not yet included with PX4.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If the loaded world does not align with the map, you may need to <a href="#set-world-location">set the world location</a>.</p></div><h2 id="set-world-location" tabindex="-1">Set World Location <a class="header-anchor" href="#set-world-location" aria-label="Permalink to &quot;Set World Location&quot;">​</a></h2><p>The vehicle gets spawned very close to the origin of the world model at some simulated GPS location.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The vehicle is not spawned exactly at the Gazebo origin (0,0,0), but using a slight offset, which can highlight a number of common coding issues.</p></div><p>If using a world that recreates a real location (e.g. a particular airport) this can result in a very obvious mismatch between what is displayed in the simulated world, and what is shown on the ground station map. To overcome this problem you can set the location of the world origin to the GPS coordinates where it would be in &quot;real life&quot;.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You can also set a <a href="#custom_takeoff_location">Custom Takeoff Location</a> that does the same thing. However adding the location to the map is easier (and can still be over-ridden by setting a custom location if needed).</p></div><p>The location of the world is defined in the <strong>.world</strong> file by specifying the location of the origin using the <code>spherical_coordinates</code> tag. The latitude, longitude, elevation must all be specified (for this to be a valid).</p><p>An example can be found in the <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/blob/main/worlds/sonoma_raceway.world" target="_blank" rel="noreferrer">sonoma_raceway.world</a>:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spherical_coordinates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">surface_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;EARTH_WGS84&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">surface_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">latitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;38.161479&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">latitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">longitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;-122.454630&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">longitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">elevation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;488.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">elevation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spherical_coordinates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>You can test this by spawning a rover in the <a href="./../sim_gazebo_classic/worlds.html#sonoma-raceway">Sonoma Raceway World</a> using the following <code>make</code> command (note that spawning takes longer the first time as the model needs to be downloaded from the model database):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_rover__sonoma_raceway</span></span></code></pre></div><p>The video below shows that the location of the environment is aligned with the world:</p>`,80),k=s("p",null,[s("div",{class:"embed-responsive embed-responsive-16by9"},[s("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/-a2WWLni5do",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),g=i('<h2 id="starting-gazebo-and-px4-separately" tabindex="-1">Starting Gazebo and PX4 Separately <a class="header-anchor" href="#starting-gazebo-and-px4-separately" aria-label="Permalink to &quot;Starting Gazebo and PX4 Separately&quot;">​</a></h2><p>For extended development sessions it might be more convenient to start Gazebo Classic and PX4 separately or even from within an IDE.</p><p>In addition to the existing cmake targets that run <code>sitl_run.sh</code> with parameters for px4 to load the correct model it creates a launcher targets named <code>px4_&lt;mode&gt;</code> that is a thin wrapper around original sitl px4 app. This thin wrapper simply embeds app arguments like current working directories and the path to the model file.</p><p>To start Gazebo Classic and PX4 separately:</p><ul><li><p>Run gazebo classic (or any other sim) server and client viewers via the terminal specifying an <code>_ide</code> variant:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic___ide</span></span></code></pre></div><p>or</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_ide</span></span></code></pre></div></li><li><p>In your IDE select <code>px4_&lt;mode&gt;</code> target you want to debug (e.g. <code>px4_iris</code>)</p></li><li><p>Start the debug session directly from IDE</p></li></ul><p>This approach significantly reduces the debug cycle time because simulator is always running in background and you only re-run the px4 process which is very light.</p><h2 id="simulated-survey-camera" tabindex="-1">Simulated Survey Camera <a class="header-anchor" href="#simulated-survey-camera" aria-label="Permalink to &quot;Simulated Survey Camera&quot;">​</a></h2><p>The <em>Gazebo Classic</em> survey camera simulates a <a href="https://mavlink.io/en/services/camera.html" target="_blank" rel="noreferrer">MAVLink camera</a> that captures geotagged JPEG images and sends camera capture information to a connected ground station. The camera also supports video streaming. It can be used to test camera capture, in particular within survey missions.</p><p>The camera emits the <a href="https://mavlink.io/en/messages/common.html#CAMERA_IMAGE_CAPTURED" target="_blank" rel="noreferrer">CAMERA_IMAGE_CAPTURED</a> message every time an image is captured. The captured images are saved to: <strong>PX4-Autopilot/build/px4<em>sitle_default/tmp/frames/DSC_n</em>.jpg</strong> (where <em>n</em> starts as 00000 and is iterated by one on each capture).</p><p>To simulate a plane with this camera:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_plane_cam</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The camera also supports/responds to the following MAVLink commands: <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_CAMERA_CAPTURE_STATUS" target="_blank" rel="noreferrer">MAV_CMD_REQUEST_CAMERA_CAPTURE_STATUS</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_STORAGE_INFORMATION" target="_blank" rel="noreferrer">MAV_CMD_REQUEST_STORAGE_INFORMATION</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_CAMERA_SETTINGS" target="_blank" rel="noreferrer">MAV_CMD_REQUEST_CAMERA_SETTINGS</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_CAMERA_INFORMATION" target="_blank" rel="noreferrer">MAV_CMD_REQUEST_CAMERA_INFORMATION</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_RESET_CAMERA_SETTINGS" target="_blank" rel="noreferrer">MAV_CMD_RESET_CAMERA_SETTINGS</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_STORAGE_FORMAT" target="_blank" rel="noreferrer">MAV_CMD_STORAGE_FORMAT</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_SET_CAMERA_ZOOM" target="_blank" rel="noreferrer">MAV_CMD_SET_CAMERA_ZOOM</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_IMAGE_START_CAPTURE" target="_blank" rel="noreferrer">MAV_CMD_IMAGE_START_CAPTURE</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_IMAGE_STOP_CAPTURE" target="_blank" rel="noreferrer">MAV_CMD_IMAGE_STOP_CAPTURE</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_VIDEO_STREAM_INFORMATION" target="_blank" rel="noreferrer">MAV_CMD_REQUEST_VIDEO_STREAM_INFORMATION</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_VIDEO_STREAM_STATUS" target="_blank" rel="noreferrer">MAV_CMD_REQUEST_VIDEO_STREAM_STATUS</a>, <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_SET_CAMERA_MODE" target="_blank" rel="noreferrer">MAV_CMD_SET_CAMERA_MODE</a>.</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The simulated camera is implemented in <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/blob/main/src/gazebo_camera_manager_plugin.cpp" target="_blank" rel="noreferrer">PX4/PX4-SITL_gazebo-classic/main/src/gazebo_camera_manager_plugin.cpp</a>.</p></div><h2 id="simulated-depth-camera" tabindex="-1">Simulated Depth Camera <a class="header-anchor" href="#simulated-depth-camera" aria-label="Permalink to &quot;Simulated Depth Camera&quot;">​</a></h2><p>The <em>Gazebo Classic</em> <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/blob/main/models/depth_camera/depth_camera.sdf.jinja" target="_blank" rel="noreferrer">depth camera model</a> simulates an Intel® RealSense™ D455 stereo depth camera using the <a href="https://classic.gazebosim.org/tutorials?tut=ros_gzplugins#OpenniKinect" target="_blank" rel="noreferrer">Openni Kinect plugin</a>.</p><p>This publishes depth images and camera information on the <code>/camera/depth/image_raw</code> and <code>/camera/depth/camera_info</code> ROS topics respectively.</p><p>To use these images, you will need to install ROS or ROS 2. Note the warning at the top of this page about how to &quot;avoid installation conflicts&quot; when installing ROS and Gazebo.</p><p>You can simulate a quadrotor with a forward-facing depth camera:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_depth_camera</span></span></code></pre></div><p>or a quadrotor with a downward-facing depth camera:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_downward_depth_camera</span></span></code></pre></div><h2 id="simulated-parachute-flight-termination" tabindex="-1">Simulated Parachute/Flight Termination <a class="header-anchor" href="#simulated-parachute-flight-termination" aria-label="Permalink to &quot;Simulated Parachute/Flight Termination&quot;">​</a></h2><p><em>Gazebo Classic</em> can be used to simulate deploying a <a href="./../peripherals/parachute.html">parachute</a> during <a href="./../advanced_config/flight_termination.html">Flight Termination</a> (flight termination is triggered by the PWM command that is simulated in <em>Gazebo Classic</em>).</p><p>The <code>if750a</code> target has a parachute attached to the vehicle. To simulate the vehicle, run the following command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_if750a</span></span></code></pre></div><p>To put the vehicle into flight termination state, you can force it to fail a <a href="./../config/safety.html">safety check</a> that has flight termination set as the failsafe action. For example, you could do this by forcing a <a href="./../config/safety.html#geofence-failsafe">Geofence violation</a>.</p><p>For more information see:</p><ul><li><a href="./../advanced_config/flight_termination.html">Flight Termination</a></li><li><a href="./../peripherals/parachute.html">Parachute</a></li><li><a href="./../config/safety.html">Safety Configuration (Failsafes)</a></li></ul><h2 id="video-streaming" tabindex="-1">Video Streaming <a class="header-anchor" href="#video-streaming" aria-label="Permalink to &quot;Video Streaming&quot;">​</a></h2><p>PX4 SITL for Gazebo Classic supports UDP video streaming from a camera sensor attached to a simulated vehicle model. When streaming is enabled, you can connect to this stream from <em>QGroundControl</em> (on UDP port 5600) and view video of the Gazebo Classic environment from the simulated vehicle - just as you would from a real camera. The video is streamed using a <em>gstreamer</em> pipeline and can be enabled/disabled using a button in the Gazebo Classic UI.</p><p>The simulated camera sensor is supported/enabled on the following frames:</p><ul><li><a href="#typhoon_h480">Typhoon H480</a></li></ul><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><p><em>Gstreamer 1.0</em> is required for video streaming. The required dependencies should already have been <a href="#installation">installed when you set up Gazebo Classic</a> (they are included in the standard PX4 installation scripts/instructions for macOS and Ubuntu Linux).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>FYI only, the dependencies include: <code>gstreamer1.0-plugins-base</code>, <code>gstreamer1.0-plugins-good</code>, <code>gstreamer1.0-plugins-bad</code>, <code>gstreamer1.0-plugins-ugly</code>, <code>libgstreamer-plugins-base1.0-dev</code>.</p></div><h3 id="start-stop-video-streaming" tabindex="-1">Start/Stop Video Streaming <a class="header-anchor" href="#start-stop-video-streaming" aria-label="Permalink to &quot;Start/Stop Video Streaming&quot;">​</a></h3><p>Video streaming is automatically started when supported by the target vehicle. For example, to start streaming video on the Typhoon H480:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_typhoon_h480</span></span></code></pre></div><p>Streaming can be paused/restarted using the Gazebo UI <em>Video ON/OFF</em> button..</p><p><img src="'+e+'" alt="Video ON/OFF button"></p><h3 id="how-to-view-gazebo-video" tabindex="-1">How to View Gazebo Video <a class="header-anchor" href="#how-to-view-gazebo-video" aria-label="Permalink to &quot;How to View Gazebo Video&quot;">​</a></h3><p>The easiest way to view the SITL/Gazebo Classic camera video stream is in <em>QGroundControl</em>. Simply open <strong>Application Settings &gt; General</strong> and set <strong>Video Source</strong> to <em>UDP h.264 Video Stream</em> and <strong>UDP Port</strong> to <em>5600</em>:</p><p><img src="'+t+'" alt="QGC Video Streaming Settings for Gazebo"></p><p>The video from Gazebo Classic should then display in <em>QGroundControl</em> just as it would from a real camera.</p><p><img src="'+n+`" alt="QGC Video Streaming Gazebo Example"></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The Typhoon world is not very interesting.</p></div><p>It is also possible to view the video using the <em>Gstreamer Pipeline</em>. Simply enter the following terminal command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gst-launch-1.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> udpsrc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5600</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> caps=&#39;application/x-rtp, media=(string)video, clock-rate=(int)90000, encoding-name=(string)H264&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">! </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rtph264depay</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> !</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> avdec_h264</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> !</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> videoconvert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> !</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autovideosink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fps-update-interval=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sync=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><h3 id="verbose-logging" tabindex="-1">Verbose Logging <a class="header-anchor" href="#verbose-logging" aria-label="Permalink to &quot;Verbose Logging&quot;">​</a></h3><p>SITL fails silently when there is something wrong with the model. You can enable more verbose logging using <code>VERBOSE_SIM</code>, as shown:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VERBOSE_SIM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div><p>or</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VERBOSE_SIM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div><h2 id="extending-and-customizing" tabindex="-1">Extending and Customizing <a class="header-anchor" href="#extending-and-customizing" aria-label="Permalink to &quot;Extending and Customizing&quot;">​</a></h2><p>To extend or customize the simulation interface, edit the files in the <code>Tools/simulation/gazebo/sitl_gazebo</code> folder. The code is available on the <a href="https://github.com/PX4/PX4-SITL_gazebo" target="_blank" rel="noreferrer">sitl_gazebo repository</a> on Github.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The build system enforces the correct GIT submodules, including the simulator. It will not overwrite changes in files in the directory.</p></div><h2 id="further-information" tabindex="-1">Further Information <a class="header-anchor" href="#further-information" aria-label="Permalink to &quot;Further Information&quot;">​</a></h2><ul><li><a href="./../simulation/ros_interface.html">ROS with Gazebo Classic Simulation</a></li><li><a href="./../sim_gazebo_classic/octomap.html">Gazebo Classic Octomap</a></li></ul>`,58),m=[p,d,c,k,g];function u(E,y,b,F,_,f){return o(),h("div",null,m)}const S=l(r,[["render",u]]);export{w as __pageData,S as default};
