import{_ as e,c as t,o as l,ab as i,m as s,a}from"./chunks/framework.CUflZczI.js";const C=JSON.parse('{"title":"Multi-Vehicle Simulation with Gazebo Classic","description":"","frontmatter":{},"headers":[],"relativePath":"ko/sim_gazebo_classic/multi_vehicle_simulation.md","filePath":"ko/sim_gazebo_classic/multi_vehicle_simulation.md"}'),n={name:"ko/sim_gazebo_classic/multi_vehicle_simulation.md"},h=i('<h1 id="multi-vehicle-simulation-with-gazebo-classic" tabindex="-1">Multi-Vehicle Simulation with Gazebo Classic <a class="header-anchor" href="#multi-vehicle-simulation-with-gazebo-classic" aria-label="Permalink to &quot;Multi-Vehicle Simulation with Gazebo Classic&quot;">​</a></h1><p>This topic explains how to simulate multiple UAV vehicles using <a href="./../sim_gazebo_classic/">Gazebo Classic</a> and SITL (Linux only). A different approach is used for simulation with and without ROS.</p><h2 id="multiple-vehicle-with-gazebo-classic" tabindex="-1">Multiple Vehicle with Gazebo Classic <a class="header-anchor" href="#multiple-vehicle-with-gazebo-classic" aria-label="Permalink to &quot;Multiple Vehicle with Gazebo Classic&quot;">​</a></h2><p>To simulate multiple iris or plane vehicles in Gazebo Classic use the following commands in the terminal (from the root of the <em>Firmware</em> tree):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tools/simulation/gazebo-classic/sitl_multiple_run.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">number_of_vehicle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">worl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scrip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">targe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-l </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">labe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span></span></code></pre></div><ul><li><p><code>&lt;model&gt;</code>: The <a href="./../sim_gazebo_classic/vehicles.html">vehicle type/model</a> to spawn, e.g.: <code>iris</code> (default), <code>plane</code>, <code>standard_vtol</code>, <code>rover</code>, <code>r1_rover</code> <code>typhoon_h480</code>.</p></li><li><p><code>&lt;number_of_vehicles&gt;</code>: The number of vehicles to spawn. Default is 3. Maximum is 254.</p></li><li><p><code>&lt;world&gt;</code>: The <a href="./../sim_gazebo_classic/worlds.html">world</a> that the vehicle should be spawned into, e.g.: <code>empty</code> (default)</p></li><li><p><code>&lt;script&gt;</code>: Spawn multiple vehicles of different types (overriding the values in <code>-m</code> and <code>-n</code>). For example:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;iris:3,plane:2,standard_vtol:3&quot;</span></span></code></pre></div><ul><li>Supported vehicle types are: <code>iris</code>, <code>plane</code>, <code>standard_vtol</code>, <code>rover</code>, <code>r1_rover</code> <code>typhoon_h480</code>.</li><li>The number after the colon indicates the number of vehicles (of that type) to spawn.</li><li>Maximum number of vehicles is 254.</li></ul></li><li><p><code>&lt;target&gt;</code>: build target, e.g: <code>px4_sitl_default</code> (default), <code>px4_sitl_nolockstep</code></p></li><li><p><code>&lt;label&gt;</code> : specific label for model, e.g: <code>rplidar</code></p></li></ul><p>Each vehicle instance is allocated a unique MAVLink system id (2, 3, 4, etc.). MAVLink system id 1 is skipped in order to have consistency among <a href="./../ros2/multi_vehicle.html#principle-of-operation">namespaces</a>. Vehicle instances are accessed from sequentially allocated PX4 remote UDP ports: <code>14541</code> - <code>14548</code> (additional instances are all accessed using the same remote UDP port: <code>14549</code>).</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The 254-vehicle limitation occurs because mavlink <code>MAV_SYS_ID</code> only supports 255 vehicles in the same network (and the first one is skipped). The <code>MAV_SYS_ID</code> is allocated in the SITL rcS: <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/ROMFS/px4fmu_common/init.d-posix/rcS#L131" target="_blank" rel="noreferrer">init.d-posix/rcS</a></p></div><h3 id="video-multiple-multicopter-iris" tabindex="-1">Video: Multiple Multicopter (Iris) <a class="header-anchor" href="#video-multiple-multicopter-iris" aria-label="Permalink to &quot;Video: Multiple Multicopter (Iris)&quot;">​</a></h3>',9),p=s("p",null,[s("div",{class:"embed-responsive embed-responsive-16by9"},[s("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/Mskx_WxzeCk",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),o=s("h3",{id:"video-multiple-plane",tabindex:"-1"},[a("Video: Multiple Plane "),s("a",{class:"header-anchor",href:"#video-multiple-plane","aria-label":'Permalink to "Video: Multiple Plane"'},"​")],-1),k=s("p",null,[s("div",{class:"embed-responsive embed-responsive-16by9"},[s("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/aEzFKPMEfjc",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),r=s("h3",{id:"video-multiple-vtol",tabindex:"-1"},[a("Video: Multiple VTOL "),s("a",{class:"header-anchor",href:"#video-multiple-vtol","aria-label":'Permalink to "Video: Multiple VTOL"'},"​")],-1),d=s("p",null,[s("div",{class:"embed-responsive embed-responsive-16by9"},[s("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/lAjjTFFZebI",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),c=i(`<h3 id="build-and-test-xrce-dds" tabindex="-1">Build and Test (XRCE-DDS) <a class="header-anchor" href="#build-and-test-xrce-dds" aria-label="Permalink to &quot;Build and Test (XRCE-DDS)&quot;">​</a></h3><p><code>Tools/simulation/gazebo-classic/sitl_multiple_run.sh</code> can be used to simulate multiple vehicles connected via XRCE-DDS in Gazebo Classic.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You will need to have installed the XRCE-DDS dependencies. For more information see: <a href="./../ros2/user_guide.html">ROS 2 User Guide (PX4-ROS 2 Bridge)</a>, for interfacing with ROS 2 nodes.</p></div><p>To build an example setup, follow the steps below:</p><ol><li><p>Clone the PX4/Firmware code, then build the SITL code:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Firmware_clone</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DONT_RUN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div></li><li><p>Build the <code>micro xrce-dds agent</code> and the interface package following the <a href="./../ros2/user_guide.html">instructions here</a>.</p></li><li><p>Run <code>Tools/simulation/gazebo-classic/sitl_multiple_run.sh</code>. For example, to spawn 4 vehicles, run:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Tools/simulation/gazebo-classic/sitl_multiple_run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iris</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p></div></li></ol><p>Each vehicle instance is allocated a unique MAVLink system id (2, 3, 4, etc.). MAVLink system id 1 is skipped. :::</p><ol><li><p>Run <code>MicroXRCEAgent</code>. It will automatically connect to all four vehicles:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MicroXRCEAgent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> udp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8888</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">The simulator startup script automatically assigns a <a href="./../ros2/multi_vehicle.html">unique namespace</a> to each vehicle.</p></div></li></ol><p>:::</p><h2 id="multiple-vehicles-with-mavros-and-gazebo-classic" tabindex="-1">Multiple Vehicles with MAVROS and Gazebo Classic <a class="header-anchor" href="#multiple-vehicles-with-mavros-and-gazebo-classic" aria-label="Permalink to &quot;Multiple Vehicles with MAVROS and Gazebo Classic&quot;">​</a></h2><p>This example demonstrates a setup that opens the Gazebo Classic client GUI showing two Iris vehicles in an empty world. You can then control the vehicles with <em>QGroundControl</em> and MAVROS in a similar way to how you would manage a single vehicle.</p><h3 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;Required&quot;">​</a></h3><ul><li>Current <a href="./../ros/mavros_installation.html">PX4 ROS/Gazebo development environment</a> (which includes the <a href="http://wiki.ros.org/mavros" target="_blank" rel="noreferrer">MAVROS package</a>).</li><li>a clone of latest <a href="https://github.com/PX4/PX4-Autopilot" target="_blank" rel="noreferrer">PX4/PX4-Autopilot</a></li></ul><h3 id="build-and-test" tabindex="-1">Build and Test <a class="header-anchor" href="#build-and-test" aria-label="Permalink to &quot;Build and Test&quot;">​</a></h3><p>To build an example setup, follow the step below:</p><ol><li><p>Clone the PX4/PX4-Autopilot code, then build the SITL code</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Firmware_clone</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DONT_RUN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div></li><li><p>Source your environment:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Tools/simulation/gazebo-classic/setup_gazebo.bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)/build/px4_sitl_default</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ROS_PACKAGE_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ROS_PACKAGE_PATH:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/Tools/simulation/gazebo-classic/sitl_gazebo</span></span></code></pre></div></li><li><p>Run launch file:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">roslaunch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multi_uav_mavros_sitl.launch</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">You can specify <code>gui:=false</code> in the above <em>roslaunch</em> to launch Gazebo Classic without its UI.</p></div></li></ol><p>:::</p><p>The tutorial example opens the Gazebo Classic client GUI showing two Iris vehicles in an empty world.</p><p>You can control the vehicles with <em>QGroundControl</em> or MAVROS in a similar way to how you would manage a single vehicle:</p><ul><li><em>QGroundControl</em> will have a drop-down to select the vehicle that is &quot;in focus&quot;</li><li>MAVROS requires that you include the proper namespace before the topic/service path (e.g. for <code>&lt;group ns=&quot;uav1&quot;&gt;</code> you&#39;ll use <em>/uav1/mavros/mission/push</em>).</li></ul><h3 id="what-s-happening" tabindex="-1">What&#39;s Happening? <a class="header-anchor" href="#what-s-happening" aria-label="Permalink to &quot;What&#39;s Happening?&quot;">​</a></h3><p>For each simulated vehicle, the following is required:</p><ul><li><p><strong>Gazebo Classic model</strong>: This is defined as <code>xacro</code> file in <code>PX4-Autopilot/Tools/simulation/gazebo-classic/sitl_gazebo-classic/models/rotors_description/urdf/&lt;model&gt;_base.xacro</code> see <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/tree/02060a86652b736ca7dd945a524a8bf84eaf5a05/models/rotors_description/urdf" target="_blank" rel="noreferrer">here</a>. Currently, the model <code>xacro</code> file is assumed to end with <strong>base.xacro</strong>. This model should have an argument called <code>mavlink_udp_port</code> which defines the UDP port on which Gazebo Classic will communicate with PX4 node. The model&#39;s <code>xacro</code> file will be used to generate an <code>urdf</code> model that contains UDP port that you select. To define the UDP port, set the <code>mavlink_udp_port</code> in the launch file for each vehicle, see <a href="https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/launch/multi_uav_mavros_sitl.launch#L37" target="_blank" rel="noreferrer">here</a> as an example.</p><div class="info custom-block"><p class="custom-block-title">If you are using the same vehicle model, you don&#39;t need a separate <strong><code>xacro</code></strong> file for each vehicle. The same <strong><code>xacro</code></strong> file is adequate.</p></div></li></ul><p>:::</p><ul><li><p><strong>PX4 node</strong>: This is the SITL PX4 app. It communicates with the simulator, Gazebo Classic, through the same UDP port defined in the Gazebo Classic vehicle model, i.e. <code>mavlink_udp_port</code>. To set the UDP port on the PX4 SITL app side, you need to set the <code>SITL_UDP_PRT</code> parameter in the startup file to match the <code>mavlink_udp_port</code> discussed previously, see <a href="https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/posix-configs/SITL/init/ekf2/iris_2#L46" target="_blank" rel="noreferrer">here</a>. The path of the startup file in the launch file is generated based on the <code>vehicle</code> and <code>ID</code> arguments, see <a href="https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/launch/multi_uav_mavros_sitl.launch#L36" target="_blank" rel="noreferrer">here</a>. The <code>MAV_SYS_ID</code> for each vehicle in the startup file, see <a href="https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/posix-configs/SITL/init/ekf2/iris_2#L4" target="_blank" rel="noreferrer">here</a>, should match the <code>ID</code> for that vehicle in the launch file <a href="https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/launch/multi_uav_mavros_sitl.launch#L25" target="_blank" rel="noreferrer">here</a>. This will help make sure you keep the configurations consistent between the launch file and the startup file.</p></li><li><p><strong>MAVROS node</strong> (optional): A separate MAVROS node can be run in the launch file, see <a href="https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/launch/multi_uav_mavros_sitl.launch#L41" target="_blank" rel="noreferrer">here</a>, in order to connect to PX4 SITL app, if you want to control your vehicle through ROS. You need to start a MAVLink stream on a unique set of ports in the startup file, see <a href="https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/posix-configs/SITL/init/ekf2/iris_1#L68" target="_blank" rel="noreferrer">here</a>. Those unique set of ports need to match those in the launch file for the MAVROS node, see <a href="https://github.com/PX4/PX4-Autopilot/blob/4d0964385b84dc91189f377aafb039d10850e5d6/launch/multi_uav_mavros_sitl.launch#L26" target="_blank" rel="noreferrer">here</a>.</p></li></ul><p>The launch file <code>multi_uav_mavros_sitl.launch</code>does the following,</p><ul><li><p>loads a world in Gazebo Classic,</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- Gazebo sim --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(find gazebo_ros)/launch/empty_world.launch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gui&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(arg gui)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;world_name&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(arg world)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;debug&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(arg debug)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;verbose&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(arg verbose)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;paused&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(arg paused)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p>for each vehicle,</p><ul><li><p>creates urdf model from xacro, loads gazebo classic model and runs PX4 SITL app instance</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- PX4 SITL and vehicle spawn --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(find px4)/launch/single_vehicle_spawn.launch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;y&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;z&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;R&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;P&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Y&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vehicle&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(arg vehicle)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rcS&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(find px4)/posix-configs/SITL/init/$(arg est)/$(arg vehicle)_$(arg ID)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mavlink_tcp_port&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;4560&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ID&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(arg ID)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p>runs a mavros node</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- MAVROS --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(find mavros)/launch/px4.launch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fcu_url&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(arg fcu_url)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gcs_url&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tgt_system&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(arg ID)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tgt_component&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ul><div class="info custom-block"><p class="custom-block-title">The complete block for each vehicle is enclosed in a set of <code>&lt;group&gt;</code> tags to separate the ROS namespaces of the vehicles.</p></div></li></ul><p>:::</p><p>To add a third iris to this simulation there are two main components to consider:</p><ul><li><p>add <code>UAV3</code> to <strong>multi_uav_mavros_sitl.launch</strong></p><ul><li>duplicate the group of either existing vehicle (<code>UAV1</code> or <code>UAV2</code>)</li><li>increment the <code>ID</code> arg to <code>3</code></li><li>select a different port for <code>mavlink_udp_port</code> arg for communication with Gazebo Classic</li><li>selects ports for MAVROS communication by modifying both port numbers in the <code>fcu_url</code> arg</li></ul></li><li><p>create a startup file, and change the file as follows:</p><ul><li><p>make a copy of an existing iris rcS startup file (<code>iris_1</code> or <code>iris_2</code>) and rename it <code>iris_3</code></p></li><li><p><code>MAV_SYS_ID</code> value to <code>3</code></p></li><li><p><code>SITL_UDP_PRT</code> value to match that of the <code>mavlink_udp_port</code> launch file arg</p></li><li><p>the first <code>mavlink start</code> port and the <code>mavlink stream</code> port values to the same values, which is to be used for QGC communication</p></li><li><p>the second <code>mavlink start</code> ports need to match those used in the launch file <code>fcu_url</code> arg</p><div class="info custom-block"><p class="custom-block-title">Be aware of which port is <code>src</code> and <code>dst</code> for the different endpoints.</p></div></li></ul></li></ul><p>:::</p><h2 id="multiple-vehicles-using-sdf-models" tabindex="-1">Multiple Vehicles using SDF Models <a class="header-anchor" href="#multiple-vehicles-using-sdf-models" aria-label="Permalink to &quot;Multiple Vehicles using SDF Models&quot;">​</a></h2><p>This section shows how developers can simulate multiple vehicles using vehicle models defined in Gazebo Classic SDF files (instead of using models defined in the ROS Xacro file, as discussed in the rest of this topic).</p><p>The steps are:</p><ol><li><p>Install <em>xmlstarlet</em> from your Linux terminal:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmlstarlet</span></span></code></pre></div></li><li><p>Use <em>roslaunch</em> with the <strong>multi_uav_mavros_sitl_sdf.launch</strong> launch file:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">roslaunch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multi_uav_mavros_sitl_sdf.launch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vehicle:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">model_file_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Note</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> that the vehicle model file name argument is optional (\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vehicle:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=&lt;model_file_name&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`); if omitted the [plane model](https://github.com/PX4/PX4-SITL_gazebo-classic/tree/master/models/plane) will be used by default.</span></span></code></pre></div></li></ol><p>:::</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>This method is similar to using the xacro except that the SITL/Gazebo Classic port number is automatically inserted by _xmstarlet_ for each spawned vehicle, and does not need to be specified in the SDF file.</span></span>
<span class="line"><span>To add a new vehicle, you need to make sure the model can be found (in order to spawn it in Gazebo Classic), and PX4 needs to have an appropriate corresponding startup script.</span></span>
<span class="line"><span>1. You can choose to do either of:</span></span>
<span class="line"><span>- modify the **single_vehicle_spawn_sdf.launch** file to point to the location of your model by changing the line below to point to your model:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  \`\`\`sh</span></span>
<span class="line"><span>  $(find px4)/Tools/simulation/gazebo/sitl_gazebo-classic/models/$(arg vehicle)/$(arg vehicle).sdf</span></span>
<span class="line"><span>  \`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  ::: info Ensure you set the \`vehicle\` argument even if you hardcode the path to your model.</span></span>
<span class="line"><span>:::</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- copy your model into the folder indicated above (following the same path convention).</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1. The \`vehicle\` argument is used to set the \`PX4_SIM_MODEL\` environment variable, which is used by the default rcS (startup script) to find the corresponding startup settings file for the model. Within PX4 these startup files can be found in the **PX4-Autopilot/ROMFS/px4fmu_common/init.d-posix/** directory. For example, here is the plane model&#39;s [startup script](https://github.com/PX4/PX4-Autopilot/blob/release/1.15/ROMFS/px4fmu_common/init.d-posix/airframes/1030_gazebo-classic_plane). For this to work, the PX4 node in the launch file is passed arguments that specify the _rcS_ file (**etc/init.d/rcS**) and the location of the rootfs etc directory (\`$(find px4)/build_px4_sitl_default/etc\`). For simplicity, it is suggested that the startup file for the model be placed alongside PX4&#39;s in **PX4-Autopilot/ROMFS/px4fmu_common/init.d-posix/**.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## Additional Resources</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- See [Simulation](../simulation/index.md) for a description of the UDP port configuration.</span></span>
<span class="line"><span>- See [URDF in Gazebo](http://wiki.ros.org/urdf/Tutorials/Using%20a%20URDF%20in%20Gazebo) for more information about spawning the model with xacro.</span></span>
<span class="line"><span>- See [RotorS](https://github.com/ethz-asl/rotors_simulator/tree/master/rotors_description/urdf) for more xacro models.</span></span></code></pre></div>`,36),u=[h,p,o,k,r,d,c];function g(E,F,m,y,b,f){return l(),t("div",null,u)}const _=e(n,[["render",g]]);export{C as __pageData,_ as default};
