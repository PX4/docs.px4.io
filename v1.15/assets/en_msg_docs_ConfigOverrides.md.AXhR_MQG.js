import{_ as s,c as i,o as a,ab as e}from"./chunks/framework.CUflZczI.js";const c=JSON.parse('{"title":"ConfigOverrides (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"en/msg_docs/ConfigOverrides.md","filePath":"en/msg_docs/ConfigOverrides.md"}'),n={name:"en/msg_docs/ConfigOverrides.md"},t=e(`<h1 id="configoverrides-uorb-message" tabindex="-1">ConfigOverrides (UORB message) <a class="header-anchor" href="#configoverrides-uorb-message" aria-label="Permalink to &quot;ConfigOverrides (UORB message)&quot;">â€‹</a></h1><p>Configurable overrides by (external) modes or mode executors</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/ConfigOverrides.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Configurable overrides </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (external) modes or mode executors</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp		# time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> disable_auto_disarm         # Prevent the drone from automatically disarming after </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">landing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> configured</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> defer_failsafes             # Defer all failsafes that can be </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deferred</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (until the flag is </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">cleared</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int16 defer_failsafes_timeout_s  # Maximum time a failsafe can be deferred. </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system default, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> no timeout</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int8 SOURCE_TYPE_MODE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int8 SOURCE_TYPE_MODE_EXECUTOR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int8 source_type</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 source_id                  # ID depending on source_type</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 ORB_QUEUE_LENGTH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># TOPICS config_overrides config_overrides_request</span></span></code></pre></div>`,4),l=[t];function p(h,r,k,d,o,E){return a(),i("div",null,l)}const _=s(n,[["render",p]]);export{c as __pageData,_ as default};
