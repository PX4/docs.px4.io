import{_ as s,c as i,o as a,ab as t}from"./chunks/framework.CUflZczI.js";const E=JSON.parse('{"title":"VelocityLimits (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/msg_docs/VelocityLimits.md","filePath":"zh/msg_docs/VelocityLimits.md"}'),e={name:"zh/msg_docs/VelocityLimits.md"},l=t(`<h1 id="velocitylimits-uorb-message" tabindex="-1">VelocityLimits (UORB message) <a class="header-anchor" href="#velocitylimits-uorb-message" aria-label="Permalink to &quot;VelocityLimits (UORB message)&quot;">â€‹</a></h1><p>Velocity and yaw rate limits for a multicopter position slow mode only</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/VelocityLimits.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Velocity and yaw rate limits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a multicopter position slow mode only</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># absolute speeds, NAN means use default limit</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 horizontal_velocity # [m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 vertical_velocity # [m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 yaw_rate # [rad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s]</span></span></code></pre></div>`,4),n=[l];function o(p,h,r,c,k,d){return a(),i("div",null,n)}const y=s(e,[["render",o]]);export{E as __pageData,y as default};
