import{_ as i}from"./chunks/bootloader_update.Dqks0tXY.js";import{_ as a}from"./chunks/bootloader_fmu_v3_update.hb6XGZM6.js";import{_ as s,c as e,o as t,ab as l}from"./chunks/framework.CUflZczI.js";const y=JSON.parse('{"title":"Bootloader 更新","description":"","frontmatter":{},"headers":[],"relativePath":"zh/advanced_config/bootloader_update.md","filePath":"zh/advanced_config/bootloader_update.md"}'),o={name:"zh/advanced_config/bootloader_update.md"},h=l(`<h1 id="bootloader-更新" tabindex="-1">Bootloader 更新 <a class="header-anchor" href="#bootloader-更新" aria-label="Permalink to &quot;Bootloader 更新&quot;">​</a></h1><p><em>PX4 启动加载器</em> 用于加载 <a href="./../flight_controller/pixhawk_series.html">Pixhawk 板</a> (PX4FMU, PX4IO)。</p><p>Pixhawk控制器通常预安装了适当的引导程序。 但在某些情况下，当它不存在，或者有一个的旧版本需要更新。</p><p>此篇介绍了更新 Pixhawk bootloader 的几种常见方法。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><ul><li>Most boards will need to use the <a href="#debug-probe-bootloader-update">Debug Probe</a> to update the bootloader.</li><li>On <a href="./../flight_controller/pixhawk6x-rt.html">FMUv6X-RT</a> you can <a href="./bootloader_update_v6xrt.html">install bootloader/unbrick boards via USB</a>. This is useful if you don&#39;t have a debug probe.</li><li>On FMUv2 and some custom firmware (only) you can use <a href="#qgc-bootloader-update">QGC Bootloader Update</a>.</li></ul></div><h2 id="构建px4-启动加载器" tabindex="-1">构建PX4 启动加载器 <a class="header-anchor" href="#构建px4-启动加载器" aria-label="Permalink to &quot;构建PX4 启动加载器&quot;">​</a></h2><h3 id="px4-bootloader-fmuv6x-and-later" tabindex="-1">PX4 Bootloader FMUv6X and later <a class="header-anchor" href="#px4-bootloader-fmuv6x-and-later" aria-label="Permalink to &quot;PX4 Bootloader FMUv6X and later&quot;">​</a></h3><p>从FMUv6X （STM32H7）的板子开始，使用代码树内的 PX4 bootloader。</p><p>This can be built from within the <a href="https://github.com/PX4/PX4-Autopilot" target="_blank" rel="noreferrer">PX4-Autopilot</a> directory using the <code>make</code> command and the board-specific target with a <code>_bootloader</code> suffix.</p><p>对于FMUv6X，命令是：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v6x_bootloader</span></span></code></pre></div><p>这将构建 <code>build/px4_fmu-v6x_bootloader/px4_fmu-v6x_bootloader.elf</code>格式的bootloader 二进制文件，它可以通过 SWD 或 DFU烧写。 如果你正准备构建 bootloader，你应该已经熟悉这些选项之一。</p><p>如果需要 HEX 文件而不是 ELF 文件，请使用 objcopy 参数：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm-none-eabi-objcopy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ihex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/px4_fmu-v6x_bootloader/px4_fmu-v6x_bootloader.elf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v6x_bootloader.hex</span></span></code></pre></div><h3 id="px4-bootloader-fmuv5x-and-earlier" tabindex="-1">PX4 Bootloader FMUv5X and earlier <a class="header-anchor" href="#px4-bootloader-fmuv5x-and-earlier" aria-label="Permalink to &quot;PX4 Bootloader FMUv5X and earlier&quot;">​</a></h3><p>请参考README中的说明来学习如何使用它。</p><p>The instructions in the repo README explain how to use it.</p><h2 id="构建旧的-px4-启动加载器" tabindex="-1">构建旧的 PX4 启动加载器 <a class="header-anchor" href="#构建旧的-px4-启动加载器" aria-label="Permalink to &quot;构建旧的 PX4 启动加载器&quot;">​</a></h2><p>The following steps explain how you can &quot;manually&quot; update the bootloader using a <a href="./../debug/swd_debug.html#debug-probes-for-px4-hardware">compatible Debug Probe</a>:</p><ol><li><p>Get a binary containing the bootloader (either from dev team or <a href="#building-the-px4-bootloader">build it yourself</a>).</p></li><li><p>Get a <a href="./../debug/swd_debug.html#debug-probes-for-px4-hardware">Debug Probe</a>. Connect the probe your PC via USB and setup the <code>gdbserver</code>.</p></li><li><p>Go into the directory containing the binary and run the command for your target bootloader in the terminal:</p><ul><li><p>FMUv6X</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm-none-eabi-gdb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v6x_bootloader.elf</span></span></code></pre></div></li><li><p>FMUv6X-RT</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm-none-eabi-gdb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v6xrt_bootloader.elf</span></span></code></pre></div></li><li><p>FMUv5</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div></li></ul><div class="info custom-block"><p class="custom-block-title">H7 Bootloaders from <a href="https://github.com/PX4/PX4-Autopilot" target="_blank" rel="noreferrer">PX4/PX4-Autopilot</a> are named with pattern <code>*._bootloader.elf</code>. Bootloaders from <a href="https://github.com/PX4/PX4-Bootloader" target="_blank" rel="noreferrer">PX4/PX4-Bootloader</a> are named with the pattern <code>*_bl.elf</code>.</p></div></li></ol><p>:::</p><ol><li><p><em>gdb 终端</em> 出现，它应该显示以下输出：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gdb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (GNU </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Tools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Arm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Embedded</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Processors</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 7-2017-q4-major</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) 8.0.50.20171128-git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Copyright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (C) 2017 Free Software Foundation, Inc.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">License</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GPLv3+:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GPL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> later</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://gnu.org/licenses/gpl.htm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> free</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> software:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> are</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> free</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> change</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redistribute</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> it.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">There</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WARRANTY,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> permitted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> law.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GDB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> was</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configured</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;--host=x86_64-linux-gnu --target=arm-none-eabi&quot;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;show configuration&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configuration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> details.</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">For</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;help&quot;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;apropos word&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commands</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> related</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;word&quot;...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Reading</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> symbols</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4fmuv5_bl.elf...done.</span></span></code></pre></div></li><li><p>Find your <code>&lt;dronecode-probe-id&gt;</code> by running an <code>ls</code> command in the <strong>/dev/serial/by-id</strong> directory.</p></li><li><p>Now connect to the debug probe with the following command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ext</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/serial/by-id/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dronecode-probe-i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p>Power on the Pixhawk with another USB cable and connect the probe to the <code>FMU-DEBUG</code> port.</p><div class="info custom-block"><p class="custom-block-title">If using a Dronecode probe you may need to remove the case in order to connect to the <code>FMU-DEBUG</code> port (e.g. on Pixhawk 4 you would do this using a T6 Torx screwdriver).</p></div></li></ol><p>:::</p><ol><li><p>Use the following command to scan for the Pixhawk\`s SWD and connect to it:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div></li><li><p>将二进制文件加载到 Pixhawk 中 ：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gdb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) load</span></span></code></pre></div></li></ol><p>在引导程序更新后，您可以使用 <em>QGroundControl</em> <a href="./../config/firmware.html">加载 PX4 固件</a>。</p><h2 id="qgc-引导加载器更新" tabindex="-1">QGC 引导加载器更新 <a class="header-anchor" href="#qgc-引导加载器更新" aria-label="Permalink to &quot;QGC 引导加载器更新&quot;">​</a></h2><p>最简单的方法是首先使用 <em>QGroundControl</em> 来安装包含需要的/最新引导器的固件。 然后，可以通过设置参数<a href="./../advanced_config/parameter_reference.html#SYS_BL_UPDATE"> SYS_BL_UPDATE </a>来在下次重启时启动 bootloader 更新。</p><p>This approach can only be used if <a href="./../advanced_config/parameter_reference.html#SYS_BL_UPDATE">SYS_BL_UPDATE</a> is present in firmware.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Currently only FMUv2 and some custom firmware includes the desired bootloader.</p></div><p>步骤如下：</p><ol><li><p>插入 SD 卡（使能引导日志记录，便于调试任何可能的问题）。</p></li><li><p>使用包含 最新的/所需的 bootloader 的 image 文件来<a href="./../config/firmware.html#custom">更新固件</a>。</p><div class="info custom-block"><p class="custom-block-title">INFO</p></div></li></ol><p>The updated bootloader might be supplied in custom firmware (i.e. from the dev team), or it or may be included in the latest main branch. :::</p><ol><li>等待飞控重启。</li><li><a href="./../advanced_config/parameters.html">找到并启用</a> 参数 <a href="./../advanced_config/parameter_reference.html#SYS_BL_UPDATE">SYS_BL_UPDATE</a>。</li><li>重新启动（断开/重新连接飞控板）。 Bootloader 更新只需要几秒钟即可完成。</li></ol><p>通常，此时您可能想要使用 正确/新安装 的 bootloader 再次<a href="./../config/firmware.html">更新固件</a>。</p><p>以下是更新FMUv2引导程序的一个具体例子。</p><h3 id="fmuv2-引导加载器更新" tabindex="-1">FMUv2 引导加载器更新 <a class="header-anchor" href="#fmuv2-引导加载器更新" aria-label="Permalink to &quot;FMUv2 引导加载器更新&quot;">​</a></h3><p>如果 <em>QGroundControl</em> 安装了 FMUv2 目标(见安装过程中的控制台) 而且你有一个新的板，你可能需要更新引导程序，以便访问你飞行控制器上的所有内存。</p><p>:::note 早期FMUv2 <a href="./../flight_controller/pixhawk_series.html#fmu_versions">Pixhawk系列</a> 飞行控制器有一个 <a href="./../flight_controller/silicon_errata.html#fmuv2-pixhawk-silicon-errata">硬件问题</a> 限制它们使用闪存内存的1MB。 这个问题已在新版面解决， 但您可能需要更新工厂提供的引导程序，以便安装 FMUv3 固件并访问所有 2MB 可用内存。 :::</p><p>要更新引导器：</p><ol><li><p>插入 SD 卡（使能引导日志记录，便于调试任何可能的问题）。</p></li><li><p><a href="./../config/firmware.html">更新固件</a> 到 PX4 <em>主</em> 版本 (当更新固件时) 勾选 <strong>高级设置</strong> 然后选择 <strong>开发者(主)</strong> 从下拉列表中选择)。 <em>QGroundControl</em> 将自动检测硬件支持FMUv2并安装相应的Firmware。</p><p><img src="`+i+'" alt="FMUv2 更新"></p><p>等待飞控重启。</p></li><li><p><a href="./../advanced_config/parameters.html">找到并启用</a> 参数 <a href="./../advanced_config/parameter_reference.html#SYS_BL_UPDATE">SYS_BL_UPDATE</a>。</p></li><li><p>重新启动（断开/重新连接飞控板）。 Bootloader 更新只需要几秒钟即可完成。</p></li><li><p>然后 <a href="./../config/firmware.html">再次更新固件</a> 这一次， <em>QGroundControl</em> 应该自动检测硬件为 FMUv3 并正确更新固件。</p><p><img src="'+a+'" alt="FMUv3 update"></p></li></ol><p>:::note 如果硬件有 <a href="./../flight_controller/silicon_errata.html#fmuv2-pixhawk-silicon-errata">Silicon Errata</a> 它仍将被检测为 FMUv2 ，你会看到FMUv2 再次重新安装(在控制台)。 在这种情况下，您将无法安装 FMUv3 硬件。 :::</p><h2 id="其他飞控板-非-pixhawk" tabindex="-1">其他飞控板（非 Pixhawk） <a class="header-anchor" href="#其他飞控板-非-pixhawk" aria-label="Permalink to &quot;其他飞控板（非 Pixhawk）&quot;">​</a></h2><p>不属于 <a href="./../flight_controller/pixhawk_series.html"> Pixhawk 系列</a>的板卡将具有自己的 bootloader 更新机制。</p><p>对于已预烧写 Betaflight 的板卡，请参见<a href="./bootloader_update_from_betaflight.html"> Betaflight System 烧写 Bootloader </a>。</p>',44),n=[h];function p(r,d,k,c,F,g){return t(),e("div",null,n)}const f=s(o,[["render",p]]);export{y as __pageData,f as default};
