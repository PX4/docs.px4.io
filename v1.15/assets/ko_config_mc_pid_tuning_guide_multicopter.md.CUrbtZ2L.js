import{_ as e,a,b as t,c as r,d as o,e as l,f as i,g as n,h as s}from"./chunks/MC_PID_tuning-Airmode.CKwSaH6s.js";import{_ as c,c as d,o as _,ab as p}from"./chunks/framework.CUflZczI.js";const v=JSON.parse('{"title":"Multicopter PID Tuning Guide (Manual/Advanced)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/config_mc/pid_tuning_guide_multicopter.md","filePath":"ko/config_mc/pid_tuning_guide_multicopter.md"}'),m={name:"ko/config_mc/pid_tuning_guide_multicopter.md"},h=p('<h1 id="multicopter-pid-tuning-guide-manual-advanced" tabindex="-1">Multicopter PID Tuning Guide (Manual/Advanced) <a class="header-anchor" href="#multicopter-pid-tuning-guide-manual-advanced" aria-label="Permalink to &quot;Multicopter PID Tuning Guide (Manual/Advanced)&quot;">​</a></h1><p>PX4 컨트롤러의 튜닝 방법에 대한 자세한 정보를 제공합니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="./../config/autotune.html">Autotune</a> is recommended for tuning the vehicles <em>around the hover thrust point</em>, as the approach described is intuitive, easy, and fast. 이것은 대부분의 기체에 필요합니다.</p></div><p>호버 추력 지점 주변의 튜닝이 충분하지 않을 때 이 가이드를 사용하십시오 (예 : 더 높은 추력에서 비선형성 및 진동이 방생하는 기체). 기본 튜닝을 충분히 이해하는 것이 <a href="#airmode-mixer-saturation">airmode</a> 설정 사용법을 이해하는데 유용합니다.</p><h2 id="튜닝-단계" tabindex="-1">튜닝 단계 <a class="header-anchor" href="#튜닝-단계" aria-label="Permalink to &quot;튜닝 단계&quot;">​</a></h2><p>:::note 안전상의 이유로 기본 게인은 낮은 값으로 설정됩니다. 적절한 제어 응답을 얻기 위해서는 게인 값을 적절하게 증가시켜야 합니다. :::</p><p>튜닝시 준수할 일반적인 사항은 아래와 같습니다.</p><ul><li>큰 이득은 위험한 진동을 발생시킬 수 있으므로, 모든 이득은 매우 천천히 증가시켜야합니다! 일반적으로 반복당 이득을 20~30%씩 증가시키고, 최종 미세 조정을 위해 5~10%로 줄입니다.</li><li>매개변수를 변경하기 전에 착륙시키십시오. 스로틀을 천천히 증가시키고 진동을 점검하십시오.</li><li>호버링 추력 지점을 중심으로 기체를 조정하고, <a href="#thrust-curve">추력 곡선 매개 변수</a>를 사용하여 추력 비선형성 또는 높은 추력 진동을 설명합니다.</li><li>선택적으로 <a href="./../advanced_config/parameter_reference.html#SDLOG_PROFILE">SDLOG_PROFILE</a> 매개변수로 고속 로깅 프로필을 활성화하면 로그를 사용하여 비율과 태도 추적 성능을 평가할 수 있습니다 (이 옵션은 나중에 비활성화 할 수 있음).</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>기체 튜닝시 항상 <a href="./../advanced_config/parameter_reference.html#MC_AIRMODE">MC_AIRMODE</a>를 비활성화 하십시오.</p></div><h3 id="속도-컨트롤러" tabindex="-1">속도 컨트롤러 <a class="header-anchor" href="#속도-컨트롤러" aria-label="Permalink to &quot;속도 컨트롤러&quot;">​</a></h3><p>속도 컨트롤러는 기체 속도(요, 피치, 롤)를 제어하는 3 개의 독립적인 PID 컨트롤러를 가지고 있는 가장 안쪽의 루프입니다.</p><div class="info custom-block"><p class="custom-block-title">A well-tuned rate controller is very important as it affects <em>all</em> flight modes. A badly tuned rate controller will be visible in <a href="./../flight_modes_mc/position.html">Position mode</a>, for example, as &quot;twitches&quot; (the vehicle will not hold perfectly still in the air).</p></div><h4 id="속도-컨트롤러-아키텍처-양식" tabindex="-1">속도 컨트롤러 아키텍처/양식 <a class="header-anchor" href="#속도-컨트롤러-아키텍처-양식" aria-label="Permalink to &quot;속도 컨트롤러 아키텍처/양식&quot;">​</a></h4><p>PX4는 단일 &quot;혼합&quot; 구현(<a href="#parallel-form">병렬</a> 및 <a href="#standard-form">표준</a>)에서 두 가지 (수학적으로 동등한) 형태의 PID 속도 컨트롤러를 지원합니다.</p><p>사용자는 다른 형식의 비례 이득을 &quot;1&quot;로 설정하여 사용되는 형식을 선택할 수 있습니다 (즉, 아래 다이어그램에서 병렬 형식의 경우 <strong>K</strong>을 1로 설정하거나 <strong>P</strong> 표준 형식의 경우 1로 설정하여 K 또는 P 블록을 한 줄로 바꿉니다).</p><p><img src="'+e+'" alt="PID_Mixed"></p><ul><li>*G(s)*는 기체의 각속도를 나타냅니다.</li><li><em>r</em>은 속도 설정점입니다.</li><li><em>y</em>는 신체 각속도 (자이로로 측정)입니다.</li><li><em>e</em>는 속도 설정값과 측정 속도 사이의 오류입니다.</li><li><em>u</em>는 PID 컨트롤러의 출력입니다.</li></ul><p>두 가지 형식이 아래에 기술되어 있습니다.</p><p>:::note 미분항(<strong>D</strong>)은 <a href="http://brettbeauregard.com/blog/2011/04/improving-the-beginner%E2%80%99s-pid-derivative-kick/" target="_blank" rel="noreferrer">미분 킥</a> 효과를 회피하기 위하여 피드백 경로에 위치합니다. :::</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>자세한 내용은 아래의 내용을 참조하십시오.</p><ul><li><a href="https://www.controleng.com/articles/not-all-pid-controllers-are-the-same/" target="_blank" rel="noreferrer">모든 PID 컨트롤러가 같지 않습니다.</a> (www.controleng.com)</li><li><a href="https://en.wikipedia.org/wiki/PID_controller#Standard_versus_parallel_(ideal)_form" target="_blank" rel="noreferrer">PID controller &gt; Standard versus parallel (ideal) PID form</a> (Wikipedia)</li></ul></div><h5 id="병렬-형식" tabindex="-1">병렬 형식 <a class="header-anchor" href="#병렬-형식" aria-label="Permalink to &quot;병렬 형식&quot;">​</a></h5><p>The <em>parallel form</em> is the simplest form, and is (hence) commonly used in textbooks. 이 경우 컨트롤러의 출력은 간단한 비례, 적분 및 미분 동작의 합입니다.</p><p><img src="'+a+'" alt="PID_Parallel"></p><h5 id="표준-형식" tabindex="-1">표준 형식 <a class="header-anchor" href="#표준-형식" aria-label="Permalink to &quot;표준 형식&quot;">​</a></h5><p>이 형식은 병렬 형식과 수학적으로 동일하지만 주요 이점은 (반 직관적으로 보일지라도) 비례 이득 튜닝을 적분과 미분 이득에서 분리하는 것입니다. 즉, 비슷한 크기와 관성을 가진 드론의 이득을 취하고 K 이득을 조정하여 적절하게 비행하는 방법으로 새로운 플랫폼을 쉽게 조정할 수 있습니다.</p><p><img src="'+t+'" alt="PID_Standard"></p><h4 id="속도-pid-튜닝" tabindex="-1">속도 PID 튜닝 <a class="header-anchor" href="#속도-pid-튜닝" aria-label="Permalink to &quot;속도 PID 튜닝&quot;">​</a></h4><p>PID 속도 컨트롤러 튜닝 매개 변수는 다음과 같습니다.</p><ul><li>Roll 속도 제어 (<a href="./../advanced_config/parameter_reference.html#MC_ROLLRATE_P">MC_ROLLRATE_P</a>, <a href="./../advanced_config/parameter_reference.html#MC_ROLLRATE_I">MC_ROLLRATE_I</a>, <a href="./../advanced_config/parameter_reference.html#MC_ROLLRATE_D">MC_ROLLRATE_D</a>, <a href="./../advanced_config/parameter_reference.html#MC_ROLLRATE_K">MC_ROLLRATE_K</a>)</li><li>Pitch 속도 제어 (<a href="./../advanced_config/parameter_reference.html#MC_PITCHRATE_P">MC_PITCHRATE_P</a>, <a href="./../advanced_config/parameter_reference.html#MC_PITCHRATE_I">MC_PITCHRATE_I</a>, <a href="./../advanced_config/parameter_reference.html#MC_PITCHRATE_D">MC_PITCHRATE_D</a>, <a href="./../advanced_config/parameter_reference.html#MC_PITCHRATE_K">MC_PITCHRATE_K</a>)</li><li>Yaw 속도 제어 (<a href="./../advanced_config/parameter_reference.html#MC_YAWRATE_P">MC_YAWRATE_P</a>, <a href="./../advanced_config/parameter_reference.html#MC_YAWRATE_I">MC_YAWRATE_I</a>, <a href="./../advanced_config/parameter_reference.html#MC_YAWRATE_D">MC_YAWRATE_D</a>, <a href="./../advanced_config/parameter_reference.html#MC_YAWRATE_K">MC_YAWRATE_K</a>)</li></ul><p>The rate controller can be tuned in <a href="./../flight_modes_mc/acro.html">Acro mode</a> or <a href="./../flight_modes_mc/manual_stabilized.html">Manual/Stabilized mode</a>:</p><ul><li><em>Acro mode</em> is preferred, but is harder to fly. 이 모드를 선택하는 경우 모든 스틱 엑스포를 비활성화하십시오. <ul><li><code>MC_ACRO_EXPO</code> = 0, <code>MC_ACRO_EXPO_Y</code> = 0, <code>MC_ACRO_SUPEXPO</code> = 0, <code>MC_ACRO_SUPEXPOY</code> = 0</li><li><code>MC_ACRO_P_MAX</code> = 200, <code>MC_ACRO_R_MAX</code> = 200</li><li><code>MC_ACRO_Y_MAX</code> = 100</li></ul></li><li><em>Manual/Stabilized mode</em> is simpler to fly, but it is also more difficult to see if the attitude or the rate controller needs more tuning.</li></ul><p>기체 비행이 되지 않는 경우:</p><ul><li>첫 이륙 시도시 (비행하지 않는 지점까지) 강한 진동이 있으면, 이륙이 성공할 때 까지 <strong>P</strong>와 <strong>D</strong> 게인을 줄입니다.</li><li>RC 움직임에 대한 반응이 미미하면 <strong>P</strong> 게인을 높입니다.</li></ul><p>The actual tuning is roughly the same in <em>Manual mode</em> or <em>Acro mode</em>: You iteratively tune the <strong>P</strong> and <strong>D</strong> gains for roll and pitch, and then the <strong>I</strong> gain. 처음에는 롤과 피치에 동일한 값을 사용할 수 있으며, 좋은 값을 얻은 후에는 롤과 피치 응답을 개별적으로 확인하여 미세 조정할 수 있습니다 (기체가 대칭인 경우 필요하지 않음). yaw의 경우 <strong>D</strong>를 0으로 둘 수 있다는 점을 제외하면 매우 유사합니다.</p><h5 id="비례-이득-p-k" tabindex="-1">비례 이득 (P/K) <a class="header-anchor" href="#비례-이득-p-k" aria-label="Permalink to &quot;비례 이득 (P/K)&quot;">​</a></h5><p>비례 이득은 추적 오류를 최소화하는 데 사용됩니다 (아래에서 <strong>P</strong> 또는 <strong>K</strong>를 참조하기 위하여 <strong>P</strong>를 사용합니다). 빠른 응답을 담당하므로 가능한 높게 설정하여야 하지만, 진동이 발생하지 않아야 합니다.</p><ul><li><strong>P</strong> 게인이 너무 높은 경우, 고주파 진동이 나타납니다.</li><li><strong>P</strong> 게인이 너무 낮은 경우: <ul><li>기체가 입력 변화에 느리게 반응합니다.</li><li>In <em>Acro mode</em> the vehicle will drift, and you will constantly need to correct to keep it level.</li></ul></li></ul><h5 id="미분-이득-d" tabindex="-1">미분 이득 (D) <a class="header-anchor" href="#미분-이득-d" aria-label="Permalink to &quot;미분 이득 (D)&quot;">​</a></h5><p><strong>D</strong> 미분 게인은 속도 댐핑에 사용됩니다. 오버 슈트를 제거하기 위하여 적절하게 높은 값으로 설정합니다.</p><ul><li><strong>D</strong> 게인이 너무 높은 경우 : <strong>D</strong> 항이 소음을 증폭하기 때문에, 모터가 경련을 일으키고 뜨거워집니다.</li><li><strong>D</strong> 게인이 너무 낮은 경우 : 스텝 입력 후 오버 슈트가 나타납니다.</li></ul><p>일반적인 값은 다음과 같습니다.</p><ul><li>표준 형식 (<strong>P</strong> = 1) : <strong>K</strong> 값에 대하여 0.01 (4 &quot;레이서)에서 0.04 (500 크기) 사이</li><li>병렬 형식 (<strong>K</strong> = 1) : <strong>P</strong> 값에 따라 0.0004에서 0.005 사이</li></ul><h5 id="적분-이득-i" tabindex="-1">적분 이득 (I) <a class="header-anchor" href="#적분-이득-i" aria-label="Permalink to &quot;적분 이득 (I)&quot;">​</a></h5><p><strong>I</strong> (적분) 이득은 오류 메모리를 유지합니다. <strong>I</strong> 항은 원하는 비율에 얼마 동안 도달하지 않으면 증가합니다. It is important (especially when flying <em>Acro mode</em>), but it should not be set too high.</p><ul><li>I 게인이 너무 높으면 느린 진동이 나타납니다.</li><li>If the I gain is too low: this is best tested in <em>Acro mode</em>, by tilting the vehicle to one side about 45 degrees, and keeping it like that. 같은 각도를 유지하여야 합니다. 뒤로 드리프트하면 <strong>I</strong> 게인을 늘립니다. 더 긴 시간 동안 원하는 속도와 실제 속도 사이에 오프셋이 있을 때 낮은 <strong>I</strong> 게인도 로그에 표시됩니다.</li></ul><p>일반적인 값은 다음과 같습니다.</p><ul><li>표준 형식 (<strong>P</strong> = 1) : <strong>K</strong> 값에 대하여 0.5 (VTOL 평면), 1 (500 크기) 및 8 (4 &quot;레이서) 사이,</li><li>평행 형식 (<strong>K</strong> = 1) : <strong>P</strong>가 약 0.15 인 경우 0.3에서 0.5 사이 피치 게인은 일반적으로 롤 게인보다 약간 높아야 합니다.</li></ul><h4 id="테스트-절차" tabindex="-1">테스트 절차 <a class="header-anchor" href="#테스트-절차" aria-label="Permalink to &quot;테스트 절차&quot;">​</a></h4><p>현재 이득을 테스트하려면 호버링시 빠른 <strong>단계 입력</strong>을 제공하고 기체의 반응을 관찰하십시오. 명령을 즉시 반등하여야 하며, 진동이나 오버슛이 발생하지 않아야 합니다 ( &#39;고정&#39;된 느낌).</p><p>예를 들어 롤용 스텝 입력을 만들 수 있습니다. 롤 스틱을 한쪽으로 빠르게 밀었다가 다시 빠르게 놓아줍니다 (스프링이므로 스틱을 놓으면 스틱도 진동합니다. 잘 튜닝된 기체는 이러한 진동에 반응합니다).</p><div class="info custom-block"><p class="custom-block-title">A well-tuned vehicle in <em>Acro mode</em> will not tilt randomly towards one side, but keeps the attitude for tens of seconds even without any corrections.</p></div><h4 id="로그" tabindex="-1">로그 <a class="header-anchor" href="#로그" aria-label="Permalink to &quot;로그&quot;">​</a></h4><p>로그는 추적 성능 평가에 많은 도움이 됩니다. 다음은 롤과 요 속도 추적의 좋은 예입니다.</p><p><img src="'+r+'" alt="롤 레이트 추적"> <img src="'+o+'" alt="요 레이트 추적"></p><p>다음은 극단적인 스텝 입력을 생성하는 몇 번의 플립으로 롤 속도를 추적하는 좋은 예입니다. 기체에 아주 적은 양의 오버 슈트가 발생하는 것을 볼 수 있습니다. <img src="'+l+'" alt="롤 레이트 추적 플립"></p><h3 id="자세-컨트롤러" tabindex="-1">자세 컨트롤러 <a class="header-anchor" href="#자세-컨트롤러" aria-label="Permalink to &quot;자세 컨트롤러&quot;">​</a></h3><p>이것은 방향과 아래의 튜닝 매개변수를 사용하여 기체의 비율의 출력을 제어합니다.</p><ul><li>Roll 제어 (<a href="./../advanced_config/parameter_reference.html#MC_ROLL_P">MC_ROLL_P</a>)</li><li>Pitch 제어(<a href="./../advanced_config/parameter_reference.html#MC_PITCH_P">MC_PITCH_P</a>)</li><li>Yaw 제어 (<a href="./../advanced_config/parameter_reference.html#MC_YAW_P">MC_YAW_P</a>)</li></ul><p>자세 컨트롤러의 튜닝은 비교적 간단합니다. 대부분 기본값을 변경할 필요가 없습니다.</p><p>To tune the attitude controller, fly in <em>Manual/Stabilized mode</em> and increase the <strong>P</strong> gains gradually. 진동이나 오버슈트가 나타나는 것은 게인이 너무 높은 것입니다.</p><p>아래의 매개변수를 조정할 수 있습니다. 세 축의 최대 회전 속도를 결정합니다.</p><ul><li>최대 롤 회전속도(<a href="./../advanced_config/parameter_reference.html#MC_ROLLRATE_MAX">MC_ROLLRATE_MAX</a>)</li><li>최대 피치 회전 속도 (<a href="./../advanced_config/parameter_reference.html#MC_PITCHRATE_MAX">MC_PITCHRATE_MAX</a>)</li><li>최대 요 회전 속도 (<a href="./../advanced_config/parameter_reference.html#MC_YAWRATE_MAX">MC_YAWRATE_MAX</a>)</li></ul><h3 id="추력-곡선" tabindex="-1">추력 곡선 <a class="header-anchor" href="#추력-곡선" aria-label="Permalink to &quot;추력 곡선&quot;">​</a></h3><p>위의 튜닝은 호버 스로틀 주위의 성능을 최적화합니다. 그러나 풀 스로틀로 갈 때 진동이 시작될 수 있습니다.</p><p>이를 막으려면 <a href="./../advanced_config/parameter_reference.html#THR_MDL_FAC">THR_MDL_FAC</a> 매개 변수로 <strong>추력 곡선</strong>을 조정하십시오.</p><p>:::note 이 매개변수를 변경하면 속도 컨트롤러를 다시 조정하여야 할 수 있습니다. :::</p><p>모터 제어 신호 (예 : PWM)에서 예상 추력으로의 매핑은 기본적으로 선형입니다. <code>THR_MDL_FAC</code>를 1로 설정하면 2 차가됩니다. 그 사이의 값은 둘의 선형 보간을 사용합니다. 일반적인 값은 0.3 ~ 0.5 입니다.</p><p>If you have a <a href="https://www.tytorobotics.com/pages/series-1580-1585" target="_blank" rel="noreferrer">thrust stand</a> <em>measure</em> thrust and motor commands simultaneously), you can determine the relationship between the motor control signal and the motor&#39;s actual thrust, and fit a function to the data. <code>actuator_output</code>이라고하는 PX4의 모터 명령은 사용중인 각 ESC에 대한 PWM, Dshot, UAVCAN 명령 일 수 있습니다. <a href="https://github.com/PX4/PX4-user_guide/blob/v1.15/assets/config/mc/ThrustCurve.ipynb" target="_blank" rel="noreferrer">This Notebook</a> shows one way for how the thrust model factor <code>THR_MDL_FAC</code> may be calculated from previously measured thrust and PWM data. 이 플롯에 표시된 곡선은 α k, 실제 단위 (kgf 및 μs)로 추력과 PWM을 표시합니다. 곡선 맞춤 문제를 단순화하기 위해 α를 추정하지 않고도 <code>k</code>를 찾기 위해 0과 1 사이의 데이터를 정규화 할 수 있습니다(α = 1, 데이터가 정규화 될 때).</p><p><img src="'+i+'" alt="Thrust Curve Compensation">] </p><p>:::note PWM과 정적 추력간의 매핑은 배터리 전압에 따라 크게 달라집니다. :::</p><p>이 실험의 또 다른 방법은 정규화된 모터 명령과 추력 값의 산점도를 만들고 <code>THR_MDL_FAC</code> 매개변수로 실험하여 추력 곡선을 반복적으로 조정하는 것입니다. 해당 그래프의 예는 아래와 같습니다.</p><p><img src="'+n+'" alt="상대 추력 및 PWM 분산 그래프"></p><p>원시 모터 명령 및 추력 데이터가 실험의 전체 범위에 걸쳐 수집되는 경우, 다음 방정식을 사용하여 데이터를 정규화할 수 있습니다.</p><p><em>normalized_value = ( raw_value - min (raw_value) ) / ( max ( raw_value ) - min ( raw_value ) )</em></p><p>정규화된 값의 산점도를 얻은 후 방정식을 플로팅하여 곡선을 일치시킬 수 있습니다.</p><p>_rel_thrust = ( <code>THR_MDL_FAC</code> ) _ rel<em>signal^2 + ( 1 - <code>THR_MDL_FAC</code> ) * rel</em>signal*</p><p>0과 1 사이의 정규화된 모터 명령 값의 선형 범위. 이것은 <a href="./../advanced_config/parameter_reference.html#THR_MDL_FAC">THR_MDL_FAC</a> 매개변수 참조에 표시된 것처럼 추력과 모터 명령을 매핑하기 위해 펌웨어에서 사용되는 방정식입니다. Here, <em>rel_thrust</em> is the normalized thrust value between 0 and 1, and <em>rel_signal</em> is the normalized motor command signal value between 0 and 1.</p><p>위의 예에서 곡선은 <code>THR_MDL_FAC</code>가 0.7로 설정되었을 때 가장 좋은 결과를 나타내었습니다.</p><p>스러스트 스탠드에 접근할 수 없는 경우, 경험적으로 모델링 요소를 조정할 수 있습니다. 0.3부터 시작하여 한 번에 0.1 씩 늘립니다. 너무 높으면, 낮은 스로틀 값에서 진동이 감지되기 시작합니다. 너무 낮으면, 더 높은 스로틀 값에서 진동이 나타납니다.</p><p><a id="airmode"></a></p><h3 id="에어-모드-믹서-포화" tabindex="-1">에어 모드 &amp; 믹서 포화 <a class="header-anchor" href="#에어-모드-믹서-포화" aria-label="Permalink to &quot;에어 모드 &amp; 믹서 포화&quot;">​</a></h3><p>속도 컨트롤러는 세 축 (roll, pitch 및 yaw)에 대한 토크 명령과 스칼라 추력값을 출력하며, 이는 개별 모터 추력 명령으로 변환하여야 합니다. 이 단계를 믹싱이라고 합니다.</p><p>예를 들어 낮은 추력과 큰 롤 명령의 경우 모터 명령 중 하나가 음수가 될 수 있습니다 (비슷하게 100 % 이상이 될 수 있음). 이것은 믹서 포화입니다. 기체가 이 명령을 실행하는 것은 물리적으로 불가능합니다 (가역 모터 제외). PX4에는 이 문제를 해결하기 위한 두 가지 모드가 있습니다.</p><ul><li><p>롤에 대한 명령된 토크를 줄여 모터 명령이 0 미만이 되지 않도록합니다 (에어 모드 비활성화 됨). 명령된 추력이 0 인 극단적인 경우에는 더 이상 자세 보정이 가능하지 않으므로이 모드에 항상 최소 추력이 필요합니다.</p></li><li><p>또는 명령된 추력을 증가시켜 모터 명령이 음수값이 되지 않도록 합니다(에어 모드 활성화). 이것은 낮은 스로틀이나 제로 스로틀에서도 자세/속도를 정확하게 추적할 수 있는 큰 장점이 있습니다. 일반적으로 비행 성능을 향상시킵니다.</p><p>그러나, 이는 스로틀이 0으로 감소하더라도 기체가 계속 상승하도록 총추력을 증가시킵니다. 잘 조정되고 올바르게 작동하는 기체에는 제외하고, 너무 높은 P 조정 이득으로 인하여 기체가 강하게 진동할 때 발생할 수 있습니다.</p></li></ul><p>두 모드는 두 모터에 대한 2D 그림과 롤 <span style="color:#9673A6;">r</span>에 대한 토크 명령은 아래에 표시되어 있습니다. 왼쪽 모터에서는 <span style="color:#9673A6;">r</span>이 명령된 추력에 추가되고, 오른쪽 모터에서는 차감됩니다. 모터 추력은 <span style="color:#6A9153;">녹색</span>입니다. Airmode를 활성화하면 명령된 추력이 <span style="color:#B85450;">b</span> 만큼 증가합니다. 비활성화되면, <span style="color:#9673A6;">r</span>이 감소합니다.</p><p><img src="'+s+'" alt="Airmode"></p><p>혼합이 상한선으로 포화되면, 명령된 추력이 감소되어 모터가 100 % 이상의 추력을 전달하지 않도록 합니다. 이 동작은 Airmode 로직과 유사하며 Airmode 활성화 여부에 관계없이 적용됩니다.</p><p>기체 비행이 성공적이면 <a href="./../advanced_config/parameter_reference.html#MC_AIRMODE">MC_AIRMODE</a> 매개변수를 통하여 에어 모드를 활성화 할 수 있습니다.</p>',88),u=[h];function g(f,P,A,M,C,b){return _(),d("div",null,u)}const I=c(m,[["render",g]]);export{v as __pageData,I as default};
