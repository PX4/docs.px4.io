import{_ as a}from"./chunks/hardware-rpi2.DmJQ5cOe.js";import{_ as n,E as t,c as e,J as l,m as s,a as h,ab as p,o as k}from"./chunks/framework.CUflZczI.js";const B=JSON.parse('{"title":"Автопілот Raspberry Pi 2/3/4 Navio2","description":"","frontmatter":{},"headers":[],"relativePath":"uk/flight_controller/raspberry_pi_navio2.md","filePath":"uk/flight_controller/raspberry_pi_navio2.md"}'),r={name:"uk/flight_controller/raspberry_pi_navio2.md"},o=s("h1",{id:"автопілот-raspberry-pi-2-3-4-navio2",tabindex:"-1"},[h("Автопілот Raspberry Pi 2/3/4 Navio2 "),s("a",{class:"header-anchor",href:"#автопілот-raspberry-pi-2-3-4-navio2","aria-label":'Permalink to "Автопілот Raspberry Pi 2/3/4 Navio2"'},"​")],-1),d=p('<div class="warning custom-block"><p class="custom-block-title">PX4 не виробляє цей (чи будь-який інший) автопілот. Зверніться до <a href="https://emlid.com/" target="_blank" rel="noreferrer">виробника</a> щодо підтримки апаратного забезпечення чи питань відповідності вимогам.</p></div><p>Це &quot;швидкий старт&quot; розробника для автопілотів Raspberry Pi 2/3/4 Navio2. Він дозволяє збирати PX4 і переносити на RasPi, або збирати нативно.</p><p><img src="'+a+`" alt="Ra Pi Image"></p><h2 id="образ-os" tabindex="-1">Образ OS <a class="header-anchor" href="#образ-os" aria-label="Permalink to &quot;Образ OS&quot;">​</a></h2><p>Використовуйте попередньо налаштований образ <a href="https://docs.emlid.com/navio2/configuring-raspberry-pi" target="_blank" rel="noreferrer">Emlid Raspberry Pi OS для Navio 2</a>. Образ за замовчуванням вже містить більшість процедур налаштування, показаних нижче.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Переконайтеся, що ви не оновлюєте систему (точніше, ядро). Під час оновлення може бути встановлено нове ядро, у якому відсутня необхідна підтримка HW (ви можете перевірити за допомогою <code>ls /sys/class/pwm</code>, каталог не повинен бути порожнім).</p></div><h2 id="встановлення-доступу" tabindex="-1">Встановлення доступу <a class="header-anchor" href="#встановлення-доступу" aria-label="Permalink to &quot;Встановлення доступу&quot;">​</a></h2><p>Образ OS Raspberry Pi вже має налаштований SSH. Ім&#39;я користувача &quot;pi&quot; та пароль &quot;raspberry&quot;. Для цілей цього посібника ми припускаємо, що ім&#39;я користувача та пароль залишаються цими за замовчуванням.</p><p>Щоб налаштувати підключення Pi до локальної мережі Wi-Fi, дотримуйтесь <a href="https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md" target="_blank" rel="noreferrer">цього посібника</a> або підключіть його за допомогою кабелю Ethernet.</p><p>Для підключення до вашого Pi через SSH використовуйте стандартне ім&#39;я користувача (<code>pi</code>) та ім&#39;я хоста (<code>navio</code>). Крім того (якщо це не спрацювало), ви можете знайти IP-адресу вашого RPi та вказати її.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pi@navio.local</span></span></code></pre></div><p>або</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pi@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">IP-ADDRES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="розширення-фаиловоі-системи" tabindex="-1">Розширення файлової системи <a class="header-anchor" href="#розширення-фаиловоі-системи" aria-label="Permalink to &quot;Розширення файлової системи&quot;">​</a></h2><p>Розширте файлову систему, щоб використовувати всю SD-карту під час запуску:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> raspi-config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --expand-rootfs</span></span></code></pre></div><h2 id="вимикання-оверлея-navio-rgb" tabindex="-1">Вимикання оверлея Navio RGB <a class="header-anchor" href="#вимикання-оверлея-navio-rgb" aria-label="Permalink to &quot;Вимикання оверлея Navio RGB&quot;">​</a></h2><p>Існуючий оверлей Navio RGB використовує GPIO, що використовуються PX4 для RGB Led. Відредагуйте <code>/boot/config.txt</code>, закоментувавши рядок, що вмикає оверлей <code>navio-rgb</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>#dtoverlay=navio-rgb</span></span></code></pre></div><h2 id="тестування-передачі-фаилів" tabindex="-1">Тестування передачі файлів <a class="header-anchor" href="#тестування-передачі-фаилів" aria-label="Permalink to &quot;Тестування передачі файлів&quot;">​</a></h2><p>Ми використовуємо SCP для передачі файлів з комп&#39;ютера для розробки на цільову плату через мережу (WiFi або Ethernet).</p><p>Щоб перевірити налаштування, спробуйте передати файл з ПК для розробки на Pi через мережу зараз. Переконайтеся, що у Pi є доступ до мережі, і ви можете використовувати SSH для входу.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pi@navio.local:/home/pi/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.txt</span></span></code></pre></div><p>Це повинно скопіювати файл &quot;hello.txt&quot; у домашню директорію вашого Pi. Перевірте, що файл дійсно було скопійовано, і ви можете перейти до наступного кроку.</p><h2 id="px4-development-environment" tabindex="-1">PX4 Development Environment <a class="header-anchor" href="#px4-development-environment" aria-label="Permalink to &quot;PX4 Development Environment&quot;">​</a></h2><p>These instructions explain how to install a PX4 development environment for building RasPi on Ubuntu 18.04.</p><div class="warning custom-block"><p class="custom-block-title">PX4 binaries for Navio 2 can only be run on Ubuntu 18.04.</p><p>You can build PX4 using the GCC toolchain on Ubuntu 20.04, but the generated binary files are too new to run on actual Pi (as of September 2023). For more information see <a href="./../flight_controller/raspberry_pi_pilotpi_rpios.html#alternative-build-method-using-docker">PilotPi with Raspberry Pi OS Developer Quick Start &gt; Alternative build method using docker</a>.</p></div><h3 id="install-the-common-dependencies" tabindex="-1">Install the Common Dependencies <a class="header-anchor" href="#install-the-common-dependencies" aria-label="Permalink to &quot;Install the Common Dependencies&quot;">​</a></h3><p>To get the common dependencies for Raspberry Pi:</p><ol><li><p>Download <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/Tools/setup/ubuntu.sh" target="_blank" rel="noreferrer">ubuntu.sh</a> and <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/Tools/setup/requirements.txt" target="_blank" rel="noreferrer">requirements.txt</a> from the PX4 source repository (<strong>/Tools/setup/</strong>): </p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/PX4/PX4-Autopilot/release/1.15/Tools/setup/ubuntu.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/PX4/PX4-Autopilot/release/1.15/Tools/setup/requirements.txt</span></span></code></pre></div></li><li><p>Run <strong>ubuntu.sh</strong> in a terminal to get just the common dependencies:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ubuntu.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-nuttx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-sim-tools</span></span></code></pre></div></li><li><p>Then setup a cross-compiler (either GCC or clang) as described in the following sections.</p></li></ol><h3 id="gcc-armhf" tabindex="-1">GCC (armhf) <a class="header-anchor" href="#gcc-armhf" aria-label="Permalink to &quot;GCC (armhf)&quot;">​</a></h3><p>Ubuntu software repository provides a set of pre-compiled toolchains. Note that Ubuntu Focal comes up with <code>gcc-9-arm-linux-gnueabihf</code> as its default installation which is not fully supported, so we must manually install <code>gcc-8-arm-linux-gnueabihf</code> and set it as the default toolchain. This guide also applies to earlier Ubuntu releases (Bionic). The following instruction assumes you haven&#39;t installed any version of arm-linux-gnueabihf, and will set up the default executable with <code>update-alternatives</code>. Install them with the terminal command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc-8-arm-linux-gnueabihf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g++-8-arm-linux-gnueabihf</span></span></code></pre></div><p>Set them as default:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update-alternatives</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/arm-linux-gnueabihf-gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arm-linux-gnueabihf-gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/arm-linux-gnueabihf-gcc-8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --slave</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/arm-linux-gnueabihf-g++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arm-linux-gnueabihf-g++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/arm-linux-gnueabihf-g++-8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update-alternatives</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arm-linux-gnueabihf-gcc</span></span></code></pre></div><h3 id="gcc-aarch64" tabindex="-1">GCC (aarch64) <a class="header-anchor" href="#gcc-aarch64" aria-label="Permalink to &quot;GCC (aarch64)&quot;">​</a></h3><p>If you want to build PX4 for ARM64 devices, this section is required.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc-8-aarch64-linux-gnu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g++-8-aarch64-linux-gnu</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update-alternatives</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/aarch64-linux-gnu-gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aarch64-linux-gnu-gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/aarch64-linux-gnu-gcc-8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --slave</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/aarch64-linux-gnu-g++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aarch64-linux-gnu-g++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/aarch64-linux-gnu-g++-8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update-alternatives</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aarch64-linux-gnu-gcc</span></span></code></pre></div><h3 id="clang-optional" tabindex="-1">Clang (optional) <a class="header-anchor" href="#clang-optional" aria-label="Permalink to &quot;Clang (optional)&quot;">​</a></h3><p>First install GCC (needed to use clang).</p><p>We recommend you to get clang from the Ubuntu software repository, as shown below:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clang</span></span></code></pre></div><p>Example below for building PX4 firmware out of tree, using <em>CMake</em>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PATH-TO-PX4-SR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/px4_raspberrypi_default_clang</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/px4_raspberrypi_default_clang</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Unix Makefiles&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DCONFIG=px4_raspberrypi_default </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-UCMAKE_C_COMPILER </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DCMAKE_C_COMPILER=clang </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-UCMAKE_CXX_COMPILER </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-DCMAKE_CXX_COMPILER=clang++ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">../..</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span></code></pre></div><h2 id="збірка-коду" tabindex="-1">Збірка коду <a class="header-anchor" href="#збірка-коду" aria-label="Permalink to &quot;Збірка коду&quot;">​</a></h2><p>Вкажіть IP-адресу (або ім&#39;я хоста) вашого Pi:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTOPILOT_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">navio.local</span></span></code></pre></div><p>або</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTOPILOT_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">192.168.X.X</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Значення змінної оточення слід встановити перед збіркою, інакше <code>make upload</code> не зможе знайти ваш Pi.</p></div><p>Скомпілюйте виконувальний файл на вашому комп&#39;ютері для розробки:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> emlid_navio2</span></span></code></pre></div><p>Виконувальний файл &quot;px4&quot; знаходиться у каталозі <strong>build/emlid_navio2_default/</strong>. Переконайтеся, що ви можете підключитися до вашого Pi по SSH, див. <a href="#setting-up-access">інструкції як отримати доступ до вашого Pi</a>, слідуючи інструкціям для armhf під Raspberry Pi.</p><p>Потім завантажте його за допомогою:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> emlid_navio2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upload</span></span></code></pre></div><p>Потім підключіться через ssh та запустіть його на Pi (як root):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/px4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./bin/px4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4.config</span></span></code></pre></div><p>A successful build followed by executing PX4 will give you something like this:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">______</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  __</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   __</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    ___</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ___</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\ \\ \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">V</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  __/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\ \\ \\_</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     \\/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   \\/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> starting.</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pxh&gt;</span></span></code></pre></div><h2 id="автозавантаження" tabindex="-1">Автозавантаження <a class="header-anchor" href="#автозавантаження" aria-label="Permalink to &quot;Автозавантаження&quot;">​</a></h2><p>Для автозапуску px4 додайте наступне до файлу <strong>/etc/rc.local</strong> (відкоригуйте його відповідним чином, якщо ви використовуєте власну збірку), безпосередньо перед рядком <code>вихід 0</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./bin/px4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4.config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4.log</span></span></code></pre></div>`,62);function c(g,F,u,y,C,b){const i=t("LinkedBadge");return k(),e("div",null,[o,l(i,{type:"warning",text:"Experimental",url:"../flight_controller/autopilot_experimental.html"}),d])}const E=n(r,[["render",c]]);export{B as __pageData,E as default};
