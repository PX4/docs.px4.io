import{_ as t,c as r,o as l,ab as e}from"./chunks/framework.CUflZczI.js";const m=JSON.parse('{"title":"출시 1.12","description":"","frontmatter":{},"headers":[],"relativePath":"ko/releases/1.12.md","filePath":"ko/releases/1.12.md"}'),a={name:"ko/releases/1.12.md"},i=e(`<h1 id="출시-1-12" tabindex="-1">출시 1.12 <a class="header-anchor" href="#출시-1-12" aria-label="Permalink to &quot;출시 1.12&quot;">​</a></h1><ul><li><a href="#release-1-12">출시 1.12</a><ul><li><a href="#pre-releases">사전 출시</a></li><li><a href="#changes">변경 사항</a><ul><li><a href="#common">공통</a></li><li><a href="#sensors">센서</a></li><li><a href="#hardware">하드웨어</a></li><li><a href="#mavlink">MAVLink</a></li><li><a href="#commander">사령관(Commander)</a></li><li><a href="#multicopter">멀티콥터</a></li><li><a href="#vtol">수직이착륙기(VTOL)</a></li><li><a href="#control">제어</a></li><li><a href="#gps">GPS</a></li><li><a href="#nuttx">NuttX</a></li><li><a href="#uavcan">UAVCAN</a></li></ul></li></ul></li></ul><h2 id="사전-출시" tabindex="-1">사전 출시 <a class="header-anchor" href="#사전-출시" aria-label="Permalink to &quot;사전 출시&quot;">​</a></h2><ul><li><a href="https://github.com/PX4/PX4-Autopilot/releases/tag/v1.12.0-beta4" target="_blank" rel="noreferrer">베타 4</a></li><li><a href="https://github.com/PX4/PX4-Autopilot/releases/tag/v1.12.0-beta3" target="_blank" rel="noreferrer">베타 3</a></li><li><a href="https://github.com/PX4/PX4-Autopilot/releases/tag/v1.12.0-beta2" target="_blank" rel="noreferrer">베타 2</a></li><li><a href="https://github.com/PX4/PX4-Autopilot/releases/tag/v1.12.0-beta1" target="_blank" rel="noreferrer">베타 1</a></li></ul><h2 id="변경-사항" tabindex="-1">변경 사항 <a class="header-anchor" href="#변경-사항" aria-label="Permalink to &quot;변경 사항&quot;">​</a></h2><h3 id="공통" tabindex="-1">공통 <a class="header-anchor" href="#공통" aria-label="Permalink to &quot;공통&quot;">​</a></h3><ul><li><strong>잔여 비행 범위 기반 RTL 트리거 (<a href="https://github.com/PX4/PX4-Autopilot/pull/16399" target="_blank" rel="noreferrer">PR#16399</a>)</strong><ul><li>기체 속도, 풍속 및 목적지 거리와 방향을 고려하여 RTL에서 집까지의 시간을 계산합니다.</li></ul></li><li><strong>사전 지오펜스 위반 (<a href="https://github.com/PX4/PX4-Autopilot/pull/16400" target="_blank" rel="noreferrer">PR#16400</a>)</strong><ul><li><em>예측된</em> 현재 궤적이 위반으로 이어질 경우 위반을 트리거하여 차량이 안전한 유지 위치로 경로를 다시 지정할 수 있습니다.</li></ul></li><li><strong>기체 스크립트</strong><ul><li>기본값 설정 구문이 변경되었으며 사용자 지정 스크립트를 업데이트하여야 합니다.</li><li>예제는 <a href="https://github.com/PX4/PX4-Autopilot/pull/16796/files#diff-dcf2f5536f47f260e5e0ff3b3fd22eaef6b6c510126463d70affa0eb7bd4d3ddL20" target="_blank" rel="noreferrer">PR#16796</a>을 참조하십시오.</li></ul></li><li>안전 스위치는 기본적으로 꺼짐으로 설정(모터는 시동 해제되지만 서보/플랩은 움직일 수 있음)</li><li>안전 스위치가 잠깁니다. 일단 비활성화되면 비활성화 상태로 유지됩니다.</li><li>착륙 감지기 : 거리 센서가있는 경우지면 거리를 사용하도록 착륙 감지를 확장합니다.</li><li>텔레메트리 포함 IRC Ghost에 대한 지원 추가</li></ul><h3 id="센서" tabindex="-1">센서 <a class="header-anchor" href="#센서" aria-label="Permalink to &quot;센서&quot;">​</a></h3><ul><li>더 빠르고 안정적인 자력계 보정 <ul><li>새로운 연철 교정 계수</li><li>외부 센서의 회전을을 자동으로 결정</li></ul></li><li>최적화된 속도 제어 센서 파이프 라인 (최소 내부 루프 종단간 지연 시간)</li></ul><h3 id="하드웨어" tabindex="-1">하드웨어 <a class="header-anchor" href="#하드웨어" aria-label="Permalink to &quot;하드웨어&quot;">​</a></h3><p>이 릴리스에는 아래의 보드, 주변 장치, 액세서리 및 신규 하드웨어 지원이 포함됩니다.</p><ul><li>Pixhawk FMUv6U (<a href="https://github.com/pixhawk/Pixhawk-Standards" target="_blank" rel="noreferrer">Pixhawk GitHub 저장소</a>에서 상세 사양 조회)</li><li>Pixhawk FMUv6x (<a href="https://github.com/pixhawk/Pixhawk-Standards" target="_blank" rel="noreferrer">Pixhawk GitHub 저장소</a>에서 상세 사양 조회)</li><li>CUAV X7 / X7Pro (<a href="http://www.cuav.net/en/x7en/" target="_blank" rel="noreferrer">제조사 사이트에서 제품 상세 조회</a>)</li><li>CUAV Nora (<a href="http://www.cuav.net/en/nora/" target="_blank" rel="noreferrer">제조사 사이트에서 제품 상세 조회</a>)</li><li>CUAV CAN GPS (<a href="http://www.cuav.net/en/neo-3-2/" target="_blank" rel="noreferrer">제조사 사이트에서 제품 상세 조회</a>)</li><li>SP Racing H7 Extreme (<a href="http://seriouslypro.com/spracingh7extreme" target="_blank" rel="noreferrer">제조사 사이트에서 제품 상세 조회</a>)</li><li>Bitcraze Crazyflie v2.1 (<a href="https://www.bitcraze.io/products/crazyflie-2-1/" target="_blank" rel="noreferrer">제조사 사이트에서 제품 상세 조회</a>)</li><li>ARK CAN Flow (<a href="https://arkelectron.com/product/ark-flow/" target="_blank" rel="noreferrer">제조사 사이트에서 제품 상세 조회</a>)</li><li>mRo Ctrl Zero H7 (실험중) (<a href="https://store.mrobotics.io/mRo-Control-Zero-F7-p/mro-ctrl-zero-f7.htm" target="_blank" rel="noreferrer">제조사 사이트에서 제품 상세 조회</a>)</li></ul><p>다음 내용들이 제거됩니다.</p><ul><li>단종된 Intel AeroFC 제거</li></ul><h3 id="mavlink" tabindex="-1">MAVLink <a class="header-anchor" href="#mavlink" aria-label="Permalink to &quot;MAVLink&quot;">​</a></h3><ul><li><strong>MAVLink 이더넷 설정(<a href="https://github.com/PX4/PX4-Autopilot/pull/14460" target="_blank" rel="noreferrer">PR#14460</a>)</strong><ul><li>UDP 포트, 원격 포트 및 브로드캐스트 모드와 같은 MAVLink 이더넷 설정은 이제 매개변수를 통해 동적으로 변경할 수 있습니다.</li></ul></li><li><strong><code>COMPONENT_INFORMATION</code> 쿼리 지원(<a href="https://github.com/PX4/PX4-Autopilot/pull/16039" target="_blank" rel="noreferrer">PR#16039</a>)</strong><ul><li>이제 매개변수 메타데이터가 매일 QGC와 함께 자동으로 동기화됩니다.</li><li>이 새로운 메시지를 통하여 모든 MAVLink 시스템은 자동조종장치에서 풍부한 계층 정보를 요청할 수 있습니다. 즉, 임무에서 지원되는 명령을 이해하거나, 매개변수 메타데이터를 얻을 수 있습니다. 이 메시지는 주로 GCS가 자동 조종 장치를 더 잘 이해할 수 있도록 하기 위해 도입되었습니다(RFC: <a href="https://github.com/mavlink/mavlink/issues/1339" target="_blank" rel="noreferrer">mavlink#1339</a>).</li></ul></li></ul><h3 id="사령관-commander" tabindex="-1">사령관(Commander) <a class="header-anchor" href="#사령관-commander" aria-label="Permalink to &quot;사령관(Commander)&quot;">​</a></h3><ul><li><strong>Commander : 제어 모드 플래그 사용 및 시동 정리 / 시동 해제 (<a href="https://github.com/PX4/PX4-Autopilot/pull/16266" target="_blank" rel="noreferrer">PR#16266</a>)</strong><ul><li>arm_disarm ()에서 분산된 시동 관련 요구 사항을 통합하고, commander에서 <code>vehicle_control_mode</code> 마지막 상태를 유지합니다.</li></ul></li><li><strong>Commander : 수동 제어 설정 값 처리 분리 (<a href="https://github.com/PX4/PX4-Autopilot/pull/16878" target="_blank" rel="noreferrer">PR#16878</a>)</strong><ul><li><code>manual_control_setpoint</code>를 처리를 위한 신규 클래스 <code>ManualControl</code>을 추가하고 RC 손실, RC 재정의 및 RC 준비/해제를 처리합니다.</li></ul></li></ul><h3 id="멀티콥터" tabindex="-1">멀티콥터 <a class="header-anchor" href="#멀티콥터" aria-label="Permalink to &quot;멀티콥터&quot;">​</a></h3><ul><li><p><strong>위치 모드에서보다 직관적인 스틱 느낌</strong></p><ul><li>속도 설정값 대신 가속에 매핑된 수평 스틱 입력</li><li>이동 속도 속도에 도달시의 갑작스런 기울기 변화를 제거합니다.</li><li>직관적인 단락(예: 착륙시)</li><li><a href="./../advanced_config/parameter_reference.html#MPC_POS_MODE">MPC_POS_MODE</a>를 사용하여 선택 해제 가능</li><li>개발: <a href="https://github.com/PX4/PX4-Autopilot/pull/12072" target="_blank" rel="noreferrer">첫 시도</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/16052" target="_blank" rel="noreferrer">소개</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/16320" target="_blank" rel="noreferrer">개선 사항</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/16786" target="_blank" rel="noreferrer">버그 수정 제로 진동</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/16791" target="_blank" rel="noreferrer">버그 수정 위치 잠금 해제</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/17078" target="_blank" rel="noreferrer">잘못된 설정값 버그 수정</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/17437" target="_blank" rel="noreferrer">고속 사전 이륙 버그 수정</a></li></ul></li><li><p><strong>호버 추력 독립적 속도 제어 이득</strong></p><ul><li>매개변수 <code>MPC_{XY/Z}_VEL_{P/I/D}</code>는 <code>MPC_{XY/Z}_VEL_{P/I/D}_ACC</code>로 대치되었습니다. <a href="./../advanced_config/parameter_reference.html#MPC_XY_VEL_P_ACC">MPC_XY_VEL_P_ACC</a>, <a href="./../advanced_config/parameter_reference.html#MPC_XY_VEL_I_ACC">MPC_XY_VEL_I_ACC</a>, <a href="./../advanced_config/parameter_reference.html#MPC_XY_VEL_D_ACC">MPC_XY_VEL_D_ACC</a>, <a href="./../advanced_config/parameter_reference.html#MPC_Z_VEL_P_ACC">MPC_Z_VEL_P_ACC</a>, <a href="./../advanced_config/parameter_reference.html#MPC_Z_VEL_I_ACC">MPC_Z_VEL_I_ACC</a>, <a href="./../advanced_config/parameter_reference.html#MPC_Z_VEL_D_ACC">MPC_Z_VEL_D_ACC</a>를 참고하십시오.</li></ul></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>이득은 새로운 의미를 가지게 되었습니다.</p><pre><code>- $m/s$의 속도 오류에서 $m/s^2$의 가속 출력으로 확장
-
- 자동 매개변수 전환은 50 % 호버 추력을 가정합니다 : \`~10m/s^2/50% = 20m/s^2\`. [질문](https://github.com/PX4/PX4-Autopilot/pull/14823#issuecomment-791357646)을 참고하십시오.
</code></pre></div><ul><li><p>개발 : <a href="https://github.com/PX4/PX4-Autopilot/pull/14749" target="_blank" rel="noreferrer">로직 소개</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/14823" target="_blank" rel="noreferrer">파라미터 교체</a></p></li><li><p><strong>라운드턴 개선 (<a href="https://github.com/PX4/PX4-Autopilot/pull/16376" target="_blank" rel="noreferrer">PR#16376</a>)</strong></p><ul><li>멀티로터 임무의 웨이포인트에서 좀 더 큰 둥근 회전을 생성합니다 (코너에서 L1 스타일 안내 로직 사용).</li><li><a href="./../flight_modes/mission.html#rounded-turns-inter-waypoint-trajectory">임무 모드 &amp;# 62; 웨이포인트간 궤적</a> 및 <a href="./../flying/missions.html#setting-acceptance-turning-radius">임무 &gt; 수락 / 회전 반경 설정</a>을 참고하십시오.</li></ul></li><li><p><strong>Rattitude 비행 모드 제거(<a href="https://github.com/PX4/PX4-Autopilot/pull/17019" target="_blank" rel="noreferrer">PR#17019</a>)</strong></p><ul><li>다시 원하시면 저희에게 알려주십시오.</li></ul></li></ul><h3 id="수직이착륙기-vtol" tabindex="-1">수직이착륙기(VTOL) <a class="header-anchor" href="#수직이착륙기-vtol" aria-label="Permalink to &quot;수직이착륙기(VTOL)&quot;">​</a></h3><ul><li><strong>RTL 개선 사항(<a href="https://github.com/PX4/PX4-Autopilot/pull/16377" target="_blank" rel="noreferrer">PR#16377</a>)</strong><ul><li>Hardens the RTL safety failsafes taking into consideration the many edge cases when trying to land, depending on the current vehicle mode (Multicopter vs Fixed-wing)</li></ul></li><li>Fixed-wing / VTOL significant TECS improvements</li></ul><h3 id="콘트롤" tabindex="-1">콘트롤 <a class="header-anchor" href="#콘트롤" aria-label="Permalink to &quot;콘트롤&quot;">​</a></h3><ul><li><strong>Gyro FFT로 업데이트된 동적 노치 필터 (<a href="https://github.com/PX4/PX4-Autopilot/pull/16385" target="_blank" rel="noreferrer">PR#16385</a>)</strong><ul><li>자이로 제어 데이터에 동적 노치 필터링을 추가하여 제어가 훨씬 부드러워졌습니다.</li></ul></li><li>stm32f7 및 stm32h7 보드에서 <strong>기본적으로 다중 EKF 사용</strong></li></ul><h3 id="gps" tabindex="-1">GPS <a class="header-anchor" href="#gps" aria-label="Permalink to &quot;GPS&quot;">​</a></h3><ul><li>이제 GPS 프로토콜은 보다 빠른 시작을 위해 u-blox가 기본값으로 설정되며, 다른 GPS를 사용하는 경우 <a href="./../advanced_config/parameter_reference.html#GPS_1_PROTOCOL">GPS_x_PROTOCOL</a>을 변경하여야 합니다.</li></ul><h3 id="nuttx" tabindex="-1">NuttX <a class="header-anchor" href="#nuttx" aria-label="Permalink to &quot;NuttX&quot;">​</a></h3><p>Nuttx가 <a href="https://github.com/apache/incubator-nuttx/compare/nuttx-8.2..nuttx-10.0.1" target="_blank" rel="noreferrer">8.2+에서 NuttX 10.10.0 +</a>로 업그레이드 되었습니다 (@ <a href="https://github.com/apache/incubator-nuttx/commit/904a602c74dc08a100b5c2bd490807de19e73e10" target="_blank" rel="noreferrer">904a602c74dc08a100b5c2bd490807de19e73e10</a>).</p><ul><li><p><strong>SDCARD 성능:</strong> H7 타겟에서 성능 향상</p><ul><li>[<strong>BACKPORT</strong>] stm32:SDIO: 카드 클럭 주파수에 관계없이 250Ms 데이터 경로 시간 초과 사용</li><li>[<strong>BACKPORT</strong>] stm32h7:SDMMC: 카드 클럭 주파수에 관계없이 250Ms 데이터 경로 시간 초과 사용</li><li>[<strong>BACKPORT</strong>] stm32f7:SDMMC: 카드 클럭 주파수에 관계없이 250Ms 데이터 경로 시간 초과 사용</li><li>[<strong>BACKPORT</strong>] SDMMC 드라이버의 이벤트 대기 로직에서 경쟁 조건을 수정합니다.</li><li>[<strong>BACKPORT</strong>] mmcsd : 1 비트 모드에서 멈춤, CONFIG_ARCH_HAVE_SDIO_DELAYED_INVLDT 제거됨</li></ul></li><li><p><strong>이더넷 안정성:</strong></p><ul><li>[<strong>BACKPORT</strong>] stm32x7: 너무 큰 프레임에서 발생하는 이더넷 고정 하드 폴트</li><li>[<strong>BACKPORT</strong>] stm32: 너무 큰 이더넷 프레임 수정</li></ul></li><li><p><strong>부팅 안정성</strong> LSE(RTC) 발진기가 시작되도록 보장하는 V5-V6X</p><ul><li><p>[<strong>BACKPORT</strong>] stm32h7: lse Kconfig 도움말 텍스트 수정</p></li><li><p>[<strong>BACKPORT</strong>] stm32f7: lse Kconfig 값을 직접 사용</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7: DBGMCU 추가</p></li><li><p>[<strong>BACKPORT</strong>] stm32f7: LSE 기능을 자동 선택하는 옵션 추가</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7: LSE 기능을 자동 선택하는 옵션 추가</p><div class="info custom-block"><p class="custom-block-title">INFO</p></div></li></ul></li></ul><p>This Knob will cycle through the correct* values from low to high. To avoid damaging the crystal. We want to use the lowest setting that gets the OSC running. See app note AN2867 *It will take into account the rev of the silicon and use the correct code points to achieve the drive strength. See Eratta ES0392 Rev 7 2.2.14 LSE oscillator driving capability selection bits are swapped. :::</p><ul><li><p><strong>드라이버 변경</strong></p><ul><li><p>[<strong>BACKPORT</strong>] 드라이버/시리얼: cdcacm에 대한 Rx 인터럽트 활성화 수정</p></li><li><p>[<strong>BACKPORT</strong>] binnfmt: ELF fd 닫기 전 반환 수정</p></li><li><p>[<strong>BACKPORT</strong>] stm32f7:OTG_ID GPIO 재사용 허용</p></li><li><p>[<strong>BACKPORT</strong>] stm32f7: do_gpio의 SDMMC 수정 재설정</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7: 직렬: dma tx 세마포어를 리소스 홀더로 사용</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7: do_gpio의 SDMMC 수정 재설정</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7: 직렬 RX 및 TX DMA 추가</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7:OTG_ID GPIO 재사용 허용</p></li><li><p>[<strong>백포트</strong>] Kinetis:kinetis:DMA 교체</p></li><li><p>[<strong>BACKPORT</strong>] kinetis: 직렬 사용 eDMA</p></li><li><p>[<strong>BACKPORT</strong>] kinetis:SPI는 eDMA를 사용합니다.</p></li><li><p>[<strong>BACKPORT</strong>] Kinetis:Serail DMA 설문조사 필요 없음</p></li><li><p>[<strong>BACKPORT</strong>] libc/stdio: 콘솔이 없는 대상에 대해 stdin, stdout 및 stderr을 미리 할당합니다.</p></li></ul></li><li><p><strong>FlexCan 수정</strong></p><ul><li>[<strong>BACKPORT</strong>][flexcan] Correct reset state for CTRL1 register</li><li>[<strong>BACKPORT</strong>][flexcan] Fix TX drop #2792 and correctly set CAN timings to non-zeroed registers</li><li>[<strong>BACKPORT</strong>] FlexCAN 수정 TX 중단 프로세스</li></ul></li><li><p><strong>CAN 부트 로더 지원</strong></p><ul><li>[<strong>BACKPORT</strong>] s32k1xx: ramfunc 지원</li></ul></li><li><p><strong>STM32F412 정리</strong></p></li><li><p>[<strong>BACKPORT</strong>] stm32f412: 핀 갯수 수정</p></li><li><p>[<strong>BACKPORT</strong>] stm32f412: Kludged 핀맵을 SoC용 핀맵으로 교체.</p></li><li><p>[<strong>BACKPORT</strong>] stm32412: 핀맵 CAN1 수정</p></li><li><p><strong>보안 패치</strong></p></li><li><p>[<strong>BACKPORT</strong>] tcp: TCP 재조립에 대한 불완전한 지원 제거</p></li><li><p>[<strong>BACKPORT</strong>] net/tcp/tcp_input.c: Correct bad check of urgent data length</p></li><li><p>[<strong>BACKPORT</strong>] libc: Add additional checks to malloc realloc and memalign</p></li><li><p><strong>IMXRT 수정</strong></p></li><li><p>Add Single wire and proper parity settings to IMXRT to support sbus etal.</p></li><li><p>[<strong>BACKPORT</strong>] imxrt: 직렬 지원 단일 와이어 모드</p></li><li><p>[<strong>BACKPORT</strong>] imxrt: imxrt_lowputc 고정 패리티 설정.</p></li><li><p><strong>STM32H7 개선</strong></p></li><li><p>[<strong>BACKPORT</strong>] stm32h7: SPI 수정 16 비트 SPI 모드</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7: DMA BDMA는 완료시 자동 비활성화되지 않습니다.</p></li><li><p>[<strong>BACKPORT</strong>] SRAM4에서 HEAP 클로버링 정적 데이터 수정</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7: do_gpio의 SDMMC 수정 재설정</p></li></ul><h3 id="uavcan" tabindex="-1">UAVCAN <a class="header-anchor" href="#uavcan" aria-label="Permalink to &quot;UAVCAN&quot;">​</a></h3><ul><li>UAVCANv0 : 펌웨어 업그레이드와 CAN 노드의 매개변수 동기화와 같은 기본 기능이 5 년 이상 구현되었지만, 이제는 장치가 시장에 출시되어 새롭게 지원합니다. 일반적인 CAN GPS, 대기 속도 및 전력 모듈이 지원됩니다.</li><li>UAVCANv0 노드 : PX4는 수년 동안 빌딩 노드를 지원하였습니다. 이제 CUAV GPS 장치와 같은 특정 타겟 구축을 지원합니다.</li><li>UAVCANv1 : 완전한 종단간 구현의 초기 알파</li></ul>`,35),o=[i];function n(s,h,p,g,u,c){return l(),r("div",null,o)}const P=t(a,[["render",n]]);export{m as __pageData,P as default};
