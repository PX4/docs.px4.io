import{_ as s,c as i,o as a,ab as t}from"./chunks/framework.CUflZczI.js";const E=JSON.parse('{"title":"TimesyncStatus (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/msg_docs/TimesyncStatus.md","filePath":"zh/msg_docs/TimesyncStatus.md"}'),e={name:"zh/msg_docs/TimesyncStatus.md"},n=t(`<h1 id="timesyncstatus-uorb-message" tabindex="-1">TimesyncStatus (UORB message) <a class="header-anchor" href="#timesyncstatus-uorb-message" aria-label="Permalink to &quot;TimesyncStatus (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/TimesyncStatus.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp            # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 SOURCE_PROTOCOL_UNKNOWN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 SOURCE_PROTOCOL_MAVLINK </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 SOURCE_PROTOCOL_DDS     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 source_protocol           # timesync source</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 remote_timestamp         # remote system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int64 observed_offset           # raw time offset directly observed from this timesync </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">packet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int64 estimated_offset          # smoothed time offset between companion system and </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PX4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 round_trip_time          # round trip time of this timesync </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">packet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span></code></pre></div>`,3),p=[n];function h(l,k,r,c,o,d){return a(),i("div",null,p)}const g=s(e,[["render",h]]);export{E as __pageData,g as default};
