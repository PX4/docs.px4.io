import{_ as e,c as s,o as a,ab as t}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"PX4 콘솔/쉘","description":"","frontmatter":{},"headers":[],"relativePath":"ko/debug/consoles.md","filePath":"ko/debug/consoles.md"}'),i={name:"ko/debug/consoles.md"},l=t(`<h1 id="px4-콘솔-쉘" tabindex="-1">PX4 콘솔/쉘 <a class="header-anchor" href="#px4-콘솔-쉘" aria-label="Permalink to &quot;PX4 콘솔/쉘&quot;">​</a></h1><p>PX4에서는 <a href="./../debug/mavlink_shell.html">MAVLink 쉘</a>과 <a href="./../debug/system_console.html">시스템 콘솔</a>을 사용하여 시스템에 접근할 수 있습니다.</p><p>이 페이지에서는 콘솔과 쉘 사용 방법과 주요 차이점을 설명합니다.</p><p><a id="console_vs_shell"></a></p><h2 id="시스템-콘솔과-셸의-차이점" tabindex="-1">시스템 콘솔과 셸의 차이점 <a class="header-anchor" href="#시스템-콘솔과-셸의-차이점" aria-label="Permalink to &quot;시스템 콘솔과 셸의 차이점&quot;">​</a></h2><p>The PX4 <em>System Console</em> provides low-level access to the system, debug output and analysis of the system boot process.</p><p>There is just one <em>System Console</em>, which runs on one specific UART (the debug port, as configured in NuttX), and is commonly attached to a computer via an FTDI cable (or some other debug adapter like a <a href="https://kb.zubax.com/display/MAINKB/Dronecode+Probe+documentation" target="_blank" rel="noreferrer">Dronecode probe</a>).</p><ul><li>Used for <em>low-level debugging/development</em>: bootup, NuttX, startup scripts, board bringup, development on central parts of PX4 (e.g. uORB).</li><li>특히, 모든 부팅 출력(부팅 시 자동으로 시작되는 응용 프로그램에 대한 정보 포함)이 인쇄되는 유일한 장소입니다.</li></ul><p>셸은 시스템에 대한 상위 수준의 접급을 제공합니다.</p><ul><li>기본 모듈 테스트와 명령어를 실행할 수 있습니다.</li><li>Only <em>directly</em> display the output of modules you start.</li><li>Cannot <em>directly</em> display the output of tasks running on the work queue.</li><li>시스템이 시작되지 않으면(아직 실행되지 않기 때문에) 문제를 디버그할 수 없습니다.</li></ul><p>:::note <code>dmesg</code> 명령은 이제 일부 보드의 셸을 통해 사용할 수 있으므로, 이전보다 훨씬 낮은 수준의 디버깅이 가능합니다. 예를 들어, <code>dmesg -f &amp;</code>를 사용하면 백그라운드 작업의 출력도 조회할 수 있습니다. :::</p><p>전용 UART에서 실행되거나, MAVLink로 실행되는 여러 셸이 있을 수 있습니다. MAVLink가 더 많은 유연성을 제공하므로, 현재 <a href="./../debug/mavlink_shell.html">MAVLink Shell</a>만 사용됩니다.</p><p><a href="./../debug/system_console.html">시스템 콘솔</a>은 시스템이 부팅되지 않을 때 사용됩니다(보드의 전원을 껐다 켤 때 시스템 부팅 로그를 표시함). <a href="./../debug/mavlink_shell.html">MAVLink Shell</a>은 설정이 훨씬 용이하므로, 대부분의 디버깅에 사용됩니다.</p><p><a id="using_the_console"></a></p><h2 id="콘솔-쉘-사용" tabindex="-1">콘솔/쉘 사용 <a class="header-anchor" href="#콘솔-쉘-사용" aria-label="Permalink to &quot;콘솔/쉘 사용&quot;">​</a></h2><p>MAVLink 셸/콘솔과 <a href="./../debug/system_console.html">시스템 콘솔</a>은 같은 방식으로 사용됩니다.</p><p>예를 들어, 로컬 파일 시스템을 보려면 <code>ls</code>를 입력하고, 남은 여유 RAM을 보려면 <code>free</code>를 입력하고, 부팅 출력을 보려면 <code>dmesg</code>를 입력합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nsh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nsh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> free</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nsh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dmesg</span></span></code></pre></div><p>Below are a couple of commands which can be used in the <a href="https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=139629410" target="_blank" rel="noreferrer">NuttShell</a> to get insights of the system.</p><p>This NSH command provides the remaining free memory:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">free</span></span></code></pre></div><p>The top command shows the stack usage per application:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">top</span></span></code></pre></div><p>Note that stack usage is calculated with stack coloring and is the maximum since the start of the task (not the current usage).</p><p>To see what is running in the work queues and at what rate, use:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">work_queue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span></code></pre></div><p>To debug uORB topics:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uorb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> top</span></span></code></pre></div><p>To inspect a specific uORB topic:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listener</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">topic_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>다른 많은 시스템 명령과 모듈은 <a href="./../modules/modules_main.html">모듈 및 명령 참조</a>에 나열되어 있습니다(예: <code>top</code>, <code>listener</code> 등).</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>일부 명령은 일부 보드에서 비활성화될 수 있습니다(예: RAM 또는 FLASH 제약 조건이 있는 보드의 경우 일부 모듈은 펌웨어에 포함되지 않음). 이 경우에는 응답이 표시됩니다. <code>명령어를 찾을 수 없음</code></p></div>`,32),o=[l];function n(p,h,c,d,r,u){return a(),s("div",null,o)}const m=e(i,[["render",n]]);export{g as __pageData,m as default};
