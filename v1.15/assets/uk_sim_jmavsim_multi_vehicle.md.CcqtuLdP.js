import{_ as s,c as i,o as a,ab as e}from"./chunks/framework.CUflZczI.js";const k=JSON.parse('{"title":"Симуляція кількох рухомих засобів з JMAVSim","description":"","frontmatter":{},"headers":[],"relativePath":"uk/sim_jmavsim/multi_vehicle.md","filePath":"uk/sim_jmavsim/multi_vehicle.md"}'),t={name:"uk/sim_jmavsim/multi_vehicle.md"},l=e('<h1 id="симуляція-кількох-рухомих-засобів-з-jmavsim" tabindex="-1">Симуляція кількох рухомих засобів з JMAVSim <a class="header-anchor" href="#симуляція-кількох-рухомих-засобів-з-jmavsim" aria-label="Permalink to &quot;Симуляція кількох рухомих засобів з JMAVSim&quot;">​</a></h1><p>Ця тема пояснює, як моделювати кілька БПЛА (багатовертольотних) транспортних засобів, використовуючи <a href="./../sim_jmavsim/">JMAVSim</a> та SITL. Усі екземпляри транспортних засобів починають рух з однакової позиції в симуляції.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Це найлегший спосіб симулювати одночасний рух кількох транспортних засобів PX4. Це підходить для тестування підтримки кількох транспортних засобів у <em>QGroundControl</em> (або у <a href="https://mavsdk.mavlink.io/" target="_blank" rel="noreferrer">MAVSDK</a>, тощо). <a href="./../simulation/multi-vehicle-simulation.html">Багатофункціональне моделювання транспортних засобів з Gazebo</a> слід використовувати для імітації рою з багатьма транспортними засобами або для тестування функцій, таких як комп&#39;ютерне зорове спостереження, які підтримуються лише Gazebo.</p></div><h2 id="як-розпочати-кілька-екземплярів" tabindex="-1">Як розпочати кілька екземплярів <a class="header-anchor" href="#як-розпочати-кілька-екземплярів" aria-label="Permalink to &quot;Як розпочати кілька екземплярів&quot;">​</a></h2><p>Для запуску кількох екземплярів (на окремих портах):</p><ol><li><p>Збірка PX4</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span></span></code></pre></div></li><li><p>Виконайте <strong>sitl_multiple_run.sh</strong>, вказавши кількість екземплярів для запуску (наприклад, 2):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Tools/sitl_multiple_run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span></code></pre></div></li><li><p>Запустіть перший екземпляр в тому ж терміналі (це буде працювати на передньому плані):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Tools/simulation/jmavsim/jmavsim_run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre></div></li><li><p>Відкрийте новий термінал для кожного наступного екземпляру, вказавши <em>симуляційний</em> TCP-порт для екземпляру:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Tools/simulation/jmavsim/jmavsim_run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4560</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre></div><p>Порт повинен бути встановлений на <code>4560+i</code>, де <code>i</code> ітерується для кожного екземпляра (від <code>0</code> до <code>N-1</code>)</p></li></ol><p><em>QGroundControl</em> повинен автоматично підключатися до всіх нових екземплярів транспортних засобів (весь трафік GCS надсилається на віддалений UDP-порт PX4: <code>14550</code> з усіх екземплярів). Транспортний засіб, яким у даний момент керується, відображається в програмі на панелі; ви можете вибрати цей текст транспортного засобу, щоб відобразити список вибору всіх (симульованих) підключених екземплярів транспортних засобів (<code>Транспортний засіб 1</code>, <code>Транспортний засіб 2</code> тощо) та вибрати новий транспортний засіб для керування.</p><p>API розробника, такі як <em>MAVSDK</em> або <em>MAVROS</em>, можуть підключатися до окремих екземплярів, прослуховуючи послідовно виділені віддалені UDP-порти PX4 від <code>14540</code> (перший екземпляр) до <code>14549</code>. Додаткові екземпляри <em>всі</em> підключаються до порту <code>14549</code>.</p><blockquote><p><strong>Порада</strong> Сценарій <strong>sitl_multiple_run.sh</strong> запускає окремий процес для кожного транспортного засобу. Щоб перезапустити симуляції після вбивства одного з них, вам потрібно знову викликати <strong>sitl_multiple_run.sh</strong>, а також перезапустити кожний з індивідуальних екземплярів у їх власних терміналах.</p></blockquote><h2 id="додаткові-ресурси" tabindex="-1">Додаткові ресурси <a class="header-anchor" href="#додаткові-ресурси" aria-label="Permalink to &quot;Додаткові ресурси&quot;">​</a></h2><ul><li>Дивіться <a href="./../simulation/">Симуляція</a> для отримання додаткової інформації щодо налаштування порту.</li></ul>',11),o=[l];function n(p,h,c,d,r,m){return a(),i("div",null,o)}const _=s(t,[["render",n]]);export{k as __pageData,_ as default};
