import{_ as e}from"./chunks/px4_fmu_io_functions.CjO4wA90.js";import{_ as r,c as t,o as a,ab as i}from"./chunks/framework.CUflZczI.js";const b=JSON.parse('{"title":"PX4 Reference Flight Controller Design","description":"","frontmatter":{},"headers":[],"relativePath":"en/hardware/reference_design.md","filePath":"en/hardware/reference_design.md"}'),o={name:"en/hardware/reference_design.md"},n=i('<h1 id="px4-reference-flight-controller-design" tabindex="-1">PX4 Reference Flight Controller Design <a class="header-anchor" href="#px4-reference-flight-controller-design" aria-label="Permalink to &quot;PX4 Reference Flight Controller Design&quot;">​</a></h1><p>The PX4 reference design is the <a href="./../flight_controller/pixhawk_series.html">Pixhawk series</a> of flight controllers. First released in 2011, this design is now in its 5th <a href="#reference_design_generations">generation</a> (with the 6th generation board design in progress).</p><h2 id="binary-compatibility" tabindex="-1">Binary Compatibility <a class="header-anchor" href="#binary-compatibility" aria-label="Permalink to &quot;Binary Compatibility&quot;">​</a></h2><p>All boards manufactured to a particular design are expected to be binary compatible (i.e. can run the same firmware). From 2018 we will offer a binary compatibility test suite that will allow us to verify and certify this compatibility.</p><p>FMU generations 1-3 were designed as open hardware, while FMU generations 4 and 5 provided only pinout and power supply specifications (schematics were created by individual manufacturers). In order to better ensure compatibility, FMUv6 and onward will return to a complete reference design model.</p><p><a id="reference_design_generations"></a></p><h2 id="reference-design-generations" tabindex="-1">Reference Design Generations <a class="header-anchor" href="#reference-design-generations" aria-label="Permalink to &quot;Reference Design Generations&quot;">​</a></h2><ul><li>FMUv1: Development board (STM32F407, 128 KB RAM, 1MB flash, <a href="https://github.com/PX4/Hardware/tree/master/FMUv1" target="_blank" rel="noreferrer">schematics</a>) (no longer supported by PX4)</li><li>FMUv2: Pixhawk (STM32F427, 168 MHz, 192 KB RAM, 1MB flash, <a href="https://github.com/PX4/Hardware/tree/master/FMUv2" target="_blank" rel="noreferrer">schematics</a>)</li><li>FMUv3: Pixhawk variants with 2MB flash (3DR Pixhawk 2 (Solo), Hex Pixhawk 2.1, Holybro Pixfalcon, 3DR Pixhawk Mini, STM32F427, 168 MHz, 256 KB RAM, 2 MB flash, <a href="https://github.com/PX4/Hardware/tree/master/FMUv3_REV_D" target="_blank" rel="noreferrer">schematics</a>)</li><li>FMUv4: Pixracer (STM32F427, 168 MHz, 256 KB RAM, 2 MB flash, <a href="https://docs.google.com/spreadsheets/d/1raRRouNsveQz8cj-EneWG6iW0dqGfRAifI91I2Sr5E0/edit#gid=1585075739" target="_blank" rel="noreferrer">pinout</a>)</li><li>FMUv4 PRO: Drotek Pixhawk 3 PRO (STM32F469, 180 MHz, 384 KB RAM, 2 MB flash, <a href="https://docs.google.com/spreadsheets/d/1raRRouNsveQz8cj-EneWG6iW0dqGfRAifI91I2Sr5E0/edit#gid=1585075739" target="_blank" rel="noreferrer">pinout</a>)</li><li>FMUv5: Holybro Pixhawk 4 (STM32F765, 216 MHz, 512 KB RAM, 2 MB flash, <a href="https://docs.google.com/spreadsheets/d/1-n0__BYDedQrc_2NHqBenG1DNepAgnHpSGglke-QQwY/edit#gid=912976165" target="_blank" rel="noreferrer">pinout</a>)</li><li>FMUv6: work in progress, final name TBD, variant 6s (STM32H7, 400 MHz, 2 MB RAM, 2 MB flash) and variant 6i (i.MX RT1050, 600 MHz, 512 KB RAM, external flash)</li></ul><h2 id="main-io-function-breakdown" tabindex="-1">Main/IO Function Breakdown <a class="header-anchor" href="#main-io-function-breakdown" aria-label="Permalink to &quot;Main/IO Function Breakdown&quot;">​</a></h2><p>The diagram below shows the division of bus and functional responsibilities between the FMU and I/O boards in a Pixhawk-series flight controller (the boards are incorporated into a single physical module).</p><p><img src="'+e+'" alt="PX4 Main/IO Functional Breakdown"></p><p>Some Pixhawk-series controllers are built without the I/O board in order to reduce space or complexity, or to better address certain board use-cases. In this case the I/O driver is not started.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Manufacturer flight controller variants without an I/O board are often named as a &quot;diminutive&quot; of a version that includes the I/O board: e.g. <em>Pixhawk 4</em> <strong>Mini</strong><em>, _CUAV v5 <strong>nano</strong></em>.</p></div><p>Build targets that must run on flight controllers with an I/O board map the FMU outputs to <code>AUX</code> and the I/0 outputs to <code>MAIN</code> (see diagram above). If the target is run on hardware where I/O board is not present or has been disabled, the PWM MAIN outputs will not be present. You might see this, for example, by running <code>px4_fmu-v5_default</code> on <a href="./../flight_controller/pixhawk4.html">Pixhawk 4</a> (with IO) and <a href="./../flight_controller/pixhawk4_mini.html">Pixhawk 4 Mini</a> (without I/O).</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>On <a href="./../flight_controller/pixhawk4_mini.html">Pixhawk 4 Mini</a> this results in a mismatch between the <code>MAIN</code> label screenprinted on the flight controller and the <code>AUX</code> bus shown during <a href="./../config/actuators.html">Actuator Configuration</a>.</p><div class="info custom-block"><p class="custom-block-title">that if a build target is only ever intended to run on a flight controller that does not have an I/0 board, then the FMU outputs are mapped to <code>MAIN</code> (for example, the <code>px4_fmu-v4_default</code> target for <a href="./../flight_controller/pixracer.html">Pixracer</a>).</p><p>PX4 PWM outputs are mapped to either <code>MAIN</code> or <code>AUX</code> ports in <a href="./../config/actuators.html">Actuator Configuration</a>.</p></div></div>',15),s=[n];function l(h,c,d,f,p,u){return a(),t("div",null,s)}const M=r(o,[["render",l]]);export{b as __pageData,M as default};
