import{_ as a,c as l,o as t,ab as i,m as s}from"./chunks/framework.CUflZczI.js";const C=JSON.parse('{"title":"Середовище розробки MacOS","description":"","frontmatter":{},"headers":[],"relativePath":"uk/dev_setup/dev_env_mac.md","filePath":"uk/dev_setup/dev_env_mac.md"}'),e={name:"uk/dev_setup/dev_env_mac.md"},h=i('<h1 id="середовище-розробки-macos" tabindex="-1">Середовище розробки MacOS <a class="header-anchor" href="#середовище-розробки-macos" aria-label="Permalink to &quot;Середовище розробки MacOS&quot;">​</a></h1><p>Наступні інструкції для встановлення середовища розробки PX4 для macOS. Це середовище може бути використане для збірки PX4 для:</p><ul><li>Pixhawk та іншого апаратного забезпечення на основі NuttX</li><li><a href="./../sim_gazebo_classic/">Симуляція Gazebo Classic</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Ця установка підтримується командою розробників PX4. Для збірки для інших цільових платформ потрібно використати <a href="./../dev_setup/dev_env.html#supported-targets">інші ОС</a> (або <a href="./../advanced/community_supported_dev_env.html">середовище розробки що не підтримується</a>).</p></div><h2 id="відеоінструкція" tabindex="-1">Відеоінструкція <a class="header-anchor" href="#відеоінструкція" aria-label="Permalink to &quot;Відеоінструкція&quot;">​</a></h2>',5),n=s("p",null,[s("div",{class:"embed-responsive embed-responsive-16by9"},[s("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/tMbMGiMs1cQ",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),p=i(`<h2 id="базове-налаштування" tabindex="-1">Базове налаштування <a class="header-anchor" href="#базове-налаштування" aria-label="Permalink to &quot;Базове налаштування&quot;">​</a></h2><p>&quot;Базове&quot; налаштування macOS встановлює інструменти, необхідні для збірки прошивки та включає загальні інструменти, які будуть потрібні для встановлення/використання симуляторів.</p><h3 id="налаштування-середовища" tabindex="-1">Налаштування середовища <a class="header-anchor" href="#налаштування-середовища" aria-label="Permalink to &quot;Налаштування середовища&quot;">​</a></h3><details class="details custom-block"><summary>Details</summary><p>Користувачі Apple M1 Macbook! Якщо у вас є Apple M1 Macbook, переконайтеся, що запускаєте x86 термінал шляхом налаштування термінала:</p><ol><li>Знайдіть термінальний додаток в теці Utilities (<strong>Finder &gt; Меню &gt; Utilities</strong>)</li><li>Виберіть <em>Terminal.app</em> та клацніть правою кнопкою миші, а потім оберіть <strong>Копіювати</strong></li><li>Перейменуйте скопійований додаток терміналу, наприклад <em>x86 Terminal</em></li><li>Тепер оберіть перейменований додаток <em>x86 Terminal</em> і клацніть правою кнопкою миші та оберіть <em>Отримати Інформацію</em></li><li>Поставте відмітку <strong>Відкрити з Rosetta</strong> та закрийте вікно</li><li>Запустіть <em>x86 Terminal</em> як зазвичай, який тепер повинен підтримувати інструментарій PX4</li></ol></details><p>Спочатку налаштуйте середовище</p><ol><li><p>Збільште кількість одночасно відкритих файлів додавши наступний рядок у файл <code>~/.zshenv</code> (створивши його якщо необхідно):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ulimit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2048</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshenv</span></span></code></pre></div></li></ol><p>:::note Якщо ви цього не зробите, інструментарій збірки може повідомити про помилку: <code>&quot;LD: too many open files&quot;</code> :::</p><ol><li><p>Забезпечте виконання Python 3 додаванням наступних рядків до <code>~/.zshenv</code></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Направляємо pip3 на системний pip MacOS </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pip3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/bin/pip3</span></span></code></pre></div></li></ol><h3 id="загальні-інструменти" tabindex="-1">Загальні інструменти <a class="header-anchor" href="#загальні-інструменти" aria-label="Permalink to &quot;Загальні інструменти&quot;">​</a></h3><p>Для налаштування середовища з можливістю збірки для обладнання Pixhawk/NuttX (і встановлення загальних інструментів для використання симуляторів):</p><ol><li><p>Встановіть Homebrew дотримуючись наступних <a href="https://brew.sh" target="_blank" rel="noreferrer">інструкцій установки</a>.</p></li><li><p>Виконайте ці команди в командній оболонці для встановлення загальних інструментів:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4/px4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4-dev</span></span></code></pre></div></li><li><p>Встановіть необхідні пакети Python:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># install required packages using pip3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyserial</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> empty</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> numpy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pandas</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jinja2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyyaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyros-genmsg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packaging</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kconfiglib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> future</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jsonschema</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># if this fails with a permissions error, your Python install is in a system path - use this command instead:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyserial</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> empty</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> numpy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pandas</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jinja2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyyaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyros-genmsg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packaging</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kconfiglib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> future</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jsonschema</span></span></code></pre></div></li></ol><h2 id="симуляція-gazebo-classic" tabindex="-1">Симуляція Gazebo Classic <a class="header-anchor" href="#симуляція-gazebo-classic" aria-label="Permalink to &quot;Симуляція Gazebo Classic&quot;">​</a></h2><p>Для встановлення середовища <a href="./../sim_gazebo_classic/README.html">Gazebo Classic</a>:</p><ol><li><p>Виконайте наступні команди в командній оболонці:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tbb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i.bak</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/disable! date:/s/^/  /; /disable! date:/s/./#/3&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)/Library/Taps/homebrew/homebrew-core/Formula/tbb@2020.rb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tbb@2020</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tbb@2020</span></span></code></pre></div></li></ol><p>:::note Станом на вересень 2021: Команди вище - це обхідний шлях для помилки: <a href="https://github.com/PX4/PX4-Autopilot/issues/17644" target="_blank" rel="noreferrer">PX4-Autopilot#17644</a>. Вони можуть бути видалені після того, як вона буде виправлена (разом з цією нотаткою). :::</p><ol><li><p>Для встановлення симуляції SITL з Gazebo Classic:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> temurin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xquartz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4-sim-gazebo</span></span></code></pre></div></li><li><p>Запустіть скрипт налаштування macOS: <code>PX4-Autopilot/Tools/setup/macos.sh</code> Найпростіший спосіб зробити це - клонувати вихідний код PX4 і потім виконати скрипт з директорії, як показано:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot.git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot/Tools/setup</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> macos.sh</span></span></code></pre></div></li></ol><h2 id="наступні-кроки" tabindex="-1">Наступні кроки <a class="header-anchor" href="#наступні-кроки" aria-label="Permalink to &quot;Наступні кроки&quot;">​</a></h2><p>Після того, як ви закінчите налаштування інструментів командного рядка:</p><ul><li>Встановіть <a href="./../dev_setup/vscode.html">VSCode</a> (якщо ви надаєте перевагу IDE ніж командному рядку).</li><li>Install the <a href="./../dev_setup/qgc_daily_build.html">QGroundControl Daily Build</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><em>Денна збірка</em> включає інструменти розробки яких немає в релізних збірках. Вона також може надати доступ до нових функцій PX4, які ще не підтримуються в релізних збірках.</p></div><ul><li>Переходьте до <a href="./../dev_setup/building_px4.html">інструкцій збірки</a>.</li></ul>`,21),k=[h,n,p];function r(d,o,F,c,g,y){return t(),l("div",null,k)}const m=a(e,[["render",r]]);export{C as __pageData,m as default};
