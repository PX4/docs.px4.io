import{_ as o,c as e,o as t,ab as a}from"./chunks/framework.CUflZczI.js";const f=JSON.parse('{"title":"Offboard Control","description":"","frontmatter":{},"headers":[],"relativePath":"en/ros/offboard_control.md","filePath":"en/ros/offboard_control.md"}'),r={name:"en/ros/offboard_control.md"},i=a('<h1 id="offboard-control" tabindex="-1">Offboard Control <a class="header-anchor" href="#offboard-control" aria-label="Permalink to &quot;Offboard Control&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><a href="./../flight_modes/offboard.html">Offboard control</a> is dangerous. It is the responsibility of the developer to ensure adequate preparation, testing and safety precautions are taken before offboard flights.</p></div><p>The idea behind off-board control is to be able to control the PX4 flight stack using software running outside of the autopilot. This is done through the MAVLink protocol, specifically the <a href="https://mavlink.io/en/messages/common.html#SET_POSITION_TARGET_LOCAL_NED" target="_blank" rel="noreferrer">SET_POSITION_TARGET_LOCAL_NED</a> and the <a href="https://mavlink.io/en/messages/common.html#SET_ATTITUDE_TARGET" target="_blank" rel="noreferrer">SET_ATTITUDE_TARGET</a> messages.</p><h2 id="offboard-control-firmware-setup" tabindex="-1">Offboard Control Firmware Setup <a class="header-anchor" href="#offboard-control-firmware-setup" aria-label="Permalink to &quot;Offboard Control Firmware Setup&quot;">​</a></h2><p>There are two things you want to setup on the firmware side before starting offboard development.</p><h3 id="map-an-rc-switch-to-offboard-mode-activation" tabindex="-1">Map an RC switch to offboard mode activation <a class="header-anchor" href="#map-an-rc-switch-to-offboard-mode-activation" aria-label="Permalink to &quot;Map an RC switch to offboard mode activation&quot;">​</a></h3><p>To do this, load up the parameters in <em>QGroundControl</em> and look for the RC_MAP_OFFB_SW parameter to which you can assign the RC channel you want to use to activate offboard mode. It can be useful to map things in such a way that when you fall out of offboard mode you go into position control.</p><p>Although this step isn&#39;t mandatory since you can activate offboard mode using a MAVLink message. We consider this method much safer.</p><h3 id="enable-the-companion-computer-interface" tabindex="-1">Enable the companion computer interface <a class="header-anchor" href="#enable-the-companion-computer-interface" aria-label="Permalink to &quot;Enable the companion computer interface&quot;">​</a></h3><p>Enable MAVLink on the serial port that you connect to the companion computer (see <a href="./../companion_computer/">Companion Computers</a>).</p><h2 id="hardware-setup" tabindex="-1">Hardware setup <a class="header-anchor" href="#hardware-setup" aria-label="Permalink to &quot;Hardware setup&quot;">​</a></h2><p>Usually, there are three ways of setting up offboard communication.</p><h3 id="serial-radios" tabindex="-1">Serial radios <a class="header-anchor" href="#serial-radios" aria-label="Permalink to &quot;Serial radios&quot;">​</a></h3><ol><li><p>One connected to a UART port of the autopilot</p></li><li><p>One connected to a ground station computer</p><p>Example radios include:</p><ul><li><a href="http://www.lairdtech.com/products/rm024" target="_blank" rel="noreferrer">Lairdtech RM024</a></li><li><a href="http://www.digi.com/products/xbee-rf-solutions/modules" target="_blank" rel="noreferrer">Digi International XBee Pro</a></li></ul></li></ol><p><a href="https://mermaid-js.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiZ3JhcGggVEQ7XG4gIGduZFtHcm91bmQgU3RhdGlvbl0gLS1NQVZMaW5rLS0-IHJhZDFbR3JvdW5kIFJhZGlvXTtcbiAgcmFkMSAtLVJhZGlvUHJvdG9jb2wtLT4gcmFkMltWZWhpY2xlIFJhZGlvXTtcbiAgcmFkMiAtLU1BVkxpbmstLT4gYVtBdXRvcGlsb3RdOyIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0In0sInVwZGF0ZUVkaXRvciI6ZmFsc2V9" target="_blank" rel="noreferrer"><img src="https://mermaid.ink/img/eyJjb2RlIjoiZ3JhcGggVEQ7XG4gIGduZFtHcm91bmQgU3RhdGlvbl0gLS1NQVZMaW5rLS0-IHJhZDFbR3JvdW5kIFJhZGlvXTtcbiAgcmFkMSAtLVJhZGlvUHJvdG9jb2wtLT4gcmFkMltWZWhpY2xlIFJhZGlvXTtcbiAgcmFkMiAtLU1BVkxpbmstLT4gYVtBdXRvcGlsb3RdOyIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0In0sInVwZGF0ZUVkaXRvciI6ZmFsc2V9" alt="Mermaid graph: mavlink channel"></a></p><h3 id="on-board-processor" tabindex="-1">On-board processor <a class="header-anchor" href="#on-board-processor" aria-label="Permalink to &quot;On-board processor&quot;">​</a></h3><p>A small computer mounted onto the vehicle, connected to the autopilot through a serial port or Ehthernet port. There are many possibilities here and it will depend on what kind of additional on-board processing you want to do in addition to sending commands to the autopilot. Some examples are provided in <a href="./../companion_computer/#companion-computer-options">Companion Computers</a>.</p><p><a href="https://mermaid-js.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiZ3JhcGggVEQ7XG4gIGNvbXBbQ29tcGFuaW9uIENvbXB1dGVyXSAtLU1BVkxpbmstLT4gdWFydFtVQVJUIEFkYXB0ZXJdO1xuICB1YXJ0IC0tTUFWTGluay0tPiBBdXRvcGlsb3Q7IiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifSwidXBkYXRlRWRpdG9yIjpmYWxzZX0" target="_blank" rel="noreferrer"><img src="https://mermaid.ink/img/eyJjb2RlIjoiZ3JhcGggVEQ7XG4gIGNvbXBbQ29tcGFuaW9uIENvbXB1dGVyXSAtLU1BVkxpbmstLT4gdWFydFtVQVJUIEFkYXB0ZXJdO1xuICB1YXJ0IC0tTUFWTGluay0tPiBBdXRvcGlsb3Q7IiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifSwidXBkYXRlRWRpdG9yIjpmYWxzZX0" alt="Mermaid diagram: Companion mavlink"></a></p><h3 id="on-board-processor-and-wifi-link-to-ros-recommended" tabindex="-1">On-board processor and wifi link to ROS (<em><strong>Recommended</strong></em>) <a class="header-anchor" href="#on-board-processor-and-wifi-link-to-ros-recommended" aria-label="Permalink to &quot;On-board processor and wifi link to ROS (***Recommended***)&quot;">​</a></h3><p>A small computer mounted onto the vehicle connected to the autopilot through a UART to USB adapter while also having a WiFi link to a ground station running ROS. This can be any of the computers from the above section coupled with a WiFi adapter.</p><p><a href="https://mermaid-js.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiZ3JhcGggVERcbiAgc3ViZ3JhcGggR3JvdW5kICBTdGF0aW9uXG4gIGduZFtST1MgRW5hYmxlZCBDb21wdXRlcl0gLS0tIHFnY1txR3JvdW5kQ29udHJvbF1cbiAgZW5kXG4gIGduZCAtLU1BVkxpbmsvVURQLS0-IHdbV2lGaV07XG4gIHFnYyAtLU1BVkxpbmstLT4gdztcbiAgc3ViZ3JhcGggVmVoaWNsZVxuICBjb21wW0NvbXBhbmlvbiBDb21wdXRlcl0gLS1NQVZMaW5rLS0-IHVhcnRbVUFSVCBBZGFwdGVyXVxuICB1YXJ0IC0tLSBBdXRvcGlsb3RcbiAgZW5kXG4gIHcgLS0tIGNvbXAiLCJtZXJtYWlkIjp7InRoZW1lIjoiZGVmYXVsdCJ9LCJ1cGRhdGVFZGl0b3IiOmZhbHNlfQ" target="_blank" rel="noreferrer"><img src="https://mermaid.ink/img/eyJjb2RlIjoiZ3JhcGggVERcbiAgc3ViZ3JhcGggR3JvdW5kICBTdGF0aW9uXG4gIGduZFtST1MgRW5hYmxlZCBDb21wdXRlcl0gLS0tIHFnY1txR3JvdW5kQ29udHJvbF1cbiAgZW5kXG4gIGduZCAtLU1BVkxpbmsvVURQLS0-IHdbV2lGaV07XG4gIHFnYyAtLU1BVkxpbmstLT4gdztcbiAgc3ViZ3JhcGggVmVoaWNsZVxuICBjb21wW0NvbXBhbmlvbiBDb21wdXRlcl0gLS1NQVZMaW5rLS0-IHVhcnRbVUFSVCBBZGFwdGVyXVxuICB1YXJ0IC0tLSBBdXRvcGlsb3RcbiAgZW5kXG4gIHcgLS0tIGNvbXAiLCJtZXJtYWlkIjp7InRoZW1lIjoiZGVmYXVsdCJ9LCJ1cGRhdGVFZGl0b3IiOmZhbHNlfQ" alt="Mermaid graph: ROS"></a></p>',21),n=[i];function d(l,c,s,h,m,b){return t(),e("div",null,n)}const u=o(r,[["render",d]]);export{f as __pageData,u as default};
