import{_ as a,c as e,o as t,ab as s}from"./chunks/framework.CUflZczI.js";const S=JSON.parse('{"title":"시리얼 포트 매핑","description":"","frontmatter":{},"headers":[],"relativePath":"ko/hardware/serial_port_mapping.md","filePath":"ko/hardware/serial_port_mapping.md"}'),n={name:"ko/hardware/serial_port_mapping.md"},p=s(`<h1 id="시리얼-포트-매핑" tabindex="-1">시리얼 포트 매핑 <a class="header-anchor" href="#시리얼-포트-매핑" aria-label="Permalink to &quot;시리얼 포트 매핑&quot;">​</a></h1><p>This topic shows how to determine the mapping between USART/UART serial port device names (e.g. &quot;ttyS0&quot;) and the associated ports on a flight controller, such as <code>TELEM1</code>, <code>TELEM2</code>, <code>GPS1</code>, <code>RC SBUS</code>, <code>Debug console</code>.</p><p>The instructions are used to generate serial port mapping tables in flight controller documentation. 예: <a href="./../flight_controller/pixhawk4.html#serial-port-mapping">Pixhawk 4 &gt; 직렬 포트 매핑</a>.</p><div class="info custom-block"><p class="custom-block-title">The function assigned to each port does not <em>have to</em> match the name (in most cases), and is set using a <a href="./../peripherals/serial_configuration.html">Serial Port Configuration</a>. Usually the port function is configured to match the name, which is why the port labelled <code>GPS1</code> will work with a GPS out of the box.</p></div><h2 id="stmxxyyy의-nuttx" tabindex="-1">STMxxyyy의 NuttX <a class="header-anchor" href="#stmxxyyy의-nuttx" aria-label="Permalink to &quot;STMxxyyy의 NuttX&quot;">​</a></h2><p>보드 설정 파일을 검사하여 STMxxyyy 아키텍처에서 NuttX 빌드에 대한 매핑 획득 방법을 설명합니다. FMUv5를 사용하지만, 다른 FMU 버전/NuttX 보드에도 유사하게 확장할 수 있습니다.</p><h3 id="default-cmake" tabindex="-1">default.cmake <a class="header-anchor" href="#default-cmake" aria-label="Permalink to &quot;default.cmake&quot;">​</a></h3><p><strong>default.cmake</strong>는 여러 직렬 포트 매핑을 나열합니다(텍스트 &quot;SERIAL_PORTS&quot; 검색).</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v5/default.cmake#L13-L17" target="_blank" rel="noreferrer">/boards/px4/fmu-v5/default.cmake</a>에서:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>SERIAL_PORTS</span></span>
<span class="line"><span>    GPS1:/dev/ttyS0</span></span>
<span class="line"><span>    TEL1:/dev/ttyS1</span></span>
<span class="line"><span>    TEL2:/dev/ttyS2</span></span>
<span class="line"><span>    TEL4:/dev/ttyS3</span></span></code></pre></div><p>Alternatively you can launch boardconfig using <code>make px4_fmu-v5 boardconfig</code> and access the serial port menu</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    CONFIG_STM32F7_UART4=y</span></span>
<span class="line"><span>CONFIG_STM32F7_UART7=y</span></span>
<span class="line"><span>CONFIG_STM32F7_UART8=y</span></span>
<span class="line"><span>CONFIG_STM32F7_USART1=y</span></span>
<span class="line"><span>CONFIG_STM32F7_USART2=y</span></span>
<span class="line"><span>CONFIG_STM32F7_USART3=y</span></span>
<span class="line"><span>CONFIG_STM32F7_USART6=y</span></span></code></pre></div><h3 id="nsh-defconfig" tabindex="-1">nsh/defconfig <a class="header-anchor" href="#nsh-defconfig" aria-label="Permalink to &quot;nsh/defconfig&quot;">​</a></h3><p>The <em>nsh/defconfig</em> allows you to determine which ports are defined, whether they are UART or USARTs, and the mapping between USART/UART and device. You can also determine which port is used for the <a href="./../debug/system_console.html">serial/debug console</a>.</p><p>Open the board&#39;s defconfig file, for example: <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/boards/px4/fmu-v5/nuttx-config/nsh/defconfig#L215-L221" target="_blank" rel="noreferrer">/boards/px4/fmu-v5/nuttx-config/nsh/defconfig</a></p><p>Search for the text &quot;ART&quot; until you find a section like with entries formatted like <code>CONFIG_STM32xx_USARTn=y</code> (where <code>xx</code> is a processor type and <code>n</code> is a port number). For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ttyS0 CONFIG_STM32F7_USART1=y</span></span>
<span class="line"><span>ttyS1 CONFIG_STM32F7_USART2=y</span></span>
<span class="line"><span>ttyS2 CONFIG_STM32F7_USART3=y</span></span>
<span class="line"><span>ttyS3 CONFIG_STM32F7_UART4=y</span></span>
<span class="line"><span>ttyS4 CONFIG_STM32F7_USART6=y</span></span>
<span class="line"><span>ttyS5 CONFIG_STM32F7_UART7=y</span></span>
<span class="line"><span>ttyS6 CONFIG_STM32F7_UART8=y</span></span></code></pre></div><p>The entries tell you which ports are defined, and whether they are UART or USART.</p><p>DEBUG 콘솔 매핑을 가져오기 위해 <code>SERIAL_CONSOLE</code>에 대한 <a href="https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v5/nuttx-config/nsh/defconfig#L212" target="_blank" rel="noreferrer">defconfig 파일</a>을 검색합니다. 아래에서 콘솔이 UART7에 있음을 알 수 있습니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>CONFIG_UART7_SERIAL_CONSOLE=y</span></span></code></pre></div><p>To get the DEBUG console mapping we search the <a href="https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v5/nuttx-config/nsh/defconfig#L212" target="_blank" rel="noreferrer">defconfig file</a> for <code>SERIAL_CONSOLE</code>. Below we see that the console is on UART7:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>#define PX4IO_SERIAL_DEVICE            &quot;/dev/ttyS6&quot;</span></span>
<span class="line"><span>#define PX4IO_SERIAL_TX_GPIO           GPIO_UART8_TX</span></span>
<span class="line"><span>#define PX4IO_SERIAL_RX_GPIO           GPIO_UART8_RX</span></span>
<span class="line"><span>#define PX4IO_SERIAL_BASE              STM32_UART8_BASE</span></span></code></pre></div><h3 id="board-config-h" tabindex="-1">board_config.h <a class="header-anchor" href="#board-config-h" aria-label="Permalink to &quot;board_config.h&quot;">​</a></h3><p>예: <a href="https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v5/src/board_config.h#L59" target="_blank" rel="noreferrer">/boards/px4/fmu-v5/src/board_config.h</a></p><p>따라서 PX4IO는 <code>ttyS6</code>에 있습니다(이전 섹션에서 이미 알고 있는 UART8에 매핑되는 것도 볼 수 있습니다).</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ttyS0 CONFIG_STM32F7_USART1=y GPS1</span></span>
<span class="line"><span>ttyS1 CONFIG_STM32F7_USART2=y TEL1</span></span>
<span class="line"><span>ttyS2 CONFIG_STM32F7_USART3=y TEL2</span></span>
<span class="line"><span>ttyS3 CONFIG_STM32F7_UART4=y TEL4</span></span>
<span class="line"><span>ttyS4 CONFIG_STM32F7_USART6=y</span></span>
<span class="line"><span>ttyS5 CONFIG_STM32F7_UART7=y DEBUG</span></span>
<span class="line"><span>ttyS6 CONFIG_STM32F7_UART8=y PX4IO</span></span></code></pre></div><p>최종 매핑은 다음과 같습니다.</p><h3 id="결합" tabindex="-1">결합 <a class="header-anchor" href="#결합" aria-label="Permalink to &quot;결합&quot;">​</a></h3><p><a href="./../flight_controller/pixhawk4.html#serial-port-mapping">비행 콘트롤러 문서</a>의 결과 표는 다음과 같습니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ttyS0 CONFIG_STM32F7_USART1=y GPS1</span></span>
<span class="line"><span>ttyS1 CONFIG_STM32F7_USART2=y TEL1</span></span>
<span class="line"><span>ttyS2 CONFIG_STM32F7_USART3=y TEL2</span></span>
<span class="line"><span>ttyS3 CONFIG_STM32F7_UART4=y TEL4</span></span>
<span class="line"><span>ttyS4 CONFIG_STM32F7_USART6=y</span></span>
<span class="line"><span>ttyS5 CONFIG_STM32F7_UART7=y DEBUG</span></span>
<span class="line"><span>ttyS6 CONFIG_STM32F7_UART8=y PX4IO</span></span></code></pre></div><p>In the <a href="./../flight_controller/pixhawk4.html#serial-port-mapping">flight controller docs</a> the resulting table is:</p><table><thead><tr><th>UART</th><th>장치</th><th>포트</th></tr></thead><tbody><tr><td>UART1</td><td>/dev/ttyS0</td><td>GPS</td></tr><tr><td>USART2</td><td>/dev/ttyS1</td><td>TELEM1 (흐름 제어)</td></tr><tr><td>USART3</td><td>/dev/ttyS2</td><td>TELEM2 (흐름 제어)</td></tr><tr><td>UART4</td><td>/dev/ttyS3</td><td>TELEM4</td></tr><tr><td>USART6</td><td>/dev/ttyS4</td><td>RC SBUS</td></tr><tr><td>UART7</td><td>/dev/ttyS5</td><td>디버그 콘솔</td></tr><tr><td>UART8</td><td>/dev/ttyS6</td><td>PX4IO</td></tr></tbody></table><h2 id="기타-아키텍처" tabindex="-1">기타 아키텍처 <a class="header-anchor" href="#기타-아키텍처" aria-label="Permalink to &quot;기타 아키텍처&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Contributions welcome!</p></div><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h2><ul><li><a href="./../peripherals/serial_configuration.html">Serial Port Configuration</a></li><li><a href="./../peripherals/mavlink_peripherals.html">MAVLink Telemetry (OSD/GCS)</a></li></ul>`,36),o=[p];function i(l,r,d,c,h,u){return t(),e("div",null,o)}const T=a(n,[["render",i]]);export{S as __pageData,T as default};
