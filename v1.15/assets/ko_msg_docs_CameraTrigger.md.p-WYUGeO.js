import{_ as s,c as a,o as e,ab as i}from"./chunks/framework.CUflZczI.js";const d=JSON.parse('{"title":"CameraTrigger (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/msg_docs/CameraTrigger.md","filePath":"ko/msg_docs/CameraTrigger.md"}'),t={name:"ko/msg_docs/CameraTrigger.md"},r=i(`<h1 id="cameratrigger-uorb-message" tabindex="-1">CameraTrigger (UORB message) <a class="header-anchor" href="#cameratrigger-uorb-message" aria-label="Permalink to &quot;CameraTrigger (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/CameraTrigger.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp    # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp_utc # UTC timestamp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 seq      # Image sequence number</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> feedback   # Trigger feedback from camera</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 ORB_QUEUE_LENGTH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span></code></pre></div>`,3),n=[r];function l(p,c,o,g,h,m){return e(),a("div",null,n)}const _=s(t,[["render",l]]);export{d as __pageData,_ as default};
