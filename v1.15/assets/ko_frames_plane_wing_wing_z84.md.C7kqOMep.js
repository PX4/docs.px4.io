import{_ as a,a as t,b as i,c as r,d as e,e as n,f as o,g as l}from"./chunks/qgc_actuator_config.B5iBnftH.js";import{_ as h,c as g,o as s,ab as c}from"./chunks/framework.CUflZczI.js";const y=JSON.parse('{"title":"Wing Wing Z-84 Pixracer 조립","description":"","frontmatter":{},"headers":[],"relativePath":"ko/frames_plane/wing_wing_z84.md","filePath":"ko/frames_plane/wing_wing_z84.md"}'),p={name:"ko/frames_plane/wing_wing_z84.md"},d=c('<h1 id="wing-wing-z-84-pixracer-조립" tabindex="-1">Wing Wing Z-84 Pixracer 조립 <a class="header-anchor" href="#wing-wing-z-84-pixracer-조립" aria-label="Permalink to &quot;Wing Wing Z-84 Pixracer 조립&quot;">​</a></h1><p>The Wing Wing Z-84 is a flying wing frame. It is small, rugged and just large enough to host a <a href="./../flight_controller/pixracer.html">Pixracer</a>.</p><p>주요 정보:</p><ul><li><strong>기체:</strong> Wing Wing Z-84</li><li><strong>비행 컨트롤러:</strong> Pixracer</li></ul><p><img src="'+a+'" alt="Wing Wing Z-84 조립"></p><h2 id="부품-목록" tabindex="-1">부품 목록 <a class="header-anchor" href="#부품-목록" aria-label="Permalink to &quot;부품 목록&quot;">​</a></h2><h3 id="z-84-plug-n-fly-pnf-pnp-또는-키트" tabindex="-1">Z-84 Plug n&#39; Fly (PNF/PNP) 또는 키트 <a class="header-anchor" href="#z-84-plug-n-fly-pnf-pnp-또는-키트" aria-label="Permalink to &quot;Z-84 Plug n&#39; Fly (PNF/PNP) 또는 키트&quot;">​</a></h3><p>다음 중 하나 :</p><ul><li><a href="https://www.banggood.com/Wing-Wing-Z-84-Z84-EPO-845mm-Wingspan-Flying-Wing-PNP-p-973125.html" target="_blank" rel="noreferrer">Banggood</a></li><li><a href="https://hobbyking.com/en_us/wing-wing-z-84-epo-845mm-kit.html" target="_blank" rel="noreferrer">Hobbyking 미국 매장</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>PNF (또는 &quot;PNP&quot;) 버전에는 모터, 프로펠러와 ESC가 포함됩니다. &quot;키트&quot; 버전에는 이러한 부품들이 포함되어 있지 않아서, 별도로 구매하여야 합니다.</p></div><h3 id="전기-속도-컨트롤러-esc" tabindex="-1">전기 속도 컨트롤러 (ESC) <a class="header-anchor" href="#전기-속도-컨트롤러-esc" aria-label="Permalink to &quot;전기 속도 컨트롤러 (ESC)&quot;">​</a></h3><p>다음 중 하나 (작은 (&gt; = 12A) ESC가 수행함) :</p><ul><li><a href="https://hobbyking.com/en_us/turnigy-20a-brushed-esc.html" target="_blank" rel="noreferrer">Turnigy 20A Brushed ESC ESC</a> (Hobbyking)</li><li><a href="https://www.getfpv.com/lumenier-30a-blheli-s-esc-opto-2-4s.html" target="_blank" rel="noreferrer">Lumenier Regler 30A BLHeli_S ESC OPTO</a> (GetFPV)</li></ul><h3 id="autopilot-및-필수-부품들" tabindex="-1">Autopilot 및 필수 부품들 <a class="header-anchor" href="#autopilot-및-필수-부품들" aria-label="Permalink to &quot;Autopilot 및 필수 부품들&quot;">​</a></h3><ul><li><a href="./../flight_controller/pixracer.html">Pixracer</a> kit (including GPS and power module)</li><li>FrSky D4R-II 수신기 또는 동급 (설명서에 따라 PPM 합계 출력으로 점퍼됨)</li><li>Holybro pix32용 <a href="./../flight_controller/pixfalcon.html#availability">미니 텔레메트리 세트</a></li><li>Holybro pix32 / Pixfalcon용 <a href="./../flight_controller/pixfalcon.html#availability">디지털 대기 속도 센서</a></li><li>1800mAh 2S LiPo 배터리 - 예 : <a href="https://teamorion.com/en/batteries-en/lipo/soft-case/team-orion-lipo-1800-2s-7-4v-50c-xt60-en/" target="_blank" rel="noreferrer">팀 오리온 1800mAh 7.4V 50C 2S1P</a></li></ul><h3 id="권장-예비-부품" tabindex="-1">권장 예비 부품 <a class="header-anchor" href="#권장-예비-부품" aria-label="Permalink to &quot;권장 예비 부품&quot;">​</a></h3><ul><li>프로펠러 보호용 직경 1cm O - 링 (<a href="https://hobbyking.com/en_us/wing-wing-z-84-o-ring-10pcs.html" target="_blank" rel="noreferrer">Hobbyking</a>)</li><li>125x110 mm 프로펠러 (<a href="https://hobbyking.com/en_us/gws-ep-propeller-dd-5043-125x110mm-green-6pcs-set.html" target="_blank" rel="noreferrer">Hobbyking</a>)</li></ul><h2 id="배선" tabindex="-1">배선 <a class="header-anchor" href="#배선" aria-label="Permalink to &quot;배선&quot;">​</a></h2><p>Wire the servos and motors as shown. Use the <code>MAIN</code> outputs (not the ones labeled with AUX). 자동조종장치가 서보 레일에 전원을 공급하지 않으므로, 모터 컨트롤러에는 내장 BEC가 있어야합니다.</p><table><thead><tr><th>포트</th><th>연결</th></tr></thead><tbody><tr><td>RC IN</td><td>PPM or S.BUS / S.BUS2 input</td></tr><tr><td>MAIN 1</td><td>좌측 보조익</td></tr><tr><td>MAIN 2</td><td>우측 보조익</td></tr><tr><td>MAIN 3</td><td>비어있음</td></tr><tr><td>MAIN 4</td><td>Motor 1</td></tr></tbody></table><h2 id="조립-방법" tabindex="-1">조립 방법 <a class="header-anchor" href="#조립-방법" aria-label="Permalink to &quot;조립 방법&quot;">​</a></h2><p>아래 이미지는 조립 공정에 대한 대략적인 아이디어를 제공합니다. 글루건을 사용하는 것이 좋습니다.</p><p><img src="'+t+'" alt="wing wing build01"> <img src="'+i+'" alt="wing wing build02"> <img src="'+r+'" alt="wing wing build03"> <img src="'+e+'" alt="wing wing build04"> <img src="'+n+'" alt="wing wing build09"> <img src="'+a+'" alt="Wing Wing Z-84 조립"></p><h2 id="px4-configuration" tabindex="-1">PX4 Configuration <a class="header-anchor" href="#px4-configuration" aria-label="Permalink to &quot;PX4 Configuration&quot;">​</a></h2><h3 id="기체-설정" tabindex="-1">기체 설정 <a class="header-anchor" href="#기체-설정" aria-label="Permalink to &quot;기체 설정&quot;">​</a></h3><p>Select <strong>Flying Wing &gt; Generic Flying Wing</strong> in the QGroundControl <a href="./../config/airframe.html">Airframe Configuration</a>:</p><p><img src="'+o+'" alt="QGC-West Wing용 펌웨어 선택"></p><h3 id="actuator-mapping" tabindex="-1">Actuator Mapping <a class="header-anchor" href="#actuator-mapping" aria-label="Permalink to &quot;Actuator Mapping&quot;">​</a></h3><p>Set up the <a href="./../config/actuators.html">Actuator Configuration</a> to match the wiring for the ailerons and throttle as <a href="#wiring">indicated above</a>.</p><p><img src="'+l+'" alt="QGC - set the actuators"></p><h3 id="other-configuration" tabindex="-1">Other Configuration <a class="header-anchor" href="#other-configuration" aria-label="Permalink to &quot;Other Configuration&quot;">​</a></h3><p>Perform all the the other <a href="./../config/">Basic Configuration</a>, including <a href="./../config/autotune.html">Autotuning</a>.</p><p>Advanced tuning is optional - see <a href="./../config_fw/">Fixed-wing Vehicle Configuration</a>.</p>',33),u=[d];function m(f,_,b,P,w,k){return s(),g("div",null,u)}const C=h(p,[["render",m]]);export{y as __pageData,C as default};
