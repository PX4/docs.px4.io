import{_ as s,c as i,o as a,ab as t}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"Повідомлення MAVLink","description":"","frontmatter":{},"headers":[],"relativePath":"uk/middleware/mavlink.md","filePath":"uk/middleware/mavlink.md"}'),n={name:"uk/middleware/mavlink.md"},e=t(`<h1 id="повідомлення-mavlink" tabindex="-1">Повідомлення MAVLink <a class="header-anchor" href="#повідомлення-mavlink" aria-label="Permalink to &quot;Повідомлення MAVLink&quot;">​</a></h1><p><a href="https://mavlink.io/en/" target="_blank" rel="noreferrer">MAVLink</a> це дуже легкий протокол обміну повідомленнями, який був спроектований для екосистеми дронів.</p><p>PX4 використовує <em>MAVLink</em> для зв&#39;язку з наземними станціями і MAVLink SDK, такими як <em>QGroundControl</em> і <a href="https://mavsdk.mavlink.io/" target="_blank" rel="noreferrer">MAVSDK</a>, а також як інтеграційний механізм для підключення до компонентів дрона за межами польотного контролера: комп&#39;ютерів-компаньйонів, камер з підтримкою MAVLink і так далі.</p><p>Ця тема надає короткий огляд основних концепцій MAVLink, таких як повідомлення, команди та мікросервіси. Він також надає інструкції посібника про те, як ви можете додати підтримку PX4 для:</p><ul><li>Потокових повідомлень MAVLink</li><li>Обробка вхідних повідомлень MAVLink та запис до теми uORB.</li></ul><div class="info custom-block"><p class="custom-block-title">Ця тема не охоплює обробку та надсилання <em>команд</em> або реалізацію власних мікросервісів.</p></div><h2 id="огляд-mavlink" tabindex="-1">Огляд MAVLink <a class="header-anchor" href="#огляд-mavlink" aria-label="Permalink to &quot;Огляд MAVLink&quot;">​</a></h2><p>MAVLink - це легкий протокол, який був розроблений для ефективної відправки повідомлень по ненадійним радіоканалах з низькою пропускною здатністю.</p><p><em>Повідомлення</em> є найпростішим і найбільш &quot;фундаментальним&quot; визначенням у MAVLink, що складається з назви (наприклад, <a href="https://mavlink.io/en/messages/common.html#ATTITUDE" target="_blank" rel="noreferrer">ATTITUDE</a>), ідентифікатора та полів, що містять відповідні дані. Вони навмисно легкі, мають обмежений розмір і не мають семантики для повторного надсилання та підтвердження. Окремі повідомлення зазвичай використовуються для потокової передачі телеметрії або інформації про стан, а також для надсилання команд, які не потребують підтвердження - наприклад, команд уставки, що надсилаються з високою швидкістю.</p><p><a href="https://mavlink.io/en/services/command.html" target="_blank" rel="noreferrer">Command Protocol</a> - це протокол вищого рівня для надсилання команд, які можуть потребувати підтвердження. Конкретні команди визначаються як значення списку <a href="https://mavlink.io/en/messages/common.html#mav_commands" target="_blank" rel="noreferrer">MAV_CMD</a>, наприклад, команда зльоту <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_NAV_TAKEOFF" target="_blank" rel="noreferrer">MAV_CMD_NAV_TAKEOFF</a>, і включають до 7 числових значень &quot;param&quot;. Протокол надсилає команду, упаковуючи значення параметрів у повідомлення <code>COMMAND_INT</code> або <code>COMMAND_LONG</code>, і чекає на підтвердження з результатом у <code>COMMAND_ACK</code>. Якщо команда не буде отримана, вона буде повторно надіслана автоматично. Зауважте, що визначення <a href="https://mavlink.io/en/messages/common.html#mav_commands" target="_blank" rel="noreferrer">MAV_CMD</a> також використовуються для визначення дій місії, і що не всі визначення підтримуються для використання у командах/місіях на PX4.</p><p><a href="https://mavlink.io/en/services/" target="_blank" rel="noreferrer">Мікросервіси</a> - це інші протоколи вищого рівня, побудовані на основі повідомлень MAVLink. Вони використовуються для передачі інформації, яку неможливо надіслати одним повідомленням, а також для забезпечення таких функцій, як надійний зв&#39;язок. Описаний вище командний протокол є одним з таких сервісів. Інші включають <a href="https://mavlink.io/en/services/ftp.html" target="_blank" rel="noreferrer">Протокол передачі файлів</a>, <a href="https://mavlink.io/en/services/camera.html" target="_blank" rel="noreferrer">Протокол камери</a> і <a href="https://mavlink.io/en/services/mission.html" target="_blank" rel="noreferrer">Протокол місії</a>.</p><p>MAVLink повідомлення, команди та переліки визначаються у <a href="https://mavlink.io/en/guide/define_xml_element.html" target="_blank" rel="noreferrer">XML-файлах визначень</a>. Інструментарій MAVLink включає в себе генератори коду, які створюють з цих визначень специфічні для мови програмування бібліотеки для надсилання та отримання повідомлень. Зверніть увагу, що більшість згенерованих бібліотек не створюють код для реалізації мікросервісів.</p><p>Проект MAVLink стандартизує ряд повідомлень, команд, переліків та мікросервісів для обміну даними за допомогою наступних файлів визначень (зауважте, що файли вищого рівня _ включають_ визначення файлів нижчого рівня):</p><ul><li><a href="https://mavlink.io/en/messages/development.html" target="_blank" rel="noreferrer">development.xml</a> - Визначення, які пропонується включити до стандарту. Визначення переміщуються до <code>common.xml</code>, якщо їх прийнято після тестування.</li><li><a href="https://mavlink.io/en/messages/common.html" target="_blank" rel="noreferrer">common.xml</a> - &quot;бібліотека&quot; визначень, що відповідають багатьом поширеним випадкам використання БПЛА. Вони підтримуються багатьма польотними стеками, наземними станціями та периферійними пристроями MAVLink. Польотні стеки, які використовують ці визначення, з більшою ймовірністю будуть взаємодіяти.</li><li><a href="https://mavlink.io/en/messages/standard.html" target="_blank" rel="noreferrer">standard.xml</a> - Визначення, які є стандартними. Вони присутні на переважній більшості польотних стеків і реалізовані однаково.</li><li><a href="https://mavlink.io/en/messages/minimal.html" target="_blank" rel="noreferrer">minimal.xml</a> - Визначення, необхідні для мінімальної реалізації MAVLink.</li></ul><p>Проект також містить <a href="https://mavlink.io/en/messages/#dialects" target="_blank" rel="noreferrer">діалектні XML-визначення</a>, які містять визначення MAVLink, специфічні для польотного стеку або інших зацікавлених сторін.</p><p>Протокол покладається на те, що кожна сторона комунікації має спільне визначення того, які повідомлення надсилаються. Це означає, що для того, щоб взаємодіяти, обидва кінці комунікації повинні використовувати бібліотеки, створені на основі одного і того ж визначення XML.</p><h2 id="px4-та-mavlink" tabindex="-1">PX4 та MAVLink <a class="header-anchor" href="#px4-та-mavlink" aria-label="Permalink to &quot;PX4 та MAVLink&quot;">​</a></h2><p>PX4 за замовчуванням випускає збірку <code>common.xml</code> визначень MAVLink для забезпечення максимальної сумісності з наземними станціями MAVLink, бібліотеками та зовнішніми компонентами, такими як камери MAVLink. У гілці <code>main</code> вони містяться у <code>development.xml</code> на SITL та <code>common.xml</code> для інших плат.</p><div class="info custom-block"><p class="custom-block-title">Щоб бути частиною випуску PX4, всі визначення MAVLink, які ви використовуєте, повинні знаходитися у <code>common.xml</code> (або у включених файлах, таких як <code>standard.xml</code> та <code>minimal.xml</code>). Під час розробки ви можете використовувати визначення в <code>development.xml</code>. Вам потрібно буде попрацювати з <a href="https://mavlink.io/en/contributing/contributing.html" target="_blank" rel="noreferrer">командою MAVLink</a>, щоб визначити і внести ці визначення.</p></div><p>PX4 включає репозиторій <a href="https://github.com/mavlink/mavlink" target="_blank" rel="noreferrer">mavlink/mavlink</a> як підмодуль у <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/mavlink" target="_blank" rel="noreferrer">/src/modules/mavlink</a>. Тут містяться файли визначень XML у каталозі <a href="https://github.com/mavlink/mavlink/blob/master/message_definitions/v1.0/" target="_blank" rel="noreferrer">/mavlink/messages/1.0/</a>.</p><p>Інструментарій збірки генерує заголовні файли MAVLink 2 C під час збірки. XML-файл, для якого генеруються файли заголовків, можна визначити у конфігурації плати <a href="./../hardware/porting_guide_config.html#px4-board-configuration-kconfig">PX4 kconfig</a> для кожної окремої плати за допомогою змінної <code>CONFIG_MAVLINK_DIALECT</code>:</p><ul><li>Для SITL <code>CONFIG_MAVLINK_DIALECT</code> встановлено у <code>development</code> у <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/boards/px4/sitl/default.px4board#L36" target="_blank" rel="noreferrer">boards/px4/sitl/default.px4board</a>. Ви можете змінити його на будь-який інший файл визначення, але він повинен містити <code>common.xml</code>.</li><li>Для інших плат <code>CONFIG_MAVLINK_DIALECT</code> не встановлено за замовчуванням, і PX4 збирає визначення у <code>common.xml</code> (за замовчуванням вони вбудовані у <a href="./../modules/modules_communication.html#mavlink">mavlink module</a> - шукайте <code>menuconfig MAVLINK_DIALECT</code> у <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/Kconfig#L10" target="_blank" rel="noreferrer">src/modules/mavlink/Kconfig</a>).</li></ul><p>Файли генеруються до каталогу збірки: <code>/build/&lt;build target&gt;/mavlink/</code>.</p><h2 id="спеціальні-повідомлення-mavlink" tabindex="-1">Спеціальні повідомлення MAVLink <a class="header-anchor" href="#спеціальні-повідомлення-mavlink" aria-label="Permalink to &quot;Спеціальні повідомлення MAVLink&quot;">​</a></h2><p>Користувацьке повідомлення MAVLink - це повідомлення, якого немає у визначеннях за замовчуванням, включених до PX4.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Якщо ви використовуєте користувацьке визначення, вам потрібно буде підтримувати визначення у PX4, вашій наземній станції та будь-яких інших SDK, які взаємодіють з нею. Загалом, щоб зменшити тягар обслуговування, слід використовувати (або доповнювати) стандартні визначення, якщо це можливо.</p></div><p>Користувацькі визначення можна додати до нового файлу діалекту у тому самому каталозі, що й стандартні визначення XML. Наприклад, створіть <code>PX4-Autopilot/src/modules/mavlink/mavlink/mavlink/message_definitions/v1.0/custom_messages.xml</code> і встановіть <code>CONFIG_MAVLINK_DIALECT</code> для створення нового файла для SITL. Цей файл діалекту має містити <code>development.xml</code>, щоб до нього було включено всі стандартні визначення.</p><p>Для початкового прототипування, або якщо ви плануєте, що ваше повідомлення буде &quot;стандартним&quot;, ви також можете додати свої повідомлення до <code>common.xml</code> (або <code>development.xml</code>). Це спрощує збірку, оскільки вам не потрібно модифікувати вже зібраний діалект.</p><p>Посібник розробника MAVLink пояснює, як визначити нові повідомлення у розділі <a href="https://mavlink.io/en/guide/define_xml_element.html" target="_blank" rel="noreferrer">How to Define MAVLink Messages &amp; Enums</a>.</p><p>Ви можете перевірити, що ваші нові повідомлення зібрано, переглянувши заголовки, згенеровані у каталозі збірки (<code>/build/&lt;build target&gt;/mavlink/</code>). Якщо ваші повідомлення не збираються, вони можуть бути неправильно відформатовані або використовувати конфліктуючі ідентифікатори. Перевірте журнал збірки для отримання інформації.</p><p>Після того, як повідомлення створено, ви можете передавати, отримувати або використовувати його в інший спосіб, як описано в наступних розділах.</p><p>Посібник <a href="https://mavlink.io/en/getting_started/" target="_blank" rel="noreferrer">MAVLink Developer Guide</a> містить більше інформації про використання інструментарію MAVLink. :::</p><h2 id="потокові-повідомлення-mavlink" tabindex="-1">Потокові повідомлення MAVLink <a class="header-anchor" href="#потокові-повідомлення-mavlink" aria-label="Permalink to &quot;Потокові повідомлення MAVLink&quot;">​</a></h2><p>Повідомлення MAVLink транслюються за допомогою потокового класу, похідного від <code>MavlinkStream</code>, який було додано до списку потоків PX4. Клас має фреймворкові методи, які ви реалізуєте, щоб PX4 міг отримати потрібну йому інформацію зі згенерованого визначення повідомлення MAVLink. Він також має метод <code>send()</code>, який викликається кожного разу, коли потрібно надіслати повідомлення - ви перевизначаєте його, щоб скопіювати інформацію з підписки uORB в об&#39;єкт повідомлення MAVLink, який потрібно надіслати.</p><p>Цей посібник демонструє, як транслювати повідомлення uORB як повідомлення MAVLink, і застосовується як до стандартних, так і до користувацьких повідомлень.</p><h3 id="передумови" tabindex="-1">Передумови <a class="header-anchor" href="#передумови" aria-label="Permalink to &quot;Передумови&quot;">​</a></h3><p>Загалом у вас вже повинно бути повідомлення <a href="./../middleware/uorb.html">uORB</a>, яке містить інформацію, яку ви хочете транслювати, та визначення повідомлення MAVLink, з яким ви хочете його транслювати.</p><p>У цьому прикладі ми припустимо, що ви хочете перетворити (існуюче) повідомлення <a href="./../msg_docs/BatteryStatus.html">BatteryStatus</a> uORB у нове повідомлення про стан батареї MAVLink, яке ми назвемо <code>BATTERY_STATUS_DEMO</code>.</p><p>Скопіюйте це повідомлення <code>BATTERY_STATUS_DEMO</code> у розділ повідомлень <code>development.xml</code> у вихідному коді PX4, який буде розташований за адресою: <code>\\src\\modules\\mavlink\\mavlink\\message_definitions\\v1.0\\development.xml</code>.</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">message</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;11514&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;BATTERY_STATUS_DEMO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Simple demo battery.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">field</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uint8_t&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;id&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Battery ID&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">field</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;int16_t&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;temperature&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> units</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cdegC&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> invalid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;INT16_MAX&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Temperature of the whole battery pack (not internal electronics). INT16_MAX field not provided.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">field</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uint8_t&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;percent_remaining&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> units</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> invalid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UINT8_MAX&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Remaining battery energy. Values: [0-100], UINT8_MAX: field not provided.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Зауважте, що це урізана версія ще не реалізованого повідомлення <a href="https://mavlink.io/en/messages/development.html#BATTERY_STATUS_V2" target="_blank" rel="noreferrer">BATTERY_STATUS_V2</a> з випадково вибраним невикористаним ідентифікатором <code>11514</code>. Тут ми помістили повідомлення у <code>development.xml</code>, що добре підходить для тестування і якщо повідомлення буде згодом включено до стандартного набору повідомлень, але ви також можете помістити <a href="#custom-mavlink-messages">кастомне повідомлення</a> у власний діалектний файл.</p></div><p>Зберіть PX4 для SITL і переконайтеся, що відповідне повідомлення згенеровано в <code>/build/px4_sitl_default/mavlink/common/mavlink_msg_battery_status_demo.h</code>.</p><p>Оскільки <code>BatteryStatus</code> вже існує, вам не потрібно нічого робити, щоб створити або зібрати його.</p><h3 id="об-явлення-класу-потокового-відтворення" tabindex="-1">Об&#39;явлення класу потокового відтворення <a class="header-anchor" href="#об-явлення-класу-потокового-відтворення" aria-label="Permalink to &quot;Об&#39;явлення класу потокового відтворення&quot;">​</a></h3><p>Спочатку створіть файл з назвою <code>BATTERY_STATUS_DEMO.hpp</code> для вашого класу потокового передавання (названого за повідомленням, яке потрібно передавати) у директорії <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/mavlink/streams" target="_blank" rel="noreferrer">/src/modules/mavlink/streams</a>.</p><p>Додайте заголовки для повідомлень uORB у верхню частину файлу (необхідні заголовки MAVLink вже мають бути доступними):</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;uORB/topics/battery_status.h&gt;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Заголовний файл уORB-теми у форматі snake-case генерується з імені файлу уORB у форматі CamelCase під час збірки.</p></div><p>Потім скопіюйте визначення класу трансляції нижче у файл:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MavlinkStreamBatteryStatusDemo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MavlinkStream</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MavlinkStream</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">new_instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavlink</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mavlink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MavlinkStreamBatteryStatusDemo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mavlink);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MavlinkStreamBatteryStatusDemo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_name_static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_name_static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;BATTERY_STATUS_DEMO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> uint16_t</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_id_static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAVLINK_MSG_ID_BATTERY_STATUS_DEMO;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    uint16_t</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_id_static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    unsigned</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAVLINK_MSG_ID_BATTERY_STATUS_DEMO_LEN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAVLINK_NUM_NON_PAYLOAD_BYTES;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //Subscription to array of uORB battery status instances</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    uORB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::SubscriptionMultiArray</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">battery_status_s, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">battery_status_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MAX_INSTANCES</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _battery_status_subs{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORB_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::battery_status};</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // SubscriptionMultiArray subscription is needed because battery has multiple instances.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // uORB::Subscription is used to subscribe to a single-instance topic</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* do not allow top copying this class */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    MavlinkStreamBatteryStatusDemo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MavlinkStreamBatteryStatusDemo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    MavlinkStreamBatteryStatusDemo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MavlinkStreamBatteryStatusDemo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    explicit</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MavlinkStreamBatteryStatusDemo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavlink</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mavlink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MavlinkStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mavlink)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> updated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Loop through _battery_status_subs (subscription to array of BatteryStatus instances)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">battery_sub : _battery_status_subs) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // battery_status_s is a struct that can hold the battery object topic</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            battery_status_s battery_status;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Update battery_status and publish only if the status has changed</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (battery_sub.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">battery_status)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // mavlink_battery_status_demo_t is the MAVLink message object</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                mavlink_battery_status_demo_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bat_msg{};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                bat_msg.id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> battery_status.id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                bat_msg.battery_remaining </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (battery_status.connected) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> roundf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(battery_status.remaining </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // check if temperature valid</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (battery_status.connected </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PX4_ISFINITE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(battery_status.temperature)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    bat_msg.temperature </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> battery_status.temperature </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    bat_msg.temperature </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> INT16_MAX;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                //Send the message</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                mavlink_msg_battery_status_demo_send_struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_mavlink-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_channel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bat_msg);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                updated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> updated;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Більшість потокових класів дуже схожі (див. приклади у <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/mavlink/streams" target="_blank" rel="noreferrer">/src/modules/mavlink/streams</a>):</p><ul><li><p>Клас потокового передавання є похідним від <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/mavlink_stream.h" target="_blank" rel="noreferrer"><code>MavlinkStream</code></a> і названий за паттерном <code>MavlinkStream&lt;CamelCaseMessageName&gt;</code>.</p></li><li><p><code>Публічні</code> визначення є &quot;наближеними до шаблону&quot;, що дозволяє PX4 отримати екземпляр класу (<code>new_instance()</code>), а потім використовувати його для отримання назви, ідентифікатора та розміру повідомлення з заголовків MAVLink (<code>get_name()</code>, <code>get_name_static()</code>, <code>get_id_static()</code>, <code>get_id()</code>, <code>get_size()</code>). Для ваших власних потокових класів їх можна просто скопіювати і змінити, щоб вони відповідали значенням для вашого повідомлення MAVLink.</p></li><li><p>Визначення <code>private</code> підписуються на теми uORB, які потрібно опублікувати. У цьому випадку тема uORB має кілька екземплярів: по одному для кожної батареї. Ми використовуємо <code>uORB::SubscriptionMultiArray</code> для отримання масиву підписок про стан батареї.</p><p>Тут ми також визначаємо конструктори, щоб уникнути копіювання визначення.</p></li><li><p>Секція <code>protected</code> - це місце, де відбувається важлива робота!</p><p>Тут ми перевизначаємо метод <code>send()</code>, копіюючи значення з підписаних тем uORB у відповідні поля повідомлення MAVLink, а потім надсилаємо повідомлення.</p><p>У цьому конкретному прикладі у нас є масив екземплярів uORB <code>_battery_status_subs</code> (тому що у нас є кілька батарей). Ми ітеруємо масив і використовуємо <code>update()</code> для кожної підписки, щоб перевірити, чи змінився пов&#39;язаний з нею екземпляр батареї (і оновити структуру поточними даними). Це дозволяє нам надсилати повідомлення MAVLink <em>лише</em>, якщо пов&#39;язана з батареєю uORB тема змінилася:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Структура, щоб зберігати дані поточної теми.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">battery_status_s battery_status;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// update() populates battery_status and returns true if the status has changed</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (battery_sub.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">battery_status)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Use battery_status to populate message and send</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Якщо ви хочете надіслати повідомлення MAVLink незалежно від того, чи змінилися дані, ми можемо замість цього використати <code>copy()</code>, як показано тут:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">battery_status_s battery_status;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">battery_sub.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">battery_status);</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Для теми з одним екземпляром, наприклад, <a href="./../msg_docs/VehicleStatus.html">VehicleStatus</a>, ми підписуємося таким чином:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Create subscription _vehicle_status_sub</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uORB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Subscription _vehicle_status_sub{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORB_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vehicle_status)};</span></span></code></pre></div><p>І ми можемо використовувати отриману підписку так само, з оновленням або копіюванням.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vehicle_status_s vehicle_status{};</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // vehicle_status_s is the definition of the uORB topic</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (_vehicle_status_sub.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vehicle_status)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Use the vehicle_status as it has been updated.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></li></ul><p>:::</p><p>Далі ми включаємо наш новий клас у <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/mavlink_messages.cpp#L2193" target="_blank" rel="noreferrer">mavlink_messages.cpp</a>. Додайте рядок нижче до частини файлу, де включені всі інші потоки:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;streams/BATTERY_STATUS_DEMO.hpp&quot;</span></span></code></pre></div><p>Нарешті додайте клас потоку до <code>streams_list</code> у нижній частині <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/mavlink_messages.cpp" target="_blank" rel="noreferrer">mavlink_messages.cpp</a></p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">StreamListItem </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">streams_list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> defined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BATTERY_STATUS_DEMO_HPP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    create_stream_list_item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MavlinkStreamBatteryStatusDemo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#endif</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // BATTERY_STATUS_DEMO_HPP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Клас тепер доступний для потокової передачі, але за замовчуванням не буде транслюватися. Ми розглянемо це в наступних розділах.</p><h3 id="трансляція-за-замовчуванням" tabindex="-1">Трансляція за замовчуванням <a class="header-anchor" href="#трансляція-за-замовчуванням" aria-label="Permalink to &quot;Трансляція за замовчуванням&quot;">​</a></h3><p>Найлегший спосіб транслювати ваші повідомлення за замовчуванням (як частину збірки) - це додати їх до <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/mavlink_main.cpp" target="_blank" rel="noreferrer">mavlink_main.cpp</a> у відповідну групу повідомлень.</p><p>Якщо ви виконаєте пошук у файлі, то знайдете групи повідомлень, визначені в інструкції switch:</p><ul><li><code>MAVLINK_MODE_NORMAL</code>: Трансляція до GCS.</li><li><code>MAVLINK_MODE_ONBOARD</code>: Трансляція на комп&#39;ютер-супутник через швидке з&#39;єднання, наприклад Ethernet</li><li><code>MAVLINK_MODE_ONBOARD_LOW_BANDWIDTH</code>: передається на комп&#39;ютер-компаньйон для перенаправлення на канал зі зниженим трафіком, наприклад GCS.</li><li><code>MAVLINK_MODE_GIMBAL</code>: Потік на гімбол</li><li><code>MAVLINK_MODE_EXTVISION</code>: Трансляція на систему зовнішнього зору</li><li><code>MAVLINK_MODE_EXTVISIONMIN</code>: Потокове передавання до системи зовнішнього зору на повільнішому каналі</li><li><code>MAVLINK_MODE_OSD</code>: транслюється на OSD, наприклад, на FPV гарнітуру.</li><li><code>MAVLINK_MODE_CUSTOM</code>: Нічого не транслювати за замовчуванням. Використовується при налаштуванні потокового передавання за допомогою MAVLink.</li><li><code>MAVLINK_MODE_MAGIC</code>: Те ж саме, що й <code>MAVLINK_MODE_CUSTOM</code></li><li><code>MAVLINK_MODE_CONFIG</code>: Потік через USB з вищими швидкостями, ніж <code>MAVLINK_MODE_NORMAL</code>.</li><li><code>MAVLINK_MODE_MINIMAL</code>: Потік мінімального набору повідомлень. Зазвичай використовується для поганого зв&#39;язку телеметрії.</li><li><code>MAVLINK_MODE_IRIDIUM</code>: Трансляція на супутниковий телефон iridium</li></ul><p>Зазвичай ви будете тестувати на GCS, тому ви можете просто додати повідомлення у регістр <code>MAVLINK_MODE_NORMAL</code> за допомогою методу <code>configure_stream_local()</code>. Наприклад, для трансляції CA_TRAJECTORY з частотою 5 Гц:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAVLINK_MODE_CONFIG:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // USB</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Note: streams requiring low latency come first</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        configure_stream_local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;BATTERY_STATUS_DEMO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ...</span></span></code></pre></div><p>Також можна додати потік, викликавши модуль <a href="./../modules/modules_communication.html#mavlink">mavlink</a> з аргументом <code>stream</code> у <a href="./../concept/system_startup.html">скрипті запуску</a>. Наприклад, ви можете додати наступний рядок до <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink" target="_blank" rel="noreferrer">/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink</a>, щоб передавати <code>BATTERY_STATUS_DEMO</code> зі швидкістю 50 Гц на UDP-порт <code>14556</code> (<code>-r</code> налаштовує швидкість передачі, а <code>-u</code> ідентифікує канал MAVLink на UDP-порту 14556).</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stream</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BATTERY_STATUS_DEMO</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14556</span></span></code></pre></div><h3 id="транслювання-за-запитом" tabindex="-1">Транслювання за запитом <a class="header-anchor" href="#транслювання-за-запитом" aria-label="Permalink to &quot;Транслювання за запитом&quot;">​</a></h3><p>Деякі повідомлення потрібні лише один раз, при підключенні певного обладнання або за інших обставин. Щоб уникнути перевантаження каналів зв&#39;язку непотрібними повідомленнями, ви можете не передавати всі повідомлення за замовчуванням, навіть з низькою швидкістю.</p><p>Якщо вам потрібно, GCS або інший API MAVLink може запросити, щоб певні повідомлення передавалися з певною швидкістю за допомогою <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_SET_MESSAGE_INTERVAL" target="_blank" rel="noreferrer">MAV_CMD_SET_MESSAGE_INTERVAL</a>. Певне повідомлення можна запросити лише один раз за допомогою <a href="https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_MESSAGE" target="_blank" rel="noreferrer">MAV_CMD_REQUEST_MESSAGE</a>.</p><h2 id="отримання-повідомлень-mavlink" tabindex="-1">Отримання повідомлень MAVLink <a class="header-anchor" href="#отримання-повідомлень-mavlink" aria-label="Permalink to &quot;Отримання повідомлень MAVLink&quot;">​</a></h2><p>Цей розділ пояснює, як отримати повідомлення через MAVLink та опублікувати його в uORB.</p><p>Припускається, що ми отримуємо повідомлення <code>BATTERY_STATUS_DEMO</code> і хочемо оновити (існуюче) <a href="./../msg_docs/BatteryStatus.html">BatteryStatus uORB повідомлення</a> зі збереженою інформацією. Це той тип реалізації, який ви надаєте для підтримки інтеграції батареї MAVLink з PX4.</p><p>Додайте заголовки теми uORB для публікації у <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/mavlink_receiver.h#L77" target="_blank" rel="noreferrer">mavlink_receiver.h</a>:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;uORB/topics/battery_status.h&gt;</span></span></code></pre></div><p>Додайте сигнатуру функції, яка обробляє вхідне повідомлення MAVLink у класі <code>MavlinkReceiver</code> у <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/mavlink_receiver.h#L126" target="_blank" rel="noreferrer">mavlink_receiver.h</a></p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handle_message_battery_status_demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mavlink_message_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Зазвичай ви додаєте публікатор uORB для публікації теми uORB у класі <code>MavlinkReceiver</code> у файлі <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/mavlink_receiver.h#L296" target="_blank" rel="noreferrer">mavlink_receiver.h</a>. У цьому випадку вже існує тема uORB <a href="./../msg_docs/BatteryStatus.html">BatteryStatus</a>:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uORB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Publication</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">battery_status_s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _battery_pub{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORB_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(battery_status)};</span></span></code></pre></div><p>Це створить публікацію в одному екземплярі теми uORB, який за замовчуванням буде <em>першим</em> екземпляром.</p><div class="info custom-block"><p class="custom-block-title">Ця реалізація не працюватиме в системах з кількома батареями, оскільки декілька батарей можуть публікувати дані до першого екземпляру теми, і немає можливості їх розрізнити. Для підтримки кількох батарей нам потрібно використовувати <code>PublicationMulti</code> та відображати ідентифікатори екземплярів повідомлення MAVLink на конкретні екземпляри тем uORB.</p></div><p>Реалізація функції <code>handle_message_battery_status_demo</code> в <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/mavlink_receiver.cpp" target="_blank" rel="noreferrer">mavlink_receiver.cpp</a>.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MavlinkReceiver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handle_message_battery_status_demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mavlink_message_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((msg-&gt;sysid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mavlink_system.sysid) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (msg-&gt;compid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mavlink_system.compid)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ignore battery status coming from other systems or from the autopilot itself</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // external battery measurements</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    mavlink_battery_status_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> battery_mavlink;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mavlink_msg_battery_status_decode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(msg, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">battery_mavlink);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    battery_status_s battery_status{};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    battery_status.timestamp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hrt_absolute_time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    battery_status.remaining </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)battery_mavlink.battery_remaining </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    battery_status.temperature </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)battery_mavlink.temperature;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    battery_status.connected </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    _battery_pub.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">publish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(battery_status);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Вище ми записуємо лише поля батареї, які визначені у темі. На практиці ви оновлювали б всі поля або з дійсними, або з недійсними значеннями: це було скорочено для стислості.</p></div><p>і нарешті, переконайтеся, що він викликається в <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/mavlink_receiver.cpp#L228" target="_blank" rel="noreferrer">MavlinkReceiver:handle_message()</a></p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MavlinkReceiver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handle_message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mavlink_message_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (msg-&gt;msgid) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAVLINK_MSG_ID_BATTERY_STATUS_DEMO:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        handle_message_battery_status_demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(msg);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><h2 id="альтернатива-створення-користувацьких-повідомлень-mavlink" tabindex="-1">Альтернатива створення користувацьких повідомлень MAVLink <a class="header-anchor" href="#альтернатива-створення-користувацьких-повідомлень-mavlink" aria-label="Permalink to &quot;Альтернатива створення користувацьких повідомлень MAVLink&quot;">​</a></h2><p>Іноді існує потреба в довільному повідомленні MAVLink з вмістом, який не повністю визначений.</p><p>Наприклад, при використанні MAVLink для інтерфейсу PX4 з вбудованим пристроєм, повідомлення, якими обмінюються автопілот і пристрій, можуть пройти кілька ітерацій, перш ніж вони будуть стабілізовані. У цьому випадку відновлення заголовків MAVLink може зайняти багато часу і призвести до помилок, а також переконатися, що обидва пристрої використовують одну і ту ж версію протоколу.</p><p>Альтернативним - і тимчасовим - рішенням є перепризначення налагоджувальних повідомлень. Замість створення спеціального повідомлення MAVLink <code>CA_TRAJECTORY</code>, ви можете надіслати повідомлення <code>DEBUG_VECT</code> з рядковим ключем <code>CA_TRAJ</code> і даними у полях <code>x</code>, <code>y</code> і <code>z</code>. Приклади використання відладочних повідомлень наведено у <a href="./../debug/debug_values.html">цьому посібнику</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Це рішення не є ефективним, оскільки надсилає символьний рядок через мережу і передбачає порівняння рядків. Це повинно використовуватися лише для розробки!</p></div><h2 id="тестування" tabindex="-1">Тестування <a class="header-anchor" href="#тестування" aria-label="Permalink to &quot;Тестування&quot;">​</a></h2><p>Як перший крок і під час відлагодження, зазвичай ви просто хочете переконатися, що всі створені вами повідомлення надсилаються/отримуються так, як ви очікуєте.</p><p>Спочатку вам слід скористатися командою <code>uorb top [&lt;message_name&gt;]</code> для перевірки у реальному часі того, що ваше повідомлення опубліковано, а також швидкості (див. <a href="./../middleware/uorb.html#uorb-top-command">uORB Повідомлення</a>). Цей підхід також можна використовувати для тестування вхідних повідомлень, які публікують тему uORB (для інших повідомлень ви можете використовувати <code>printf</code> у вашому коді і тестувати у SITL).</p><p>Існує кілька підходів для перегляду трафіку MAVLink:</p><ul><li><p>Створіть плагін <a href="https://mavlink.io/en/guide/wireshark.html" target="_blank" rel="noreferrer">Wireshark MAVLink</a> для вашого діалекту. Це дозволяє перевіряти трафік MAVLink на IP-інтерфейсі - наприклад, між <em>QGroundControl</em> або MAVSDK і вашою реальною або змодельованою версією PX4.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p></div></li></ul><p>Набагато простіше згенерувати плагін wireshark і перевіряти трафік у Wireshark, ніж збирати QGroundControl з вашим діалектом і використовувати MAVLink Inspector. :::</p><ul><li><a href="./../dev_log/logging.html">Теми логу uORB</a> пов&#39;язані з вашим повідомленням MAVLink.</li><li>Перегляд отриманих повідомлень в QGroundControl <a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/analyze_view/mavlink_inspector.html" target="_blank" rel="noreferrer">MAVLink Inspector</a>. Вам потрібно буде перезібрати QGroundControl з користувацькими визначеннями повідомлень, <a href="#updating-qgroundcontrol">як описано нижче</a></li></ul><h3 id="встановити-швидкість-передачі-за-допомогою-оболонки" tabindex="-1">Встановити швидкість передачі за допомогою оболонки <a class="header-anchor" href="#встановити-швидкість-передачі-за-допомогою-оболонки" aria-label="Permalink to &quot;Встановити швидкість передачі за допомогою оболонки&quot;">​</a></h3><p>Для тестування іноді корисно збільшити швидкість передачі окремих тем під час виконання (наприклад, для перевірки в QGC). Цього можна досягти за допомогою виклику модуля <a href="./../modules/modules_communication.html#mavlink">mavlink</a> через консоль <a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/analyze_view/mavlink_console.html" target="_blank" rel="noreferrer">QGC MAVLink</a> (або іншої оболонки):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stream</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> numbe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mavlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> topic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Ви можете отримати номер порту за допомогою <code>mavlink status</code>, який виведе (серед іншого) <code>транспортний протокол: UDP (&lt;port number&gt;)</code>. Прикладом може бути:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stream</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14556</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CA_TRAJECTORY</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span></span></code></pre></div><h2 id="оновлення-наземних-станціи" tabindex="-1">Оновлення наземних станцій <a class="header-anchor" href="#оновлення-наземних-станціи" aria-label="Permalink to &quot;Оновлення наземних станцій&quot;">​</a></h2><p>Зрештою, ви захочете використовувати ваш новий інтерфейс MAVLink, надавши відповідну наземну станцію або реалізацію MAVSDK.</p><p>Важливо пам&#39;ятати, що MAVLink вимагає, щоб ви використовували версію бібліотеки, яка побудована за тим самим визначенням (XML-файл). Отже, якщо ви створили власне повідомлення у PX4, ви не зможете його використати, доки не зберете QGC або MAVSDK з тим самим визначенням.</p><h3 id="оновлення-qgroundcontrol" tabindex="-1">Оновлення QGroundControl <a class="header-anchor" href="#оновлення-qgroundcontrol" aria-label="Permalink to &quot;Оновлення QGroundControl&quot;">​</a></h3><p>Вам потрібно <a href="https://docs.qgroundcontrol.com/master/en/qgc-dev-guide/getting_started/index.html" target="_blank" rel="noreferrer">зібрати QGroundControl</a>, включно з попередньо зібраною бібліотекою C, яка містить ваші власні повідомлення.</p><p>QGC використовує попередньо скомпільовану бібліотеку C, яку має бути розташовано за адресою <a href="https://github.com/mavlink/qgroundcontrol/tree/master/libs/mavlink/include/mavlink" target="_blank" rel="noreferrer">/qgroundcontrol/libs/mavlink/include/mavlink</a> у вихідному коді QGC.</p><p>За замовчуванням її попередньо включено як підмодуль з <a href="https://github.com/mavlink/c_library_v2" target="_blank" rel="noreferrer">https://github.com/mavlink/c_library_v2</a>, але ви можете <a href="https://mavlink.io/en/getting_started/generate_libraries.html" target="_blank" rel="noreferrer">згенерувати власні бібліотеки MAVLink</a>.</p><p>За замовчуванням QGC використовує діалект all.xml, який включає <strong>common.xml</strong>. Ви можете додавати свої повідомлення як у файлі, так і у власному діалекті. Однак, якщо ви використовуєте власний діалект, то він має містити ArduPilotMega.xml (інакше буде пропущено всі наявні повідомлення), і вам потрібно буде змінити діалект, встановивши його у <a href="https://github.com/mavlink/qgroundcontrol/blob/master/QGCExternalLibs.pri#L52" target="_blank" rel="noreferrer"><code>MAVLINK_CONF</code></a> під час запуску <em>qmake</em>.</p><h3 id="оновлення-mavsdk" tabindex="-1">Оновлення MAVSDK <a class="header-anchor" href="#оновлення-mavsdk" aria-label="Permalink to &quot;Оновлення MAVSDK&quot;">​</a></h3><p>Дивіться документацію MAVSDK для отримання інформації про роботу з <a href="https://mavsdk.mavlink.io/main/en/cpp/guide/build.html" target="_blank" rel="noreferrer">заголовками та діалектами MAVLink</a>.</p>`,112),l=[e];function p(h,k,r,d,o,E){return a(),i("div",null,l)}const m=s(n,[["render",p]]);export{g as __pageData,m as default};
