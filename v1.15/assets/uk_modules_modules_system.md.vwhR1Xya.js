import{_ as a,c as s,o as n,ab as e}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"Modules Reference: System","description":"","frontmatter":{},"headers":[],"relativePath":"uk/modules/modules_system.md","filePath":"uk/modules/modules_system.md"}'),t={name:"uk/modules/modules_system.md"},p=e(`<h1 id="modules-reference-system" tabindex="-1">Modules Reference: System <a class="header-anchor" href="#modules-reference-system" aria-label="Permalink to &quot;Modules Reference: System&quot;">​</a></h1><h2 id="battery-simulator" tabindex="-1">battery_simulator <a class="header-anchor" href="#battery-simulator" aria-label="Permalink to &quot;battery_simulator&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/battery_simulator" target="_blank" rel="noreferrer">modules/simulation/battery_simulator</a></p><h3 id="опис" tabindex="-1">Опис <a class="header-anchor" href="#опис" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="battery_simulator_usage"></a></p><h3 id="використання" tabindex="-1">Використання <a class="header-anchor" href="#використання" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>battery_simulator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="battery-status" tabindex="-1">battery_status <a class="header-anchor" href="#battery-status" aria-label="Permalink to &quot;battery_status&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/battery_status" target="_blank" rel="noreferrer">modules/battery_status</a></p><h3 id="опис-1" tabindex="-1">Опис <a class="header-anchor" href="#опис-1" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Надана функціональність включає в себе:</p><ul><li>Читання вихідних даних драйвера ADC (через інтерфейс ioctl) і публікація <code>battery_status</code>.</li></ul><h3 id="імплементація" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p>Він запускається у власній темі і проводить опитування на поточну обрану тему гіроскопа.</p><p><a id="battery_status_usage"></a></p><h3 id="використання-1" tabindex="-1">Використання <a class="header-anchor" href="#використання-1" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>battery_status &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="camera-feedback" tabindex="-1">camera_feedback <a class="header-anchor" href="#camera-feedback" aria-label="Permalink to &quot;camera_feedback&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/camera_feedback" target="_blank" rel="noreferrer">modules/camera_feedback</a></p><h3 id="опис-2" tabindex="-1">Опис <a class="header-anchor" href="#опис-2" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>The camera_feedback module publishes <code>CameraCapture</code> UORB topics when image capture has been triggered.</p><p>If camera capture is enabled, then trigger information from the camera capture pin is published; otherwise trigger information at the point the camera was commanded to trigger is published (from the <code>camera_trigger</code> module).</p><p>The <code>CAMERA_IMAGE_CAPTURED</code> message is then emitted (by streaming code) following <code>CameraCapture</code> updates. <code>CameraCapture</code> topics are also logged and can be used for geotagging.</p><h3 id="імплементація-1" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація-1" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p><code>CameraTrigger</code> topics are published by the <code>camera_trigger</code> module (<code>feedback</code> field set <code>false</code>) when image capture is triggered, and may also be published by the <code>camera_capture</code> driver (with <code>feedback</code> field set <code>true</code>) if the camera capture pin is activated.</p><p>The <code>camera_feedback</code> module subscribes to <code>CameraTrigger</code>. It discards topics from the <code>camera_trigger</code> module if camera capture is enabled. For the topics that are not discarded it creates a <code>CameraCapture</code> topic with the timestamp information from the <code>CameraTrigger</code> and position information from the vehicle.</p><p><a id="camera_feedback_usage"></a></p><h3 id="використання-2" tabindex="-1">Використання <a class="header-anchor" href="#використання-2" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>camera_feedback &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="cdcacm-autostart" tabindex="-1">cdcacm_autostart <a class="header-anchor" href="#cdcacm-autostart" aria-label="Permalink to &quot;cdcacm_autostart&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/cdcacm_autostart" target="_blank" rel="noreferrer">drivers/cdcacm_autostart</a></p><h3 id="опис-3" tabindex="-1">Опис <a class="header-anchor" href="#опис-3" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Цей модуль прослуховує USB і автоматично налаштовує протокол в залежності від отриманих байтів. Підтримувані протоколи: MAVLink, nsh та ublox послідовний прохід. Якщо параметр SYS_USB_AUTO=2 модуль буде намагатися запустити mavlink лише тоді, коли буде виявлено USB VBUS. В іншому випадку він буде обертатися і продовжувати перевіряти VBUS та запускати mavlink, як тільки він виявиться.</p><p><a id="cdcacm_autostart_usage"></a></p><h3 id="використання-3" tabindex="-1">Використання <a class="header-anchor" href="#використання-3" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cdcacm_autostart &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="commander" tabindex="-1">commander <a class="header-anchor" href="#commander" aria-label="Permalink to &quot;commander&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/commander" target="_blank" rel="noreferrer">modules/commander</a></p><h3 id="опис-4" tabindex="-1">Опис <a class="header-anchor" href="#опис-4" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Модуль командира містить машину станів для перемикання режимів та аварійної поведінки.</p><p><a id="commander_usage"></a></p><h3 id="використання-4" tabindex="-1">Використання <a class="header-anchor" href="#використання-4" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>commander &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-h]        Enable HIL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   calibrate     Run sensor calibration</span></span>
<span class="line"><span>     mag|baro|accel|gyro|level|esc|airspeed Calibration type</span></span>
<span class="line"><span>     quick       Quick calibration (accel only, not recommended)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   check         Run preflight checks</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   arm</span></span>
<span class="line"><span>     [-f]        Force arming (do not run preflight checks)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   disarm</span></span>
<span class="line"><span>     [-f]        Force disarming (disarm in air)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   takeoff</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   land</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   transition    VTOL transition</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   mode          Change flight mode</span></span>
<span class="line"><span>     manual|acro|offboard|stabilized|altctl|posctl|position:slow|auto:mission|au</span></span>
<span class="line"><span>                 to:loiter|auto:rtl|auto:takeoff|auto:land|auto:precland|ext1</span></span>
<span class="line"><span>                 Flight mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   pair</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   lockdown</span></span>
<span class="line"><span>     on|off      Turn lockdown on or off</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   set_ekf_origin</span></span>
<span class="line"><span>     lat, lon, alt Origin Latitude, Longitude, Altitude</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   lat|lon|alt   Origin latitude longitude altitude</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   poweroff      Power off board (if supported)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="dataman" tabindex="-1">dataman <a class="header-anchor" href="#dataman" aria-label="Permalink to &quot;dataman&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/dataman" target="_blank" rel="noreferrer">modules/dataman</a></p><h3 id="опис-5" tabindex="-1">Опис <a class="header-anchor" href="#опис-5" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Модуль для забезпечення постійного сховища для решти системи у вигляді простої бази даних через C API. Підтримується декілька бекендів:</p><ul><li>файл (наприклад, на SD-карті)</li><li>Оперативна пам&#39;ять (очевидно, що вона не є постійною)</li></ul><p>Використовується для зберігання структурованих даних різних типів: маршрутні точки місії, стан місії та полігони геозони. Кожен тип має певний тип і фіксовану максимальну кількість елементів зберігання, щоб забезпечити швидкий випадковий доступ.</p><h3 id="реалізація" tabindex="-1">Реалізація <a class="header-anchor" href="#реалізація" aria-label="Permalink to &quot;Реалізація&quot;">​</a></h3><p>Читання і запис одного елемента завжди атомарні.</p><p><a id="dataman_usage"></a></p><h3 id="використання-5" tabindex="-1">Використання <a class="header-anchor" href="#використання-5" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dataman &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-f &lt;val&gt;]  Storage file</span></span>
<span class="line"><span>                 values: &lt;file&gt;</span></span>
<span class="line"><span>     [-r]        Use RAM backend (NOT persistent)</span></span>
<span class="line"><span></span></span>
<span class="line"><span> The options -f and -r are mutually exclusive. If nothing is specified, a file</span></span>
<span class="line"><span> &#39;dataman&#39; is used</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="dmesg" tabindex="-1">dmesg <a class="header-anchor" href="#dmesg" aria-label="Permalink to &quot;dmesg&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/dmesg" target="_blank" rel="noreferrer">systemcmds/dmesg</a></p><h3 id="опис-6" tabindex="-1">Опис <a class="header-anchor" href="#опис-6" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Інструмент командного рядка для показу повідомлень консолі завантаження. Зауважте, що вивід з робочих черг NuttX та syslog не перехоплюється.</p><h3 id="приклади" tabindex="-1">Приклади <a class="header-anchor" href="#приклади" aria-label="Permalink to &quot;Приклади&quot;">​</a></h3><p>Продовжує друкувати всі повідомлення у фоновому режимі:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dmesg -f &amp;</span></span></code></pre></div><p><a id="dmesg_usage"></a></p><h3 id="використання-6" tabindex="-1">Використання <a class="header-anchor" href="#використання-6" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dmesg &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>     [-f]        Follow: wait for new messages</span></span></code></pre></div><h2 id="esc-battery" tabindex="-1">esc_battery <a class="header-anchor" href="#esc-battery" aria-label="Permalink to &quot;esc_battery&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/esc_battery" target="_blank" rel="noreferrer">modules/esc_battery</a></p><h3 id="опис-7" tabindex="-1">Опис <a class="header-anchor" href="#опис-7" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Це реалізує використання інформації зі статусу ESC і публікує її як стан батареї.</p><p><a id="esc_battery_usage"></a></p><h3 id="використання-7" tabindex="-1">Використання <a class="header-anchor" href="#використання-7" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>esc_battery &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="gyro-calibration" tabindex="-1">gyro_calibration <a class="header-anchor" href="#gyro-calibration" aria-label="Permalink to &quot;gyro_calibration&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/gyro_calibration" target="_blank" rel="noreferrer">modules/gyro_calibration</a></p><h3 id="опис-8" tabindex="-1">Опис <a class="header-anchor" href="#опис-8" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Просте онлайн-калібрування гіроскопа.</p><p><a id="gyro_calibration_usage"></a></p><h3 id="використання-8" tabindex="-1">Використання <a class="header-anchor" href="#використання-8" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>gyro_calibration &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="gyro-fft" tabindex="-1">gyro_fft <a class="header-anchor" href="#gyro-fft" aria-label="Permalink to &quot;gyro_fft&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/gyro_fft" target="_blank" rel="noreferrer">modules/gyro_fft</a></p><h3 id="опис-9" tabindex="-1">Опис <a class="header-anchor" href="#опис-9" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="gyro_fft_usage"></a></p><h3 id="використання-9" tabindex="-1">Використання <a class="header-anchor" href="#використання-9" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>gyro_fft &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="heater" tabindex="-1">heater <a class="header-anchor" href="#heater" aria-label="Permalink to &quot;heater&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/heater" target="_blank" rel="noreferrer">drivers/heater</a></p><h3 id="опис-10" tabindex="-1">Опис <a class="header-anchor" href="#опис-10" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Фоновий процес, що періодично запускається в робочій черзі LP для регулювання температури IMU на заданому рівні.</p><p>Це завдання можна запустити під час завантаження зі скриптів запуску, встановивши SENS_EN_THERMAL, або через CLI.</p><p><a id="heater_usage"></a></p><h3 id="використання-10" tabindex="-1">Використання <a class="header-anchor" href="#використання-10" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>heater &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="i2c-launcher" tabindex="-1">i2c_launcher <a class="header-anchor" href="#i2c-launcher" aria-label="Permalink to &quot;i2c_launcher&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/i2c_launcher" target="_blank" rel="noreferrer">systemcmds/i2c_launcher</a></p><h3 id="опис-11" tabindex="-1">Опис <a class="header-anchor" href="#опис-11" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Демон, який запускає драйвери на основі виявлених пристроїв I2C.</p><p><a id="i2c_launcher_usage"></a></p><h3 id="використання-11" tabindex="-1">Використання <a class="header-anchor" href="#використання-11" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>i2c_launcher &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     -b &lt;val&gt;    Bus number</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="land-detector" tabindex="-1">land_detector <a class="header-anchor" href="#land-detector" aria-label="Permalink to &quot;land_detector&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/land_detector" target="_blank" rel="noreferrer">modules/land_detector</a></p><h3 id="опис-12" tabindex="-1">Опис <a class="header-anchor" href="#опис-12" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Модуль для визначення стану вільного падіння та приземлення транспортного засобу, а також публікації теми <code>vehicle_land_detected</code>. Для кожного типу літального апарату (мультиротор, фіксоване крило, гвинтокрил, ...) передбачено власний алгоритм, що враховує різні стани, такі як задана тяга, стан озброєння та рух апарату.</p><h3 id="імплементація-2" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація-2" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p>Кожен тип реалізовано у власному класі зі спільним базовим класом. Базовий клас підтримує стан (landed, maybe_landed, ground_contact). Кожен можливий стан реалізується в похідних класах. Гістерезис та фіксований пріоритет кожного внутрішнього стану визначає фактичний стан land_detector.</p><h4 id="мультикоптер-land-detector" tabindex="-1">Мультикоптер Land Detector <a class="header-anchor" href="#мультикоптер-land-detector" aria-label="Permalink to &quot;Мультикоптер Land Detector&quot;">​</a></h4><p><strong>ground_contact</strong>: задане значення тяги та швидкість у напрямку z повинні бути нижче визначеного порогу протягом певного часу GROUND_CONTACT_TRIGGER_TIME_US. При виявленні контакту з землею регулятор положення вимикає задане значення тяги у тілі x та y.</p><p><strong>maybe_landed</strong>: він вимагає контакту з землею разом з більш жорстким порогом заданого значення тяги і відсутності швидкості в горизонтальному напрямку. Час спрацьовування визначається параметром MAYBE_LAND_TRIGGER_TIME. Коли виявляється maybe_landed, контролер положення встановлює задане значення тяги на нуль.</p><p><strong>landed</strong>: він вимагає, щоб maybe_landed було true для часу LAND_DETECTOR_TRIGGER_TIME_US.</p><p>Модуль періодично запускається у черзі робіт HP.</p><p><a id="land_detector_usage"></a></p><h3 id="використання-12" tabindex="-1">Використання <a class="header-anchor" href="#використання-12" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>land_detector &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span>     fixedwing|multicopter|vtol|rover|airship Select vehicle type</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="load-mon" tabindex="-1">load_mon <a class="header-anchor" href="#load-mon" aria-label="Permalink to &quot;load_mon&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/load_mon" target="_blank" rel="noreferrer">modules/load_mon</a></p><h3 id="опис-13" tabindex="-1">Опис <a class="header-anchor" href="#опис-13" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Фоновий процес, що періодично запускається у низькопріоритетній робочій черзі для підрахунку завантаження процесора та оперативної пам&#39;яті і публікувати тему <code>cpuload</code>.</p><p>У NuttX він також перевіряє використання стеку кожним процесом, і якщо воно падає нижче 300 байт, виводиться попередження, яке також буде показано у файлі логу.</p><p><a id="load_mon_usage"></a></p><h3 id="використання-13" tabindex="-1">Використання <a class="header-anchor" href="#використання-13" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>load_mon &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="logger" tabindex="-1">logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;logger&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/logger" target="_blank" rel="noreferrer">modules/logger</a></p><h3 id="опис-14" tabindex="-1">Опис <a class="header-anchor" href="#опис-14" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Системний логгер, який реєструє конфігурований набір тем uORB та системних повідомлень printf (<code>PX4_WARN</code> і <code>PX4_ERR</code>) до файлів ULog. Вони можуть бути використані для оцінки продуктивності системи та польоту, налаштування, відтворення та аналізу збоїв.</p><p>Він підтримує 2 бекенди:</p><ul><li>Файли: запис файлів ULog до файлової системи (SD-карта)</li><li>MAVLink: передача даних ULog через MAVLink клієнту (клієнт повинен це підтримувати)</li></ul><p>Обидва бекенди можуть бути активовані та використовуватися одночасно.</p><p>Файловий бекенд підтримує 2 типи логів: повний (звичайний лог) і журнал місій. Журнал місії - це скорочений файл ulog, який можна використовувати, наприклад, для географічних міток або управління транспортним засобом. Його можна увімкнути та налаштувати за допомогою параметра SDLOG_MISSION. Звичайний журнал завжди є підмножиною журналу місій.</p><h3 id="реалізація-1" tabindex="-1">Реалізація <a class="header-anchor" href="#реалізація-1" aria-label="Permalink to &quot;Реалізація&quot;">​</a></h3><p>Реалізація використовує два потоки:</p><ul><li>Основний потік, що працює з фіксованою швидкістю (або опитування на тему, якщо запущено з -p) і перевіряє оновлення даних</li><li>Потік запису, що записує дані у файл</li></ul><p>Між ними знаходиться буфер запису з конфігурованим розміром (і ще один буфер фіксованого розміру для журналу місій). Він повинен бути великим, щоб уникнути втрати даних.</p><h3 id="приклади-1" tabindex="-1">Приклади <a class="header-anchor" href="#приклади-1" aria-label="Permalink to &quot;Приклади&quot;">​</a></h3><p>Типове використання для початку ведення журналу негайно:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>logger start -e -t</span></span></code></pre></div><p>Або якщо вже працює:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>logger on</span></span></code></pre></div><p><a id="logger_usage"></a></p><h3 id="використання-14" tabindex="-1">Використання <a class="header-anchor" href="#використання-14" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>logger &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-m &lt;val&gt;]  Backend mode</span></span>
<span class="line"><span>                 values: file|mavlink|all, default: all</span></span>
<span class="line"><span>     [-x]        Enable/disable logging via Aux1 RC channel</span></span>
<span class="line"><span>     [-a]        Log 1st armed until shutdown</span></span>
<span class="line"><span>     [-e]        Enable logging right after start until disarm (otherwise only</span></span>
<span class="line"><span>                 when armed)</span></span>
<span class="line"><span>     [-f]        Log until shutdown (implies -e)</span></span>
<span class="line"><span>     [-t]        Use date/time for naming log directories and files</span></span>
<span class="line"><span>     [-r &lt;val&gt;]  Log rate in Hz, 0 means unlimited rate</span></span>
<span class="line"><span>                 default: 280</span></span>
<span class="line"><span>     [-b &lt;val&gt;]  Log buffer size in KiB</span></span>
<span class="line"><span>                 default: 12</span></span>
<span class="line"><span>     [-p &lt;val&gt;]  Poll on a topic instead of running with fixed rate (Log rate</span></span>
<span class="line"><span>                 and topic intervals are ignored if this is set)</span></span>
<span class="line"><span>                 values: &lt;topic_name&gt;</span></span>
<span class="line"><span>     [-c &lt;val&gt;]  Log rate factor (higher is faster)</span></span>
<span class="line"><span>                 default: 1.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   on            start logging now, override arming (logger must be running)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   off           stop logging now, override arming (logger must be running)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   trigger_watchdog manually trigger the watchdog now</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="mag-bias-estimator" tabindex="-1">mag_bias_estimator <a class="header-anchor" href="#mag-bias-estimator" aria-label="Permalink to &quot;mag_bias_estimator&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/mag_bias_estimator" target="_blank" rel="noreferrer">modules/mag_bias_estimator</a></p><h3 id="опис-15" tabindex="-1">Опис <a class="header-anchor" href="#опис-15" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Онлайн-оцінювач похибки магнітометра.</p><p><a id="mag_bias_estimator_usage"></a></p><h3 id="використання-15" tabindex="-1">Використання <a class="header-anchor" href="#використання-15" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mag_bias_estimator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="manual-control" tabindex="-1">manual_control <a class="header-anchor" href="#manual-control" aria-label="Permalink to &quot;manual_control&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/manual_control" target="_blank" rel="noreferrer">modules/manual_control</a></p><h3 id="опис-16" tabindex="-1">Опис <a class="header-anchor" href="#опис-16" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Модуль споживає вхідні дані вручним керуванням, публікуючи одну установку керування вручну.</p><p><a id="manual_control_usage"></a></p><h3 id="використання-16" tabindex="-1">Використання <a class="header-anchor" href="#використання-16" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>manual_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="netman" tabindex="-1">netman <a class="header-anchor" href="#netman" aria-label="Permalink to &quot;netman&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/netman" target="_blank" rel="noreferrer">systemcmds/netman</a></p><h3 id="опис-менеджер-конфігураціі-мережі-зберігає-налаштування-мережі-в-неволатильніи-пам-яті-при-запуску-update-опція-буде-виконана-якщо-конфігурація-мережі-не-існує-значення-за-замовчуванням-буде-збережено-в-неплавучіи-пам-яті-та-система-перезавантажена" tabindex="-1">Опис Менеджер конфігурації мережі зберігає налаштування мережі в неволатильній пам&#39;яті. При запуску <code>update</code> опція буде виконана. Якщо конфігурація мережі не існує. Значення за замовчуванням буде збережено в неплавучій пам&#39;яті та система перезавантажена. <a class="header-anchor" href="#опис-менеджер-конфігураціі-мережі-зберігає-налаштування-мережі-в-неволатильніи-пам-яті-при-запуску-update-опція-буде-виконана-якщо-конфігурація-мережі-не-існує-значення-за-замовчуванням-буде-збережено-в-неплавучіи-пам-яті-та-система-перезавантажена" aria-label="Permalink to &quot;Опис Менеджер конфігурації мережі зберігає налаштування мережі в неволатильній пам&#39;яті. При запуску \`update\` опція буде виконана. Якщо конфігурація мережі не існує. Значення за замовчуванням буде збережено в неплавучій пам&#39;яті та система перезавантажена.&quot;">​</a></h3><h4 id="update" tabindex="-1">update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;update&quot;">​</a></h4><p><code>оновлення мережі</code> автоматично виконується за допомогою <a href="./../concept/system_startup.html#system-startup">скрипту запуску системи</a>. Під час виконання параметра <code>update</code> буде перевірено наявність <code>net.cfg</code> в корені картки SD. Після цього він зберігає мережеві налаштування з <code>net.cfg</code> у неволатильну пам&#39;ять, видаляє файл і перезавантажує систему.</p><h4 id="save" tabindex="-1">save <a class="header-anchor" href="#save" aria-label="Permalink to &quot;save&quot;">​</a></h4><p>Опція <code>save</code> збереже налаштування з необхідної пам&#39;яті в файл з назвою <code>net.cfg</code> на файловій системі SD картки для редагування. Використовуйте це, щоб відредагувати налаштування. Збереження не негайно застосовує мережеві налаштування; користувач повинен перезавантажити стек польоту. Напротив, команда <code>update</code> запускається сценарієм запуску, зберігає налаштування в постійну пам&#39;ять, та перезавантажує контролер польоту (який потім використовуватиме нові налаштування).</p><h4 id="показати" tabindex="-1">показати <a class="header-anchor" href="#показати" aria-label="Permalink to &quot;показати&quot;">​</a></h4><p>Опція <code>show</code> відобразить мережеві налаштування в <code>net.cfg</code> на консолі.</p><h3 id="приклади-netman-save-зберегти-параметри-на-sd-картку-netman-show-відображення-поточних-налаштувань-netman-update-i-eth0-зробити-оновлення" tabindex="-1">Приклади $ netman save # Зберегти параметри на SD-картку. $ netman show # відображення поточних налаштувань. $ netman update -i eth0 # зробити оновлення <a class="header-anchor" href="#приклади-netman-save-зберегти-параметри-на-sd-картку-netman-show-відображення-поточних-налаштувань-netman-update-i-eth0-зробити-оновлення" aria-label="Permalink to &quot;Приклади $ netman save           # Зберегти параметри на SD-картку. $ netman show           # відображення поточних налаштувань. $ netman update -i eth0 # зробити оновлення&quot;">​</a></h3><p><a id="netman_usage"></a></p><h3 id="використання-17" tabindex="-1">Використання <a class="header-anchor" href="#використання-17" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>netman &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   show          Display the current persistent network settings to the console.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   update        Check SD card for net.cfg and update network persistent network</span></span>
<span class="line"><span>                 settings.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   save          Save the current network parameters to the SD card.</span></span>
<span class="line"><span>     [-i &lt;val&gt;]  Set the interface name</span></span>
<span class="line"><span>                 default: eth0</span></span></code></pre></div><h2 id="pwm-input" tabindex="-1">pwm_input <a class="header-anchor" href="#pwm-input" aria-label="Permalink to &quot;pwm_input&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/pwm_input" target="_blank" rel="noreferrer">drivers/pwm_input</a></p><h3 id="опис-17" tabindex="-1">Опис <a class="header-anchor" href="#опис-17" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Вимірює вхід PWM на AUX5 (або MAIN5) через таймер захоплення ISR та публікує через повідомлення uORB &#39;pwm_input&#39;.</p><p><a id="pwm_input_usage"></a></p><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pwm_input &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="rc-update" tabindex="-1">rc_update <a class="header-anchor" href="#rc-update" aria-label="Permalink to &quot;rc_update&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/rc_update" target="_blank" rel="noreferrer">modules/rc_update</a></p><h3 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Модуль rc_update обробляє відображення каналів RC: зчитує сирі вхідні канали (<code>input_rc</code>), потім застосовує калібрування, відображає канали RC на налаштовані канали та перемикачі режиму а потім публікує як <code>rc_channels</code> та <code>manual_control_input</code>.</p><h3 id="імплементація-3" tabindex="-1">Імплементація <a class="header-anchor" href="#імплементація-3" aria-label="Permalink to &quot;Імплементація&quot;">​</a></h3><p>Щоб зменшити затримку управління, модуль запланований на опублікування введення_управління.</p><p><a id="rc_update_usage"></a></p><h3 id="використання-18" tabindex="-1">Використання <a class="header-anchor" href="#використання-18" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>rc_update &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="replay" tabindex="-1">replay <a class="header-anchor" href="#replay" aria-label="Permalink to &quot;replay&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/replay" target="_blank" rel="noreferrer">modules/replay</a></p><h3 id="опис-18" tabindex="-1">Опис <a class="header-anchor" href="#опис-18" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Цей модуль використовується для відтворення файлів ULog.</p><p>Існує 2 змінні середовища, які використовуються для конфігурації: <code>replay</code>, яка повинна бути встановлена на ім&#39;я файлу ULog - це файл журналу, який має бути відтворений. Другий - це режим, вказаний через <code>replay_mode</code>:</p><ul><li><code>replay_mode=ekf2</code>: специфічний режим відтворення EKF2. Це можна використовувати лише з модулем ekf2, але дозволяє відтворювати процес якомога швидше.</li><li>Загальне в іншому випадку: це може бути використано для повторення будь-яких модулів, але відтворення буде здійснене з тією самою швидкістю, що і було записано в журнал.</li></ul><p>Модуль зазвичай використовується разом з правилами видавця uORB, щоб вказати, які повідомлення потрібно відтворити. Модуль відтворення просто опублікує всі повідомлення, які знаходяться в журналі. Це також застосовує параметри з журналу.</p><p>Процедура відтворення документована на сторінці <a href="https://docs.px4.io/v1.15/en/debug/system_wide_replay.html" target="_blank" rel="noreferrer">Система Широкомасштабного Відтворення</a>.</p><p><a id="replay_usage"></a></p><h3 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>replay &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start replay, using log file from ENV variable &#39;replay&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   trystart      Same as &#39;start&#39;, but silently exit if no log file given</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   tryapplyparams Try to apply the parameters from the log file</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="send-event" tabindex="-1">send_event <a class="header-anchor" href="#send-event" aria-label="Permalink to &quot;send_event&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/events" target="_blank" rel="noreferrer">modules/events</a></p><h3 id="description-1" tabindex="-1">Description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Фоновий процес, що періодично виконується в черзі завдань LP для виконання рутинних завдань. Зараз він відповідає лише за сигнал тривоги на втрату RC.</p><p>Завдання можна почати через CLI або теми uORB (vehicle_command з MAVLink тощо).</p><p><a id="send_event_usage"></a></p><h3 id="використання-19" tabindex="-1">Використання <a class="header-anchor" href="#використання-19" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>send_event &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-arispeed-sim" tabindex="-1">sensor_arispeed_sim <a class="header-anchor" href="#sensor-arispeed-sim" aria-label="Permalink to &quot;sensor_arispeed_sim&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_airspeed_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_airspeed_sim</a></p><h3 id="опис-19" tabindex="-1">Опис <a class="header-anchor" href="#опис-19" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="sensor_arispeed_sim_usage"></a></p><h3 id="використання-20" tabindex="-1">Використання <a class="header-anchor" href="#використання-20" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_arispeed_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-baro-sim" tabindex="-1">sensor_baro_sim <a class="header-anchor" href="#sensor-baro-sim" aria-label="Permalink to &quot;sensor_baro_sim&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_baro_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_baro_sim</a></p><h3 id="опис-20" tabindex="-1">Опис <a class="header-anchor" href="#опис-20" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="sensor_baro_sim_usage"></a></p><h3 id="застосування" tabindex="-1">Застосування <a class="header-anchor" href="#застосування" aria-label="Permalink to &quot;Застосування&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_baro_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-gps-sim" tabindex="-1">sensor_gps_sim <a class="header-anchor" href="#sensor-gps-sim" aria-label="Permalink to &quot;sensor_gps_sim&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_gps_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_gps_sim</a></p><h3 id="опис-21" tabindex="-1">Опис <a class="header-anchor" href="#опис-21" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p><a id="sensor_gps_sim_usage"></a></p><h3 id="використання-21" tabindex="-1">Використання <a class="header-anchor" href="#використання-21" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_gps_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-mag-sim" tabindex="-1">sensor_mag_sim <a class="header-anchor" href="#sensor-mag-sim" aria-label="Permalink to &quot;sensor_mag_sim&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_mag_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_mag_sim</a></p><h3 id="описання" tabindex="-1">Описання <a class="header-anchor" href="#описання" aria-label="Permalink to &quot;Описання&quot;">​</a></h3><p><a id="sensor_mag_sim_usage"></a></p><h3 id="використання-22" tabindex="-1">Використання <a class="header-anchor" href="#використання-22" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_mag_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensors" tabindex="-1">sensors <a class="header-anchor" href="#sensors" aria-label="Permalink to &quot;sensors&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/sensors" target="_blank" rel="noreferrer">modules/sensors</a></p><h3 id="опис-22" tabindex="-1">Опис <a class="header-anchor" href="#опис-22" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Модуль сенсорів є центральним у всій системі. Він отримує вихід низького рівня від драйверів, перетворює його в більш придатну форму і публікує його для решти системи.</p><p>Надана функціональність включає в себе:</p><ul><li>Прочитайте вивід від драйверів датчиків (<code>SensorGyro</code>, тощо). Якщо існують кілька екземплярів того самого типу, виконуйте голосування та обробку аварійної ситуації. Потім застосуйте обертання дошки та калібрування температури (якщо ввімкнено). І, нарешті, опублікуйте дані; одну з тем є <code>SensorCombined</code>, яка використовується багатьма частинами системи.</li><li>Переконайтеся, що драйвери сенсора отримують оновлені калібрувальні параметри (масштаб &amp; зміщення), коли параметри змінюються або на запуску. Драйвери сенсора використовують інтерфейс ioctl для оновлення параметрів. Для того, щоб це працювало належним чином, драйвери сенсора повинні вже працювати, коли <code>sensors</code> запускається.</li><li>Виконайте перевірку узгодженості датчиків та опублікуйте тему <code>SensorsStatusImu</code>.</li></ul><h3 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h3><p>Він запускається у власній темі і проводить опитування на поточну обрану тему гіроскопа.</p><p><a id="sensors_usage"></a></p><h3 id="використання-23" tabindex="-1">Використання <a class="header-anchor" href="#використання-23" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensors &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-h]        Start in HIL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="tattu-can" tabindex="-1">tattu_can <a class="header-anchor" href="#tattu-can" aria-label="Permalink to &quot;tattu_can&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/tattu_can" target="_blank" rel="noreferrer">drivers/tattu_can</a></p><h3 id="опис-23" tabindex="-1">Опис <a class="header-anchor" href="#опис-23" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Драйвер для зчитування даних з розумної батареї Tattu 12S 16000mAh.</p><p><a id="tattu_can_usage"></a></p><h3 id="usage-2" tabindex="-1">Usage <a class="header-anchor" href="#usage-2" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tattu_can &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="temperature-compensation" tabindex="-1">temperature_compensation <a class="header-anchor" href="#temperature-compensation" aria-label="Permalink to &quot;temperature_compensation&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/temperature_compensation" target="_blank" rel="noreferrer">modules/temperature_compensation</a></p><h3 id="description-2" tabindex="-1">Description <a class="header-anchor" href="#description-2" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Модуль компенсації температури дозволяє всім гіроскопам, акселерометрам та барометрам у системі бути температурно компенсованими. Модуль відстежує дані, які надходять від датчиків та оновлює пов&#39;язану тему sensor_correction кожного разу, коли виявляється зміна температури. Модуль також може бути налаштований для виконання обчислення коефіцієнта наступного завантаження, що дозволяє обчислити калібрувальні коефіцієнти теплової калібрації під час циклу температури автомобіля.</p><p><a id="temperature_compensation_usage"></a></p><h3 id="використання-24" tabindex="-1">Використання <a class="header-anchor" href="#використання-24" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>temperature_compensation &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the module, which monitors the sensors and updates the</span></span>
<span class="line"><span>                 sensor_correction topic</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   calibrate     Run temperature calibration process</span></span>
<span class="line"><span>     [-a]        calibrate the accel</span></span>
<span class="line"><span>     [-g]        calibrate the gyro</span></span>
<span class="line"><span>     [-m]        calibrate the mag</span></span>
<span class="line"><span>     [-b]        calibrate the baro (if none of these is given, all will be</span></span>
<span class="line"><span>                 calibrated)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="tune-control" tabindex="-1">tune_control <a class="header-anchor" href="#tune-control" aria-label="Permalink to &quot;tune_control&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/tune_control" target="_blank" rel="noreferrer">systemcmds/tune_control</a></p><h3 id="опис-24" tabindex="-1">Опис <a class="header-anchor" href="#опис-24" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Інструмент командного рядка для керування &amp; тестування (зовнішніх) melodies.</p><p>Мелодії використовуються для надання слухових сповіщень та попереджень (наприклад, коли система озброєна, отримує позицію блокування тощо). Інструмент вимагає, щоб був запущений драйвер, який може керувати темою управління tune_control uorb.</p><p>Інформацію про формат мелодії та попередньо визначені системні мелодії можна знайти тут: <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/lib/tunes/tune_definition.desc" target="_blank" rel="noreferrer">https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/lib/tunes/tune_definition.desc</a></p><h3 id="приклади-2" tabindex="-1">Приклади <a class="header-anchor" href="#приклади-2" aria-label="Permalink to &quot;Приклади&quot;">​</a></h3><p>Грайте системний мелодію #2:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tune_control play -t 2</span></span></code></pre></div><p><a id="tune_control_usage"></a></p><h3 id="використання-25" tabindex="-1">Використання <a class="header-anchor" href="#використання-25" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tune_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   play          Play system tune or single note.</span></span>
<span class="line"><span>     error       Play error tune</span></span>
<span class="line"><span>     [-t &lt;val&gt;]  Play predefined system tune</span></span>
<span class="line"><span>                 default: 1</span></span>
<span class="line"><span>     [-f &lt;val&gt;]  Frequency of note in Hz (0-22kHz)</span></span>
<span class="line"><span>     [-d &lt;val&gt;]  Duration of note in us</span></span>
<span class="line"><span>     [-s &lt;val&gt;]  Volume level (loudness) of the note (0-100)</span></span>
<span class="line"><span>                 default: 40</span></span>
<span class="line"><span>     [-m &lt;val&gt;]  Melody in string form</span></span>
<span class="line"><span>                 values: &lt;string&gt; - e.g. &quot;MFT200e8a8a&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   libtest       Test library</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop          Stop playback (use for repeated tunes)</span></span></code></pre></div><h2 id="uxrce-dds-client" tabindex="-1">uxrce_dds_client <a class="header-anchor" href="#uxrce-dds-client" aria-label="Permalink to &quot;uxrce_dds_client&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/uxrce_dds_client" target="_blank" rel="noreferrer">modules/uxrce_dds_client</a></p><h3 id="опис-предмету" tabindex="-1">Опис предмету <a class="header-anchor" href="#опис-предмету" aria-label="Permalink to &quot;Опис предмету&quot;">​</a></h3><p>Клієнт UXRCE-DDS використовується для спілкування з агентом за допомогою тем uORB через послідовний або UDP.</p><h3 id="приклади-3" tabindex="-1">Приклади <a class="header-anchor" href="#приклади-3" aria-label="Permalink to &quot;Приклади&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>uxrce_dds_client start -t serial -d /dev/ttyS3 -b 921600</span></span>
<span class="line"><span>uxrce_dds_client start -t udp -h 127.0.0.1 -p 15555</span></span></code></pre></div><p><a id="uxrce_dds_client_usage"></a></p><h3 id="usage-3" tabindex="-1">Usage <a class="header-anchor" href="#usage-3" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>uxrce_dds_client &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-t &lt;val&gt;]  Transport protocol</span></span>
<span class="line"><span>                 values: serial|udp, default: udp</span></span>
<span class="line"><span>     [-d &lt;val&gt;]  serial device</span></span>
<span class="line"><span>                 values: &lt;file:dev&gt;</span></span>
<span class="line"><span>     [-b &lt;val&gt;]  Baudrate (can also be p:&lt;param_name&gt;)</span></span>
<span class="line"><span>                 default: 0</span></span>
<span class="line"><span>     [-h &lt;val&gt;]  Agent IP. If not provided, defaults to UXRCE_DDS_AG_IP</span></span>
<span class="line"><span>                 values: &lt;IP&gt;</span></span>
<span class="line"><span>     [-p &lt;val&gt;]  Agent listening port. If not provided, defaults to</span></span>
<span class="line"><span>                 UXRCE_DDS_PRT</span></span>
<span class="line"><span>     [-n &lt;val&gt;]  Client DDS namespace</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="work-queue" tabindex="-1">work_queue <a class="header-anchor" href="#work-queue" aria-label="Permalink to &quot;work_queue&quot;">​</a></h2><p>Джерело: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/work_queue" target="_blank" rel="noreferrer">systemcmds/work_queue</a></p><h3 id="опис-25" tabindex="-1">Опис <a class="header-anchor" href="#опис-25" aria-label="Permalink to &quot;Опис&quot;">​</a></h3><p>Інструмент командного рядка для відображення статусу черги роботи.</p><p><a id="work_queue_usage"></a></p><h3 id="використання-26" tabindex="-1">Використання <a class="header-anchor" href="#використання-26" aria-label="Permalink to &quot;Використання&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>work_queue &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div>`,280),l=[p];function i(r,o,c,d,h,u){return n(),s("div",null,l)}const b=a(t,[["render",i]]);export{g as __pageData,b as default};
