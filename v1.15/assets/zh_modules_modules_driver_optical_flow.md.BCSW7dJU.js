import{_ as e,c as a,o as s,ab as t}from"./chunks/framework.CUflZczI.js";const _=JSON.parse('{"title":"Modules Reference: Optical Flow (Driver)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/modules/modules_driver_optical_flow.md","filePath":"zh/modules/modules_driver_optical_flow.md"}'),o={name:"zh/modules/modules_driver_optical_flow.md"},n=t(`<h1 id="modules-reference-optical-flow-driver" tabindex="-1">Modules Reference: Optical Flow (Driver) <a class="header-anchor" href="#modules-reference-optical-flow-driver" aria-label="Permalink to &quot;Modules Reference: Optical Flow (Driver)&quot;">​</a></h1><h2 id="thoneflow" tabindex="-1">thoneflow <a class="header-anchor" href="#thoneflow" aria-label="Permalink to &quot;thoneflow&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/optical_flow/thoneflow" target="_blank" rel="noreferrer">drivers/optical_flow/thoneflow</a></p><h3 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h3><p>Serial bus driver for the ThoneFlow-3901U optical flow sensor.</p><p>Most boards are configured to enable/start the driver on a specified UART using the SENS_TFLOW_CFG parameter.</p><p>Setup/usage information: <a href="https://docs.px4.io/v1.15/en/sensor/pmw3901.html#thone-thoneflow-3901u" target="_blank" rel="noreferrer">https://docs.px4.io/v1.15/en/sensor/pmw3901.html#thone-thoneflow-3901u</a></p><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p>Attempt to start driver on a specified serial device.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>thoneflow start -d /dev/ttyS1</span></span></code></pre></div><p>停止驱动程序的运行</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>thoneflow stop</span></span></code></pre></div><p><a id="thoneflow_usage"></a></p><h3 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>thoneflow &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start driver</span></span>
<span class="line"><span>     -d &lt;val&gt;    Serial device</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop          Stop driver</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   info          Print driver information</span></span></code></pre></div>`,15),l=[n];function r(i,p,d,c,h,u){return s(),a("div",null,l)}const m=e(o,[["render",r]]);export{_ as __pageData,m as default};
