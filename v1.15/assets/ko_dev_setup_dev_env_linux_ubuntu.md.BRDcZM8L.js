import{_ as t,c as e,o as a,ab as i,m as s}from"./chunks/framework.CUflZczI.js";const F=JSON.parse('{"title":"우분투 개발 환경","description":"","frontmatter":{},"headers":[],"relativePath":"ko/dev_setup/dev_env_linux_ubuntu.md","filePath":"ko/dev_setup/dev_env_linux_ubuntu.md"}'),l={name:"ko/dev_setup/dev_env_linux_ubuntu.md"},n=i(`<h1 id="우분투-개발-환경" tabindex="-1">우분투 개발 환경 <a class="header-anchor" href="#우분투-개발-환경" aria-label="Permalink to &quot;우분투 개발 환경&quot;">​</a></h1><p>The following instructions use a bash script to set up the PX4 development environment on the <a href="https://wiki.ubuntu.com/LTS" target="_blank" rel="noreferrer">Ubuntu Linux LTS</a> versions supported by PX4: Ubuntu 22.04 (Jammy Jellyfish), 20.04 (Focal Fossa), and 18.04 (Bionic Beaver).</p><p>The environment includes:</p><ul><li><a href="./../sim_gazebo_gz/">Gazebo Simulator</a> on Ubuntu 22.04 and Ubuntu 20.04</li><li><a href="./../sim_gazebo_classic/">Gazebo Classic Simulator</a> on Ubuntu 20.04 and Ubuntu 18.04</li><li><a href="./../dev_setup/building_px4.html#nuttx-pixhawk-based-boards">Build toolchain for Pixhawk (and other NuttX-based hardware)</a>.</li></ul><div class="info custom-block"><p class="custom-block-title">The build toolchain for other flight controllers, simulators, and working with ROS are discussed in the <a href="#other-targets">Other Targets</a> section below.</p></div><h2 id="simulation-and-nuttx-pixhawk-targets" tabindex="-1">Simulation and NuttX (Pixhawk) Targets <a class="header-anchor" href="#simulation-and-nuttx-pixhawk-targets" aria-label="Permalink to &quot;Simulation and NuttX (Pixhawk) Targets&quot;">​</a></h2><p>Use the <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/Tools/setup/ubuntu.sh" target="_blank" rel="noreferrer">ubuntu.sh</a> script to set up a development environment that allows you to build for simulators and/or the <a href="./../dev_setup/building_px4.html#nuttx-pixhawk-based-boards">NuttX/Pixhawk</a> toolchain.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The script is intended to be run on <em>clean</em> Ubuntu LTS installations, and may not work if run &quot;on top&quot; of an existing system, or on a different Ubuntu release.</p></div><p>툴체인을 설치하려면:</p><ol><li><p><a href="./../dev_setup/building_px4.html">PX4 소스 코드 다운로드합니다</a>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot.git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">The environment setup scripts in the source usually work for recent PX4 releases. If working with an older version of PX4 you may need to <a href="./../contribute/git_examples.html#get-a-specific-release">get the source code specific to your release</a>.</p></div></li></ol><p>:::</p><ol><li><p>인수 없이 (bash 셸에서) <strong>ubuntu.sh</strong>를 실행합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./PX4-Autopilot/Tools/setup/ubuntu.sh</span></span></code></pre></div><ul><li>스크립트가 진행되는 동안 모든 프롬프트를 확인합니다.</li><li><code>--no-nuttx</code> 및 <code>--no-sim-tools</code> 옵션을 사용하여 NuttX 및/또는 시뮬레이션 도구를 생략할 수 있습니다.</li></ul></li><li><p>완료되면 컴퓨터를 재부팅합니다.</p></li></ol><details class="details custom-block"><summary>Details</summary><p>Additional notes These notes are provided &quot;for information only&quot;:</p><ul><li><p>This setup is supported by the PX4 Dev Team. The instructions may also work on other Debian Linux based systems.</p></li><li><p>The script installs <a href="./../sim_gazebo_gz/">Gazebo</a> &quot;Garden&quot; on Ubuntu 22.04, <a href="./../sim_gazebo_classic/">Gazebo Classic</a> 11 on Ubuntu 20.04, and Gazebo Classic 9 on Ubuntu 18.04.</p></li><li><p>If you want to use Gazebo on Ubuntu 20.04 you can add it manually. See <a href="./../sim_gazebo_gz/#installation-ubuntu-linux">Gazebo &gt; Installation</a>.</p></li><li><p>You can verify the NuttX installation by confirming the <code>gcc</code> version as shown:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$arm-none-eabi-gcc --version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm-none-eabi-gcc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (GNU </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Arm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Embedded</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Toolchain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 9-2020-q2-update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) 9.3.1 20200408 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">release</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Copyright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (C) 2019 Free Software Foundation, Inc.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> free</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> software</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">see</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copying</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conditions.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  There</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">warranty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> even</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MERCHANTABILITY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FITNESS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FOR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PARTICULAR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PURPOSE.</span></span></code></pre></div></li><li><p>어쨌든 PX4 소스 코드가 필요합니다. 그러나 모든 소스 코드를 가져오지 않고 개발 환경을 설정하려는 경우 대신 <a href="https://github.com/PX4/PX4-Autopilot/blob/master/Tools/setup/ubuntu.sh" target="_blank" rel="noreferrer">ubuntu.sh</a> 및 <a href="https://github.com/PX4/PX4-Autopilot/blob/master/Tools/setup/requirements.txt" target="_blank" rel="noreferrer">requirements.txt</a>를 다운로드한 다음 <strong>ubuntu.sh</strong>를 실행할 수 있습니다.:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/PX4/PX4-Autopilot/release/1.15/Tools/setup/ubuntu.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/PX4/PX4-Autopilot/release/1.15/Tools/setup/requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ubuntu.sh</span></span></code></pre></div></li></ul></details><h2 id="영상-가이드" tabindex="-1">영상 가이드 <a class="header-anchor" href="#영상-가이드" aria-label="Permalink to &quot;영상 가이드&quot;">​</a></h2><p>This video shows how to install the toolchain for NuttX and simulation targets (<a href="#simulation-and-nuttx-pixhawk-targets">as covered below</a>) along with the basic testing covered in <a href="./../dev_setup/building_px4.html">Building PX4 Software</a>.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The video suggests that you build source using JMAVSim, entering the command: <code>make px4_sitl jmavsim</code>. As JMAVSim is now community-supported, you should instead build using Gazebo or Gazebo Classic, as shown in <a href="./../dev_setup/building_px4.html#first-build-using-a-simulator">Building the Code</a></p></div>`,16),o=s("p",null,[s("div",{class:"embed-responsive embed-responsive-16by9"},[s("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/OtValQdAdrU",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),h=i('<h2 id="other-targets" tabindex="-1">Other Targets <a class="header-anchor" href="#other-targets" aria-label="Permalink to &quot;Other Targets&quot;">​</a></h2><p>The Ubuntu development environment for ROS, other simulators, and other hardware targets, is covered in their respective documentation. A subset of the relevant topics are linked below.</p><p>라즈베리파이</p><ul><li><a href="./../flight_controller/raspberry_pi_navio2.html#px4-development-environment">Raspberry Pi 2/3 Navio2 Autopilot &gt; PX4 Development Environment</a></li><li><a href="./../flight_controller/raspberry_pi_pilotpi.html">Raspberry Pi 2/3/4 PilotPi Shield</a>.</li></ul><p>ROS</p><ul><li>ROS 2: <a href="./../ros2/user_guide.html#installation-setup">ROS 2 User Guide &gt; Installation &amp; Setup</a>.</li><li>ROS (1): <a href="./../ros/mavros_installation.html">ROS (1) Installation Guide</a></li></ul><h2 id="다음-단계" tabindex="-1">다음 단계 <a class="header-anchor" href="#다음-단계" aria-label="Permalink to &quot;다음 단계&quot;">​</a></h2><p>명령줄 도구 모음 설정후, 다음을 수행합니다.</p><ul><li><a href="./../dev_setup/vscode.html">VSCode</a>를 설치합니다(명령줄에 IDE 사용을 선호하는 경우).</li><li>Install the <a href="./../dev_setup/qgc_daily_build.html">QGroundControl Daily Build</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <em>daily build</em> includes development tools that hidden in release builds. 또한, 릴리스 빌드에서 아직 지원되지 않는 새로운 PX4 기능에 대한 액세스를 제공할 수도 있습니다.</p></div><ul><li><a href="./../dev_setup/building_px4.html">빌드 지침</a>을 계속 진행합니다.</li></ul>',11),r=[n,o,h];function p(u,d,k,c,g,b){return a(),e("div",null,r)}const _=t(l,[["render",p]]);export{F as __pageData,_ as default};
