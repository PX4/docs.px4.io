import{_ as t,E as n,c as r,J as e,a as i,m as a,ab as l,o}from"./chunks/framework.CUflZczI.js";const f=JSON.parse('{"title":"PX4 ROS 2 Interface Library","description":"","frontmatter":{},"headers":[],"relativePath":"zh/ros2/px4_ros2_interface_lib.md","filePath":"zh/ros2/px4_ros2_interface_lib.md"}'),p={name:"zh/ros2/px4_ros2_interface_lib.md"},h=a("h1",{id:"px4-ros-2-interface-library",tabindex:"-1"},[i("PX4 ROS 2 Interface Library "),a("a",{class:"header-anchor",href:"#px4-ros-2-interface-library","aria-label":'Permalink to "PX4 ROS 2 Interface Library"'},"​")],-1),c=l(`<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Experimental At the time of writing, parts of the PX4 ROS 2 Interface Library are experimental, and hence subject to change.</p></div><p>The <a href="https://github.com/Auterion/px4-ros2-interface-lib" target="_blank" rel="noreferrer">PX4 ROS 2 Interface Library</a> is a C++ library that simplifies controlling and interacting with PX4 from ROS 2.</p><p>The library provides two high-level interfaces for developers:</p><ol><li>The <a href="./px4_ros2_control_interface.html">Control Interface</a> allows developers to create and dynamically register modes written using ROS 2. It provides classes for sending different types of setpoints, ranging from high-level navigation tasks all the way down to direct actuator controls.</li><li>The <a href="./px4_ros2_navigation_interface.html">Navigation Interface</a> enables sending vehicle position estimates to PX4 from ROS 2 applications, such as a VIO system.</li></ol><h2 id="installation-in-a-ros-2-workspace" tabindex="-1">Installation in a ROS 2 Workspace <a class="header-anchor" href="#installation-in-a-ros-2-workspace" aria-label="Permalink to &quot;Installation in a ROS 2 Workspace&quot;">​</a></h2><p>To get started using the library within an existing ROS 2 workspace:</p><ol><li><p>Make sure you have a working <a href="./../ros2/user_guide.html">ROS 2 setup</a>, with <a href="https://github.com/PX4/px4_msgs" target="_blank" rel="noreferrer"><code>px4_msgs</code></a> in the ROS 2 workspace.</p></li><li><p>Clone the repository into the workspace:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ros_workspace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/src</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Auterion/px4-ros2-interface-lib</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>To ensure compatibility, use the latest <em>main</em> branches for PX4, <em>px4_msgs</em> and the library. See also <a href="https://github.com/Auterion/px4-ros2-interface-lib#compatibility-with-px4" target="_blank" rel="noreferrer">here</a>.</p></div></li></ol><p>:::</p><ol start="3"><li><p>Build the workspace:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">colcon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install/setup.bash</span></span></code></pre></div></li></ol><h2 id="ci-integration-tests" tabindex="-1">CI: Integration Tests <a class="header-anchor" href="#ci-integration-tests" aria-label="Permalink to &quot;CI: Integration Tests&quot;">​</a></h2><p>When opening a pull request to PX4, CI runs the library integration tests. These test that mode registration, failsafes, and mode replacement, work as expected.</p><p>The tests can also be run locally from PX4:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./test/ros_test_runner.py</span></span></code></pre></div><p>And to run only a single case:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./test/ros_test_runner.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>You can list the available test cases with:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./test/ros_test_runner.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list-cases</span></span></code></pre></div>`,17);function d(k,g,u,b,m,y){const s=n("Badge");return o(),r("div",null,[h,e(s,{type:"tip",text:"PX4 v1.15"}),i(),e(s,{type:"warning",text:"Experimental"}),c])}const F=t(p,[["render",d]]);export{f as __pageData,F as default};
