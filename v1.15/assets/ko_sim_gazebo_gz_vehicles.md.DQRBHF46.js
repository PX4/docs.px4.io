import{_ as s,a as t,b as i,c as o,d as l}from"./chunks/standard_vtol.Crm0CH-w.js";import{_ as h,E as n,c as r,J as d,ab as a,o as c}from"./chunks/framework.CUflZczI.js";const x=JSON.parse('{"title":"Gazebo Vehicles","description":"","frontmatter":{},"headers":[],"relativePath":"ko/sim_gazebo_gz/vehicles.md","filePath":"ko/sim_gazebo_gz/vehicles.md"}'),p={name:"ko/sim_gazebo_gz/vehicles.md"},u=a('<h1 id="gazebo-vehicles" tabindex="-1">Gazebo Vehicles <a class="header-anchor" href="#gazebo-vehicles" aria-label="Permalink to &quot;Gazebo Vehicles&quot;">​</a></h1><p>This topic lists/displays the vehicles supported by the PX4 <a href="./../sim_gazebo_gz/">Gazebo</a> simulation, and the <code>make</code> commands required to run them (the commands are run from a terminal in the <strong>PX4-Autopilot</strong> directory).</p><p>The models are included in PX4 as a submodule that is fetched from the <a href="./../sim_gazebo_gz/gazebo_models.html">Gazebo Models Repository</a>.</p><p>Supported vehicle types include: mutirotor, VTOL, Plane.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>See <a href="./../sim_gazebo_classic/vehicles.html">Gazebo Classic Vehicles</a> for vehicles that work with the older <a href="./../sim_gazebo_classic/">Gazebo &quot;Classic&quot; simulation</a>. Note that vehicle models are not interchangable between the two versions of the simulator: the vehicles on this page only work with (new) <a href="./../sim_gazebo_gz/">Gazebo</a>.</p></div><h2 id="multicopter" tabindex="-1">Multicopter <a class="header-anchor" href="#multicopter" aria-label="Permalink to &quot;Multicopter&quot;">​</a></h2><h3 id="x500-quadrotor" tabindex="-1">X500 Quadrotor <a class="header-anchor" href="#x500-quadrotor" aria-label="Permalink to &quot;X500 Quadrotor&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500</span></span></code></pre></div><h3 id="x500-quadrotor-with-visual-odometry" tabindex="-1">X500 Quadrotor with Visual Odometry <a class="header-anchor" href="#x500-quadrotor-with-visual-odometry" aria-label="Permalink to &quot;X500 Quadrotor with Visual Odometry&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500_vision</span></span></code></pre></div><p><img src="'+s+'" alt="x500 in Gazebo"></p><h3 id="x500-quadrotor-with-depth-camera" tabindex="-1">X500 Quadrotor with Depth Camera <a class="header-anchor" href="#x500-quadrotor-with-depth-camera" aria-label="Permalink to &quot;X500 Quadrotor with Depth Camera&quot;">​</a></h3><p>These models have a depth camera attached, modelled on the OAK-D.</p><p><em>Forward-facing depth camera:</em></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500_depth</span></span></code></pre></div><p><img src="'+t+'" alt="x500 with depth camera in Gazebo"></p><h3 id="x500-quadrotor-with-monocular-camera" tabindex="-1">X500 Quadrotor with Monocular Camera <a class="header-anchor" href="#x500-quadrotor-with-monocular-camera" aria-label="Permalink to &quot;X500 Quadrotor with Monocular Camera&quot;">​</a></h3><p>This models has a simple monocular camera sensor attached (there is no physical camera visualization on the model itself).</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500_mono_cam</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The camera cannot yet be used to stream video or for image capture in QGroundControl. <a href="https://github.com/PX4/PX4-Autopilot/issues/22563" target="_blank" rel="noreferrer">PX4-Autopilot#22563</a> can be used to track the additional work needed to fully enable these use cases.</p></div><h2 id="plane-fixed-wing" tabindex="-1">Plane/Fixed-wing <a class="header-anchor" href="#plane-fixed-wing" aria-label="Permalink to &quot;Plane/Fixed-wing&quot;">​</a></h2><h3 id="standard-plane" tabindex="-1">Standard Plane <a class="header-anchor" href="#standard-plane" aria-label="Permalink to &quot;Standard Plane&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_rc_cessna</span></span></code></pre></div><p><img src="'+i+'" alt="Plane in Gazebo"></p><h3 id="advanced-plane" tabindex="-1">Advanced Plane <a class="header-anchor" href="#advanced-plane" aria-label="Permalink to &quot;Advanced Plane&quot;">​</a></h3>',25),m=a('<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_advanced_plane</span></span></code></pre></div><p><img src="'+o+'" alt="Advanced Plane in Gazebo"></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The difference between the Advanced Plane and the &quot;regular plane&quot; lies in the Lift Physics that the two models use:</p><ul><li>You can configure the <em>Advanced Lift Drag</em> plugin used by the model to more closely match a particular vehicle using the <a href="./../sim_gazebo_gz/tools_avl_automation.html">Advanced Lift Drag Tool</a>.</li><li>For more detail on the lift calculations for the Advanced Plane, see <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/blob/20ded0757b4f2cb362833538716caf1e938b162a/src/liftdrag_plugin/index.md" target="_blank" rel="noreferrer">PX4-SITL_gazebo-classic/src/liftdrag_plugin/index.md</a></li></ul></div><h2 id="vtol" tabindex="-1">VTOL <a class="header-anchor" href="#vtol" aria-label="Permalink to &quot;VTOL&quot;">​</a></h2><h3 id="standard-vtol" tabindex="-1">Standard VTOL <a class="header-anchor" href="#standard-vtol" aria-label="Permalink to &quot;Standard VTOL&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_standard_vtol</span></span></code></pre></div><p><img src="'+l+'" alt="Standard VTOL in Gazebo Classic"></p>',7);function g(k,b,_,v,F,f){const e=n("Badge");return c(),r("div",null,[u,d(e,{type:"tip",text:"PX4 v1.15"}),m])}const z=h(p,[["render",g]]);export{x as __pageData,z as default};
