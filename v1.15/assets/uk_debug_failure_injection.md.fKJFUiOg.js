import{_ as i,c as e,o as a,ab as s}from"./chunks/framework.CUflZczI.js";const m=JSON.parse('{"title":"Інжекція помилки системи","description":"","frontmatter":{},"headers":[],"relativePath":"uk/debug/failure_injection.md","filePath":"uk/debug/failure_injection.md"}'),l={name:"uk/debug/failure_injection.md"},t=s(`<h1 id="інжекція-помилки-системи" tabindex="-1">Інжекція помилки системи <a class="header-anchor" href="#інжекція-помилки-системи" aria-label="Permalink to &quot;Інжекція помилки системи&quot;">​</a></h1><p>Ін&#39;єкція відмов системи дозволяє викликати різні типи відмов датчиків та систем, або програмно за допомогою <a href="https://mavsdk.mavlink.io/main/en/cpp/api_reference/classmavsdk_1_1_failure.html" target="_blank" rel="noreferrer">плагіну відмови MAVSDK</a>, або &quot;вручну&quot; через консоль PX4, таку як <a href="./../debug/mavlink_shell.html#mavlink-shell">оболонка MAVLink</a>. This enables easier testing of <a href="./../config/safety.html">safety failsafe</a> behaviour, and more generally, of how PX4 behaves when systems and sensors stop working correctly.</p><p>Впровадження відмов вимкнено за замовчуванням і може бути увімкнено за допомогою параметра <a href="./../advanced_config/parameter_reference.html#SYS_FAILURE_EN">SYS_FAILURE_EN</a>.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Впровадження відмов все ще знаходиться в розробці. На момент написання (PX4 v1.14):</p><ul><li>Це можна використовувати лише в симуляції (підтримка як для впровадження в реальному польоті запланована).</li><li>Потребує підтримки в симуляторі. Це підтримується в Gazebo Classic</li><li>Багато типів відмов не широко реалізовані. У таких випадках команда повернеться з повідомленням &quot;unsupported&quot;.</li></ul></div><h2 id="команда-системи-збою" tabindex="-1">Команда системи збою <a class="header-anchor" href="#команда-системи-збою" aria-label="Permalink to &quot;Команда системи збою&quot;">​</a></h2><p>Помилки можна впроваджувати за допомогою <a href="./../modules/modules_command.html#failure">команди системи помилок</a> з будь-якої консолі/оболонки PX4, вказавши як ціль, так і тип помилки.</p><h3 id="синтаксис" tabindex="-1">Синтаксис <a class="header-anchor" href="#синтаксис" aria-label="Permalink to &quot;Синтаксис&quot;">​</a></h3><p>Повний синтаксис команди <a href="./../modules/modules_command.html#failure">failure</a> є:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">failure</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">componen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">failure_typ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">instance_numbe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span></span></code></pre></div><p>де:</p><ul><li><em>component</em>: <ul><li>Сенсори: <ul><li><code>gyro</code>: Gyro.</li><li><code>accel</code>: Accelerometer.</li><li><code>mag</code>: Magnetometer</li><li><code>baro</code>: Barometer</li><li><code>gps</code>: GPS</li><li><code>optical_flow</code>: Optical flow.</li><li><code>vio</code>: Visual inertial odometry.</li><li><code>distance_sensor</code>: Датчик відстані (дальніомір).</li><li><code>airspeed</code>: Датчик швидкості повітря.</li></ul></li><li>Системи: <ul><li><code>battery</code>: Акумулятор.</li><li><code>motor</code>: Двигун.</li><li><code>servo</code>: Сервопривід.</li><li><code>avoidance</code>: Avoidance.</li><li><code>rc_signal</code>: RC Сигнал.</li><li><code>mavlink_signal</code>: Сигнал MAVLink (телеметрія даних).</li></ul></li></ul></li><li><em>failure_type</em>: <ul><li><code>ok</code>: Опублікувати як звичайно (Вимкнути впровадження випадкових помилок).</li><li><code>off</code>: Зупинити публікацію.</li><li><code>stuck</code>: Повідомляє одне й те ж значення кожного разу (<em>може</em> вказувати на несправність датчика).</li><li><code>garbage</code>: Опублікуйте випадковий шум. Це схоже на читання неініціалізованої пам&#39;яті.</li><li><code>wrong</code>: Публікує недійсні значення (які все ще виглядають розумними / не є &quot;сміттям&quot;).</li><li><code>slow</code>: Публікація зі зниженою швидкістю.</li><li><code>delayed</code>: Опублікуйте дійсні дані зі значним запізненням.</li><li><code>intermittent</code>: Публікувати періодично.</li></ul></li><li><em>instance number</em> (необов&#39;язково): Номер екземпляра пошкодженого датчика. 0 (за замовчуванням) вказує на всі сенсори вказаного типу.</li></ul><h3 id="приклад" tabindex="-1">Приклад <a class="header-anchor" href="#приклад" aria-label="Permalink to &quot;Приклад&quot;">​</a></h3><p>Щоб симулювати втрату сигналу RC без вимкнення вашого пульта керування RC:</p><ol><li><p>Увімкніть параметр <a href="./../advanced_config/parameter_reference.html#SYS_FAILURE_EN">SYS_FAILURE_EN</a>.</p></li><li><p>Введіть наступні команди e консолі MAVLink або SITL <em>pxh shell</em>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Fail RC (turn publishing off)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">failure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rc_signal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Restart RC publishing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">failure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rc_signal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ok</span></span></code></pre></div></li></ol><h2 id="mavsdk-відлагоджувальнии-плагін" tabindex="-1">MAVSDK відлагоджувальний плагін <a class="header-anchor" href="#mavsdk-відлагоджувальнии-плагін" aria-label="Permalink to &quot;MAVSDK відлагоджувальний плагін&quot;">​</a></h2><p><a href="https://mavsdk.mavlink.io/main/en/cpp/api_reference/classmavsdk_1_1_failure.html" target="_blank" rel="noreferrer">Плагін невдачі MAVSDK</a> може бути використаний для програмного впровадження невдач. Використовується в <a href="./../test_and_ci/integration_testing_mavsdk.html">PX4 Інтеграційному тестуванні</a> для моделювання випадків відмов (наприклад, див. <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/test/mavsdk_tests/autopilot_tester.cpp" target="_blank" rel="noreferrer">PX4-Autopilot/test/mavsdk_tests/autopilot_tester.cpp</a>).</p><p>API плагіна - це пряме відображення команди збою, показаної вище, з деякими додатковими сигналами про помилки, пов&#39;язані з підключенням.</p>`,17),n=[t];function o(r,h,d,c,p,k){return a(),e("div",null,n)}const _=i(l,[["render",o]]);export{m as __pageData,_ as default};
