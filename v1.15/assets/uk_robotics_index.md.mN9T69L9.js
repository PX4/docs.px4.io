import{_ as i,c as l,o as e,ab as a}from"./chunks/framework.CUflZczI.js";const m=JSON.parse('{"title":"Drone додатки & API","description":"","frontmatter":{},"headers":[],"relativePath":"uk/robotics/index.md","filePath":"uk/robotics/index.md"}'),t={name:"uk/robotics/index.md"},o=a('<h1 id="drone-додатки-api" tabindex="-1">Drone додатки &amp; API <a class="header-anchor" href="#drone-додатки-api" aria-label="Permalink to &quot;Drone додатки &amp; API&quot;">​</a></h1><p>API дронів дозволяють вам писати код для керування та інтеграції з транспортними засобами на базі PX4, не потребуючи ретельного розуміння деталей транспортного засобу та стеку польоту, або думати про критичну безпекову поведінку.</p><p>Наприклад, ви можете створити нові &quot;розумні&quot; режими польоту, або власні режими геозон, або інтегрувати нове обладнання. API дронів дозволяють вам робити це, використовуючи високорівневі інструкції у вашій обраній мові програмування, і код може потім виконуватися на транспортному засобі у <a href="./../companion_computer/README.html">компаньйонному комп&#39;ютері</a> або зі станції на землі. В основі API здійснюється спілкування з PX4 за допомогою <a href="./../middleware/mavlink.html">MAVLink</a> або <a href="./../middleware/uxrce_dds.html">uXRCE-DDS</a>.</p><p>PX4 підтримує наступні інструменти SDK/робототехніки:</p><ul><li><a href="https://mavsdk.mavlink.io/" target="_blank" rel="noreferrer">MAVSDK</a></li><li><a href="./../ros/">ROS 2</a></li><li><a href="./../ros/">ROS 1</a></li></ul><h2 id="якии-api-мені-слід-використовувати" tabindex="-1">Який API мені слід використовувати? <a class="header-anchor" href="#якии-api-мені-слід-використовувати" aria-label="Permalink to &quot;Який API мені слід використовувати?&quot;">​</a></h2><p>Ми рекомендуємо використовувати MAVSDK там, де це можливо, насамперед тому, що він набагато інтуїтивно зрозуміліший і простіший у вивченні. Він також може працювати на більшій кількості операційних систем і менш продуктивному обладнанні.</p><p>Ви можете віддати перевагу ROS, якщо ви вже знаєте, як ним користуватися, або якщо ви хочете використовувати вже існуючі інтеграції (наприклад, завдання комп&#39;ютерного зору). Загалом, ROS, ймовірно, буде кращим вибором для завдань, які вимагають дуже низької затримки або більш глибокої інтеграції з PX4, ніж це забезпечує MAVLink.</p><p>Основна різниця:</p><ul><li><strong>MAVSDK:</strong><ul><li>Інтуїтивно зрозумілий та оптимізований для дронів, з невеликою тривалістю навчання та простим налаштуванням.</li><li>Ви можете писати програми на C++, Python, Swift, Java, Go та інших мовах.</li><li>Працює на обладнанні з обмеженими ресурсами</li><li>Працює на широкому спектрі ОС, включаючи Android, Linux, Windows.</li><li>Комунікація через MAVLink. <ul><li>Стабільний і широко підтримуваний.</li><li>Обмежено можливостями MAVLink - потрібна інформація може бути не опрацьована.</li><li>Затримка може бути занадто великою для деяких випадків використання.</li></ul></li></ul></li><li><strong>ROS:</strong><ul><li>General-purpose robotics API that has been extended to support drone integration: <ul><li>Концептуально не так добре оптимізований для безпілотників</li><li>Значний час навчання</li></ul></li><li>Багато готових бібліотек: корисно для повторного використання коду.</li><li>Підтримуються бібліотеки C++ та Python</li><li>Працює на Linux</li><li>ROS 2 - остання версія, яка підключається через DDS. <ul><li>Інтерфейсний шар DDS дозволяє глибоку інтеграцію з будь-яким аспектом PX4, який виставляється як тема UORB (майже з усім).</li><li>Можна забезпечити значно нижчу затримку.</li><li>Все ще розробляється. На момент написання статті потрібне більш глибоке розуміння PX4, ніж ROS 1</li></ul></li><li>ROS 1 - це стара версія, яка може підключатися через MAVLink або через ROS 2. Користувачам рекомендується оновитися до ROS 2 для нових проектів.</li></ul></li></ul>',10),r=[o];function n(s,d,p,u,c,h){return e(),l("div",null,r)}const P=i(t,[["render",n]]);export{m as __pageData,P as default};
