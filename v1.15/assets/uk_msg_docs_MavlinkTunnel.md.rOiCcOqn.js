import{_ as s,c as i,o as a,ab as n}from"./chunks/framework.CUflZczI.js";const o=JSON.parse('{"title":"MavlinkTunnel (повідомлення UORB)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/msg_docs/MavlinkTunnel.md","filePath":"uk/msg_docs/MavlinkTunnel.md"}'),h={name:"uk/msg_docs/MavlinkTunnel.md"},t=n(`<h1 id="mavlinktunnel-повідомлення-uorb" tabindex="-1">MavlinkTunnel (повідомлення UORB) <a class="header-anchor" href="#mavlinktunnel-повідомлення-uorb" aria-label="Permalink to &quot;MavlinkTunnel (повідомлення UORB)&quot;">​</a></h1><p>MAV_TUNNEL_PAYLOAD_TYPE enum</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/MavlinkTunnel.msg" target="_blank" rel="noreferrer">вихідний файл</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># MAV_TUNNEL_PAYLOAD_TYPE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_UNKNOWN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                # Encoding of payload unknown</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # Registered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STorM32 gimbal controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 201</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # Registered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STorM32 gimbal controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 202</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # Registered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STorM32 gimbal controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 203</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # Registered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STorM32 gimbal controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED4 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 204</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # Registered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STorM32 gimbal controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED5 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 205</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # Registered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STorM32 gimbal controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED6 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 206</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # Registered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STorM32 gimbal controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED7 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 207</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # Registered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STorM32 gimbal controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED8 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 208</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # Registered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STorM32 gimbal controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED9 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 209</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # Registered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> STorM32 gimbal controller</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp         # Time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint16 payload_type      # A code that identifies the content of the </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">payload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> for</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, which is the </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">). Якщо цей код менший за </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32768</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, це «зареєстрований» тип корисного навантаження, і відповідний код слід додати до переліку MAV_TUNNEL_PAYLOAD_TYPE. Розробники програмного забезпечення можуть реєструвати блоки типів за потребою. Коди, більші за </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32767</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, вважаються локальними експериментами і не повинні перевірятися у будь</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">якій широко розповсюдженій кодовій базі.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 target_system      # System </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (can be </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> for</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> broadcast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, but this is </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">discouraged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 target_component   # Component </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (can be </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> for</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> broadcast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, but this is </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">discouraged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 payload_length     # Length of the data transported in payload</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">uint8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] payload       # Data itself</span></span></code></pre></div>`,4),k=[t];function l(p,E,e,r,d,g){return a(),i("div",null,k)}const _=s(h,[["render",l]]);export{o as __pageData,_ as default};
