import{_ as t,c as e,o as a,ab as l}from"./chunks/framework.CUflZczI.js";const m=JSON.parse('{"title":"Налаштування середовища розробника (Інструментарію)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/dev_setup/dev_env.md","filePath":"uk/dev_setup/dev_env.md"}'),r={name:"uk/dev_setup/dev_env.md"},n=l('<h1 id="налаштування-середовища-розробника-інструментарію" tabindex="-1">Налаштування середовища розробника (Інструментарію) <a class="header-anchor" href="#налаштування-середовища-розробника-інструментарію" aria-label="Permalink to &quot;Налаштування середовища розробника (Інструментарію)&quot;">​</a></h1><p><em>Платформи що підтримуються</em> для розробки з PX4:</p><ul><li><a href="./../dev_setup/dev_env_linux_ubuntu.html">Ubuntu Linux (22.04/20.04/18.04)</a> — Recommended</li><li><a href="./../dev_setup/dev_env_windows_wsl.html">Windows (10/11)</a> — via WSL2</li><li><a href="./../dev_setup/dev_env_mac.html">Mac OS</a></li></ul><h2 id="цільові-платформи-що-підтримуються" tabindex="-1">Цільові платформи що підтримуються <a class="header-anchor" href="#цільові-платформи-що-підтримуються" aria-label="Permalink to &quot;Цільові платформи що підтримуються&quot;">​</a></h2><p>Таблиця нижче показує, які цільові платформи PX4 можна побудувати на кожній ОС.</p><table><thead><tr><th>Цільова платформа</th><th style="text-align:center;">Linux (Ubuntu)</th><th style="text-align:center;">Mac</th><th style="text-align:center;">Windows</th></tr></thead><tbody><tr><td><strong>Апаратне забезпечення на базі NuttX:</strong> <a href="./../flight_controller/pixhawk_series.html">Pixhawk Series</a>, <a href="./../complete_vehicles_mc/crazyflie2.html">Crazyflie</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td></tr><tr><td><strong>Апаратне забезпечення на базі Linux:</strong> <a href="./../flight_controller/raspberry_pi_navio2.html">Raspberry Pi 2/3</a></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td><strong>Симуляція:</strong> <a href="./../sim_gazebo_gz/README.html">Gazebo SITL</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td></tr><tr><td><strong>Симуляція:</strong> <a href="./../sim_gazebo_classic/README.html">Gazebo Classic SITL</a></td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td><td style="text-align:center;">✓</td></tr><tr><td><strong>Симуляція:</strong> <a href="./../simulation/ros_interface.html">ROS з Gazebo Classic</a></td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:center;">✓</td></tr><tr><td><strong>Симуляція:</strong> ROS 2 із Gazebo</td><td style="text-align:center;">✓</td><td style="text-align:center;"></td><td style="text-align:center;">✓</td></tr></tbody></table><p>Досвідчені користувачі Docker можуть робити збірки за допомогою контейнерів, які використовуються в нашій системі безперервної інтеграції : <a href="./../test_and_ci/docker.html">Docker контейнери</a></p><h2 id="наступні-кроки" tabindex="-1">Наступні кроки <a class="header-anchor" href="#наступні-кроки" aria-label="Permalink to &quot;Наступні кроки&quot;">​</a></h2><p>Після того, як ви закінчите налаштування одного з інструментаріїв вище:</p><ul><li>Встановіть <a href="./../dev_setup/vscode.html">VSCode</a> (якщо ви надаєте перевагу IDE ніж командному рядку).</li><li>Install the <a href="./../dev_setup/qgc_daily_build.html">QGroundControl Daily Build</a></li><li>Продовжуйте <a href="./../dev_setup/building_px4.html">збірку програмного забезпечення PX4</a>.</li></ul>',10),d=[n];function i(s,o,c,_,h,u){return a(),e("div",null,d)}const p=t(r,[["render",i]]);export{m as __pageData,p as default};
