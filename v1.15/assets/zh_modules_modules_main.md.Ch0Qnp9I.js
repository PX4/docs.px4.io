import{_ as e,c as a,o as t,ab as o}from"./chunks/framework.CUflZczI.js";const _=JSON.parse('{"title":"模块 & 命令 参考","description":"","frontmatter":{},"headers":[],"relativePath":"zh/modules/modules_main.md","filePath":"zh/modules/modules_main.md"}'),l={name:"zh/modules/modules_main.md"},i=o('<h1 id="模块-命令-参考" tabindex="-1">模块 &amp; 命令 参考 <a class="header-anchor" href="#模块-命令-参考" aria-label="Permalink to &quot;模块 &amp; 命令 参考&quot;">​</a></h1><p>以下页面介绍了 PX4 模块， 驱动和命令。 They describe the provided functionality, high-level implementation overview and how to use the command-line interface.</p><div class="info custom-block"><p class="custom-block-title"><strong>This is auto-generated from the source code</strong> and contains the most recent modules documentation.</p></div><p>它不是一个完整的列表，NuttX提供了一些其他命令（例如<code>free</code>）。 在控制台使用 <code>help</code> 获取所有的可用命令，大部分情况下使用 <code>command help</code> 可以在控制台上打印出该命令的使用方法。</p><p>Since this is generated from source, errors must be reported/fixed in the <a href="https://github.com/PX4/Firmware" target="_blank" rel="noreferrer">Firmware</a> repository. The documentation pages can be generated by running the following command from the root of the Firmware directory: 文档页可以在固件目录的根目录下运行如下命令生成：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>make module_documentation</span></span></code></pre></div><p>生成的文件将被写入 <code>modules</code> 目录。</p><h2 id="分类" tabindex="-1">分类 <a class="header-anchor" href="#分类" aria-label="Permalink to &quot;分类&quot;">​</a></h2><ul><li><a href="./modules_autotune.html">命令</a></li><li><a href="./modules_command.html">通信</a></li><li><a href="./modules_communication.html">控制器</a></li><li><a href="./modules_controller.html">驱动</a></li><li><a href="./modules_driver.html">估计器</a></li><li><a href="./modules_estimator.html">仿真</a></li><li><a href="./modules_simulation.html">系统</a></li><li><a href="./modules_system.html">模板</a></li><li><a href="./modules_template.html">Template</a></li></ul>',9),s=[i];function r(n,m,d,c,h,u){return t(),a("div",null,s)}const f=e(l,[["render",r]]);export{_ as __pageData,f as default};
