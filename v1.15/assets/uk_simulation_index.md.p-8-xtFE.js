import{_ as s,a}from"./chunks/px4_sitl_overview.B9_FbbL5.js";import{_ as i,c as e,o as t,ab as l}from"./chunks/framework.CUflZczI.js";const _=JSON.parse('{"title":"Симулятор","description":"","frontmatter":{},"headers":[],"relativePath":"uk/simulation/index.md","filePath":"uk/simulation/index.md"}'),n={name:"uk/simulation/index.md"},o=l('<h1 id="симулятор" tabindex="-1">Симулятор <a class="header-anchor" href="#симулятор" aria-label="Permalink to &quot;Симулятор&quot;">​</a></h1><p>Симулятори дозволяють польотному коду PX4 керувати комп&#39;ютерно змодельованим апаратом у змодельованому &quot;світі&quot;. Ви можете взаємодіяти з цим апаратом так само, як і зі справжнім, використовуючи <em>QGroundControl</em>, позабортовий API або радіоконтролер/ігровий пульт.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Симуляція - це швидкий, простий, а головне, <em>безпечний</em> спосіб протестувати зміни в коді PX4 перед тим, як спробувати літати в реальному світі. Це також хороший спосіб почати літати з PX4, якщо у вас ще немає апарату для експериментів.</p></div><p>PX4 підтримує як симуляцію <em>Software In the Loop (SITL)</em>, де польотний стек працює на комп&#39;ютері (або на тому ж комп&#39;ютері, або на іншому комп&#39;ютері в тій же мережі), так і симуляцію <em>Hardware In the Loop (HITL)</em> з використанням симуляційної прошивки на реальній платі польотного контролера.</p><p>Інформація про доступні тренажери та способи їх налаштування наведена в наступному розділі. Інші розділи надають загальну інформацію про те, як працює симулятор, і не є обов&#39;язковими для <em>використання</em> симуляторів.</p><h2 id="підтримувані-симулятори" tabindex="-1">Підтримувані симулятори <a class="header-anchor" href="#підтримувані-симулятори" aria-label="Permalink to &quot;Підтримувані симулятори&quot;">​</a></h2><p>Наступні симулятори підтримуються основною командою розробників PX4.</p><table><thead><tr><th>Симулятор</th><th>Опис</th></tr></thead><tbody><tr><td><a href="./../sim_gazebo_gz/">Gazebo</a></td><td><p><strong>Ми дуже рекомендуємо цей тренажер.</strong></p><p>Gazebo supersedes <a href="./../sim_gazebo_classic/README.html">Gazebo Classic</a>, з більш досконалими моделями рендерингу, фізики та сенсорів. Це єдина версія Gazebo, доступна з Ubuntu Linux 22.04.</p><p>Потужне середовище 3D-симуляції, яке особливо підходить для тестування обходу перешкод та комп&#39;ютерного зору. Він також може бути використаний для <a href="./../simulation/multi-vehicle-simulation.html">multi-vehicle simulation</a> і зазвичай використовується з <a href="./../simulation/ros_interface.html">ROS</a>, набором інструментів для автоматизації керування апаратами. </p><p><strong> Підтримувані апарати:</strong> Quad, Standard VTOL, Літак</p></td></tr><tr><td><a href="./../sim_gazebo_classic/">Gazebo Classic</a></td><td><p><strong>Ми дуже рекомендуємо цей тренажер.</strong></p><p>Потужне середовище 3D-симуляції, яке особливо підходить для тестування обходу перешкод та комп&#39;ютерного зору. Він також може бути використаний для <a href="./../simulation/multi-vehicle-simulation.html">multi-vehicle simulation</a> і зазвичай використовується з <a href="./../simulation/ros_interface.html">ROS</a>, набором інструментів для автоматизації керування апаратами.</p><p><strong>Підтримувані апарати:</strong> Quad (<a href="./../airframes/airframe_reference.html#copter_quadrotor_x_generic_quadcopter">Iris</a>, Hex (Typhoon H480), <a href="./../airframes/airframe_reference.html#vtol_standard_vtol_generic_standard_vtol">Generic Standard VTOL (QuadPlane)</a>, Tailsitter, Plane, Rover, Submarine </p></td></tr><tr><td><a href="./../sim_jmavsim/">jMAVSim</a></td><td>Простий мультироторний симулятор, який дозволяє літати на <em>коптерах</em> по симульованому світу. <p>Його легко налаштувати і можна використовувати для перевірки того, що ваш апарат може злітати, летіти, приземлятися і належним чином реагувати на різні несправності (наприклад, несправність GPS). Він також може бути використаний для [симуляції декількох апаратів] (../sim_jmavsim/multi_vehicle.md).</p><p><strong> Підтримувані апарати:</strong> Quad</p></td></tr></tbody></table><p>Існує також ряд <a href="./../simulation/community_supported_simulators.html">Тренажерів, що підтримуються спільнотою</a>.</p><hr><p>Решта цієї теми - це &quot;дещо загальний&quot; опис того, як працює інфраструктура симуляції. Це не обовʼязково для <em>використання</em> симуляторів.</p><h2 id="симулятор-mavlink-api" tabindex="-1">Симулятор MAVLink API <a class="header-anchor" href="#симулятор-mavlink-api" aria-label="Permalink to &quot;Симулятор MAVLink API&quot;">​</a></h2><p>Всі симулятори, крім Gazebo, взаємодіють з PX4 за допомогою API симулятора MAVLink. Цей API визначає набір повідомлень MAVLink, які передають дані датчиків з модельованого світу в PX4 і повертають значення двигуна і приводу з польотного коду, які будуть застосовані до модельованого апарату. На зображенні нижче показано потік повідомлень.</p><p><img src="'+s+'" alt="Симулятор MAVLink API"></p><div class="info custom-block"><p class="custom-block-title">SITL-збірка PX4 використовує <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/simulation/simulator_mavlink/SimulatorMavlink.cpp" target="_blank" rel="noreferrer">SimulatorMavlink.cpp</a> для обробки цих повідомлень, тоді як апаратна збірка у режимі HIL використовує <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mavlink/mavlink_receiver.cpp" target="_blank" rel="noreferrer">mavlink_receiver.cpp</a>. Дані датчиків з симулятора записуються в теми PX4 uORB. Всі двигуни/приводи заблоковані, але внутрішнє програмне забезпечення повністю функціонує.</p></div><p>Повідомлення описані нижче (див. посилання для більш детальної інформації).</p><table><thead><tr><th>Повідомлення</th><th>Напрямок</th><th>Опис</th></tr></thead><tbody><tr><td><a href="https://mavlink.io/en/messages/common.html#MAV_MODE_FLAG_HIL_ENABLED" target="_blank" rel="noreferrer">MAV_MODE:MAV_MODE_FLAG_HIL_ENABLED</a></td><td>NA</td><td>Прапорець режиму при використанні симуляції. Всі двигуни/приводи заблоковані, але внутрішнє програмне забезпечення повністю функціонує.</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_ACTUATOR_CONTROLS" target="_blank" rel="noreferrer">HIL_ACTUATOR_CONTROLS</a></td><td>PX4 -&gt; Sim</td><td>Виходи керування PX4 (до двигунів, приводів).</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_SENSOR" target="_blank" rel="noreferrer">HIL_SENSOR</a></td><td>Sim -&gt; PX4</td><td>Імітація показань IMU в одиницях СІ в рамі корпусу NED.</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_GPS" target="_blank" rel="noreferrer">HIL_GPS</a></td><td>Sim -&gt; PX4</td><td>Симульоване значення датчика GPS RAW.</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_OPTICAL_FLOW" target="_blank" rel="noreferrer">HIL_OPTICAL_FLOW</a></td><td>Sim -&gt; PX4</td><td>Імітація оптичного потоку від датчика потоку (наприклад, PX4FLOW або датчика оптичної миші)</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_STATE_QUATERNION" target="_blank" rel="noreferrer">HIL_STATE_QUATERNION</a></td><td>Sim -&gt; PX4</td><td>Містить фактичне &quot;змодельоване&quot; положення апарату, орієнтацію, швидкість і т.д. Це може бути записано в журнал і співставлено з оцінками PX4 для аналізу і діагностики (наприклад, перевірка того, наскільки добре оцінювач працює для зашумлених (імітованих) вхідних сигналів датчика).</td></tr><tr><td><a href="https://mavlink.io/en/messages/common.html#HIL_RC_INPUTS_RAW" target="_blank" rel="noreferrer">HIL_RC_INPUTS_RAW</a></td><td>Sim -&gt; PX4</td><td>Отримані RAW-значення каналів РК.</td></tr></tbody></table><p>Безпосереднє використання PX4 <a href="https://gazebosim.org/docs" target="_blank" rel="noreferrer">Gazebo API</a> для взаємодії з <a href="./../sim_gazebo_gz/README.html">Gazebo</a> і MAVlink не потрібно.</p><h2 id="порти-udp-px4-mavlink-за-замовчуванням" tabindex="-1">Порти UDP PX4 MAVLink за замовчуванням <a class="header-anchor" href="#порти-udp-px4-mavlink-за-замовчуванням" aria-label="Permalink to &quot;Порти UDP PX4 MAVLink за замовчуванням&quot;">​</a></h2><p>За замовчуванням PX4 використовує загальноприйняті порти UDP для зв&#39;язку MAVLink з наземними станціями управління (наприклад, <em>QGroundControl</em>), позабортовими API (наприклад, MAVSDK, MAVROS) і API симуляторів (наприклад, Gazebo). Ці порти:</p><ul><li>Віддалений UDP-порт PX4 <strong>14550</strong> використовується для зв&#39;язку з наземними станціями управління. Очікується, що GCS прослуховуватиме з&#39;єднання на цьому порту. <em>QGroundControl</em> слухає цей порт за замовчуванням.</li><li>Віддалений UDP-порт PX4 <strong>14540</strong> використовується для зв&#39;язку з зовнішніми API. Очікується, що зовнішні API будуть чекати на з&#39;єднання через цей порт. :::info Для симуляції декількох апаратів використовується окремий віддалений порт для кожного екземпляра, виділений послідовно від <code>14540</code> до <code>14549</code> (додаткові екземпляри використовують порт <code>14549</code>). :::</li><li>Для зв&#39;язку з PX4 використовується локальний TCP-порт симулятора <strong>4560</strong>. Симулятор слухає цей порт, і PX4 ініціює TCP-з&#39;єднання з ним.</li></ul><div class="info custom-block"><p class="custom-block-title">Порти для GCS, зовнішніх API та симулятора визначаються скриптами запуску. Щоб дізнатися більше, див. розділ <a href="./../concept/system_startup.html">Запуск системи</a>.</p></div><h2 id="середовище-симуляціі-sitl" tabindex="-1">Середовище симуляції SITL <a class="header-anchor" href="#середовище-симуляціі-sitl" aria-label="Permalink to &quot;Середовище симуляції SITL&quot;">​</a></h2><p>На схемі нижче показано типове середовище симуляції SITL для будь-якого з підтримуваних тренажерів, що використовують MAVLink (тобто всіх, окрім Gazebo).</p><p><img src="'+a+`" alt="Огляд PX4 SITL"></p><p>Різні частини системи з&#39;єднуються через протокол UDP і можуть працювати як на одному комп&#39;ютері, так і на іншому комп&#39;ютері в тій самій мережі.</p><ul><li><p>PX4 використовує спеціальний модуль для підключення до локального TCP-порту 4560 симулятора. Потім симулятори обмінюються інформацією з PX4 за допомогою <a href="#simulator-mavlink-api">Симулятор MAVLink API</a>, описаного вище. PX4 на SITL і симулятор можуть працювати як на одному комп&#39;ютері, так і на різних комп&#39;ютерах в одній мережі.</p><div class="info custom-block"><p class="custom-block-title">Симулятори також можуть використовувати міст <em>uxrce-dds</em> (<a href="./../middleware/uxrce_dds.html">XRCE-DDS</a>) для безпосередньої взаємодії з PX4 (тобто через <a href="./../middleware/uorb.html">UORB topics</a>, а не MAVLink). Цей підхід <em>може</em> використовуватися Gazebo Classic для моделювання <a href="./../sim_gazebo_classic/multi_vehicle_simulation.html#build-and-test-xrce-dds">кількох апаратів</a>.</p></div></li></ul><p>:::</p><ul><li>PX4 використовує звичайний модуль MAVLink для підключення до наземних станцій і зовнішніх API розробників, таких як MAVSDK або ROS <ul><li>Наземні станції слухають віддалений UDP-порт PX4: <code>14550</code></li><li>Зовнішні API розробника слухають віддалений UDP-порт PX4: <code>14540</code>. Для симуляції декількох апаратів PX4 послідовно виділяє окремий віддалений порт для кожного екземпляра від <code>14540</code> до <code>14549</code> (додаткові екземпляри використовують порт <code>14549</code>).</li></ul></li><li>PX4 визначає ряд <em>локальних</em> UDP-портів (<code>14580</code>,<code>18570</code>), які іноді використовуються при роботі в мережі з PX4, запущеним у контейнері або віртуальній машині. Вони не рекомендуються для &quot;загального&quot; використання і можуть змінюватися в майбутньому.</li><li>Послідовне з&#39;єднання можна використовувати для підключення <a href="./../config/joystick.html">джойстика/геймпада</a> через <em>QGroundControl</em>.</li></ul><p>Якщо ви використовуєте звичайну систему побудови SITL <code>для створення</code> конфігураційних цілей (див. наступний розділ), то і SITL, і симулятор будуть запущені на одному комп&#39;ютері, і наведені вище порти будуть автоматично налаштовані. Ви можете налаштувати додаткові UDP-з&#39;єднання MAVLink та іншим чином змінити середовище моделювання у файлах конфігурації та ініціалізації збірки.</p><h3 id="запуск-створення-симуляціі-sitl" tabindex="-1">Запуск/створення симуляції SITL <a class="header-anchor" href="#запуск-створення-симуляціі-sitl" aria-label="Permalink to &quot;Запуск/створення симуляції SITL&quot;">​</a></h3><p>Система збірки дозволяє дуже легко зібрати і запустити PX4 на SITL, активувати симулятор і з&#39;єднати їх. Синтаксис (спрощений) виглядає наступним чином:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> simulator[_vehicle-model]</span></span></code></pre></div><p>де <code>simulator</code> - це <code>gz</code> (для Gazebo), <code>gazebo-classic</code>, <code>jmavsim</code> або інший симулятор, а vehicle-model - це конкретний тип транспортного засобу, який підтримується цим симулятором (<a href="./../sim_gazebo_gz/README.html">Gazebo</a> та <a href="./../sim_jmavsim/README.html">jMAVSim</a> на момент написання статті підтримують лише мультикоптери, тоді як <a href="./../sim_gazebo_classic/README.html">Gazebo Classic</a> підтримує багато різних типів).</p><p>Нижче наведено кілька прикладів, і їх набагато більше на окремих сторінках для кожного з симуляторів:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start Gazebo with the x500 multicopter</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz_x500</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start Gazebo Classic with plane</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_plane</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start Gazebo Classic with iris and optical flow</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_opt_flow</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start JMavSim with iris (default vehicle model)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start PX4 with no simulator (i.e. to use your own &quot;custom&quot; simulator)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> none_iris</span></span></code></pre></div><p>Симуляцію можна додатково налаштувати за допомогою змінних середовища:</p><ul><li><code>PX4_ESTIMATOR</code>: Ця змінна визначає, який естіматор використовувати. Можливі варіанти: <code>ekf2</code> (за замовчуванням), <code>lpe</code> (застаріла). Його можна встановити через <code>export PX4_ESTIMATOR=lpe</code> перед запуском симуляції.</li></ul><p>Описаний тут синтаксис є спрощеним, і існує багато інших опцій, які можна налаштувати за допомогою <em>make</em> - наприклад, вказати, що ви бажаєте під&#39;єднатися до IDE або дебаггера. Для отримання додаткової інформації дивіться: <a href="./../dev_setup/building_px4.html#px4-make-build-targets">Збірка коду &gt; PX4 Make Build Targets</a>.</p><p><a id="simulation_speed"></a></p><h3 id="запуск-симуляціі-швидше-ніж-у-реальному-часі" tabindex="-1">Запуск симуляції швидше, ніж у реальному часі <a class="header-anchor" href="#запуск-симуляціі-швидше-ніж-у-реальному-часі" aria-label="Permalink to &quot;Запуск симуляції швидше, ніж у реальному часі&quot;">​</a></h3><p>SITL можна запустити швидше або повільніше, ніж у реальному часі, використовуючи jMAVSim або Gazebo Classic.</p><p>Коефіцієнт швидкості задається за допомогою змінної оточення <code>PX4_SIM_SPEED_FACTOR</code>. Наприклад, запустити симуляцію jMAVSim зі швидкістю у 2 рази більшою за швидкість реального часу:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_SIM_SPEED_FACTOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><p>Запустити в половину реального часу:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_SIM_SPEED_FACTOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><p>Ви можете застосувати коефіцієнт до всіх запусків SITL у поточній сесії за допомогою <code>EXPORT</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_SIM_SPEED_FACTOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>У певний момент введення-виведення або процесор обмежать швидкість, яка можлива на вашому комп&#39;ютері, і він буде сповільнюватися &quot;автоматично&quot;. Потужні комп&#39;ютери зазвичай можуть запускати симуляцію зі швидкістю близько 6-10 разів, для ноутбуків досягається швидкість близько 3-4 разів.</p></div><div class="info custom-block"><p class="custom-block-title">Щоб уникнути виявлення PX4 тайм-аутів каналу передачі даних, збільште значення параметра <a href="./../advanced_config/parameter_reference.html#COM_DL_LOSS_T">COM_DL_LOSS_T</a> пропорційно до швидкості моделювання. Наприклад, якщо <code>COM_DL_LOSS_T</code> дорівнює 10 в реальному часі, при 10-кратному моделюванні швидкість збільшиться до 100.</p></div><h3 id="симуляція-lockstep" tabindex="-1">Симуляція Lockstep <a class="header-anchor" href="#симуляція-lockstep" aria-label="Permalink to &quot;Симуляція Lockstep&quot;">​</a></h3><p>PX4 SITL і симулятори (jMAVSim або Gazebo Classic) налаштовані на роботу з кроком <em>lockstep</em>. Це означає, що PX4 і симулятор чекають один на одного для отримання повідомлень від датчиків і приводів, а не працюють зі своїми власними швидкостями.</p><div class="info custom-block"><p class="custom-block-title">Lockstep дозволяє <a href="#simulation_speed">запускати симуляцію швидше або повільніше, ніж у реальному часі</a>, а також призупиняти її для того, щоб переходити між елементами коду.</p></div><p>Послідовність кроків для lockstep наступна:</p><ol><li>Симуляція надсилає повідомлення датчика <a href="https://mavlink.io/en/messages/common.html#HIL_SENSOR" target="_blank" rel="noreferrer">HIL_SENSOR</a> з міткою часу <code>time_usec</code> для оновлення стану та часу датчика PX4.</li><li>PX4 отримує це повідомлення, виконує одну ітерацію оцінювання стану, керування тощо і врешті-решт надсилає актуатору повідомлення <a href="https://mavlink.io/en/messages/common.html#HIL_ACTUATOR_CONTROLS" target="_blank" rel="noreferrer">HIL_ACTUATOR_CONTROLS</a>.</li><li>Симуляція чекає, поки не отримає повідомлення від приводу/двигуна, потім моделює фізику і обчислює наступне повідомлення від датчика, яке знову надсилається до PX4.</li></ol><p>Система починається з &quot;вільного ходу&quot;, під час якого симуляція надсилає повідомлення від датчиків, зокрема про час, і, таким чином, запускає PX4, доки він не ініціалізується і не надішле відповідне повідомлення від приводу.</p><h4 id="вимкнення-lockstep-симуляціі" tabindex="-1">Вимкнення Lockstep симуляції <a class="header-anchor" href="#вимкнення-lockstep-симуляціі" aria-label="Permalink to &quot;Вимкнення Lockstep симуляції&quot;">​</a></h4><p>Lockstep симуляцію можна вимкнути, якщо, наприклад, SITL потрібно використовувати з тренажером, який не підтримує цю функцію. У цьому випадку симулятор і PX4 використовують системний час хоста і не чекають один на одного.</p><p>Щоб вимкнути lockstep у PX4, виконайте <code>make px4_sitl_default boardconfig</code> і встановіть символ <code>BOARD_NOLOCKSTEP</code> &quot;Force disable lockstep&quot;, який знаходиться під панеллю інструментів.</p><p>Щоб вимкнути lockstep у Gazebo, відредагуйте <a href="https://github.com/PX4/PX4-SITL_gazebo-classic/blob/3062d287c322fabf1b41b8e33518eb449d4ac6ed/models/plane/plane.sdf#L449" target="_blank" rel="noreferrer">файл SDF моделі</a> і встановіть <code>&lt;enable_lockstep&gt;false&lt;/enable_lockstep&gt;</code>.</p><p>Щоб вимкнути lockstep у jMAVSim, видаліть <code>-l</code> у <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/Tools/simulation/jsbsim/sitl_run.sh#L40" target="_blank" rel="noreferrer">sitl_run.sh</a> або іншим чином переконайтеся, що java-двійник запускається без прапора <code>-lockstep</code>.</p><h3 id="сценаріі-запуску" tabindex="-1">Сценарії запуску <a class="header-anchor" href="#сценаріі-запуску" aria-label="Permalink to &quot;Сценарії запуску&quot;">​</a></h3><p>Scripts are used to control which parameter settings to use or which modules to start. Вони знаходяться у каталозі <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/ROMFS/px4fmu_common/init.d-posix" target="_blank" rel="noreferrer">ROMFS/px4fmu_common/init.d-posix</a>, файл <code>rcS</code> є основною точкою входу. Докладнішу інформацію наведено у розділі <a href="./../concept/system_startup.html">Запуск системи</a>.</p><h3 id="імітація-збоів-та-відмов-датчиків-обладнання" tabindex="-1">Імітація збоїв та відмов датчиків/обладнання <a class="header-anchor" href="#імітація-збоів-та-відмов-датчиків-обладнання" aria-label="Permalink to &quot;Імітація збоїв та відмов датчиків/обладнання&quot;">​</a></h3><p><a href="./../simulation/failsafes.html">Імітація збоїв</a> пояснює, як викликати збої безпеки, такі як відмова GPS і розряд акумулятора.</p><h2 id="середовище-симуляціі-hitl" tabindex="-1">Середовище симуляції HITL <a class="header-anchor" href="#середовище-симуляціі-hitl" aria-label="Permalink to &quot;Середовище симуляції HITL&quot;">​</a></h2><p>За допомогою симуляції Hardware-in-the-Loop (HITL) звичайна прошивка PX4 запускається на реальному обладнанні. Середовище моделювання HITL задокументовано: <a href="./../simulation/hitl.html">HITL симуляція</a>.</p><h2 id="інтеграція-джоистиків-геимпада" tabindex="-1">Інтеграція джойстиків/геймпада <a class="header-anchor" href="#інтеграція-джоистиків-геимпада" aria-label="Permalink to &quot;Інтеграція джойстиків/геймпада&quot;">​</a></h2><p><em>QGroundControl</em> для ПК може підключатися до USB-джойстика/геймпада і надсилати команди руху та натискання кнопок на PX4 через MAVLink. Це працює як на SITL, так і на HITL симуляціях, і дозволяє вам безпосередньо керувати симульованим апаратом. Якщо у вас немає джойстика, ви можете керувати апаратом за допомогою екранних віртуальних паличок QGroundControl.</p><p>Для отримання інформації про налаштування див. <em>Посібник користувача QGroundControl</em>:</p><ul><li><a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/setup_view/joystick.html" target="_blank" rel="noreferrer">Налаштування пульта</a></li><li><a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/settings_view/virtual_joystick.html" target="_blank" rel="noreferrer">Віртуальний джойстик</a></li></ul><h2 id="симуляція-камери" tabindex="-1">Симуляція камери <a class="header-anchor" href="#симуляція-камери" aria-label="Permalink to &quot;Симуляція камери&quot;">​</a></h2><p>PX4 підтримує захоплення як нерухомих зображень, так і відео з симулятора <a href="./../sim_gazebo_classic/README.html">Gazebo Classic</a>. Це можна ввімкнути/налаштувати, як описано в розділі <a href="./../sim_gazebo_classic/README.html#video-streaming">Gazebo Glassic &gt; Потокове відео</a>.</p><p>Симуляція камери - це класичний gazebo плагін, який реалізує <a href="https://mavlink.io/en/protocol/camera.html" target="_blank" rel="noreferrer">MAVLink Camera Protocol</a>. . PX4 з&#39;єднується/інтегрується з цією камерою <em>точно так само</em>, як і з будь-якою іншою камерою MAVLink:</p><ol><li><p><a href="./../advanced_config/parameter_reference.html#TRIG_INTERFACE">TRIG_INTERFACE</a> має бути встановлено у <code>3</code>, щоб налаштувати драйвер тригера камери для використання з камерою MAVLink :::tip У цьому режимі драйвер просто надсилає повідомлення <a href="https://mavlink.io/en/messages/common.html#CAMERA_TRIGGER" target="_blank" rel="noreferrer">CAMERA_TRIGGER</a> щоразу, коли запитується захоплення зображення. Для отримання додаткової інформації див. <a href="./../camera/fc_connected_camera.html">Камери, підключені до виходів контролера польоту</a>. :::</p></li><li><p>PX4 повинен перенаправляти всі команди камери між GCS і (симулятором) MAVLink Camera. Ви можете зробити це, запустивши <a href="./../modules/modules_communication.html#mavlink">MAVLink</a> з прапором <code>-f</code>, як показано на малюнку, вказавши UDP-порти для нового з&#39;єднання.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14558</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14530</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> camera</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p></div></li></ol><p>Повідомлення MAVLink пересилатимуться не лише на камеру, але камера ігноруватиме ті, які вона вважає неважливими. :::</p><p>Інші симулятори можуть використовувати такий самий підхід для реалізації підтримки камери.</p><h2 id="запуск-симуляціі-на-віддаленому-сервері" tabindex="-1">Запуск симуляції на віддаленому сервері <a class="header-anchor" href="#запуск-симуляціі-на-віддаленому-сервері" aria-label="Permalink to &quot;Запуск симуляції на віддаленому сервері&quot;">​</a></h2><p>Симулятор можна запустити на одному комп&#39;ютері, а доступ до нього отримати з іншого комп&#39;ютера в тій же мережі (або в іншій мережі з відповідною маршрутизацією). Це може бути корисно, наприклад, якщо ви хочете протестувати програму для безпілотника, що працює на реальному комп&#39;ютері-компаньйоні на фоні змодельованого транспортного засобу.</p><p>Це не працює &quot;з коробки&quot;, оскільки PX4 за замовчуванням не маршрутизує пакети на зовнішні інтерфейси (щоб уникнути спаму в мережі та втручання різних симуляцій одна в одну). Замість цього він спрямовує трафік всередину - на &quot;localhost&quot;.</p><p>Існує декілька способів зробити UDP-пакети доступними на зовнішніх інтерфейсах, як описано нижче.</p><h3 id="використання-mavlink-router" tabindex="-1">Використання MAVLink Router <a class="header-anchor" href="#використання-mavlink-router" aria-label="Permalink to &quot;Використання MAVLink Router&quot;">​</a></h3><p><a href="https://github.com/mavlink-router/mavlink-router" target="_blank" rel="noreferrer">Mavlink-router</a> можна використовувати для маршрутизації пакетів з localhost на зовнішній інтерфейс.</p><p>Ви можете маршрутизувати пакети між SITL, запущеним на одному комп&#39;ютері (що надсилає трафік MAVLink на localhost через UDP-порт 14550), і QGC, запущеним на іншому комп&#39;ютері (наприклад, за адресою <code>10.73.41.30</code>):</p><ul><li><p>Запустіть <em>mavlink-router</em> за допомогою наступної команди:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavlink-routerd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10.73.41.30:14550</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 127.0.0.1:14550</span></span></code></pre></div></li><li><p>Використовуйте конфігураційний файл <em>mavlink-router</em>.</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[UdpEndpoint QGC]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = Normal</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 10.73.41.30</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 14550</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[UdpEndpoint SIM]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = Eavesdropping</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 14550</span></span></code></pre></div></li></ul><div class="info custom-block"><p class="custom-block-title">Більш детальну інформацію про конфігурацію <em>mavlink-router</em> можна знайти <a href="https://github.com/mavlink-router/mavlink-router#running" target="_blank" rel="noreferrer">тут</a>.</p></div><h3 id="увімкнення-трансляціі-udp" tabindex="-1">Увімкнення трансляції UDP <a class="header-anchor" href="#увімкнення-трансляціі-udp" aria-label="Permalink to &quot;Увімкнення трансляції UDP&quot;">​</a></h3><p><a href="./../modules/modules_communication.html#mavlink_usage">Mavlink module</a> за замовчуванням маршрутизує до <em>localhost</em>, але ви можете увімкнути UDP-трансляцію за допомогою його опції <code>-p</code>. Будь-який віддалений комп&#39;ютер у мережі може підключитися до симулятора, прослуховуючи відповідний порт (наприклад, 14550 для <em>QGroundControl</em>).</p><div class="info custom-block"><p class="custom-block-title">UDP-трансляція забезпечує простий спосіб встановлення з&#39;єднання, коли в мережі працює лише одна симуляція. Не використовуйте цей підхід, якщо у мережі запущено декілька симуляцій (ви можете замість цього <a href="#enable-streaming-to-specific-address">publish to a specific address</a>).</p></div><p>Це слід зробити у відповідному конфігураційному файлі, де викликається <code>mavlink start</code>. Наприклад: <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink" target="_blank" rel="noreferrer">/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink</a>.</p><h3 id="увімкнення-стрімінгу-на-певну-адресу" tabindex="-1">Увімкнення стрімінгу на певну адресу <a class="header-anchor" href="#увімкнення-стрімінгу-на-певну-адресу" aria-label="Permalink to &quot;Увімкнення стрімінгу на певну адресу&quot;">​</a></h3><p><a href="./../modules/modules_communication.html#mavlink_usage">Mavlink module</a> за замовчуванням спрямовує на <em>localhost</em>, але ви можете вказати зовнішню IP-адресу для потокового передавання за допомогою його параметра <code>-t</code>. Вказаний віддалений комп&#39;ютер може підключитися до симулятора, прослуховуючи відповідний порт (наприклад, 14550 для <em>QGroundControl</em>).</p><p>Це слід зробити у різних конфігураційних файлах, де викликається <code>mavlink start</code>. Наприклад: <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink" target="_blank" rel="noreferrer">/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink</a>.</p><h3 id="тунелювання-по-ssh" tabindex="-1">Тунелювання по SSH <a class="header-anchor" href="#тунелювання-по-ssh" aria-label="Permalink to &quot;Тунелювання по SSH&quot;">​</a></h3><p>Тунелювання SSH є гнучким варіантом, оскільки комп&#39;ютер для моделювання та система, що його використовує, не обов&#39;язково повинні знаходитися в одній мережі.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Ви також можете використовувати VPN для створення тунелю до зовнішнього інтерфейсу (в тій самій або іншій мережі).</p></div><p>Одним із способів створення тунелю є використання параметрів тунелювання SSH. Сам тунель можна створити, виконавши наступну команду на <em>localhost</em>, де <code>remote.local</code> - ім&#39;я віддаленого комп&#39;ютера:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14551:localhost:14551</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote.local</span></span></code></pre></div><p>UDP-пакети потрібно перетворити на TCP-пакети, щоб їх можна було перенаправляти через SSH. За допомогою утиліти <a href="https://en.wikipedia.org/wiki/Netcat" target="_blank" rel="noreferrer">netcat</a> можна працювати по обидва боки тунелю - спочатку для перетворення пакетів з UDP в TCP, а потім назад в UDP на іншому кінці.</p><div class="tip custom-block"><p class="custom-block-title">QGC</p><p>must be running before executing <em>netcat</em>.</p></div><p>На комп&#39;ютері <em>QGroundControl</em> трансляцію UDP-пакетів можна здійснити за допомогою наступних команд:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkfifo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/tcp2udp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netcat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lvp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14551</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/tcp2udp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> netcat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14550</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/tcp2udp</span></span></code></pre></div><p>Команда на стороні симулятора тунелю SSH:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkfifo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/udp2tcp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netcat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lvup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14550</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/udp2tcp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> netcat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14551</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/udp2tcp</span></span></code></pre></div><p>Номер порту <code>14550</code> дійсний для підключення до QGroundControl або іншої GCS, але повинен бути скоригований для інших кінцевих точок (наприклад, API розробника тощо).</p><p>Теоретично тунель може працювати нескінченно довго, але з&#39;єднання <em>netcat</em> доведеться перезапустити, якщо є якась проблема.</p><p>Скрипт <a href="https://raw.githubusercontent.com/ThunderFly-aerospace/sitl_gazebo/autogyro-sitl/scripts/QGC_remote_connect.bash" target="_blank" rel="noreferrer">QGC_remote_connect.bash</a> можна запустити на комп&#39;ютері QGC для автоматичного налаштування/запуску вищевказаних інструкцій. Симуляція вже має бути запущена на віддаленому сервері, і ви повинні мати доступ по SSH до цього сервера.</p>`,107),p=[o];function r(h,d,c,k,m,u){return t(),e("div",null,p)}const F=i(n,[["render",r]]);export{_ as __pageData,F as default};
