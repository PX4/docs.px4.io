import{_ as s}from"./chunks/SIH_diagram.BzKy1QSs.js";import{_ as l,E as o,c as n,J as t,m as e,a as i,ab as r,o as h}from"./chunks/framework.CUflZczI.js";const T=JSON.parse('{"title":"Simulation-In-Hardware (SIH)","description":"","frontmatter":{},"headers":[],"relativePath":"en/sim_sih/index.md","filePath":"en/sim_sih/index.md"}'),d={name:"en/sim_sih/index.md"},p=e("h1",{id:"simulation-in-hardware-sih",tabindex:"-1"},[i("Simulation-In-Hardware (SIH) "),e("a",{class:"header-anchor",href:"#simulation-in-hardware-sih","aria-label":'Permalink to "Simulation-In-Hardware (SIH)"'},"​")],-1),c=r('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This simulator is <a href="./../simulation/community_supported_simulators.html">community supported and maintained</a>. It may or may not work with current versions of PX4 (known to work in PX4 v1.14).</p><p>See <a href="./../dev_setup/dev_env.html">Toolchain Installation</a> for information about the environments and tools supported by the core development team.</p></div><p>Simulation-In-Hardware (SIH) is an alternative to <a href="./../simulation/hitl.html">Hardware In The Loop simulation (HITL)</a> for quadrotors, fixed-wing vehicles (airplane), and VTOL tailsitters.</p><p>SIH can be used by new PX4 users to get familiar with PX4 and the different modes and features, and of course to learn to fly a vehicle using an RC controller in simulation, which is not possible using SITL.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>With SIH the whole simulation is running on embedded hardware: the controller, the state estimator, and the simulator. The Desktop computer is only used to display the virtual vehicle.</p><p><img src="'+s+'" alt="Simulator MAVLink API"></p><h3 id="compatibility" tabindex="-1">Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;Compatibility&quot;">​</a></h3><ul><li>SIH is compatible with all PX4 supported boards except those based on FMUv2.</li><li>SIH for quadrotor is supported from PX4 v1.9.</li><li>SIH for fixed-wing (airplane) and VTOL tailsitter are supported from PX4 v1.13.</li><li>SIH as SITL (without hardware) from PX4 v1.14.</li></ul><h3 id="benefits" tabindex="-1">Benefits <a class="header-anchor" href="#benefits" aria-label="Permalink to &quot;Benefits&quot;">​</a></h3><p>SIH provides several benefits over HITL:</p><ul><li>It ensures synchronous timing by avoiding the bidirectional connection to the computer. As a result the user does not need such a powerful desktop computer.</li><li>The whole simulation remains inside the PX4 environment. Developers who are familiar with PX4 can more easily incorporate their own mathematical model into the simulator. They can, for instance, modify the aerodynamic model, or noise level of the sensors, or even add a sensor to be simulated.</li><li>The physical parameters representing the vehicle (such as mass, inertia, and maximum thrust force) can easily be modified from the <a href="./../advanced_config/parameter_reference.html#simulation-in-hardware">SIH parameters</a>.</li></ul><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>To run the SIH, you will need a:</p><ul><li><a href="./../flight_controller/">Flight controller</a>, such as a Pixhawk-series board</li><li><a href="./../getting_started/px4_basic_concepts.html#manual-control">Manual controller</a>: either a <a href="./../getting_started/rc_transmitter_receiver.html">radio control system</a> or a <a href="./../config/joystick.html">joystick</a>.</li><li>QGroundControl for flying the vehicle via GCS.</li><li>Development computer for visualizing the virtual vehicle (optional).</li></ul><p>From PX4 v1.14 you can run SIH &quot;as SITL&quot;, in which case a flight controller is not required.</p><h2 id="setting-up-sih" tabindex="-1">Setting up SIH <a class="header-anchor" href="#setting-up-sih" aria-label="Permalink to &quot;Setting up SIH&quot;">​</a></h2><p>To set up SIH</p><ol><li>Connect the flight controller to the desktop computer with a USB cable</li><li>Open QGroundControl and wait for the flight controller too boot and connect.</li><li>Open <a href="./../config/airframe.html">Vehicle Setup &gt; Airframe</a> then select the desired frame: <ul><li><a href="./../airframes/airframe_reference.html#copter_simulation_sih_quadcopter_x">SIH Quadcopter X</a></li><li><a href="./../airframes/airframe_reference.html#plane_simulation_sih_plane_aert">SIH plane AERT</a></li><li><a href="./../airframes/airframe_reference.html#vtol_simulation_sih_tailsitter_duo">SIH Tailsitter Duo</a></li></ul></li></ol><p>The autopilot will then reboot. Once restarted the <code>sih</code> module is started, and the vehicle should be displayed on the ground control station map.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The airplane needs to takeoff in manual mode at full throttle. Also, if the airplane crashes the state estimator might lose its fix.</p></div><h2 id="setting-up-the-display-optional" tabindex="-1">Setting up the Display (optional) <a class="header-anchor" href="#setting-up-the-display-optional" aria-label="Permalink to &quot;Setting up the Display (optional)&quot;">​</a></h2><p>The SIH can be displayed using <a href="./../sim_jmavsim/">jMAVSim</a> as a visualiser.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>SIH does not <em>need</em> a visualiser — you can connect with QGroundControl and fly the vehicle without one.</p></div><p>To display the simulated vehicle:</p><ol><li><p>Close <em>QGroundControl</em> (if open).</p></li><li><p>Unplug and replug the flight controller (allow a few seconds for it to boot).</p></li><li><p>Start jMAVSim by calling the script <strong>jmavsim_run.sh</strong> from a terminal:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Tools/simulation/jmavsim/jmavsim_run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/ttyACM0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2000000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span></span></code></pre></div><p>where the flags are:</p><ul><li><code>-q</code> to allow the communication to <em>QGroundControl</em> (optional).</li><li><code>-d</code> to start the serial device <code>/dev/ttyACM0</code> on Linux. On macOS this would be <code>/dev/tty.usbmodem1</code>.</li><li><code>-b</code> to set the serial baud rate to <code>2000000</code>.</li><li><code>-o</code> to start jMAVSim in <em>display Only</em> mode (i.e. the physical engine is turned off and jMAVSim only displays the trajectory given by the SIH in real-time).</li><li>add a flag <code>-a</code> to display an aircraft or &#39;-t&#39; to display a tailsitter. If this flag is not present a quadrotor will be displayed by default.</li></ul></li><li><p>After few seconds, <em>QGroundControl</em> can be opened again.</p></li></ol><p>At this point, the system can be armed and flown. The vehicle can be observed moving in jMAVSim, and on the QGC <em>Fly</em> view.</p><h2 id="running-the-sih-as-sitl-without-hardware" tabindex="-1">Running the SIH as SITL (without hardware) <a class="header-anchor" href="#running-the-sih-as-sitl-without-hardware" aria-label="Permalink to &quot;Running the SIH as SITL (without hardware)&quot;">​</a></h2><p>SIH can be run as SITL (Software-In-The-Loop) from v1.14. What this means is that the simulation code is executed on the laptop/computer, similar to Gazebo or jMAVSim. In this case you don&#39;t need the flight controller hardware.</p><p>To run SIH as SITL:</p><ol><li><p>Install the <a href="./../dev_setup/dev_env.html">PX4 Development toolchain</a>.</p></li><li><p>Run the appropriate make command for each vehicle type (at the root of the PX4-Autopilot repository):</p><ul><li><p>quadrotor:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sihsim_quadx</span></span></code></pre></div></li><li><p>Fixed-wing (plane):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sihsim_airplane</span></span></code></pre></div></li><li><p>XVert VTOL tailsitter:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sihsim_xvert</span></span></code></pre></div></li></ul></li></ol><p>SITL allows the simulation to be run faster than real time. To run the airplane simulation 10 times faster than real time, run the command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_SIM_SPEED_FACTOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sihsim_airplane</span></span></code></pre></div><p>To display the vehicle in jMAVSim during SITL mode, enter the following command in another terminal:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Tools/simulation/jmavsim/jmavsim_run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 19410</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span></span></code></pre></div><ul><li>add a flag <code>-a</code> to display an aircraft or <code>-t</code> to display a tailsitter. If this flag is not present a quadrotor will be displayed by default.</li></ul><h2 id="dynamic-model" tabindex="-1">Dynamic Model <a class="header-anchor" href="#dynamic-model" aria-label="Permalink to &quot;Dynamic Model&quot;">​</a></h2><p>The dynamic models for the various vehicles are:</p><ul><li>Quadrotor: <a href="https://github.com/PX4/PX4-user_guide/raw/v1.15/assets/simulation/SIH_dynamic_model.pdf" target="_blank" rel="noreferrer">pdf report</a>.</li><li>Fixed-wing: Inspired by the PhD thesis: &quot;Dynamics modeling of agile fixed-wing unmanned aerial vehicles.&quot; Khan, Waqas, supervised by Nahon, Meyer, McGill University, PhD thesis, 2016.</li><li>Tailsitter: Inspired by the master&#39;s thesis: &quot;Modeling and control of a flying wing tailsitter unmanned aerial vehicle.&quot; Chiappinelli, Romain, supervised by Nahon, Meyer, McGill University, Masters thesis, 2018.</li></ul><h2 id="video" tabindex="-1">Video <a class="header-anchor" href="#video" aria-label="Permalink to &quot;Video&quot;">​</a></h2>',39),m=e("p",null,[e("div",{class:"embed-responsive embed-responsive-16by9"},[e("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/PzIpSCRD8Jo",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),u=e("h2",{id:"credits",tabindex:"-1"},[i("Credits "),e("a",{class:"header-anchor",href:"#credits","aria-label":'Permalink to "Credits"'},"​")],-1),g=e("p",null,"SIH was originally developed by Coriolis g Corporation. The airplane model and tailsitter models were added by Altitude R&D inc. Both are Canadian companies:",-1),f=e("ul",null,[e("li",null,"Coriolis g developped a new type of Vertical Takeoff and Landing (VTOL) vehicles based on passive coupling systems;"),e("li",null,[e("a",{href:"https://www.altitude-rd.com/",target:"_blank",rel:"noreferrer"},"Altitude R&D"),i(" is specialized in dynamics, control, and real-time simulation (today relocated in Zurich).")])],-1),k=e("p",null,"The simulator is released for free under BSD license.",-1);function v(y,b,_,w,C,F){const a=o("Badge");return h(),n("div",null,[p,t(a,{type:"tip",text:"PX4 v1.9 (MC)"}),t(a,{type:"tip",text:"PX4 v1.13 (MC, VTOL, FW)"}),c,m,u,g,f,k])}const x=l(d,[["render",v]]);export{T as __pageData,x as default};
