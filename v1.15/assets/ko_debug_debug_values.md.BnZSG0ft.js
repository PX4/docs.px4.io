import{_ as s}from"./chunks/qgc-debugval-plot.Dk_nN63o.js";import{_ as i,c as a,o as n,ab as t}from"./chunks/framework.CUflZczI.js";const u=JSON.parse('{"title":"디버그 값 송수신","description":"","frontmatter":{},"headers":[],"relativePath":"ko/debug/debug_values.md","filePath":"ko/debug/debug_values.md"}'),l={name:"ko/debug/debug_values.md"},e=t(`<h1 id="디버그-값-송수신" tabindex="-1">디버그 값 송수신 <a class="header-anchor" href="#디버그-값-송수신" aria-label="Permalink to &quot;디버그 값 송수신&quot;">​</a></h1><p>소프트웨어 개발시에 개별 중요 숫자를 출력하는 경우가 종종 있습니다. 이 때가 보통 MAVLink 패킷이 들어올 때 <code>NAMED_VALUE_FLOAT</code>, <code>DEBUG</code>, <code>DEBUG_VECT</code> 패킷을 활용할 수 있는 경우입니다.</p><h2 id="mavlink-디버그-메시지와-uorb-주제-간의-매핑" tabindex="-1">MAVLink 디버그 메시지와 uORB 주제 간의 매핑 <a class="header-anchor" href="#mavlink-디버그-메시지와-uorb-주제-간의-매핑" aria-label="Permalink to &quot;MAVLink 디버그 메시지와 uORB 주제 간의 매핑&quot;">​</a></h2><p>MAVLink 디버그 메시지는 uORB 주제로/에서 번역됩니다. MAVLink 디버그 메시지를 보내거나 받으려면, 해당 주제를 각각 게시하거나 구독해야 합니다. 다음은 MAVLink 디버그 메시지와 uORB 주제 간의 매핑을 요약한 표입니다.</p><table><thead><tr><th>MAVLink 메시지</th><th>uORB 주제</th></tr></thead><tbody><tr><td>NAMED_VALUE_FLOAT</td><td>debug_key_value</td></tr><tr><td>DEBUG</td><td>debug_value</td></tr><tr><td>DEBUG_VECT</td><td>debug_vect</td></tr></tbody></table><h2 id="튜토리얼-문자열-부동-소수점-쌍-보내기" tabindex="-1">튜토리얼: 문자열 / 부동 소수점 쌍 보내기 <a class="header-anchor" href="#튜토리얼-문자열-부동-소수점-쌍-보내기" aria-label="Permalink to &quot;튜토리얼: 문자열 / 부동 소수점 쌍 보내기&quot;">​</a></h2><p>이 튜토리얼은 관련 uORB 주제 <code>debug_key_value</code>를 사용하여 MAVLink 메시지 <code>NAMED_VALUE_FLOAT</code>를 전송하는 방법을 설명합니다.</p><p>이 자습서의 코드는 다음에서 사용할 수 있습니다.</p><ul><li><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/examples/px4_mavlink_debug/px4_mavlink_debug.cpp" target="_blank" rel="noreferrer">튜토리얼 코드 디버그</a></li><li>보드 구성에서 MAVLink 디버그 앱(<strong>px4_mavlink_debug</strong>)의 주석 처리를 제거하여 <a href="https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v5/default.cmake" target="_blank" rel="noreferrer">튜토리얼 앱을 활성화</a>합니다.</li></ul><p>디버그 게시를 설정에 필요한 것은 아래의 코드입니다. 먼저 헤더 파일을 추가합니다.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;uORB/uORB.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;uORB/topics/debug_key_value.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;string.h&gt;</span></span></code></pre></div><p>그런 다음 디버그 값 주제를 광고합니다(공개된 다른 이름에 대해 하나의 광고로 충분함). 이 코드를 메인 루프 앞에 추가합니다.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* advertise debug value */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debug_key_value_s dbg;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strncpy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dbg.key, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;velx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dbg.key));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dbg.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">orb_advert_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pub_dbg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> orb_advertise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORB_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(debug_key_value), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>이렇게 하면 메인 루프에서 메시지 전송은 상당히 간단해 집니다.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dbg.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">orb_publish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORB_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(debug_key_value), pub_dbg, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Multiple debug messages must have enough time between their respective publishings for Mavlink to process them. 이는 코드가 여러 디버그 메시지 게시 사이에 대기하거나, 각 함수 호출 반복에서 메시지를 대체하는 것을 의미합니다.</p></div><p>QGroundControl의 결과는 실시간 플롯에서 다음과 같습니다.</p><p><img src="`+s+`" alt="QGC 디버그값 플롯"></p><h2 id="튜토리얼-문자열-부동-소수점-쌍-수신" tabindex="-1">튜토리얼: 문자열 / 부동 소수점 쌍 수신 <a class="header-anchor" href="#튜토리얼-문자열-부동-소수점-쌍-수신" aria-label="Permalink to &quot;튜토리얼: 문자열 / 부동 소수점 쌍 수신&quot;">​</a></h2><p>다음 코드는 이전 튜토리얼에서 전송된 <code>velx</code> 디버그 변수를 수신하는 방법을 설명합니다.</p><p>먼저 <code>debug_key_value</code> 주제를 구독하십시오.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;poll.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;uORB/topics/debug_key_value.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debug_sub_fd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> orb_subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORB_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(debug_key_value));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[...]</span></span></code></pre></div><p>이후 토픽을 폴링 처리하십시오:</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[...]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* one could wait for multiple topics with this technique, just using one here */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">px4_pollfd_struct_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { .fd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debug_sub_fd,   .events </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> POLLIN },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* wait for debug_key_value for 1000 ms (1 second) */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> poll_ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> px4_poll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fds, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [...]</span></span></code></pre></div><p><code>debug_key_value</code> 주제에서 새 메시지를 사용할 수 있는 경우 <code>velx</code>와 다른 키를 가진 메시지를 삭제하기 위하여, 키 속성을 기준으로 메시지를 필터링하는 것을 잊지 마십시오.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [...]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].revents </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> POLLIN) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* obtained data for the first file descriptor */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debug_key_value_s dbg;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* copy data into local buffer */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        orb_copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORB_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(debug_key_value), debug_sub_fd, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dbg);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* filter message based on its key attribute */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strcmp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_sub_debug_vect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().key, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;velx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            PX4_INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;velx:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\t%8.4f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dbg.value);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,26),h=[e];function p(k,d,r,E,g,o){return n(),a("div",null,h)}const b=i(l,[["render",p]]);export{u as __pageData,b as default};
