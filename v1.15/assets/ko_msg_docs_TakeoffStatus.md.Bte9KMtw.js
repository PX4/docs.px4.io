import{_ as s,c as a,o as i,ab as t}from"./chunks/framework.CUflZczI.js";const _=JSON.parse('{"title":"TakeoffStatus (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/msg_docs/TakeoffStatus.md","filePath":"ko/msg_docs/TakeoffStatus.md"}'),n={name:"ko/msg_docs/TakeoffStatus.md"},e=t(`<h1 id="takeoffstatus-uorb-message" tabindex="-1">TakeoffStatus (UORB message) <a class="header-anchor" href="#takeoffstatus-uorb-message" aria-label="Permalink to &quot;TakeoffStatus (UORB message)&quot;">â€‹</a></h1><p>Status of the takeoff state machine currently just available for multicopters</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/TakeoffStatus.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Status of the takeoff state machine currently just available </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> multicopters</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 TAKEOFF_STATE_UNINITIALIZED     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 TAKEOFF_STATE_DISARMED          </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 TAKEOFF_STATE_SPOOLUP           </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 TAKEOFF_STATE_READY_FOR_TAKEOFF </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 TAKEOFF_STATE_RAMPUP            </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 TAKEOFF_STATE_FLIGHT            </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 takeoff_state</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 tilt_limit # limited tilt feasibility during takeoff, contains maximum tilt otherwise</span></span></code></pre></div>`,4),l=[e];function p(h,k,r,o,E,c){return i(),a("div",null,l)}const f=s(n,[["render",p]]);export{_ as __pageData,f as default};
