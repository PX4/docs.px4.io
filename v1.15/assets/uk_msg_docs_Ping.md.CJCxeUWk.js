import{_ as s,c as i,o as e,ab as a}from"./chunks/framework.CUflZczI.js";const m=JSON.parse('{"title":"Ping (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/msg_docs/Ping.md","filePath":"uk/msg_docs/Ping.md"}'),t={name:"uk/msg_docs/Ping.md"},n=a(`<h1 id="ping-uorb-message" tabindex="-1">Ping (UORB message) <a class="header-anchor" href="#ping-uorb-message" aria-label="Permalink to &quot;Ping (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/Ping.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp            # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 ping_time            # Timestamp of the ping packet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 ping_sequence        # Sequence number of the ping packet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 dropped_packets      # Number of dropped ping packets</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 rtt_ms              # Round trip </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (in </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 system_id             # System ID of the remote system</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 component_id          # Component ID of the remote system</span></span></code></pre></div>`,3),p=[n];function l(h,o,r,c,k,d){return e(),i("div",null,p)}const E=s(t,[["render",l]]);export{m as __pageData,E as default};
