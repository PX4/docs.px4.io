import{_ as s,c as a,o as t,ab as i}from"./chunks/framework.CUflZczI.js";const m=JSON.parse('{"title":"EstimatorStates (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/msg_docs/EstimatorStates.md","filePath":"zh/msg_docs/EstimatorStates.md"}'),e={name:"zh/msg_docs/EstimatorStates.md"},n=i(`<h1 id="estimatorstates-uorb-message" tabindex="-1">EstimatorStates (UORB message) <a class="header-anchor" href="#estimatorstates-uorb-message" aria-label="Permalink to &quot;EstimatorStates (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/EstimatorStates.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp        # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp_sample         # the timestamp of the raw </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] states      # Internal filter states</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 n_states      # Number of states effectively used</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] covariances # Diagonal Elements of Covariance Matrix</span></span></code></pre></div>`,3),l=[n];function r(p,h,o,c,k,E){return t(),a("div",null,l)}const g=s(e,[["render",r]]);export{m as __pageData,g as default};
