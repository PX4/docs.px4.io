import{_ as e}from"./chunks/sf45_obstacle_map.DdQG1Lby.js";import{_ as a,c as t,o,ab as r}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"충돌 방지","description":"","frontmatter":{},"headers":[],"relativePath":"ko/computer_vision/collision_prevention.md","filePath":"ko/computer_vision/collision_prevention.md"}'),i={name:"ko/computer_vision/collision_prevention.md"},n=r('<h1 id="충돌-방지" tabindex="-1">충돌 방지 <a class="header-anchor" href="#충돌-방지" aria-label="Permalink to &quot;충돌 방지&quot;">​</a></h1><p><em>Collision Prevention</em> may be used to automatically slow and stop a vehicle before it can crash into an obstacle.</p><p>It can be enabled for multicopter vehicles in <a href="./../flight_modes_mc/position.html">Position mode</a>, and can use sensor data from an offboard companion computer, offboard rangefinders over MAVLink, a rangefinder attached to the flight controller, or any combination of the above.</p><p>충돌 방지는 센서 범위가 충분히 크지 않으면, 기체의 최대 속도를 제한할 수 있습니다! 또한 센서 데이터를 사용할 수 없는 방향으로의 움직임을 방지합니다 (즉, 후방 센서 데이터가없는 경우 뒤로 비행할 수 없음).</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>고속 비행이 주 목적인 경우에는 필요하지 않으면 충돌 방지 기능을 비활성화하는 것이 좋습니다.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>모든 비행 방향으로 센서와 센서 데이터가 있는 지 확인하십시오 (충돌 방지가 활성화된 경우).</p></div><h2 id="개요" tabindex="-1">개요 <a class="header-anchor" href="#개요" aria-label="Permalink to &quot;개요&quot;">​</a></h2><p><em>Collision Prevention</em> is enabled on PX4 by setting the parameter for minimum allowed approach distance (<a href="#CP_DIST">CP_DIST</a>).</p><p>이 기능에는 외부 시스템의 장애물 정보 (MAVLink <a href="https://mavlink.io/en/messages/common.html#OBSTACLE_DISTANCE" target="_blank" rel="noreferrer">OBSTACLE_DISTANCE</a> 메시지를 사용하여 전송) 또는 비행 컨트롤러에 연결된 <a href="./../sensor/rangefinders.html">거리 센서</a>가 필요합니다.</p><div class="info custom-block"><p class="custom-block-title">Multiple sensors can be used to get information about, and prevent collisions with, objects <em>around</em> the vehicle. If multiple sources supply data for the <em>same</em> orientation, the system uses the data that reports the smallest distance to an object.</p></div><p>기체는 장애물에 가까워 질 때 속도를 줄이기 위하여 최대 속도를 제한하고 허용된 최소 간격에 도달하면 정지합니다. 장애물에서 멀어지거나 평행하게 이동하려면 사용자는 기체를 장애물에 더 가깝게 만들지 않는 설정 값으로 이동하도록 명령하여야 합니다. 알고리즘은 &quot;더 나은&quot;설정점이 요청된 설정 값의 양쪽에있는 고정된 마진내에 존재한다고 판단되면 설정값 방향을 약간 조정합니다.</p><p>Users are notified through <em>QGroundControl</em> while <em>Collision Prevention</em> is actively controlling velocity setpoints.</p><p>PX4 소프트웨어 설정은 다음 섹션에서 다룹니다. 충돌 방지를 위해 비행 컨트롤러에 장착된 거리 센서를 사용하는 경우 <a href="#rangefinder">PX4 거리 센서</a>에 설명된대로 부착하고 설정하여야 합니다. 보조 컴퓨터를 사용하여 장애물 정보를 제공하는 경우에는 <a href="#companion">보조 컴퓨터 설정</a>을 참조하십시오.</p><h2 id="px4-소프트웨어-설정" tabindex="-1">PX4 소프트웨어 설정 <a class="header-anchor" href="#px4-소프트웨어-설정" aria-label="Permalink to &quot;PX4 소프트웨어 설정&quot;">​</a></h2><p>Configure collision prevention by <a href="./../advanced_config/parameters.html">setting the following parameters</a> in <em>QGroundControl</em>:</p><table><thead><tr><th>매개변수</th><th>설명</th></tr></thead><tbody><tr><td><a id="CP_DIST"></a><a href="./../advanced_config/parameter_reference.html#CP_DIST">CP_DIST</a></td><td>최소 허용 거리 (기체가 장애물에 접근할 수있는 가장 가까운 거리)를 설정합니다. Set negative to disable <em>collision prevention</em>. <strong>Warning</strong> 이 값은 기체 또는 프로펠러 외부가 아닌 센서까지의 거리입니다. 충분한 거리를 남겨 두십시오!</td></tr><tr><td><a id="CP_DELAY"></a><a href="./../advanced_config/parameter_reference.html#CP_DELAY">CP_DELAY</a></td><td>센서 및 속도 설정점 추적 지연을 설정합니다. 아래의 <a href="#delay_tuning">지연 조정</a>을 참조하십시오.</td></tr><tr><td><a id="CP_GUIDE_ANG"></a><a href="./../advanced_config/parameter_reference.html#CP_GUIDE_ANG">CP_GUIDE_ANG</a></td><td>해당 방향에서 장애물이 적을 경우 기체가 이탈할 수있는 각도 (명령된 방향의 양쪽으로)를 설정합니다. 아래의 <a href="#angle_change_tuning">가이던스 튜닝</a>을 참조하십시오.</td></tr><tr><td><a id="CP_GO_NO_DATA"></a><a href="./../advanced_config/parameter_reference.html#CP_GO_NO_DATA">CP_GO_NO_DATA</a></td><td>기체가 센서 범위 외부의 방향으로 이동할 수 있도록 하려면 1로 설정합니다 (기본값은 0/<code>False</code>).</td></tr><tr><td><a id="MPC_POS_MODE"></a><a href="./../advanced_config/parameter_reference.html#MPC_POS_MODE">MPC_POS_MODE</a></td><td>Set to 0 or 3 to enable Collision Prevention in Position Mode (default is 4).</td></tr></tbody></table><p><a id="algorithm"></a></p><h2 id="알고리즘-설명" tabindex="-1">알고리즘 설명 <a class="header-anchor" href="#알고리즘-설명" aria-label="Permalink to &quot;알고리즘 설명&quot;">​</a></h2><p>모든 센서의 데이터는 기체 주변의 36 개 섹터의 내부 표현으로 통합되며, 각 섹터에는 센서 데이터와 마지막 관찰 시점에 대한 정보 또는 해당 섹터에 대한 데이터를 사용할 수 없다는 표시가 포함됩니다. 기체가 특정 방향으로 이동하도록 명령을 받으면, 해당 방향의 반구에있는 모든 섹터를 확인하여 이동으로 인하여 기체가 장애물에 더 가까워 지는지 확인합니다. 그러한 경우에는, 차량 속도가 제한됩니다.</p><p>이 속도 제한은 <a href="./../advanced_config/parameter_reference.html#MPC_XY_P">MPC_XY_P</a>에 의해 튜닝된 내부 속도 루프와 <a href="./../advanced_config/parameter_reference.html#MPC_JERK_MAX">MPC_JERK_MAX</a> 및 <a href="./../advanced_config/parameter_reference.html#MPC_ACC_HOR">MPC_ACC_HOR</a>을 통하여 <a href="./../config_mc/mc_jerk_limited_type_trajectory.html">저크 최적 속도컨트롤러</a>를 모두 고려합니다. 속도는 <a href="#CP_DIST">CP_DIST</a>에 지정된 거리를 유지하기 위하여 기체가 제 시간에 정지하도록 제한됩니다. 각 섹터의 센서 범위도 고려되어 동일한 메커니즘을 통하여 속도를 제한합니다.</p><p>:::note 특정 방향에 센서 데이터가 없는 경우에는 해당 방향의 속도는 0으로 제한됩니다 (기체가 보이지 않는 물체에 충돌하는 것을 방지). 센서 커버리지 없이 자유롭게 방향으로 이동하려면 <a href="#CP_GO_NO_DATA">CP_GO_NO_DATA</a>를 1로 설정하여 활성화할 수 있습니다. :::</p><p>차량 추적 속도 설정 점과 외부 소스로부터 센서 데이터를 수신시의 지연은 <a href="#CP_DELAY">CP_DELAY</a> 매개 변수를 통하여 보수적으로 추정됩니다. 특정 기체마다 <a href="#delay_tuning">튜닝</a>하여야 합니다.</p><p>명령된 섹터에 인접한 섹터가 상당한 여백 만큼 &#39;더 나은&#39; 경우, 요청된 입력 방향은 <a href="#CP_GUIDE_ANG">CP_GUIDE_ANG</a>에 지정된 각도까지 수정할 수 있습니다. 이는 장애물에 걸리지 않고 장애물 주변으로 차량을 &#39;안내&#39;하기 위하여 사용자 입력을 미세 조정하는 데 도움이 됩니다.</p><p><a id="data_loss"></a></p><h3 id="범위-데이터-손실" tabindex="-1">범위 데이터 손실 <a class="header-anchor" href="#범위-데이터-손실" aria-label="Permalink to &quot;범위 데이터 손실&quot;">​</a></h3><p>If the autopilot does not receive range data from any sensor for longer than 0.5s, it will output a warning <em>No range data received, no movement allowed</em>. 이렇게하면 xy의 속도 설정값이 0이 됩니다. After 5 seconds of not receiving any data, the vehicle will switch into <a href="./../flight_modes_mc/hold.html">HOLD mode</a>. If you want the vehicle to be able to move again, you will need to disable Collision Prevention by either setting the parameter <a href="#CP_DIST">CP_DIST</a> to a negative value, or switching to a mode other than <a href="./../flight_modes_mc/position.html">Position mode</a> (e.g. to <em>Altitude mode</em> or <em>Stabilized mode</em>).</p><p>여러 센서가 연결되어 있고, 그 중 하나와의 연결이 끊어진 경우에도 보고 센서의 시야 (FOV) 내부를 비행할 수 있습니다. 결함이 있는 센서의 데이터가 만료되고, 이 센서가 포함하는 영역이 커버되지 않은 것으로 처리되므로 그 곳으로 이동할 수 없습니다.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><a href="#CP_GO_NO_DATA">CP_GO_NO_DATA = 1</a>을 활성화시에는 주의하여야 합니다. 간혹, 기체가 센서 범위 외부로 벗어날 수 있습니다. 여러 센서 중 하나라도 연결이 끊어지면 결함이있는 센서의 영역이 무시되어, 제약없이 이동할 수 있습니다.</p></div><p><a id="delay_tuning"></a></p><h3 id="cp-delay-지연-튜닝" tabindex="-1">CP_DELAY 지연 튜닝 <a class="header-anchor" href="#cp-delay-지연-튜닝" aria-label="Permalink to &quot;CP_DELAY 지연 튜닝&quot;">​</a></h3><p>There are two main sources of delay which should be accounted for: <em>sensor delay</em>, and vehicle <em>velocity setpoint tracking delay</em>. 두 지연 소스 모두 <a href="#CP_DELAY">CP_DELAY</a> 매개변수를 사용하여 튜닝됩니다.</p><p>The <em>sensor delay</em> for distance sensors connected directly to the flight controller can be assumed to be 0. 외부 비전 기반 시스템의 경우 센서 지연이 최대 0.2 초 일 수 있습니다.</p><p>Vehicle <em>velocity setpoint tracking delay</em> can be measured by flying at full speed in <a href="./../flight_modes_mc/position.html">Position mode</a>, then commanding a stop. 실제 속도와 속도 설정점 사이의 지연은 로그에서 측정할 수 있습니다. 추적 지연은 일반적으로 기체 크기와 튜닝에 따라 0.1 초에서 0.5 초 사이입니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>장애물에 접근시 기체 속도가 진동하면 (즉, 감속, 가속, 감속), 지연이 너무 높게 설정됩니다.</p></div><p><a id="angle_change_tuning"></a></p><h3 id="cp-guide-ang-가이던스-튜닝" tabindex="-1">CP_GUIDE_ANG 가이던스 튜닝 <a class="header-anchor" href="#cp-guide-ang-가이던스-튜닝" aria-label="Permalink to &quot;CP_GUIDE_ANG 가이던스 튜닝&quot;">​</a></h3><p>차량, 환경 유형 및 조종사의 기술에 따라 각기 다른 가이던스가 필요할 수 있습니다. <a href="#CP_GUIDE_ANG">CP_GUIDE_ANG</a> 매개 변수를 0으로 설정하면 안내가 비활성화되어 기체가 명령된 방향으로만 정확하게 이동합니다. 이 매개 변수를 높이면 기체가 장애물을 피할 수 있는 최적의 방향을 선택할 수 있으므로 좁은 틈새를 더 쉽게 통과하고 물체를 돌아 다니는 동안 최소 거리를 정확하게 유지할 수 있습니다.</p><p>이 매개 변수가 너무 작으면 장애물에 가까워 졌을 때 기체가 &#39;고착&#39;된 느낌을 받을 수 있습니다. 장애물에서 멀어지는 이동만 허용되기 때문입니다. 매개 변수가 너무 크면 운전자가 지시하지 않은 방향으로 기체가 장애물에서 멀어지는 것처럼 느껴질 수 있습니다. 테스트에서 30도는 적절한 값이지만, 기체마다 값이 달라질 수 있습니다.</p><p>:::note 가이던스 기능은 센서 데이터가 없는 방향으로 기체를 이동시키지 않습니다. 단 하나의 거리 센서만 전방을 향하고 있는 상태에서 기체가 &#39;고착&#39;된 느낌이 드는 경우, 이는 정보 부족으로 인하여 가이던스가 방향을 안전하게 조정할 수 없기 때문일 수 있습니다. :::</p><p><a id="rangefinder"></a></p><h2 id="px4-거리-센서" tabindex="-1">PX4 거리 센서 <a class="header-anchor" href="#px4-거리-센서" aria-label="Permalink to &quot;PX4 거리 센서&quot;">​</a></h2><h3 id="lanbao-psk-cm8jl65-cc5" tabindex="-1">Lanbao PSK-CM8JL65-CC5 <a class="header-anchor" href="#lanbao-psk-cm8jl65-cc5" aria-label="Permalink to &quot;Lanbao PSK-CM8JL65-CC5&quot;">​</a></h3><p>작성 시점에 PX4를 사용하면 최소한의 추가 설정으로 충돌 방지용으로 <a href="./../sensor/cm8jl65_ir_distance_sensor.html">Lanbao PSK-CM8JL65-CC5</a> IR 거리 센서를 사용할 수 있습니다.</p><ul><li>먼저 <a href="./../sensor/cm8jl65_ir_distance_sensor.html">센서를 장착 설정</a>하고 충돌 방지를 활성화합니다 (위에서 설명한대로 <a href="#CP_DIST">CP_DIST</a> 사용).</li><li><a href="./../advanced_config/parameter_reference.html#SENS_CM8JL65_R_0">SENS_CM8JL65_R_0</a>을 사용하여 센서 방향을 설정합니다.</li></ul><h3 id="lightware-lidar-sf45-rotating-lidar" tabindex="-1">LightWare LiDAR SF45 Rotating Lidar <a class="header-anchor" href="#lightware-lidar-sf45-rotating-lidar" aria-label="Permalink to &quot;LightWare LiDAR SF45 Rotating Lidar&quot;">​</a></h3><p>PX4 v1.14 (and later) supports the <a href="https://www.lightwarelidar.com/shop/sf45-b-50-m/" target="_blank" rel="noreferrer">LightWare LiDAR SF45</a> rotating lidar which provides 320 degree sensing.</p><p>The SF45 must be connected via a UART/serial port and configured as described below (In addition to the <a href="#px4-software-setup">collision prevention setup</a>).</p><p><a href="https://www.lightwarelidar.com/resources-software" target="_blank" rel="noreferrer">LightWare Studio</a> configuration:</p><ul><li>In the LightWare Studio app enable scanning, set the scan angle, and change the baud rate to <code>921600</code>.</li></ul><p>PX4 Configuration:</p><ul><li>Add the <a href="./../modules/modules_driver_distance_sensor.html#lightware-sf45-serial">lightware_sf45_serial</a> driver in <a href="./../hardware/porting_guide_config.html#px4-menuconfig-setup">menuconfig</a>: <ul><li>Under <strong>drivers &gt; Distance sensors</strong> select <code>lightware_sf45_serial</code>.</li><li>Recompile and upload to the flight controller.</li></ul></li><li><a href="./../advanced_config/parameters.html">Set the following parameters</a> via QGC: <ul><li><a href="./../advanced_config/parameter_reference.html#SENS_EN_SF45_CFG">SENS_EN_SF45_CFG</a>: Set to the serial port you have the sensor connected to. Make sure GPS or Telemetry are not enabled on this port.</li><li><a href="./../advanced_config/parameter_reference.html#SF45_ORIENT_CFG">SF45_ORIENT_CFG</a>: Set the orientation of the sensor (facing up or down)</li><li><a href="./../advanced_config/parameter_reference.html#SF45_UPDATE_CFG">SF45_UPDATE_CFG</a>: Set the update rate</li><li><a href="./../advanced_config/parameter_reference.html#SF45_YAW_CFG">SF45_YAW_CFG</a>: Set the yaw orientation</li></ul></li></ul><p>In QGroundControl you should see an <a href="https://mavlink.io/en/messages/common.html#OBSTACLE_DISTANCE" target="_blank" rel="noreferrer">OBSTACLE_DISTANCE</a> message in the <a href="./../debug/mavlink_shell.html#qgroundcontrol-mavlink-console">MAVLink console</a> if collision prevention is configured correctly and active.</p><p>The obstacle overlay in QGC will look like this:</p><p><img src="'+e+'" alt="sf45"></p><h3 id="rangefinder-support" tabindex="-1">Rangefinder Support <a class="header-anchor" href="#rangefinder-support" aria-label="Permalink to &quot;Rangefinder Support&quot;">​</a></h3><p>다른 센서를 활성화 할 수 있지만, 이를 위해서는 센서 방향과 시야를 설정하기 위하여 드라이버 코드를 수정하여야 합니다.</p><ul><li>특정 포트에 거리 센서를 연결 설정하고 (<a href="./../sensor/rangefinders.html">센서 별 문서</a> 참조) <a href="#CP_DIST">CP_DIST</a>를 사용하여 충돌 방지를 활성화합니다.</li><li>방향을 설정하려면 드라이버를 수정하십시오. This should be done by mimicking the <code>SENS_CM8JL65_R_0</code> parameter (though you might also hard-code the orientation in the sensor <em>module.yaml</em> file to something like <code>sf0x start -d ${SERIAL_DEV} -R 25</code> - where 25 is equivalent to <code>ROTATION_DOWNWARD_FACING</code>).</li><li>Modify the driver to set the <em>field of view</em> in the distance sensor UORB topic (<code>distance_sensor_s.h_fov</code>).</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://github.com/PX4/PX4-Autopilot/pull/12179" target="_blank" rel="noreferrer">기능 PR</a>에서 필요한 수정 사항을 확인할 수 있습니다. 변경 사항에 기여하여 주십시오!</p></div><p><a id="companion"></a></p><h2 id="보조-컴퓨터-설정" tabindex="-1">보조 컴퓨터 설정 <a class="header-anchor" href="#보조-컴퓨터-설정" aria-label="Permalink to &quot;보조 컴퓨터 설정&quot;">​</a></h2><p>보조 컴퓨터 또는 외부 센서를 사용하는 경우 장애물이 감지된 시기와 위치를 반영하는 <a href="https://mavlink.io/en/messages/common.html#OBSTACLE_DISTANCE" target="_blank" rel="noreferrer">OBSTACLE_DISTANCE</a> 메시지 스트림을 제공하여야 합니다.</p><p>The minimum rate at which messages <em>must</em> be sent depends on vehicle speed - at higher rates the vehicle will have a longer time to respond to detected obstacles.</p><p>:::note 시스템의 초기 테스트에서는 <code>OBSTACLE_DISTANCE</code> 메시지가 10Hz (비전 시스템에서 지원하는 최대 속도)에서 방출되는 4m/s로 움직이는 기체를 사용하였습니다. 시스템은 상당히 빠른 속도와 낮은 주파수 거리 업데이트에서 잘 작동 할 수 있습니다. :::</p><p>The tested companion software is the <em>local_planner</em> from the <a href="https://github.com/PX4/PX4-Avoidance" target="_blank" rel="noreferrer">PX4/PX4-Avoidance</a> repo. For more information on hardware and software setup see: <a href="https://github.com/PX4/PX4-Avoidance#run-on-hardware" target="_blank" rel="noreferrer">PX4/PX4-Avoidance &gt; Run on Hardware</a>.</p><p>The hardware and software should be set up as described in the <a href="https://github.com/PX4/PX4-Avoidance" target="_blank" rel="noreferrer">PX4/PX4-Avoidance</a> repo. In order to emit <code>OBSTACLE_DISTANCE</code> messages you must use the <em>rqt_reconfigure</em> tool and set the parameter <code>send_obstacles_fcu</code> to true.</p><h2 id="가제보-설정" tabindex="-1">가제보 설정 <a class="header-anchor" href="#가제보-설정" aria-label="Permalink to &quot;가제보 설정&quot;">​</a></h2><p><em>Collision Prevention</em> can also be tested using Gazebo. See <a href="https://github.com/PX4/PX4-Avoidance" target="_blank" rel="noreferrer">PX4/PX4-Avoidance</a> for setup instructions.</p>',67),l=[n];function s(d,h,c,p,_,m){return o(),t("div",null,l)}const P=a(i,[["render",s]]);export{g as __pageData,P as default};
