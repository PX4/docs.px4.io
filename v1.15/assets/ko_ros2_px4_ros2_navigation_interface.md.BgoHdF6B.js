import{_ as t,E as e,c as l,J as i,a as n,m as a,ab as p,o as h}from"./chunks/framework.CUflZczI.js";const _=JSON.parse('{"title":"PX4 ROS 2 Navigation Interface","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ros2/px4_ros2_navigation_interface.md","filePath":"ko/ros2/px4_ros2_navigation_interface.md"}'),k={name:"ko/ros2/px4_ros2_navigation_interface.md"},r=a("h1",{id:"px4-ros-2-navigation-interface",tabindex:"-1"},[n("PX4 ROS 2 Navigation Interface "),a("a",{class:"header-anchor",href:"#px4-ros-2-navigation-interface","aria-label":'Permalink to "PX4 ROS 2 Navigation Interface"'},"​")],-1),o=p(`<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Experimental At the time of writing, parts of the PX4 ROS 2 Interface Library are experimental, and hence subject to change.</p></div><p>The <a href="./../ros2/px4_ros2_interface_lib.html">PX4 ROS 2 Interface Library</a> navigation interface enables developers to send their position measurements to PX4 directly from ROS 2 applications, such as a VIO system or a map matching system. The interface provides a layer of abstraction from PX4 and the uORB messaging framework, and introduces a few sanity checks on the requested state estimation updates sent via the interface. These measurements are then fused into the EKF just as though they were internal PX4 measurements.</p><p>The library provides two classes, <a href="https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1LocalPositionMeasurementInterface.html" target="_blank" rel="noreferrer"><code>LocalPositionMeasurementInterface</code></a> and <a href="https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1GlobalPositionMeasurementInterface.html" target="_blank" rel="noreferrer"><code>GlobalPositionMeasurementInterface</code></a>, which both expose a similar <code>update</code> method to provide either a local position or global position update to PX4, respectively. The <code>update</code> method expects a position measurement <code>struct</code> (<a href="https://auterion.github.io/px4-ros2-interface-lib/structpx4__ros2_1_1LocalPositionMeasurement.html" target="_blank" rel="noreferrer"><code>LocalPositionMeasurement</code></a> or <a href="https://auterion.github.io/px4-ros2-interface-lib/structpx4__ros2_1_1GlobalPositionMeasurement.html" target="_blank" rel="noreferrer"><code>GlobalPositionMeasurement</code></a>) which developers can populate with their own generated position measurements.</p><h2 id="installation-and-first-test" tabindex="-1">Installation and First Test <a class="header-anchor" href="#installation-and-first-test" aria-label="Permalink to &quot;Installation and First Test&quot;">​</a></h2><p>The following steps are required to get started:</p><ol><li><p>Make sure you have a working <a href="./../ros2/user_guide.html">ROS 2 setup</a>, with <a href="https://github.com/PX4/px4_msgs" target="_blank" rel="noreferrer"><code>px4_msgs</code></a> in the ROS 2 workspace.</p></li><li><p>Clone the repository into the workspace:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ros_workspace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/src</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Auterion/px4-ros2-interface-lib</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>To ensure compatibility, use the latest <em>main</em> branches for PX4, <em>px4_msgs</em> and the library. See also <a href="https://github.com/Auterion/px4-ros2-interface-lib#compatibility-with-px4" target="_blank" rel="noreferrer">here</a>.</p></div></li></ol><p>:::</p><ol start="3"><li><p>Build the workspace:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">colcon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li><li><p>In a different shell, start PX4 SITL:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $px4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div><p>(here we use Gazebo-Classic, but you can use any model or simulator)</p></li><li><p>In yet a different shell, run the micro XRCE agent (you can keep it running afterward):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MicroXRCEAgent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> udp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8888</span></span></code></pre></div></li><li><p>Back in the ROS 2 terminal, source the workspace you just built (in step 3) and run the <a href="https://github.com/Auterion/px4-ros2-interface-lib/tree/main/examples/cpp/navigation/global_navigation" target="_blank" rel="noreferrer">global_navigation</a> example, which periodically sends dummy global position updates:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install/setup.bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example_global_navigation_cpp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example_global_navigation</span></span></code></pre></div><p>You should get an output like this showing that the global interface is successfully sending position updates:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[INFO] [1702030701.836897756] [example_global_navigation_node]: example_global_navigation_node running</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[DEBUG] [1702030702.837279784] [example_global_navigation_node]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Successfully</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> position</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> navigation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> interface.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[DEBUG] [1702030703.837223884] [example_global_navigation_node]: Successfully sent position update to navigation interface.</span></span></code></pre></div></li><li><p>In the PX4 shell, you can check that PX4 receives global position updates:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listener</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aux_global_position</span></span></code></pre></div><p>The output should look like:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TOPIC:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aux_global_position</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">aux_global_position</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   timestamp:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 46916000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.528000 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">seconds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   timestamp_sample:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 46916000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">us</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> before</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   lat:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12.343210</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   lon:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 23.454320</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   alt:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12.40000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   alt_ellipsoid:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.00000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   delta_alt:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.00000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   eph:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.31623</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   epv:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.44721</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   terrain_alt:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.00000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   lat_lon_reset_counter:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   alt_reset_counter:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   terrain_alt_valid:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> False</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   dead_reckoning:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> False</span></span></code></pre></div></li><li><p>Now you are ready to use the navigation interface to send your own position updates.</p></li></ol><h2 id="how-to-use-the-library" tabindex="-1">How to use the Library <a class="header-anchor" href="#how-to-use-the-library" aria-label="Permalink to &quot;How to use the Library&quot;">​</a></h2><p>To send a position measurement, you populate the position struct with the values you have measured. Then call the interface&#39;s update function with that struct as the argument.</p><p>For a basic example of how to use this interface, check out the <a href="https://github.com/Auterion/px4-ros2-interface-lib/tree/main/examples/cpp/navigation" target="_blank" rel="noreferrer">examples</a> in the <code>Auterion/px4-ros2-interface-lib</code> repository, such as <a href="https://github.com/Auterion/px4-ros2-interface-lib/blob/main/examples/cpp/navigation/local_navigation/include/local_navigation.hpp" target="_blank" rel="noreferrer">examples/cpp/navigation/local_navigation</a> or <a href="https://github.com/Auterion/px4-ros2-interface-lib/blob/main/examples/cpp/navigation/local_navigation/include/global_navigation.hpp" target="_blank" rel="noreferrer">examples/cpp/navigation/global_navigation</a>.</p><h3 id="local-position-updates" tabindex="-1">Local Position Updates <a class="header-anchor" href="#local-position-updates" aria-label="Permalink to &quot;Local Position Updates&quot;">​</a></h3><p>First ensure that the PX4 parameter <a href="./../advanced_config/parameter_reference.html#EKF2_EV_CTRL"><code>EKF2_EV_CTRL</code></a> is properly configured to fuse external local measurements, by setting the appropriate bits to <code>true</code>:</p><ul><li><code>0</code>: Horizontal position data</li><li><code>1</code>: Vertical position data</li><li><code>2</code>: Velocity data</li><li><code>3</code>: Yaw data</li></ul><p>To send a local position measurement to PX4:</p><ol><li>Create a <a href="https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1LocalPositionMeasurementInterface.html" target="_blank" rel="noreferrer"><code>LocalPositionMeasurementInterface</code></a> instance by providing it with: a ROS node, and the pose and velocity reference frames of your measurements.</li><li>Populate a <a href="https://auterion.github.io/px4-ros2-interface-lib/structpx4__ros2_1_1LocalPositionMeasurement.html" target="_blank" rel="noreferrer"><code>LocalPositionMeasurement</code></a> <code>struct</code> with your measurements.</li><li>Pass the <code>struct</code> to the <code>LocalPositionMeasurementInterface</code> <a href="https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1LocalPositionMeasurementInterface.html#a6fd180b944710716d418b2cfe1c0c8e3" target="_blank" rel="noreferrer"><code>update()</code></a> method.</li></ol><p>The available pose and velocity reference frames for your measurements are defined by the following <code>enum</code>:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PoseFrame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  LocalNED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  LocalFRD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VelocityFrame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  LocalNED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  LocalFRD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  BodyFRD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>The <code>LocalPositionMeasurement</code> struct is defined as follows:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LocalPositionMeasurement</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   rclcpp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Time timestamp_sample {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Eigen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Vector2f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position_xy {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Eigen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Vector2f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position_xy_variance {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;float&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position_z {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;float&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position_z_variance {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Eigen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Vector2f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> velocity_xy {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Eigen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Vector2f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> velocity_xy_variance {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;float&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> velocity_z {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;float&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> velocity_z_variance {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Eigen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Quaternionf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attitude_quaternion {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Eigen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Vector3f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attitude_variance {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>The <code>update()</code> method of the local interface expects the following conditions to hold for <code>LocalPositionMeasurement</code>:</p><ul><li>The sample timestamp is defined.</li><li>Values do not have a \`NAN\`\`.</li><li>If a measurement value is provided, its associated variance value is well defined (e.g. if <code>position_xy</code> is defined, then <code>position_xy_variance</code> must be defined).</li><li>If a measurement value is provided, its associated reference frame is not unknown (e.g. if <code>position_xy</code> is defined, then the interface was initialised with a pose frame different from <code>PoseFrame::Unknown</code>).</li></ul><p>The following code snippet is an example of a ROS 2 node which uses the local navigation interface to send 3D pose updates in the North-East-Down (NED) reference frame to PX4:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyLocalMeasurementUpdateNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rclcpp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Node</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   MyLocalMeasurementUpdateNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my_node_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Set pose measurement reference frame to north-east-down</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::PoseFrame pose_frame </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PoseFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::LocalNED;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // We will only send pose measurements in this example</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Set velocity measurement reference frame to unknown</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::VelocityFrame velocity_frame </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VelocityFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Unknown;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Initialize local interface [1]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      _local_position_measurement_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make_shared</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LocalPositionMeasurementInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pose_frame, velocity_frame);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sendUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (running) {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Potentially make method run as a callback or on a timer</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // Generate local position measurement</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         rclcpp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Time timestamp_sample  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         Eigen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Vector2f position_xy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         Eigen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Vector2f position_xy_variance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position_z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position_z_variance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // Populate the local position measurement struct [2]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::LocalPositionMeasurement local_position_measurement{};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         local_position_measurement.timestamp_sample </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timestamp_sample;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         local_position_measurement.position_xy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position_xy;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         local_position_measurement.position_xy_variance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position_xy_variance;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         local_position_measurement.position_z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position_z;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         local_position_measurement.position_z_variance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position_z_variance;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // Send measurement to PX4 using the interface [3]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            _local_position_measurement_interface-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(local_position_measurement);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::NavigationInterfaceInvalidArgument </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Handle exceptions caused by invalid local_position_measurement definition</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            RCLCPP_ERROR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Exception caught: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">what</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::LocalPositionMeasurementInterface</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _local_position_measurement_interface;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="global-position-updates" tabindex="-1">Global Position Updates <a class="header-anchor" href="#global-position-updates" aria-label="Permalink to &quot;Global Position Updates&quot;">​</a></h3><p>First ensure that the PX4 parameter <a href="./../advanced_config/parameter_reference.html#EKF2_AGP_CTRL"><code>EKF2_AGP_CTRL</code></a> is properly configured to fuse external global measurements, by setting the appropriate bits to <code>true</code>:</p><ul><li><code>0</code>: Horizontal position data</li><li><code>1</code>: Vertical position data</li></ul><p>To send a global position measurement to PX4:</p><ol><li>Create a <a href="https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1GlobalPositionMeasurementInterface.html" target="_blank" rel="noreferrer"><code>GlobalPositionMeasurementInterface</code></a> instance by providing it with a ROS node.</li><li>Populate a <a href="https://auterion.github.io/px4-ros2-interface-lib/structpx4__ros2_1_1GlobalPositionMeasurement.html" target="_blank" rel="noreferrer"><code>GlobalPositionMeasurement</code></a> <code>struct</code> with your measurements.</li><li>Pass the struct to the <code>GlobalPositionMeasurementInterface</code> <a href="https://auterion.github.io/px4-ros2-interface-lib/classpx4__ros2_1_1GlobalPositionMeasurementInterface.html#a1a183b595ef7f6a22f3a83ba543fe86d" target="_blank" rel="noreferrer">update()</a> method.</li></ol><p>The <code>GlobalPositionMeasurement</code> struct is defined as follows:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GlobalPositionMeasurement</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   rclcpp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Time timestamp_sample {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Eigen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Vector2d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lat_lon {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;float&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> horizontal_variance {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;float&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> altitude_msl {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;float&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vertical_variance {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::nullopt};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>The <code>update()</code> method of the global interface expects the following conditions to hold for <code>GlobalPositionMeasurement</code>:</p><ul><li>The sample <code>timestamp_sample</code> is defined.</li><li>Values do not have a NAN.</li><li>If a measurement value is provided, its associated variance value is well defined (e.g. if <code>lat_lon</code> is defined, then <code>horizontal_variance</code> must be defined).</li></ul><p>The following code snippet is an example of a ROS 2 node which uses the global navigation interface to send a measurement with latitude, longitude and altitude to PX4:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyGlobalMeasurementUpdateNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rclcpp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Node</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   MyGlobalMeasurementUpdateNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my_node_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Initialize global interface [1]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      _global_position_measurement_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make_shared</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GlobalPositionMeasurementInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sendUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (running) {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Potentially make method run as a callback or on a timer</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // Generate global position measurement</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         rclcpp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Time timestamp_sample  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         Eigen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Vector2d lat_lon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> horizontal_variance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> altitude_msl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vertical_variance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // Populate the global position measurement struct [2]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::GlobalPositionMeasurement global_position_measurement{};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         global_position_measurement.timestamp_sample </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timestamp_sample;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         global_position_measurement.lat_lon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lat_lon;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         global_position_measurement.horizontal_variance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> horizontal_variance;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         global_position_measurement.altitude_msl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> altitude_msl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         global_position_measurement.vertical_variance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vertical_variance;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // Send measurement to PX4 using the interface [3]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            _global_position_measurement_interface-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(global_position_measurement);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::NavigationInterfaceInvalidArgument </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Handle exceptions caused by invalid global_position_measurement definition</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            RCLCPP_ERROR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Exception caught: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">what</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4_ros2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::GlobalPositionMeasurementInterface</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _global_position_measurement_interface;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="multiple-instances-of-an-interface" tabindex="-1">Multiple Instances of an Interface <a class="header-anchor" href="#multiple-instances-of-an-interface" aria-label="Permalink to &quot;Multiple Instances of an Interface&quot;">​</a></h2><p>Using multiple instances of the same interface (e.g. local and local) to send estimation updates will stream all update messages to the same topic and result in cross-talk. This should not affect measurement fusion into the EKF, but different measurement sources will become indistinguishable.</p>`,37);function d(E,c,g,y,F,u){const s=e("Badge");return h(),l("div",null,[r,i(s,{type:"tip",text:"PX4 v1.15"}),n(),i(s,{type:"warning",text:"Experimental"}),o])}const C=t(k,[["render",d]]);export{_ as __pageData,C as default};
