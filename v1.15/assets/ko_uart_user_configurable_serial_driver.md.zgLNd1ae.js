import{_ as s,c as a,o as i,ab as e}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"사용자 설정 가능 직렬 포트 드라이버 제작","description":"","frontmatter":{},"headers":[],"relativePath":"ko/uart/user_configurable_serial_driver.md","filePath":"ko/uart/user_configurable_serial_driver.md"}'),t={name:"ko/uart/user_configurable_serial_driver.md"},l=e(`<h1 id="사용자-설정-가능-직렬-포트-드라이버-제작" tabindex="-1">사용자 설정 가능 직렬 포트 드라이버 제작 <a class="header-anchor" href="#사용자-설정-가능-직렬-포트-드라이버-제작" aria-label="Permalink to &quot;사용자 설정 가능 직렬 포트 드라이버 제작&quot;">​</a></h1><p>비행 콘트롤러에서 설정 가능 직렬 포트에서 실행되도록 사용자가 (매개변수를 통하여) 구성할 수 있도록 직렬 드라이버를 설정하는 방법을 설명합니다.</p><h2 id="전제-조건" tabindex="-1">전제 조건 <a class="header-anchor" href="#전제-조건" aria-label="Permalink to &quot;전제 조건&quot;">​</a></h2><p>제공되는 드라이버를 사용하여, 쉘에서 다음 명령어로 시작합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start -d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">serial_port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">baudrate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">param_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>여기서,</p><ul><li><code>-d</code>: serial port name.</li><li><code>-b</code>: Baud rate (optional) if the driver supports multiple baud rates. If supported, the driver must allow you to specify the rate as both a bare baudrate and as a parameter name in the form <code>-b p:&lt;param_name&gt;</code> (which can be parsed with <code>px4_get_parameter_value()</code>). :::tip See the <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/drivers/gps/gps.cpp#L1023" target="_blank" rel="noreferrer">gps driver</a> for an example. :::</li></ul><h2 id="설정-가능-드라이버-제작" tabindex="-1">설정 가능 드라이버 제작 <a class="header-anchor" href="#설정-가능-드라이버-제작" aria-label="Permalink to &quot;설정 가능 드라이버 제작&quot;">​</a></h2><p>드라이버를 설정 가능하게 하려면:</p><ol><li><p>Create a YAML module configuration file:</p><ul><li><p>Add a new file in the driver&#39;s source directory named <strong>module.yaml</strong></p></li><li><p>Insert the following text and adjust as needed:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">module_name: uLanding Radar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">serial_config:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ulanding_radar start -d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${SERIAL_DEV}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -b p:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${BAUD_PARAM}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      port_config_param:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: SENS_ULAND_CFG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        group: Sensors</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">The full documentation of the module configuration file can be found in the <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/validation/module_schema.yaml" target="_blank" rel="noreferrer">validation/module_schema.yaml</a> file. This is also used to validate all configuration files in CI.</p></div></li></ul></li></ol><p>:::</p><ol><li><p>Add the module configuration to the <strong>CMakeLists.txt</strong> file for the driver module:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">px4_add_module(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MODULE drivers__ulanding</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAIN ulanding_radar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SRCS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     ulanding.cpp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MODULE_CONFIG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     module.yaml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> )</span></span></code></pre></div></li></ol>`,12),n=[l];function p(h,r,d,o,k,c){return i(),a("div",null,n)}const u=s(t,[["render",p]]);export{g as __pageData,u as default};
