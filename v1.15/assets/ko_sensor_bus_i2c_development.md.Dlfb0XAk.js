import{_ as e,c as r,o as a,ab as t}from"./chunks/framework.CUflZczI.js";const v=JSON.parse('{"title":"I2C Bus (Development Overview)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/sensor_bus/i2c_development.md","filePath":"ko/sensor_bus/i2c_development.md"}'),s={name:"ko/sensor_bus/i2c_development.md"},i=t('<h1 id="i2c-bus-development-overview" tabindex="-1">I2C Bus (Development Overview) <a class="header-anchor" href="#i2c-bus-development-overview" aria-label="Permalink to &quot;I2C Bus (Development Overview)&quot;">​</a></h1><p>I2C는 2개의 와이어로 연결하여 여러개의 마스터 장치를 여러개의 슬레이브 장치에 연결하는 패킷교환 직렬통신 프로토콜입니다. 보드내의 프로세서와 마이크로컨트롤러에서 저속 주변 장치 IC와의 근거리 통신에 사용됩니다.</p><p>픽스호크 PX4는 다음 목적으로 이 프로토콜을 사용합니다:</p><ul><li>Connecting off board components that require higher data rates than provided by a strict serial UART, such as rangefinders.</li><li>I2C만 지원하는 주변기기 호환성</li><li>여러 장치를 단일 버스에 연결할 수 있습니다(포트 절약에 유용) 예: LED, 지자계센서, 거리센서 등</li></ul><div class="info custom-block"><p class="custom-block-title">The page <a href="./../sensor_bus/i2c_general.html">Hardware &gt; I2C Peripherals</a> contains information about how to <em>use</em> (rather than integrate) I2C peripherals and solve common setup problems.</p></div><div class="tip custom-block"><p class="custom-block-title">IMUs (accelerometers/gyroscopes) should not be attached via I2C (typically the <a href="https://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus" target="_blank" rel="noreferrer">SPI</a> bus is used). The bus is not fast enough even with a single device attached to allow vibration filtering (for instance), and the performance degrades further with every additional device on the bus.</p></div><h2 id="i2c-장치-통합" tabindex="-1">I2C 장치 통합 <a class="header-anchor" href="#i2c-장치-통합" aria-label="Permalink to &quot;I2C 장치 통합&quot;">​</a></h2><p>Drivers should <code>#include &lt;drivers/device/i2c.h&gt;</code> and then provide an implementation of the abstract base class <code>I2C</code> defined in <strong>I2C.hpp</strong> for the target hardware (i.e. for NuttX <a href="https://github.com/PX4/PX4-Autopilot/blob/master/src/lib/drivers/device/nuttx/I2C.hpp" target="_blank" rel="noreferrer">here</a>).</p><p>A small number of drivers will also need to include headers for their type of device (<strong>drv_*.h</strong>) in <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers" target="_blank" rel="noreferrer">/src/drivers/</a> - e.g. <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/drivers/drv_led.h" target="_blank" rel="noreferrer">drv_led.h</a>.</p><p>To include a driver in firmware you must add the driver to the board-specific cmake file that corresponds to the target you want to build for. You can do this for a single driver:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>drivers/distance_sensor/lightware_laser_i2c</span></span></code></pre></div><p>You can also include all drivers of a particular type.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>distance_sensor # all available distance sensor drivers</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For example, you can see/search for <code>CONFIG_DRIVERS_DISTANCE_SENSOR_LIGHTWARE_LASER_I2C</code> in the <a href="https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v4/default.px4board" target="_blank" rel="noreferrer">px4_fmu-v4_default</a> configuration.</p></div><h2 id="i2c-드라이버-예제" tabindex="-1">I2C 드라이버 예제 <a class="header-anchor" href="#i2c-드라이버-예제" aria-label="Permalink to &quot;I2C 드라이버 예제&quot;">​</a></h2><p>To find I2C driver examples, search for <strong>i2c.h</strong> in <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/drivers" target="_blank" rel="noreferrer">/src/drivers/</a>.</p><p>Just a few examples are:</p><ul><li><a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/drivers/distance_sensor/lightware_laser_i2c" target="_blank" rel="noreferrer">drivers/distance_sensor/lightware_laser_i2c</a> - <a href="./../sensor/sfxx_lidar.html">Lightware SF1XX LIDAR</a>용 I2C 드라이버.</li><li><a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/drivers/distance_sensor/lightware_laser_serial" target="_blank" rel="noreferrer">drivers/distance_sensor/lightware_laser_serial</a> - <a href="./../sensor/sfxx_lidar.html">Lightware SF1XX LIDAR</a>용 직렬 드라이버.</li><li><a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/drivers/barometer/ms5611" target="_blank" rel="noreferrer">drivers/ms5611</a> - I2C(또는 SPI)로 연결된 MS5611와 MS6507 기압 센서용 I2C 드라이버.</li></ul><h2 id="추가-정보" tabindex="-1">추가 정보 <a class="header-anchor" href="#추가-정보" aria-label="Permalink to &quot;추가 정보&quot;">​</a></h2><ul><li><a href="https://en.wikipedia.org/wiki/I%C2%B2C" target="_blank" rel="noreferrer">I2C</a> (위키피디아) - 영문</li><li><a href="https://learn.sparkfun.com/tutorials/i2c" target="_blank" rel="noreferrer">I2C 비교 개요</a> (learn.sparkfun.com)</li><li><a href="./../middleware/drivers.html">드라이버 프레임워크</a></li></ul>',20),o=[i];function l(n,c,d,h,p,u){return a(),r("div",null,o)}const m=e(s,[["render",l]]);export{v as __pageData,m as default};
