import{_ as a,c as e,o as s,ab as i}from"./chunks/framework.CUflZczI.js";const k=JSON.parse('{"title":"常见问题","description":"","frontmatter":{},"headers":[],"relativePath":"zh/debug/faq.md","filePath":"zh/debug/faq.md"}'),t={name:"zh/debug/faq.md"},l=i('<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h1><h2 id="编译错误" tabindex="-1">编译错误 <a class="header-anchor" href="#编译错误" aria-label="Permalink to &quot;编译错误&quot;">​</a></h2><h3 id="闪存溢出" tabindex="-1">闪存溢出 <a class="header-anchor" href="#闪存溢出" aria-label="Permalink to &quot;闪存溢出&quot;">​</a></h3><p>可以加载到主板上的代码量受到其具有的闪存量的限制。 当添加其他模块或代码时，添加可能会超过闪存。 这将导致 &quot;闪存溢出&quot;。 The upstream version will always build, but depending on what a developer adds it might overflow locally.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">region</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flash&#39; overflowed by 12456 bytes</span></span></code></pre></div><p>若要解决此问题，请使用较新的硬件或从生成中删除对您的用例不重要的模块。 The configuration is stored in <strong>/PX4-Autopilot/boards/px4</strong> (e.g. <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/boards/px4/fmu-v5/default.px4board" target="_blank" rel="noreferrer">PX4-Autopilot/boards/px4/fmu-v5/default.px4board</a>). 要删除模块，只需将其注释掉：</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#drivers/trone</span></span></code></pre></div><h4 id="identifying-large-memory-consumers" tabindex="-1">Identifying large memory consumers <a class="header-anchor" href="#identifying-large-memory-consumers" aria-label="Permalink to &quot;Identifying large memory consumers&quot;">​</a></h4><p>The command below will list the largest static allocations:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modemmanager</span></span></code></pre></div><h2 id="usb-错误" tabindex="-1">USB 错误 <a class="header-anchor" href="#usb-错误" aria-label="Permalink to &quot;USB 错误&quot;">​</a></h2><h3 id="上传从不成功" tabindex="-1">上传从不成功 <a class="header-anchor" href="#上传从不成功" aria-label="Permalink to &quot;上传从不成功&quot;">​</a></h3><p>On Ubuntu, uninstall the modem manager:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modemmanager</span></span></code></pre></div>',14),n=[l];function o(h,r,d,p,c,u){return s(),e("div",null,n)}const m=a(t,[["render",o]]);export{k as __pageData,m as default};
