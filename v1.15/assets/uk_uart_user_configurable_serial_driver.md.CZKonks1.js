import{_ as s,c as a,o as i,ab as e}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"Готуємо драйвер Послідовного Порту до користувацьких налаштувань","description":"","frontmatter":{},"headers":[],"relativePath":"uk/uart/user_configurable_serial_driver.md","filePath":"uk/uart/user_configurable_serial_driver.md"}'),l={name:"uk/uart/user_configurable_serial_driver.md"},n=e(`<h1 id="готуємо-драивер-послідовного-порту-до-користувацьких-налаштувань" tabindex="-1">Готуємо драйвер Послідовного Порту до користувацьких налаштувань <a class="header-anchor" href="#готуємо-драивер-послідовного-порту-до-користувацьких-налаштувань" aria-label="Permalink to &quot;Готуємо драйвер Послідовного Порту до користувацьких налаштувань&quot;">​</a></h1><p>Ця тема пояснює, як підготувати драйвер послідовного порту для того, щоб користувач міг налаштувати його (через параметри) для роботи на послідовних портах будь-якого політного контролера.</p><h2 id="попередні-вимоги" tabindex="-1">Попередні вимоги <a class="header-anchor" href="#попередні-вимоги" aria-label="Permalink to &quot;Попередні вимоги&quot;">​</a></h2><p>Очікується, що драйвер вже існує і запускається в командному рядку, використовуючи синтаксис команди:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div><p>де</p><ul><li><code>-d</code>: ім&#39;я послідовного порту.</li><li><code>-b</code>: швидкість бодів [baud rate] (необов&#39;язково), якщо драйвер підтримує декілька варіантів швидкості бодів. Якщо підтримується, драйвер мусить дозволити вказати швидкість бодів і як просто число, і як параметр, з синтаксисом <code>-b p:&lt;param_name&gt;</code> (що може бути передане через <code>px4_get_parameter_value()</code>) :::tip Дивіться <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/drivers/gps/gps.cpp#L1023" target="_blank" rel="noreferrer">gps driver</a> як приклад. :::</li></ul><h2 id="робимо-драивер-налаштовуваним" tabindex="-1">Робимо драйвер налаштовуваним <a class="header-anchor" href="#робимо-драивер-налаштовуваним" aria-label="Permalink to &quot;Робимо драйвер налаштовуваним&quot;">​</a></h2><p>Аби зробити драйвер налаштовуваним:</p><ol><li><p>Створіть конфігураційний файл модуля YAML:</p><ul><li><p>Додайте новий файл з іменем <strong>module.yaml</strong> у директорію з сорс кодом драйверу</p></li><li><p>Вставте наступний текст і підлаштуйте за потреби:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">module_name: uLanding Radar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">serial_config:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ulanding_radar start -d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${SERIAL_DEV}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -b p:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${BAUD_PARAM}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      port_config_param:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: SENS_ULAND_CFG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        group: Sensors</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Повна документація модулів файлів конфігурації знаходиться у файлі <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/validation/module_schema.yaml" target="_blank" rel="noreferrer">validation/module_schema.yaml</a>. Це також використовується для перевірки всіх файлів конфігурації в CI.</p></div></li></ul></li></ol><p>:::</p><ol><li><p>Додайте конфігурацію модулів в <strong>CMakeLists.txt</strong> файл драйвера модуль:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">px4_add_module(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MODULE drivers__ulanding</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAIN ulanding_radar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SRCS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     ulanding.cpp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MODULE_CONFIG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     module.yaml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> )</span></span></code></pre></div></li></ol>`,12),t=[n];function p(r,h,o,d,c,k){return i(),a("div",null,t)}const u=s(l,[["render",p]]);export{g as __pageData,u as default};
