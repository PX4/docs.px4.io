import{_ as s,c as a,o as i,ab as n}from"./chunks/framework.CUflZczI.js";const u=JSON.parse('{"title":"Керування вихідним кодом","description":"","frontmatter":{},"headers":[],"relativePath":"uk/contribute/code.md","filePath":"uk/contribute/code.md"}'),e={name:"uk/contribute/code.md"},t=n(`<h1 id="керування-вихідним-кодом" tabindex="-1">Керування вихідним кодом <a class="header-anchor" href="#керування-вихідним-кодом" aria-label="Permalink to &quot;Керування вихідним кодом&quot;">​</a></h1><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2><p>Проект PX4 використовує модель розгалуження Git із трьома гілками:</p><ul><li><a href="https://github.com/PX4/PX4-Autopilot/tree/main" target="_blank" rel="noreferrer">основна</a> за замовчуванням нестабільна і бачить швидкий розвиток.</li><li><a href="https://github.com/PX4/PX4-Autopilot/tree/beta" target="_blank" rel="noreferrer">beta</a> було успішно протестовано. Він призначений для тестерів на польоти.</li><li><a href="https://github.com/PX4/PX4-Autopilot/tree/stable" target="_blank" rel="noreferrer">stable</a> вказує на останній стабільний реліз.</li></ul><p>Ми намагаємося зберегти <a href="https://www.atlassian.com/git/tutorials/rewriting-history" target="_blank" rel="noreferrer">лінійну історію через перебазування</a> та уникаємо <a href="https://docs.github.com/en/get-started/quickstart/github-flow" target="_blank" rel="noreferrer">потоку Github</a>. Однак через глобальну команду і швидкий розвиток ми можемо одночасно вдаватися до збоїв.</p><p>Щоб додати нові функції, <a href="https://docs.github.com/en/get-started/signing-up-for-github/signing-up-for-a-new-github-account" target="_blank" rel="noreferrer">зареєструйтеся на Github</a>, потім <a href="https://docs.github.com/en/get-started/quickstart/fork-a-repo" target="_blank" rel="noreferrer">розгалужте</a> репозиторій, <a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-and-deleting-branches-within-your-repository" target="_blank" rel="noreferrer">створіть нову гілку</a>, додайте свої <a href="#commits-and-commit-messages">зміни як коміти</a> і, нарешті, <a href="#pull-requests">надішліть запит на отримання даних</a>. Зміни будуть об&#39;єднані, коли вони пройдуть перевірку нашої <a href="https://en.wikipedia.org/wiki/Continuous_integration" target="_blank" rel="noreferrer">безперервної інтеграції</a>.</p><p>:::note Усі доповнення по коду мають здійснюватися відповідно до дозвільної <a href="https://opensource.org/licenses/BSD-3-Clause" target="_blank" rel="noreferrer">3-clause ліцензії BSD</a> і не повинні накладати жодних додаткових обмежень на його використання.</p><h2 id="стиль-коду" tabindex="-1">Стиль Коду <a class="header-anchor" href="#стиль-коду" aria-label="Permalink to &quot;Стиль Коду&quot;">​</a></h2><p>PX4 використовує <a href="https://google.github.io/styleguide/cppguide.html" target="_blank" rel="noreferrer">Google C++ посібник стилю </a>з наступними (мінімальними) модифікаціями:</p><p>:::note</p><p>Не весь вихідний код PX4 відповідає посібнику зі стилю, але будь-який <em>новий код</em>, який ви пишете, має відповідати цьому — як у нових, так і в існуючих файлах. Якщо ви оновлюєте існуючий файл, від вас не вимагається, щоб весь файл відповідав інструкції зі стилю, а лише код, який ви змінили.</p><p>:::</p><h3 id="вкладки" tabindex="-1">Вкладки <a class="header-anchor" href="#вкладки" aria-label="Permalink to &quot;Вкладки&quot;">​</a></h3><ul><li>Вкладки використовуються для відступу (еквівалентно 8 пробілу).</li><li>Пробіли використовуються для вирівнювання.</li></ul><h3 id="довжина-рядка" tabindex="-1">Довжина рядка <a class="header-anchor" href="#довжина-рядка" aria-label="Permalink to &quot;Довжина рядка&quot;">​</a></h3><ul><li>Максимальна довжина рядка становить 120 символів.</li></ul><h3 id="розширення-фаилів" tabindex="-1">Розширення файлів <a class="header-anchor" href="#розширення-фаилів" aria-label="Permalink to &quot;Розширення файлів&quot;">​</a></h3><ul><li>Вихідні файли використовують розширення <code>*.cpp</code> замість <code>*.cc</code>.</li></ul><h3 id="іменування-функціи-та-методів" tabindex="-1">Іменування функцій та методів <a class="header-anchor" href="#іменування-функціи-та-методів" aria-label="Permalink to &quot;Іменування  функцій та методів&quot;">​</a></h3><ul><li><code>lowerCamelCase()</code> використовується для функцій і методів, щоб <em>візуально</em> відрізняти їх від <code>ClassConstructors()</code> і <code>ClassNames</code>.</li></ul><h3 id="імена-змінних-членів-приватного-класу" tabindex="-1">Імена змінних членів приватного класу <a class="header-anchor" href="#імена-змінних-членів-приватного-класу" aria-label="Permalink to &quot;Імена змінних членів приватного класу&quot;">​</a></h3><ul><li><code>_underscore_prefixed_snake_case</code> використовується для імен змінних членів приватного класу, на відміну від <code>underscore_postfixed_</code>.</li></ul><h3 id="ключові-слова-класу" tabindex="-1">Ключові слова класу <a class="header-anchor" href="#ключові-слова-класу" aria-label="Permalink to &quot;Ключові слова класу&quot;">​</a></h3><ul><li><em>zero</em> пробілів перед ключовими словами <code>public:</code>, <code>private:</code> або <code>protected:</code></li></ul><h3 id="приклад-сніпета-коду" tabindex="-1">Приклад сніпета коду <a class="header-anchor" href="#приклад-сніпета-коду" aria-label="Permalink to &quot;Приклад сніпета коду&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@brief</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Description of what this function does.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">input_param</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Clear description of the input [units]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Whatever we are returning [units]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> doSomething</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> input_param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in_scope_variable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> input_param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kConstantFloat;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in_scope_variable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _private_member_variable;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setPrivateMember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> private_member_variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { _private_member_variable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> private_member_variable; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Whatever we are &quot;getting&quot; [units]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getPrivateMember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _private_member_variable; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Clear description of the constant if not completely obvious from the name [units]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> constexpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kConstantFloat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Clear description of the variable if not completely obvious from the name [units]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _private_member_variable{...};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="вбудована-документація" tabindex="-1">Вбудована документація <a class="header-anchor" href="#вбудована-документація" aria-label="Permalink to &quot;Вбудована документація&quot;">​</a></h2><p>PX4 розробників заохочують до створення відповідної документації через джерело.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Стандарти документації вихідного коду не застосовуються, і код в даний час непослідовно документований. Ми б хотіли зробити краще!</p></div><p>В даний час у нас є два типи базової документації:</p><ul><li><p>Методи <code>PRINT_MODULE_*</code> використовуються як для інструкцій щодо використання модуля, так і для <a href="./../modules/modules_main.html">Modules &amp; Довідник команд</a> у цьому посібнику.</p><ul><li>API задокументований <a href="https://github.com/PX4/PX4-Autopilot/blob/v1.8.0/src/platforms/px4_module.h#L381" target="_blank" rel="noreferrer">у вихідному коді тут</a>.</li><li>Хороші приклади використання включають <a href="./../modules/module_template.html">шаблон програми/модуля</a> та файли, посилання на які наведено в довідці модулів.</li></ul></li><li><p>Ми заохочуємо іншу документацію у вихідному коді <em>де вона додає цінність/не є зайвою</em>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Розробники повинні називати об’єкти C++ (класи, функції, змінні тощо) так, щоб можна було зрозуміти їхню мету – зменшуючи потребу в явній документації.</p></div></li></ul><p>:::</p><ul><li>Не додавати документацію, яку тривіально можна вивести з імен об&#39;єктів С++.</li><li>ЗАВЖДИ вказуйте одиниці змінних, констант і параметрів введення/повернення там, де вони визначені.</li><li>ЗАВЖДИ вказуйте одиниці змінних, постійних і параметрів введення/повернення там, де вони визначені.</li><li>Теги <a href="http://www.doxygen.nl/" target="_blank" rel="noreferrer">Doxgyen</a> слід використовувати, якщо потрібна документація: <code>@class</code>, <code>@file</code>, <code>@param</code>, <code> @return</code>, <code>@brief</code>, <code>@var</code>, <code>@see</code>, <code>@note</code>. Хороший приклад використання це <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/events/send_event.h" target="_blank" rel="noreferrer">src/modules/events/send_event.h</a>.</li></ul><p>Будь ласка, уникайте &quot;магічних чисел&quot;, наприклад, звідки прийшло це число? А як щодо множника при введенні ручки повороту?</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fabsf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(yaw_stick_normalized_input) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        yaw_rate_setpoint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        yaw_rate_setpoint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.52</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yaw_stick_normalized_input;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Натомість визначте цифри як константи з відповідним контекстом у заголовку:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Порогове значення мертвої зони для нормалізованого введення повороту</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> constexpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kYawStickDeadzone </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [рад/с] Порогове значення мертвої зони для нормалізованого введення повороту</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> constexpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kMaxYawRate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">radians</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>і оновіть реалізацію вихідного коду.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fabsf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(yaw_stick_normalized_input) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kYawStickDeadzone) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        yaw_rate_setpoint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        yaw_rate_setpoint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kMaxYawRate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yaw_stick_normalized_input;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="коміти-та-повідомлення-комітів" tabindex="-1">Коміти та повідомлення комітів <a class="header-anchor" href="#коміти-та-повідомлення-комітів" aria-label="Permalink to &quot;Коміти та повідомлення комітів&quot;">​</a></h2><p>Використовуйте описові повідомлення з кількома абзацами для всіх нетривіальних змін. Добре структуруйте їх, щоб вони мали сенс у підсумку в один рядок, але також надавали повну деталізацію.</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Компонент: Поясни зміни в одному реченні. Виправлення #1234</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Підготуйте програмний компонент до початку підсумкового огляду</span></span>
<span class="line"><span>або за назвою модуля, або описом його.</span></span>
<span class="line"><span>(e.g. &quot;mc_att_ctrl&quot; or &quot;multicopter attitude controller&quot;).</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Якщо номер задачі додається як &lt;Fixes #1234&gt;, Github</span></span>
<span class="line"><span>автоматично закриє проблему, коли буде зроблено </span></span>
<span class="line"><span>об’єднання коміту з виправленням  з головною гілкою(master branch).</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Тіло повідомлення може містити кілька абзаців.</span></span>
<span class="line"><span>Детально опишіть те, що ви змінили. Зв’язати помилки і </span></span>
<span class="line"><span>журнали польотів, які пов&#39;язані з цим виправленням або з результатами тесту</span></span>
<span class="line"><span>даного коміту.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Опишіть зміни та чому ви їх змінили, уникайте</span></span>
<span class="line"><span>перефразуйте зміну коду (Добре: «Додає додаткову</span></span>
<span class="line"><span>перевірку безпеки для транспортних засобів із низькою якістю прийому GPS».</span></span>
<span class="line"><span>Погано: &quot;Додано gps_reception_check() function&quot;).</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Повідомив: Ім&#39;я &lt;email@px4.io&gt;</span></span></code></pre></div><p><strong>Використовуйте <strong><code>git commit -s</code></strong>, щоб підписати всі свої коміти.</strong> Це додасть <code>signed-off-by:</code> до вашого ім&#39;я та електронну пошту в останньому рядку.</p><p>Цей посібник із фіксації базується на найкращих практиках щодо ядра Linux та інших <a href="https://github.com/torvalds/subsurface-for-dirk/blob/a48494d2fbed58c751e9b7e8fbff88582f9b2d02/README#L88-L115" target="_blank" rel="noreferrer">проектів, які підтримує</a> Лінус Торвальдс.</p><h2 id="запити-на-злиття" tabindex="-1">Запити на злиття <a class="header-anchor" href="#запити-на-злиття" aria-label="Permalink to &quot;Запити на злиття&quot;">​</a></h2><p>Github <a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests" target="_blank" rel="noreferrer">запити на злиття (PRs)</a> - це основний механізм, який використовується для надсилання нових функціональних можливостей і виправлень до PX4.</p><p>Вони містять новий набір <a href="#commits-and-commit-messages">комітів</a> у вашій гілці (щодо основної гілки) та опис змін.</p><p>Опис повинен включати:</p><ul><li>Огляд того, що доставляють дані зміни; достатньо для розуміння широкої мети коду</li><li>Посилання на пов&#39;язані з питаннями або підтримка інформації.</li><li>Інформація про те як було виконано тестування PR функціональності з посиланнями на журнали польотів.</li><li>Якщо це можливо, результати загальних <a href="./../test_and_ci/test_flights.html">тестових польотів</a> як до, так і після зміни.</li></ul>`,49),l=[t];function p(h,r,k,o,d,c){return i(),a("div",null,l)}const E=s(e,[["render",p]]);export{u as __pageData,E as default};
