import{_ as e,c as t,o as i,ab as o}from"./chunks/framework.CUflZczI.js";const _=JSON.parse('{"title":"멀티콥터 설정점 튜닝(궤적 생성기)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/config_mc/mc_trajectory_tuning.md","filePath":"ko/config_mc/mc_trajectory_tuning.md"}'),a={name:"ko/config_mc/mc_trajectory_tuning.md"},n=o('<h1 id="멀티콥터-설정점-튜닝-궤적-생성기" tabindex="-1">멀티콥터 설정점 튜닝(궤적 생성기) <a class="header-anchor" href="#멀티콥터-설정점-튜닝-궤적-생성기" aria-label="Permalink to &quot;멀티콥터 설정점 튜닝(궤적 생성기)&quot;">​</a></h1><p>This document provides an overview of the multicopter tuning parameters that change the <em>user experience</em>: how fast the vehicle reacts to stick movements or direction changes in missions, the maximum allowed velocity, etc.</p><p>In other words, this topic explains how to tune the parameters that affect the value of a <em>desired setpoint</em> rather than those that affect how well the vehicle <em>tracks</em> the setpoint).</p><p>이러한 설정값을 생성하는 알고리즘을 &quot;궤적 생성기&quot;라고 합니다.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>이 가이드는 고급 사용자와 전문가를 위한 것입니다.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Follow the instructions in the <a href="./../config_mc/pid_tuning_guide_multicopter.html">Multicopter PID Tuning Guide</a> <em>before</em> doing any of the tuning described here. 이러한 튜닝 매개변수를 사용하여 잘못된 추적이나 진동을 수정하지 마십시오!</p></div><h2 id="개요" tabindex="-1">개요 <a class="header-anchor" href="#개요" aria-label="Permalink to &quot;개요&quot;">​</a></h2><p>The input to the P/PID controller is a <em>desired setpoint</em> that the vehicle should attempt to track. <a href="./../config_mc/pid_tuning_guide_multicopter.html">PID 튜닝</a> ( &quot;낮은 레벨 튜닝&quot;)은 목표 설정 값과 기체 상태 추정값 사이의 오류를 줄이는 것을 목표로합니다.</p><p>The <em>desired setpoint</em> passed to the P/PID controller is itself calculated from a <em>demanded setpoint</em> based on a stick position (in RC modes) or from a mission command. 요구되는 설정값은 빨리 변경 될 수 있습니다 (예 : 사용자가 스틱을 &quot;단계&quot; 0에서 최대값으로 이동하는 경우). 원하는 설정값이 &quot;램프&quot;로 변경되면 기체의 비행 특성이 더 좋아집니다.</p><p><em>Setpoint value tuning</em> (&quot;higher level tuning&quot;) is used to specify the mapping between the <em>demanded</em> and the <em>desired</em> setpoints - i.e. defining the &quot;ramp&quot; at which the desired setpoint follows the demanded setpoint.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="./../config_mc/pid_tuning_guide_multicopter.html">P/PID 게인</a>을 잘못 조정하면 불안정해 질 수 있습니다. Poorly tuned <em>setpoint values</em> cannot result in instability, but may result in either very jerky or very unresponsive reactions to setpoint changes.</p></div><p><a id="modes"></a></p><h2 id="비행-모드-궤적-지원" tabindex="-1">비행 모드 궤적 지원 <a class="header-anchor" href="#비행-모드-궤적-지원" aria-label="Permalink to &quot;비행 모드 궤적 지원&quot;">​</a></h2><p><a href="./../flight_modes/mission.html">미션 모드</a>는 항상 <a href="./../config_mc/mc_jerk_limited_type_trajectory.html">저크 제한</a> 궤적을 사용하였습니다.</p><p><a href="./../flight_modes_mc/position.html">Position mode</a> supports the <a href="#position-mode-implementations">implementations</a> listed below. It uses the acceleration based mapping by default; other types can be set using <a href="./../advanced_config/parameter_reference.html#MPC_POS_MODE">MPC_POS_MODE</a>.</p><p><a href="./../flight_modes_mc/altitude.html">Altitude mode</a> similarly supports the <a href="#altitude-mode-implementations">implementations</a> selected by <a href="./../advanced_config/parameter_reference.html#MPC_POS_MODE">MPC_POS_MODE</a>, but <em>only</em> for smoothing the vertical component (i.e. when controlling the altitude).</p><p>다른 모드는 궤도 튜닝을 지원하지 않습니다.</p><h2 id="position-mode-implementations" tabindex="-1">Position Mode Implementations <a class="header-anchor" href="#position-mode-implementations" aria-label="Permalink to &quot;Position Mode Implementations&quot;">​</a></h2><p>The following list provides an <em>overview</em> of the different implementations of how the stick input is interpreted and turned into trajectory setpoints:</p><ul><li>Acceleration based (Default) <ul><li>Horizontal stick input mapped to acceleration setpoints.</li><li>Intuitive stick feel because it&#39;s like pushing the vehicle around.</li><li>No unexpected tilt changes upon reaching travel speed velocity.</li><li>Vertical stick input mapped with jerk-limited trajectory.</li><li>Set in position mode using <code>MPC_POS_MODE=4</code>.</li></ul></li><li><a href="./../config_mc/mc_jerk_limited_type_trajectory.html">Jerk-limited</a><ul><li>Used when smooth motion is required (e.g.: filming, mapping, cargo).</li><li>Generates symmetric smooth S-curves where the jerk and acceleration limits are always guaranteed.</li><li>May not be suitable for vehicles/use-cases that require a faster response - e.g. race quads.</li><li>Set in position mode using <code>MPC_POS_MODE=3</code>.</li></ul></li><li><strong>Simple position control</strong><ul><li>Sticks map directly to velocity setpoints without smoothing.</li><li>Useful for velocity control tuning.</li><li>Set in position mode using <code>MPC_POS_MODE=0</code>.</li></ul></li></ul><h2 id="altitude-mode-implementations" tabindex="-1">Altitude Mode Implementations <a class="header-anchor" href="#altitude-mode-implementations" aria-label="Permalink to &quot;Altitude Mode Implementations&quot;">​</a></h2><p>Analogously to <a href="#position-mode-implementations">position mode implementations</a> these are the implementations for interpreting vertical stick input:</p><ul><li><a href="./../config_mc/mc_jerk_limited_type_trajectory.html">Jerk-limited</a><ul><li>Smoothed vertical input.</li><li>Set in altitude mode with <code>MPC_POS_MODE</code> 3 or 4.</li></ul></li><li><strong>Simple altitude control</strong><ul><li>Unsmoothed vertical input.</li><li>Set in altitude mode only when using <code>MPC_POS_MODE=0</code>.</li></ul></li></ul>',23),l=[n];function s(r,m,c,d,p,h){return i(),t("div",null,l)}const f=e(a,[["render",s]]);export{_ as __pageData,f as default};
