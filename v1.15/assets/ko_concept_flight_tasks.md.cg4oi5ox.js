import{_ as s,c as i,o as a,ab as t}from"./chunks/framework.CUflZczI.js";const E=JSON.parse('{"title":"비행 작업","description":"","frontmatter":{},"headers":[],"relativePath":"ko/concept/flight_tasks.md","filePath":"ko/concept/flight_tasks.md"}'),n={name:"ko/concept/flight_tasks.md"},l=t(`<h1 id="비행-작업" tabindex="-1">비행 작업 <a class="header-anchor" href="#비행-작업" aria-label="Permalink to &quot;비행 작업&quot;">​</a></h1><p><em>Flight Tasks</em> are used within <a href="./../concept/flight_modes.html">Flight Modes</a> to provide specific movement behaviours: e.g. follow me, or flight smoothing.</p><h2 id="개요" tabindex="-1">개요 <a class="header-anchor" href="#개요" aria-label="Permalink to &quot;개요&quot;">​</a></h2><p>비행 작업은 기본 클래스 <a href="https://github.com/PX4/PX4-Autopilot/blob/master/src/modules/flight_mode_manager/tasks/FlightTask/FlightTask.hpp" target="_blank" rel="noreferrer">FlightTask</a>에서 파생된 비행 작업 프레임워크의 클래스입니다. 목표는 각 작업이 특정 모드의 기체 동작을 구현하는 임의의 입력 데이터에서 콘트롤러에 대한 설정값을 생성하는 것입니다. 프로그래머는 일반적으로 기본 작업의 최소 구현을 호출하고 원하는 동작의 구현으로 확장하여 <code>activate()</code> 및 <code>update()</code> 가상 메서드를 재정의합니다. <code>activate()</code> 메서드는 작업 전환시에 호출되며, 상태를 초기화하고 이전 작업이 방금 적용한 전달된 설정점에서 부드럽게 인계되도록 합니다.</p><p><code>update()</code>는 실행 중 모든 루프 반복에서 호출되며, 설정값을 생성하는 핵심 기능을 구현합니다.</p><p>규칙에 따라 작업은 작업 이름을 따서 명명된 <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/flight_mode_manager/tasks" target="_blank" rel="noreferrer">PX4-Autopilot/src/modules/flight_mode_manager/tasks</a>의 하위 폴더에 포함되며, 소스 파일에는 접두사 &quot;FlightTask&quot;로 이름이 지정됩니다.</p><p>:::note PX4 개발자 회의의 비디오 개요는 <a href="#video">아래에서</a> 제공합니다. :::</p><h2 id="비행-작업-생성" tabindex="-1">비행 작업 생성 <a class="header-anchor" href="#비행-작업-생성" aria-label="Permalink to &quot;비행 작업 생성&quot;">​</a></h2><p>The instructions below might be used to create a task named <em>MyTask</em>:</p><ol><li><p><a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/flight_mode_manager/tasks" target="_blank" rel="noreferrer">PX4-Autopilot/src/modules/flight_mode_manager/tasks</a>에 새 비행 작업에 대한 디렉터리를 생성합니다. 규칙에 따라 디렉토리 이름은 작업 이름을 따서 지정되므로 <strong>/MyTask</strong>라고 합니다.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot/src/lib/flight_tasks/tasks/MyTask</span></span></code></pre></div></li><li><p>Create empty source code and <em>cmake</em> files for the new flight task in the <em>MyTask</em> directory using the prefix &quot;FlightTask&quot;:</p><ul><li>CMakeLists.txt</li><li>FlightTaskMyTask.hpp</li><li>FlightTaskMyTask.cpp</li></ul></li><li><p>Update <strong>CMakeLists.txt</strong> for the new task</p><ul><li><p>Copy the contents of the <strong>CMakeLists.txt</strong> for another task - e.g. <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/flight_mode_manager/tasks/Orbit/CMakeLists.txt" target="_blank" rel="noreferrer">Orbit/CMakeLists.txt</a></p></li><li><p>Update the copyright to the current year</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">############################################################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   Copyright (c) 2021 PX4 Development Team. All rights reserved.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span></code></pre></div></li><li><p>Modify the code to reflect the new task - e.g. replace <code>FlightTaskOrbit</code> with <code>FlightTaskMyTask</code>. The code will look something like this:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">px4_add_library(FlightTaskMyTask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    FlightTaskMyTask.cpp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">target_link_libraries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FlightTaskMyTask </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PUBLIC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FlightTask)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">target_include_directories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FlightTaskMyTask </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PUBLIC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \${CMAKE_CURRENT_SOURCE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul></li><li><p>헤더 파일 업데이트(이 경우 <strong>FlightTaskMyTask.hpp</strong>): 대부분의 작업은 가상 메서드 <code>activate()</code> 및 <code>update()</code>를 다시 구현하며, 이 예에서는 개인 변수도 있습니다.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#pragma</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> once</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;FlightTask.hpp&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlightTaskMyTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlightTask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  FlightTaskMyTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  virtual</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ~FlightTaskMyTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> activate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> trajectory_setpoint_s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">last_setpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _origin_z{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div></li><li><p>cpp 파일을 적절하게 업데이트 합니다. 이 예는 단순히 작업 메서드가 호출되었음을 나타내는 <strong>FlightTaskMyTask.cpp</strong>의 간단한 구현을 제공합니다.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;FlightTaskMyTask.hpp&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlightTaskMyTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">activate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> trajectory_setpoint_s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">last_setpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlightTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">activate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(last_setpoint);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  PX4_INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FlightTaskMyTask activate was called! ret: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ret);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // report if activation was successful</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ret;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlightTaskMyTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  PX4_INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FlightTaskMyTask update was called!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // report update</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>Add the new task to the list of tasks to be built in <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/flight_mode_manager/CMakeLists.txt#L40" target="_blank" rel="noreferrer">PX4-Autopilot/src/modules/flight_mode_manager/CMakeLists.txt</a>:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> px4_constrained_flash_build)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(APPEND flight_tasks_all</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  AutoFollowTarget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Orbit</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MyTask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div></li><li><p>작업이 호출되도록 비행 모드를 업데이트합니다. 일반적으로, 매개변수는 특정 비행 작업을 사용해야 하는 시기를 선택합니다.</p><p>예를 들어, 멀티콥터 위치 모드에서 새로운 <code>MyTask</code>를 활성화하려면:</p><ul><li><p>Update <code>MPC_POS_MODE</code> (<a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mc_pos_control/multicopter_position_mode_params.c" target="_blank" rel="noreferrer">multicopter_position_mode_params.c</a>) to add an option for selecting &quot;MyTask&quot; if the parameter has a previously unused value like 5:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @value </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Direct velocity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @value </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Smoothed velocity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @value </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Acceleration based</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @value </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> My task</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @group Multicopter Position Control</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PARAM_DEFINE_INT32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MPC_POS_MODE, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><p><code>_param_mpc_pos_mode</code>에 올바른 값이 있을 때 작업을 활성화하려면 <a href="https://github.com/PX4/PX4-Autopilot/blob/master/src/modules/flight_mode_manager/FlightModeManager.cpp#L266-L285" target="_blank" rel="noreferrer">FlightModeManager.cpp</a> 매개변수의 스위치에 새 옵션에 대한 사례를 추가하십시오.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// manual position control</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (_param_mpc_pos_mode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     error </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> switchTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FlightTaskIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ManualPositionSmoothVel);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Add case for new task: MyTask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     error </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> switchTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FlightTaskIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MyTask);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div></li></ul></li></ol><h2 id="신규-비행-작업-테스트" tabindex="-1">신규 비행 작업 테스트 <a class="header-anchor" href="#신규-비행-작업-테스트" aria-label="Permalink to &quot;신규 비행 작업 테스트&quot;">​</a></h2><p>비행 작업을 테스트하려면, 작업이 활성화된 상태에서 기체를 실행하여야 합니다. For the example above, this means setting the parameter <code>MPC_POS_MODE</code> to 5, taking off, and switching the vehicle to <a href="./../flight_modes_mc/position.html">Position mode</a>.</p><p>:::note 위에 정의된 작업은 시뮬레이터에서만 테스트하여야 합니다. 코드는 실제로 설정값을 생성하지 않으므로 기체는 비행하지 않습니다. :::</p><p>Build SITL simulation (gazebo-classic)</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div><p>Open QGroundControl (if not open, no message information will be printed out). In the console, takeoff and switch to Position mode:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pxh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commander</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> takeoff</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pxh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commander</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> posctl</span></span></code></pre></div><p>The console will continuously display: <code>INFO [FlightTaskMyTask] FlightTaskMyTask update was called!</code>. If you want to change to another flight mode, you can type a command to change the mode, such as <code>commander mode altctl</code>.</p><h2 id="비디오" tabindex="-1">비디오 <a class="header-anchor" href="#비디오" aria-label="Permalink to &quot;비디오&quot;">​</a></h2><p>다음 비디오는 PX4의 비행 작업에 대한 개요를 제공합니다. 첫 번째는 PX4 v1.9의 비행 작업 프레임워크 상태를 다룹니다. 두 번째는 PX4 v1.11의 변경 사항을 다루는 업데이트입니다.</p><h3 id="px4-flight-task-architecture-개요-px4-개발자-회의-2019" tabindex="-1">PX4 Flight Task Architecture 개요(PX4 개발자 회의 2019) <a class="header-anchor" href="#px4-flight-task-architecture-개요-px4-개발자-회의-2019" aria-label="Permalink to &quot;PX4 Flight Task Architecture 개요(PX4 개발자 회의 2019)&quot;">​</a></h3><p>PX4 v1.9의 비행 모드 작동 방식 설명(Dennis Mannhart, Matthias Grob).</p><p>@<a href="https://youtu.be/-dkQG8YLffc" target="_blank" rel="noreferrer">유투브</a></p><h3 id="센서에서-모터에-이르는-멀티콥터-제어-개요-px4-가상-개발자-회의-2020" tabindex="-1">센서에서 모터에 이르는 멀티콥터 제어 개요(PX4 가상 개발자 회의 2020) <a class="header-anchor" href="#센서에서-모터에-이르는-멀티콥터-제어-개요-px4-가상-개발자-회의-2020" aria-label="Permalink to &quot;센서에서 모터에 이르는 멀티콥터 제어 개요(PX4 가상 개발자 회의 2020)&quot;">​</a></h3><p>@<a href="https://youtu.be/orvng_11ngQ?t=560" target="_blank" rel="noreferrer">유투브</a></p><p>The relevant section of this video is an update of flight tasks in PX4 v11.1 at (9min 20sec). <a href="https://static.sched.com/hosted_files/px4developersummitvirtual2020/1b/PX4%20Developer%20Summit%202020%20-%20Overview%20of%20multicopter%20control%20from%20sensors%20to%20motors.pdf" target="_blank" rel="noreferrer">슬라이드는 이 PDF을 참고하십시오.</a> - 슬라이드 9와 12가 관련이 있습니다.</p>`,26),e=[l];function h(p,k,r,o,d,g){return a(),i("div",null,e)}const y=s(n,[["render",h]]);export{E as __pageData,y as default};
