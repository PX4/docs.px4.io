import{_ as s,c as i,o as a,ab as h}from"./chunks/framework.CUflZczI.js";const o=JSON.parse('{"title":"Відлагодження симуляції","description":"","frontmatter":{},"headers":[],"relativePath":"uk/debug/simulation_debugging.md","filePath":"uk/debug/simulation_debugging.md"}'),l={name:"uk/debug/simulation_debugging.md"},n=h(`<h1 id="відлагодження-симуляціі" tabindex="-1">Відлагодження симуляції <a class="header-anchor" href="#відлагодження-симуляціі" aria-label="Permalink to &quot;Відлагодження симуляції&quot;">​</a></h1><p>Поскільки симуляція виконується на машині-хості, всі інструменти розробки робочого стола доступні.</p><h2 id="clang-address-sanitizer-mac-os-linux" tabindex="-1">CLANG Address Sanitizer (Mac OS, Linux) <a class="header-anchor" href="#clang-address-sanitizer-mac-os-linux" aria-label="Permalink to &quot;CLANG Address Sanitizer (Mac OS, Linux)&quot;">​</a></h2><p>Засіб очищення адрес Clang може допомогти знайти помилки вирівнювання (шини) та інші помилки пам’яті, такі як помилки сегментації. Команда нижче встановлює правильні параметри компіляції.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # only required on first address sanitizer run after a normal build</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_ASAN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><h2 id="valgrind" tabindex="-1">Valgrind <a class="header-anchor" href="#valgrind" aria-label="Permalink to &quot;Valgrind&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> valgrind</span></span></code></pre></div><p>або</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> valgrind</span></span></code></pre></div><p>Для використання valgrind під час симуляції SITL:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim___valgrind</span></span></code></pre></div><h2 id="запустіть-gazebo-classic-sitl-без-відлагоджувача" tabindex="-1">Запустіть Gazebo Classic SITL без відлагоджувача <a class="header-anchor" href="#запустіть-gazebo-classic-sitl-без-відлагоджувача" aria-label="Permalink to &quot;Запустіть Gazebo Classic SITL без відлагоджувача&quot;">​</a></h2><p>За замовчуванням SITL запускається без приєднаного відлагоджувача при використанні будь-якого симулятора:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><p>Для Gazebo Classic (тільки) ви також можете запустити симулятор з прикріпленим відладчиком. Зверніть увагу, що ви повинні вказати тип транспортного засобу в цільовому симуляторі, як показано нижче:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_gdb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_lldb</span></span></code></pre></div><p>Це запустить відлагоджувач та запустить додаток SITL з Gazebo та симулятором Iris. Для того щоб увійти в оболонку відладки та зупинити виконання, натисніть <code>CTRL-C</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Process</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16529</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stopped</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thread </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#1: tid = 0x114e6d, 0x00007fff90f4430a libsystem_kernel.dylib\`__read_nocancel + 10, name = &#39;px4&#39;, queue = &#39;com.apple.main-thread&#39;, stop reason = signal SIGSTOP</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    frame</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #0: 0x00007fff90f4430a libsystem_kernel.dylib\`__read_nocancel + 10</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">libsystem_kernel.dylib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">__read_nocancel:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0x7fff90f4430a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: jae    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x7fff90f44314</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+20&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    0x7fff90f4430c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: movq   %rax, %rdi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    0x7fff90f4430f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">5&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: jmp    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x7fff90f3fc53</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cerror_nocancel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    0x7fff90f44314</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: retq</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lldb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span></code></pre></div><p>Щоб не дозволити плануванню DriverFrameworks втручатися у сеанс налагодження, <code>SIGCONT</code> повинен бути замаскований у LLDB та GDB:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lldb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) process handle SIGCONT -n false -p false -s false</span></span></code></pre></div><p>Або у випадку GDB:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gdb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) обробка SIGCONT noprint nostop</span></span></code></pre></div><p>Після цього оболонки lldb або gdb працюють як звичайні сеанси, будь ласка, зверніться до документації LLDB / GDB.</p><p>Останній параметр, триплет &lt;viewer_model_debugger&gt;, фактично передається make у каталозі збірки, отже</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_iris_gdb</span></span></code></pre></div><p>еквівалентний з</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # Configure with cmake</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> classic_iris_gdb</span></span></code></pre></div><p>Повний список доступних цілей make в каталозі збірки можна отримати за допомогою:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span></span></code></pre></div><h2 id="прикріплення-gdb-до-запущеного-sitl" tabindex="-1">Прикріплення GDB до запущеного SITL <a class="header-anchor" href="#прикріплення-gdb-до-запущеного-sitl" aria-label="Permalink to &quot;Прикріплення GDB до запущеного SITL&quot;">​</a></h2><p>Ви також можете розпочати симуляцію, а <em>потім</em> прикріпити <code>gdb</code>:</p><ol><li><p>У одному термінальному вікні введіть команду для запуску вашої симуляції:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div><p>Під час виконання сценарію зверніть увагу на вихідний текст <strong>SITL COMMAND:</strong>, розташований праворуч від великого тексту &quot;PX4&quot;. Він перерахує місце розташування вашого файлу px4 bin для подальшого використання.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SITL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> COMMAND:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;px4 bin file&gt;&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;build dir&gt;&quot;/etc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">______</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  __</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   __</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    ___</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ___</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\ \\ \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">V</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  __/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\ \\ \\_</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     \\/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   \\/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> starting.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [px4] startup script: /bin/sh etc/init.d-posix/rcS 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [init] found model autostart file as SYS_AUTOSTART=10015</span></span></code></pre></div></li><li><p>Відкрийте ще один термінал та введіть:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span></code></pre></div><p>Вам слід зафіксувати PID процесу з назвою &quot;PX4&quot;</p><p>(У цьому прикладі це 14149)</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">atlas:~/px4/main/PX4-Autopilot$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    PID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TTY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          TIME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CMD</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1796</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tty2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     00:01:59</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Xorg</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1836</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tty2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnome-session-b</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">14027</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">14077</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">14078</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">14079</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">14090</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">14091</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">14095</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:01:23</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gzserver</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">14149</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:02:48</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">14808</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span></code></pre></div></li><li><p>Потім введіть у тому ж вікні</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gdb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [px4 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (from </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">step</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) here]</span></span></code></pre></div><p>Наприклад,</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gdb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/atlas/px4/base/PX4-Autopilot/build/px4_sitl_default/bin/px4</span></span></code></pre></div><p>Тепер ви можете прикріпитися до екземпляра PX4, введіть PID, вказаний у кроці 2.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [PID </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4]</span></span></code></pre></div><p>Тепер у вас повинен бути інтерфейс GDB для налагодження.</p></li></ol><h2 id="оптимізація-компілятора" tabindex="-1">Оптимізація компілятора <a class="header-anchor" href="#оптимізація-компілятора" aria-label="Permalink to &quot;Оптимізація компілятора&quot;">​</a></h2><p>Можливо приглушити оптимізацію компілятора для вказаних виконуваних файлів та/або модулів (доданих за допомогою cmake з <code>add_executable</code> або <code>add_library</code>) при налаштуванні для <code>posix_sitl_*</code>. Це може бути зручним, коли необхідно пройтися по коду з відлагоджувачем або роздрукувати змінні, які інакше були б оптимізовані.</p><p>Для цього встановіть змінну середовища <code>PX4_NO_OPTIMIZATION</code> як список регулярних виразів, розділених крапкою з комою, які відповідають цілям, які потрібно компілювати без оптимізації. Ця змінна середовища ігнорується, коли конфігурація не є <code>posix_sitl_*</code>.</p><p>Наприклад,</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PX4_NO_OPTIMIZATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;px4;^modules__uORB;^modules__systemlib$&#39;</span></span></code></pre></div><p>would suppress optimization of the targets: platforms__posix__px4_layer, modules__systemlib, modules__uORB, examples__px4_simple_app, modules__uORB__uORB_tests and px4.</p><p>Цілі, які можуть відповідати цим регулярним виразам, можна надрукувати за допомогою команди:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/posix_sitl_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list_cmake_targets</span></span></code></pre></div>`,40),p=[n];function t(e,k,d,F,g,r){return a(),i("div",null,p)}const y=s(l,[["render",t]]);export{o as __pageData,y as default};
