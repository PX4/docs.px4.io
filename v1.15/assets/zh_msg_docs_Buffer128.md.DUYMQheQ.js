import{_ as s,c as a,o as e,ab as i}from"./chunks/framework.CUflZczI.js";const f=JSON.parse('{"title":"Buffer128 (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/msg_docs/Buffer128.md","filePath":"zh/msg_docs/Buffer128.md"}'),t={name:"zh/msg_docs/Buffer128.md"},n=i(`<h1 id="buffer128-uorb-message" tabindex="-1">Buffer128 (UORB message) <a class="header-anchor" href="#buffer128-uorb-message" aria-label="Permalink to &quot;Buffer128 (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/Buffer128.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp		# time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 len                       # length of data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint32 MAX_BUFLEN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 128</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">uint8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] data                 # data</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># TOPICS voxl2_io_data</span></span></code></pre></div>`,3),l=[n];function p(r,h,o,c,d,k){return e(),a("div",null,l)}const g=s(t,[["render",p]]);export{f as __pageData,g as default};
