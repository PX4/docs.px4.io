import{_ as s,c as i,o as a,ab as n}from"./chunks/framework.CUflZczI.js";const c=JSON.parse('{"title":"Тестування інтеграції з використанням ROS","description":"","frontmatter":{},"headers":[],"relativePath":"uk/test_and_ci/integration_testing.md","filePath":"uk/test_and_ci/integration_testing.md"}'),t={name:"uk/test_and_ci/integration_testing.md"},l=n(`<h1 id="тестування-інтеграціі-з-використанням-ros" tabindex="-1">Тестування інтеграції з використанням ROS <a class="header-anchor" href="#тестування-інтеграціі-з-використанням-ros" aria-label="Permalink to &quot;Тестування інтеграції з використанням ROS&quot;">​</a></h1><p>У цій темі пояснюється, як запускати (і розширювати) інтеграційні тести PX4 на основі ROS.</p><div class="info custom-block"><p class="custom-block-title">Під час написання нових тестів бажано <a href="./../test_and_ci/integration_testing_mavsdk.html">тестування інтеграції MAVSDK</a>. Використовуйте тестову інтеграційну структуру на основі ROS для випадків використання, які <em>вимагають</em> ROS (наприклад, уникнення об’єктів).</p><p>Усі тести інтеграції PX4 виконуються автоматично нашою системою <a href="./../test_and_ci/continous_integration.html">Безперервної інтеграції</a>.</p></div><h2 id="попередня-підготовка" tabindex="-1">Попередня підготовка: <a class="header-anchor" href="#попередня-підготовка" aria-label="Permalink to &quot;Попередня підготовка:&quot;">​</a></h2><ul><li><a href="./../sim_jmavsim/">JSBSim симулятор</a></li><li><a href="./../sim_gazebo_classic/">Gazebo Класичний Симулятор </a></li><li><a href="./../simulation/ros_interface.html">ROS та MAVROS</a></li></ul><h2 id="виконати-тести" tabindex="-1">Виконати тести <a class="header-anchor" href="#виконати-тести" aria-label="Permalink to &quot;Виконати тести&quot;">​</a></h2><p>Щоб запустити тести MAVROS:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">catkin_w</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/devel/setup.bash</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PX4-Autopilot_clon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sitl_gazebo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">test_targe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><code>test_target</code> – це цілі makefile із набору: <em>tests_mission</em>, <em>tests_mission_coverage</em>, <em>tests_offboard</em> і <em>tests_avoidance</em>.</p><p>Тест також можна виконати безпосередньо, запустивши тестові сценарії, розташовані в <code>test/</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">catkin_w</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/devel/setup.bash</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PX4-Autopilot_clon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sitl_gazebo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./test/&lt;test_bash_script&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">test_launch_fil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Наприклад:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./test/rostest_px4_run.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mavros_posix_tests_offboard_posctl.test</span></span></code></pre></div><p>Тести також можна запускати за допомогою графічного інтерфейсу користувача, щоб побачити, що відбувається (за замовчуванням тести виконуються без голови):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./test/rostest_px4_run.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mavros_posix_tests_offboard_posctl.test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gui:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> headless:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><p>Файли <strong>.test</strong> запускають відповідні тести Python, визначені в <code>integrationtests/python_src/px4_it/mavros/</code></p><h2 id="напишіть-новии-mavros-тест-python" tabindex="-1">Напишіть новий MAVROS-тест (Python) <a class="header-anchor" href="#напишіть-новии-mavros-тест-python" aria-label="Permalink to &quot;Напишіть новий MAVROS-тест (Python)&quot;">​</a></h2><p>Цей розділ пояснює, як написати новий python тест з використанням ROS 1/MAVROS, протестувати його та додати до набору тестів PX4.</p><p>Ми рекомендуємо вам переглянути існуючі тести як приклади/натхнення (<a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/integrationtests/python_src/px4_it/mavros" target="_blank" rel="noreferrer">integrationtests/python_src/px4_it/mavros/</a>). В офіційній документації ROS також міститься інформація про те, як використовувати <a href="http://wiki.ros.org/unittest" target="_blank" rel="noreferrer">unittest</a> (на якому базується цей тестовий набір).</p><p>Щоб написати новий тест:</p><ol><li><p>Створити новий тестовий скрипт, копіюючи порожній тестовий каркас нижче:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [... LICENSE ...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @author Example Author &lt;author@example.com&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PKG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;px4&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> unittest</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rospy</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rosbag</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sensor_msgs.msg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NavSatFix</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MavrosNewTest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unittest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TestCase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Test description</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setUp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     rospy.init_node(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test_node&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">anonymous</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     rospy.wait_for_service(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mavros/cmd/arming&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     rospy.Subscriber(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mavros/global_position/global&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, NavSatFix, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.global_position_callback)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.rate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rospy.Rate(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 10hz</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.has_global_pos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tearDown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     pass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # General callback functions used in tests</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> global_position_callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, data):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.has_global_pos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_method</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     &quot;&quot;&quot;Test method description&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FIXME</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">: hack to wait for simulation to be ready</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     while</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.has_global_pos:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.rate.sleep()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TODO</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">: execute test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;__main__&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rostest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rostest.rosrun(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PKG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mavros_new_test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, MavrosNewTest)</span></span></code></pre></div></li><li><p>Запустити лише новий тест</p><ul><li><p>Запустити симулятор</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PX4-Autopilot_clon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Tools/simulation/gazebo/setup_gazebo.bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">roslaunch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> launch/mavros_posix_sitl.launch</span></span></code></pre></div></li><li><p>Запустити тест (в новій оболонці):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PX4-Autopilot_clon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Tools/simulation/gazebo/setup_gazebo.bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rosrun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mavros_new_test.py</span></span></code></pre></div></li></ul></li><li><p>Додати новий тестовий вузол до файлу запуску</p><ul><li>У <code>test/</code> створіть новий файл запуску ROS <code>&lt;test_name&gt;.test</code>.</li><li>Викличте тестовий файл, використовуючи один з базових скриптів <em>rostest_px4_run.sh</em> або <em>rostest_avoidancance_run.sh</em></li></ul></li><li><p>(Необов&#39;язково) Створити нову ціль в Makefile</p><ul><li>Відкрийте Makefile</li><li>Пошук <em>Testing</em> секції</li><li>Додати нову назву цілі та викликати тест</li></ul><p>Наприклад:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tests_&lt;new_test_target_name&gt;:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rostest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SRC_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/test/rostest_px4_run.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mavros_posix_tests_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">new_tes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.test</span></span></code></pre></div></li></ol><p>Запустити тести, як описані вище.</p>`,22),h=[l];function p(e,k,r,d,o,g){return a(),i("div",null,h)}const y=s(t,[["render",p]]);export{c as __pageData,y as default};
