import{_ as e}from"./chunks/flightgear-multi-vehicle-sitl.DCKAcNAp.js";import{_ as i,c as t,o as s,ab as a}from"./chunks/framework.CUflZczI.js";const f=JSON.parse('{"title":"Multi-Vehicle Simulation with FlightGear","description":"","frontmatter":{},"headers":[],"relativePath":"en/sim_flightgear/multi_vehicle.md","filePath":"en/sim_flightgear/multi_vehicle.md"}'),l={name:"en/sim_flightgear/multi_vehicle.md"},n=a(`<h1 id="multi-vehicle-simulation-with-flightgear" tabindex="-1">Multi-Vehicle Simulation with FlightGear <a class="header-anchor" href="#multi-vehicle-simulation-with-flightgear" aria-label="Permalink to &quot;Multi-Vehicle Simulation with FlightGear&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This simulator is <a href="./../simulation/community_supported_simulators.html">community supported and maintained</a>. It may or may not work with current versions of PX4.</p><p>See <a href="./../dev_setup/dev_env.html">Toolchain Installation</a> for information about the environments and tools supported by the core development team.</p></div><p>This topic explains how to simulate multiple vehicles using FlightGear in SITL. All vehicle instances have parameters defined by their startup scripts.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This is the most environmentally realistic way to simulate multiple vehicles running PX4, and allows easy testing of multiple different types of vehicles. It is suitable for testing multi-vehicle support in <em>QGroundControl</em>, <a href="https://mavsdk.mavlink.io/" target="_blank" rel="noreferrer">MAVSDK</a>, etc.</p><p><a href="./../sim_gazebo_classic/multi_vehicle_simulation.html">Multi-Vehicle Simulation with Gazebo Classic</a> should be used instead for: swarm simulations with many vehicles, and testing features like computer vision that are only supported by Gazebo Classic.</p></div><h2 id="how-to-start-multiple-instances" tabindex="-1">How to Start Multiple Instances <a class="header-anchor" href="#how-to-start-multiple-instances" aria-label="Permalink to &quot;How to Start Multiple Instances&quot;">​</a></h2><p>To start multiple instances (on separate ports and IDs):</p><ol><li><p>Checkout the <a href="https://github.com/ThunderFly-aerospace/PX4Firmware/tree/flightgear-multi" target="_blank" rel="noreferrer">PX4 branch that supports multiple vehicles</a> (at ThunderFly-aerospace):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/ThunderFly-aerospace/PX4Firmware.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4Firmware</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flightgear-multi</span></span></code></pre></div></li><li><p>Build the PX4 Firmware using the standard toolchain (with FlightGear installed).</p></li><li><p>Start the first instance using the <a href="https://github.com/ThunderFly-aerospace/PX4-FlightGear-Bridge/tree/master/scripts" target="_blank" rel="noreferrer">predefined scripts</a>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./Tools/flightgear_bridge/scripts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./vehicle1.sh</span></span></code></pre></div></li><li><p>Start subsequent instances using another script:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./vehicle2.sh</span></span></code></pre></div></li></ol><p>Each instance should have its own startup script, which can represent a completely different vehicle type. For prepared scripts you should get the following view.</p><p><img src="`+e+'" alt="Multi-vehicle simulation using PX4 SITL and FlightGear"></p><p>Ground stations such as <em>QGroundControl</em> connect to all instances using the normal UDP port 14550 (all traffic goes to the same port).</p><p>The number of simultaneously running instances is limited mainly by computer resources. FlightGear is a single-thread application, but aerodynamics solvers consume a lot of memory. Therefore splitting to multiple computers and using a <a href="https://wiki.flightgear.org/Howto:Multiplayer" target="_blank" rel="noreferrer">multiplayer server</a> is probably required to run <em>many</em> vehicle instances.</p><h2 id="additional-resources" tabindex="-1">Additional Resources <a class="header-anchor" href="#additional-resources" aria-label="Permalink to &quot;Additional Resources&quot;">​</a></h2><ul><li>See <a href="./../simulation/">Simulation</a> for more information about the port configuration.</li></ul>',13),r=[n];function o(h,p,c,u,d,m){return s(),t("div",null,r)}const v=i(l,[["render",o]]);export{f as __pageData,v as default};
