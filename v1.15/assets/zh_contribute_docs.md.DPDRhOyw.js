import{_ as e}from"./chunks/vuepress_edit_page_on_github_link.CRfbFKhu.js";import{_ as i,c as t,o as s,ab as a}from"./chunks/framework.CUflZczI.js";const b=JSON.parse('{"title":"投稿指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh/contribute/docs.md","filePath":"zh/contribute/docs.md"}'),o={name:"zh/contribute/docs.md"},n=a('<h1 id="投稿指南" tabindex="-1">投稿指南 <a class="header-anchor" href="#投稿指南" aria-label="Permalink to &quot;投稿指南&quot;">​</a></h1><p>Contributions to the PX4 User Guide are very welcome; from simple fixes to spelling and grammar, through to the creation of whole new sections.</p><p>This topic explains how to make and test changes. Towards the end there is a basic style guide.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Note You will need a (free) <a href="https://github.com/" target="_blank" rel="noreferrer">Github</a> account to contribute to the guides.</p></div><h2 id="快速更改" tabindex="-1">快速更改 <a class="header-anchor" href="#快速更改" aria-label="Permalink to &quot;快速更改&quot;">​</a></h2><p>Simple changes to <em>existing content</em> can be made by clicking the <strong>Edit on GitHub</strong> link that appears at the bottom of every page (this opens the page on Github for editing).</p><p><img src="'+e+`" alt="Vitepress: Edit Page button"></p><p>The guide uses the <a href="https://www.gitbook.com/about" target="_blank" rel="noreferrer">Gitbook</a> toolchain. Change requests can be either done on the Gitbook website using the <a href="https://gitbookio.gitbooks.io/documentation/content/editor/index.html" target="_blank" rel="noreferrer">Gitbook editor</a> or locally (more flexible, but less user-friendly).</p><ol><li>Open the page.</li><li>Click the <strong>Edit on GitHub</strong> link below the page content.</li><li>At the bottom of the page you&#39;ll be prompted to create a separate branch and then guided to submit a <em>pull request</em>.</li><li>Below the Github page editor you&#39;ll be prompted to create a separate branch and then guided to submit a <em>pull request</em>.</li></ol><p>The documentation team will review the request and either merge it or work with you to update it.</p><h2 id="adding-new-content-big-changes" tabindex="-1">Adding New Content - Big Changes <a class="header-anchor" href="#adding-new-content-big-changes" aria-label="Permalink to &quot;Adding New Content - Big Changes&quot;">​</a></h2><p>More substantial changes, including adding new pages or adding/modifying images, aren&#39;t as easy to make (or properly test) on Github. For these kinds of changes we suggest using the same approach as for <em>code</em>:</p><ol><li>Use the <em>git</em> toolchain to get the documentation source code onto your local computer.</li><li>Modify the documentation as needed (add, change, delete).</li><li><em>Test</em> that it builds properly using Vitepress.</li><li>In order to contribute many changes to the documentation, it is recommended that you follow these steps to add the changes locally and then create a pull request:</li></ol><p>The following explain how to get the source code, build locally (to test), and modify the code.</p><h3 id="what-goes-where" tabindex="-1">What Goes Where? <a class="header-anchor" href="#what-goes-where" aria-label="Permalink to &quot;What Goes Where?&quot;">​</a></h3><p>指南使用 <a href="https://legacy.gitbook.com/" target="_blank" rel="noreferrer">旧版Gitbook 工具链</a> The instructions below explain how to get git and use it on your local computer.</p><ol><li><p>git add &lt;file name&gt; git commit -m &quot;&lt;your commit message&gt;&quot;</p></li><li><p>如果您还没有注册Github，请先<a href="https://github.com/join" target="_blank" rel="noreferrer">注册</a> Github 账户</p></li><li><p>Create a copy (Fork) of the <a href="https://github.com/PX4/PX4-user_guide" target="_blank" rel="noreferrer">PX4 User Guide repo</a> on Github (<a href="https://docs.github.com/en/get-started/quickstart/fork-a-repo" target="_blank" rel="noreferrer">instructions here</a>).</p></li><li><p>Clone (copy) your forked repository to your local computer:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/wherever/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/PX4-user_guide.git</span></span></code></pre></div><p>For example, to clone the PX4 userguide fork for a user with Github account &quot;john_citizen&quot;:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/john_citizen/PX4-user_guide.git</span></span></code></pre></div></li><li><p>Navigate to your local repository:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/wherever/PX4-user_guide</span></span></code></pre></div></li><li><p>Add a <em>remote</em> called &quot;upstream&quot; to point to the PX4 version of the library:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-user_guide.git</span></span></code></pre></div></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>A &quot;remote&quot; is a handle to a particular repository. The remote named <em>origin</em> is created by default when you clone the repository, and points to <em>your fork</em> of the guide. Above you create a new remote <em>upstream</em> that points to the PX4 project version of the documents.</p></div><ol><li><p>Create a branch for your changes:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your_feature_branch_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>This creates a local branch on your computer named <code>your_feature_branch_name</code>.</p></li><li><p>Make changes to the documentation as needed (general guidance on this in following sections)</p></li><li><p>Once you are satisfied with your changes, you can add them to your local branch using a &quot;commit&quot;:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;your commit message&gt;&quot;</span></span></code></pre></div><p>For a good commit message, please refer to the <a href="./../contribute/code.html#commits-and-commit-messages">Source Code Management</a> section.</p></li><li><p>Push your local branch (including commits added to it) to your forked repository on Github.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_feature_branch_name</span></span></code></pre></div></li><li><p>Go to your forked repository on Github in a web browser, e.g.: <code>https://github.com/&lt;your git name&gt;/PX4-user_guide.git</code>. There you should see the message that a new branch has been pushed to your forked repository.</p></li><li><p>Create a pull request (PR):</p><ul><li>On the right hand side of the &quot;new branch message&quot; (see one step before), you should see a green button saying &quot;Compare &amp; Create Pull Request&quot;. Press it.</li><li>A pull request template will be created. It will list your commits and you can (must) add a meaningful title (in case of a one commit PR, it&#39;s usually the commit message) and message (<span style="color:orange;">explain what you did for what reason</span>. Check <a href="https://github.com/PX4/PX4-user_guide/pulls" target="_blank" rel="noreferrer">other pull requests</a> for comparison)</li></ul></li><li><p>You&#39;re done! Maintainers for the PX4 User Guide will now have a look at your contribution and decide if they want to integrate it. Check if they have questions on your changes every once in a while.</p></li></ol><h3 id="gitbook-documentation-toolchain" tabindex="-1">Gitbook Documentation Toolchain <a class="header-anchor" href="#gitbook-documentation-toolchain" aria-label="Permalink to &quot;Gitbook Documentation Toolchain&quot;">​</a></h3><p>概述：</p><ol><li><p>Install the <a href="https://vitepress.dev/guide/getting-started#prerequisites" target="_blank" rel="noreferrer">Vitepress prerequisites</a>:</p><ul><li><a href="https://nodejs.org/en" target="_blank" rel="noreferrer">Nodejs 18+</a></li><li><a href="https://classic.yarnpkg.com/en/docs/install" target="_blank" rel="noreferrer">Yarn classic</a></li></ul></li><li><p>Navigate to your local repository:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/wherever/PX4-user_guide</span></span></code></pre></div></li><li><p>Install dependencies (including Vitepress):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></li><li><p>Preview and serve the library:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><ul><li>Once the development/preview server has built the library (less than a minute for the first time) it will show you the URL you can preview the site on. This will be something like: <code>http://localhost:5173/px4_user_guide/</code>.</li><li>Stop serving using <strong>CTRL+C</strong> in the terminal prompt.</li></ul></li><li><p>You can build the library as it would be done for deployment:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:buildwin</span></span></code></pre></div></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use <code>yarn start</code> to preview changes <em>as you make them</em> (documents are updated and served very quickly). Before submitting a PR you should also build it using <code>yarn docs:build</code>, as this can highlight issues that are not visible when using <code>yarn start</code>.</p></div><h3 id="source-code-structure" tabindex="-1">Source Code Structure <a class="header-anchor" href="#source-code-structure" aria-label="Permalink to &quot;Source Code Structure&quot;">​</a></h3><p>The guide uses the <a href="https://vitepress.dev/" target="_blank" rel="noreferrer">Vitepress</a> toolchain.</p><p>In overview:</p><ul><li><p>Pages are written in separate files using markdown.</p><ul><li>The syntax is almost the same as that used by the Github wiki.</li><li>Vitepress also supports some <a href="https://vitepress.dev/guide/markdown#markdown-extensions" target="_blank" rel="noreferrer">markdown extensions</a>. We try and avoid using these, except for <a href="https://vitepress.dev/guide/markdown#default-title" target="_blank" rel="noreferrer">tips, warning, etc.</a>. This might be revisited - there are some interesting options provided!</li></ul></li><li><p>This is a <a href="https://vitepress.dev/guide/i18n" target="_blank" rel="noreferrer">multilingual</a> book:</p><ul><li>Pages for each language are stored in the folder named for the associated language code (e.g. &quot;en&quot; for English, &quot;zh&quot; for Chinese, &quot;ko&quot; for Korean).</li><li>Only edit the ENGLISH (<code>/en</code>) version of files. We use <a href="./../contribute/translation.html">Crowdin</a> to manage the translations.</li></ul></li><li><p>All pages must be in an appropriately named sub-folder of <code>/en</code> (e.g. this page is in folder <code>en/contribute/</code>).</p><ul><li>This makes linking easier because other pages and images are always as the same relative levels</li></ul></li><li><p>The <em>structure</em> of the book is defined in <code>SUMMARY.md</code>.</p><ul><li>If you add a new page to the guide you must also add an entry to this file!</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This is not &quot;standard vitepress&quot; way to define the sidebar (the summary file is imported by <a href="https://github.com/PX4/PX4-user_guide/blob/main/.vitepress/get_sidebar.js" target="_blank" rel="noreferrer">.vitepress/get_sidebar.js</a>).</p></div><ul><li><p>Images must be stored in a sub folder of <code>/assets</code>. This is two folders down from content folders, so if you add an image you will reference it like:</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>![Image Description](../../assets/path_to_file/filename.jpg)</span></span></code></pre></div></li><li><p>A file named <strong>package.json</strong> defines any dependencies of the build.</p></li><li><p>A web hook is used to track whenever files are merged into the master branch on this repository, causing the book to rebuild.</p></li></ul><h3 id="文档规范指南" tabindex="-1">文档规范指南 <a class="header-anchor" href="#文档规范指南" aria-label="Permalink to &quot;文档规范指南&quot;">​</a></h3><p>When you add a new page you must also add it to <code>en/SUMMARY.md</code>!</p><h2 id="翻译" tabindex="-1">翻译 <a class="header-anchor" href="#翻译" aria-label="Permalink to &quot;翻译&quot;">​</a></h2><ol><li><p>图片</p><ul><li>Put new markdown files in an appropriate sub-folder of <code>/en/</code>, such as <code>/en/contribute/</code>. Do not further nest folders.</li><li>Put new image files in an appropriate nested sub-folder of <code>/assets/</code>. Deeper nesting is allowed/encouraged.</li><li>Use descriptive names for folders and files. In particular, image filenames should describe what they contain (don&#39;t name as &quot;image1.png&quot;)</li><li>Use lower case filenames and separate words using underscores (<code>_</code>).</li></ul></li><li><p>内容:</p><ul><li>将新文件放入相应的子文件夹</li><li>New images should be created in a sub-folder of <code>/assets/</code> (so they can be shared between translations).</li><li>SVG files are preferred for diagrams. PNG files are preferred over JPG for screenshots.</li></ul></li><li><p>Content:</p><ul><li>Use &quot;style&quot; (<strong>bold</strong>, <em>emphasis</em>, etc.) consistently and sparingly (as little as possible). <ul><li><strong>Bold</strong> for button presses and menu definitions.</li><li><em>Emphasis</em> for tool names such as <em>QGroundControl</em> or <em>prettier</em>.</li><li><code>code</code> for file paths, and code, parameter names that aren&#39;t linked, using tools in a command line, such as <code>prettier</code>.</li></ul></li><li>Headings and page titles should use &quot;First Letter Capitalisation&quot;.</li><li>The page title should be a first level heading (<code>#</code>). All other headings should be h2 (<code>##</code>) or lower.</li><li>Don&#39;t add any style to headings.</li><li>Don&#39;t translate the <em>first part</em> of an <code>info</code>, <code>tip</code> or <code>warning</code> declaration (e.g. <code>::: tip</code>) as this precise text is required to render the note properly.</li><li>Break lines on sentences by preference. Don&#39;t break lines based on some arbitrary line length.</li><li>Format using <em>prettier</em> (<em>VSCode</em> is a has extensions can be used for this).</li></ul></li></ol><h2 id="许可证" tabindex="-1">许可证 <a class="header-anchor" href="#许可证" aria-label="Permalink to &quot;许可证&quot;">​</a></h2><p>Add new files in folders that cover similar topics. Then reference them in the sidebar (<code>/en/SUMMARY.md</code>) in line with the existing structure!</p><h2 id="translations" tabindex="-1">Translations <a class="header-anchor" href="#translations" aria-label="Permalink to &quot;Translations&quot;">​</a></h2><p>For information about translation see: <a href="./../contribute/translation.html">Translation</a>.</p><h2 id="licence" tabindex="-1">Licence <a class="header-anchor" href="#licence" aria-label="Permalink to &quot;Licence&quot;">​</a></h2><p>All PX4/Dronecode documentation is free to use and modify under terms of the permissive <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank" rel="noreferrer">CC BY 4.0</a> license.</p>`,39),l=[n];function r(h,p,d,c,u,g){return s(),t("div",null,l)}const y=i(o,[["render",r]]);export{b as __pageData,y as default};
