import{_ as s,c as a,o as e,ab as i}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"RoverAckermannGuidanceStatus (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/msg_docs/RoverAckermannGuidanceStatus.md","filePath":"zh/msg_docs/RoverAckermannGuidanceStatus.md"}'),t={name:"zh/msg_docs/RoverAckermannGuidanceStatus.md"},n=i(`<h1 id="roverackermannguidancestatus-uorb-message" tabindex="-1">RoverAckermannGuidanceStatus (UORB message) <a class="header-anchor" href="#roverackermannguidancestatus-uorb-message" aria-label="Permalink to &quot;RoverAckermannGuidanceStatus (UORB message)&quot;">â€‹</a></h1><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/RoverAckermannGuidanceStatus.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp # time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 actual_speed # [m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s] Rover ground speed</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 desired_speed # [m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s] Rover desired ground speed</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 lookahead_distance # [m] Lookahead distance of pure the pursuit controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 heading_error # [deg] Heading error of the pure pursuit controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 pid_throttle_integral # [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] Integral of the PID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the normalized throttle to control the rover speed during missions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 crosstrack_error # [m] Shortest distance from the vehicle to the path</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># TOPICS rover_ackermann_guidance_status</span></span></code></pre></div>`,3),r=[n];function l(h,p,o,k,d,c){return e(),a("div",null,r)}const u=s(t,[["render",l]]);export{g as __pageData,u as default};
