import{_ as a,c as s,o as e,ab as n}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"模块参考：系统","description":"","frontmatter":{},"headers":[],"relativePath":"zh/modules/modules_system.md","filePath":"zh/modules/modules_system.md"}'),t={name:"zh/modules/modules_system.md"},p=n(`<h1 id="模块参考-系统" tabindex="-1">模块参考：系统 <a class="header-anchor" href="#模块参考-系统" aria-label="Permalink to &quot;模块参考：系统&quot;">​</a></h1><h2 id="battery-simulator" tabindex="-1">battery_simulator <a class="header-anchor" href="#battery-simulator" aria-label="Permalink to &quot;battery_simulator&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/battery_simulator" target="_blank" rel="noreferrer">modules/simulation/battery_simulator</a></p><h3 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p><a id="battery_simulator_usage"></a></p><h3 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>battery_simulator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> wind_estimator &amp;lt;command&amp;gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        打印状态信息</span></span></code></pre></div><h2 id="battery-status" tabindex="-1">battery_status <a class="header-anchor" href="#battery-status" aria-label="Permalink to &quot;battery_status&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/battery_status" target="_blank" rel="noreferrer">modules/battery_status</a></p><h3 id="描述-1" tabindex="-1">描述 <a class="header-anchor" href="#描述-1" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p>模块提供的功能包括：</p><ul><li>从 ADC 驱动读取电池状态（通过 ioctl 接口），并且发布到主题 <code>battery_status</code>。</li></ul><h3 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h3><p>模块运行在它自己的线程中，并轮询当前选定的陀螺仪主题。</p><p><a id="battery_status_usage"></a></p><h3 id="用法-1" tabindex="-1">用法 <a class="header-anchor" href="#用法-1" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>battery_status &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> wind_estimator &amp;lt;command&amp;gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        打印状态信息</span></span></code></pre></div><h2 id="camera-feedback" tabindex="-1">camera_feedback <a class="header-anchor" href="#camera-feedback" aria-label="Permalink to &quot;camera_feedback&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/camera_feedback" target="_blank" rel="noreferrer">modules/camera_feedback</a></p><h3 id="描述-2" tabindex="-1">描述 <a class="header-anchor" href="#描述-2" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p>The camera_feedback module publishes <code>CameraCapture</code> UORB topics when image capture has been triggered.</p><p>If camera capture is enabled, then trigger information from the camera capture pin is published; otherwise trigger information at the point the camera was commanded to trigger is published (from the <code>camera_trigger</code> module).</p><p>The <code>CAMERA_IMAGE_CAPTURED</code> message is then emitted (by streaming code) following <code>CameraCapture</code> updates. <code>CameraCapture</code> topics are also logged and can be used for geotagging.</p><h3 id="实现-1" tabindex="-1">实现 <a class="header-anchor" href="#实现-1" aria-label="Permalink to &quot;实现&quot;">​</a></h3><p><code>CameraTrigger</code> topics are published by the <code>camera_trigger</code> module (<code>feedback</code> field set <code>false</code>) when image capture is triggered, and may also be published by the <code>camera_capture</code> driver (with <code>feedback</code> field set <code>true</code>) if the camera capture pin is activated.</p><p>The <code>camera_feedback</code> module subscribes to <code>CameraTrigger</code>. It discards topics from the <code>camera_trigger</code> module if camera capture is enabled. For the topics that are not discarded it creates a <code>CameraCapture</code> topic with the timestamp information from the <code>CameraTrigger</code> and position information from the vehicle.</p><p><a id="camera_feedback_usage"></a></p><h3 id="用法-2" tabindex="-1">用法 <a class="header-anchor" href="#用法-2" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>camera_feedback &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> wind_estimator &amp;lt;command&amp;gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        打印状态信息</span></span></code></pre></div><h2 id="cdcacm-autostart" tabindex="-1">cdcacm_autostart <a class="header-anchor" href="#cdcacm-autostart" aria-label="Permalink to &quot;cdcacm_autostart&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/cdcacm_autostart" target="_blank" rel="noreferrer">drivers/cdcacm_autostart</a></p><h3 id="描述-3" tabindex="-1">描述 <a class="header-anchor" href="#描述-3" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p>This module listens on USB and auto-configures the protocol depending on the bytes received. The supported protocols are: MAVLink, nsh, and ublox serial passthrough. If the parameter SYS_USB_AUTO=2 the module will only try to start mavlink as long as the USB VBUS is detected. Otherwise it will spin and continue to check for VBUS and start mavlink once it is detected.</p><p><a id="cdcacm_autostart_usage"></a></p><h3 id="描述-4" tabindex="-1">描述 <a class="header-anchor" href="#描述-4" aria-label="Permalink to &quot;描述&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cdcacm_autostart &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> mc_att_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        打印状态信息</span></span></code></pre></div><h2 id="commander" tabindex="-1">commander <a class="header-anchor" href="#commander" aria-label="Permalink to &quot;commander&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/commander" target="_blank" rel="noreferrer">modules/commander</a></p><h3 id="描述-5" tabindex="-1">描述 <a class="header-anchor" href="#描述-5" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p>该模块包含飞行模式切换和失效保护状态机。</p><p><a id="commander_usage"></a></p><h3 id="用法-3" tabindex="-1">用法 <a class="header-anchor" href="#用法-3" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>commander &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-h]        Enable HIL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   calibrate     Run sensor calibration</span></span>
<span class="line"><span>     mag|baro|accel|gyro|level|esc|airspeed Calibration type</span></span>
<span class="line"><span>     quick       Quick calibration (accel only, not recommended)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   check         Run preflight checks</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   arm</span></span>
<span class="line"><span>     [-f]        Force arming (do not run preflight checks)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   disarm</span></span>
<span class="line"><span>     [-f]        Force disarming (disarm in air)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   takeoff</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   land</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   transition    VTOL transition</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   mode          Change flight mode</span></span>
<span class="line"><span>     manual|acro|offboard|stabilized|altctl|posctl|position:slow|auto:mission|au</span></span>
<span class="line"><span>                 to:loiter|auto:rtl|auto:takeoff|auto:land|auto:precland|ext1</span></span>
<span class="line"><span>                 Flight mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   pair</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   lockdown</span></span>
<span class="line"><span>     on|off      Turn lockdown on or off</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   set_ekf_origin</span></span>
<span class="line"><span>     lat, lon, alt Origin Latitude, Longitude, Altitude</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   lat|lon|alt   Origin latitude longitude altitude</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   poweroff      Power off board (if supported)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="dataman" tabindex="-1">dataman <a class="header-anchor" href="#dataman" aria-label="Permalink to &quot;dataman&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/dataman" target="_blank" rel="noreferrer">modules/dataman</a></p><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p>该模块通过基于C语言的API以简单数据库的形式为系统的其他部分提供持续性存储功能。 支持多种后端：</p><ul><li>a file (eg. on the SD card)</li><li>FLASH(需要飞控板支持)</li></ul><p>It is used to store structured data of different types: mission waypoints, mission state and geofence polygons. Each type has a specific type and a fixed maximum amount of storage items, so that fast random access is possible. 每种类型的数据都有一个特定的类型和一个固定的最大存储条目的数量，因此可以实现对数据的快速随机访问。</p><h3 id="描述-6" tabindex="-1">描述 <a class="header-anchor" href="#描述-6" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p>单个数据的读取和写入是原子操作。</p><p><a id="dataman_usage"></a></p><h3 id="描述-7" tabindex="-1">描述 <a class="header-anchor" href="#描述-7" aria-label="Permalink to &quot;描述&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dataman &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> dataman &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-f &lt;val&gt;]  Storage file</span></span>
<span class="line"><span>                 values: &lt;file&gt;</span></span>
<span class="line"><span>     [-r]        Use RAM backend (NOT persistent)</span></span>
<span class="line"><span>     [-i]        Use FLASH backend</span></span>
<span class="line"><span></span></span>
<span class="line"><span> The options -f, -r and -i are mutually exclusive. If nothing is specified, a</span></span>
<span class="line"><span> file &#39;dataman&#39; is used</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   poweronrestart Restart dataman (on power on)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   inflightrestart Restart dataman (in flight)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info If nothing is specified, a file</span></span>
<span class="line"><span> &#39;dataman&#39; is used</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="dmesg" tabindex="-1">dmesg <a class="header-anchor" href="#dmesg" aria-label="Permalink to &quot;dmesg&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/dmesg" target="_blank" rel="noreferrer">systemcmds/dmesg</a></p><h3 id="描述-8" tabindex="-1">描述 <a class="header-anchor" href="#描述-8" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p>用于显示启动控制台消息的命令行工具 需要注意的是，NuttX系统的工作队列和系统日志输出都未被捕捉到。</p><h3 id="示例-1" tabindex="-1">示例 <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p>持续在后台打印所有消息。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dmesg -f &amp;</span></span></code></pre></div><p><a id="dmesg_usage"></a></p><h3 id="描述-9" tabindex="-1">描述 <a class="header-anchor" href="#描述-9" aria-label="Permalink to &quot;描述&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dmesg &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>     [-f]        Follow: wait for new messages</span></span></code></pre></div><h2 id="esc-battery" tabindex="-1">esc_battery <a class="header-anchor" href="#esc-battery" aria-label="Permalink to &quot;esc_battery&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/esc_battery" target="_blank" rel="noreferrer">modules/esc_battery</a></p><h3 id="描述-10" tabindex="-1">描述 <a class="header-anchor" href="#描述-10" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p>Background process running periodically with 1 Hz on the LP work queue to calculate the CPU load and RAM usage and publish the <code>cpuload</code> topic.</p><p><a id="esc_battery_usage"></a></p><h3 id="描述-11" tabindex="-1">描述 <a class="header-anchor" href="#描述-11" aria-label="Permalink to &quot;描述&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>esc_battery &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> mc_att_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        打印状态信息</span></span></code></pre></div><h2 id="gyro-calibration" tabindex="-1">gyro_calibration <a class="header-anchor" href="#gyro-calibration" aria-label="Permalink to &quot;gyro_calibration&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/gyro_calibration" target="_blank" rel="noreferrer">modules/gyro_calibration</a></p><h3 id="描述-12" tabindex="-1">描述 <a class="header-anchor" href="#描述-12" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p>源码：<a href="https://github.com/PX4/Firmware/tree/master/src/drivers/heater" target="_blank" rel="noreferrer">drivers/heater</a></p><p><a id="gyro_calibration_usage"></a></p><h3 id="用法-4" tabindex="-1">用法 <a class="header-anchor" href="#用法-4" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>gyro_calibration &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> mc_att_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        打印状态信息</span></span></code></pre></div><h2 id="heater" tabindex="-1">heater <a class="header-anchor" href="#heater" aria-label="Permalink to &quot;heater&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/gyro_fft" target="_blank" rel="noreferrer">modules/gyro_fft</a></p><h3 id="描述-13" tabindex="-1">描述 <a class="header-anchor" href="#描述-13" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p><a id="gyro_fft_usage"></a></p><h3 id="实现-2" tabindex="-1">实现 <a class="header-anchor" href="#实现-2" aria-label="Permalink to &quot;实现&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>gyro_fft &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> land_detector &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         启动后台任务</span></span>
<span class="line"><span>     fixedwing|multicopter|vtol|ugv 选择飞机类型</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        打印状态信息</span></span></code></pre></div><h2 id="land-detector" tabindex="-1">land_detector <a class="header-anchor" href="#land-detector" aria-label="Permalink to &quot;land_detector&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/heater" target="_blank" rel="noreferrer">drivers/heater</a></p><h3 id="用法-5" tabindex="-1">用法 <a class="header-anchor" href="#用法-5" aria-label="Permalink to &quot;用法&quot;">​</a></h3><p>源码：<a href="https://github.com/PX4/Firmware/tree/master/src/modules/land_detector" target="_blank" rel="noreferrer">modules/land_detector</a></p><p>This task can be started at boot from the startup scripts by setting SENS_EN_THERMAL or via CLI.</p><p><a id="heater_usage"></a></p><h3 id="用法-6" tabindex="-1">用法 <a class="header-anchor" href="#用法-6" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>heater &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> replay &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start replay, using log file from ENV variable &#39;replay&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   trystart      Same as &#39;start&#39;, but silently exit if no log file given</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   tryapplyparams Try to apply the parameters from the log file</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="i2c-launcher" tabindex="-1">i2c_launcher <a class="header-anchor" href="#i2c-launcher" aria-label="Permalink to &quot;i2c_launcher&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/i2c_launcher" target="_blank" rel="noreferrer">systemcmds/i2c_launcher</a></p><h3 id="描述-14" tabindex="-1">描述 <a class="header-anchor" href="#描述-14" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p>Daemon that starts drivers based on found I2C devices.</p><p><a id="i2c_launcher_usage"></a></p><h3 id="实现-3" tabindex="-1">实现 <a class="header-anchor" href="#实现-3" aria-label="Permalink to &quot;实现&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>i2c_launcher &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     -b &lt;val&gt;    Bus number</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="load-mon" tabindex="-1">load_mon <a class="header-anchor" href="#load-mon" aria-label="Permalink to &quot;load_mon&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/land_detector" target="_blank" rel="noreferrer">modules/land_detector</a></p><h3 id="示例-2" tabindex="-1">示例 <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p><strong>ground_contact</strong>: thrust setpoint and velocity in z-direction must be below a defined threshold for time GROUND_CONTACT_TRIGGER_TIME_US. When ground_contact is detected, the position controller turns off the thrust setpoint in body x and y. 当检测到 ground_contact 状态时，位置控制器将关闭机体 x 方向和 y 方向上的推力设定值。</p><h3 id="用法-7" tabindex="-1">用法 <a class="header-anchor" href="#用法-7" aria-label="Permalink to &quot;用法&quot;">​</a></h3><p>Every type is implemented in its own class with a common base class. 触发时间由变量 MAYBE_LAND_TRIGGER_TIME 定义。 当检测到 maybe_landed 状态时，位置控制器会将推理设定值设置为零。 A hysteresis and a fixed priority of each internal state determines the actual land_detector state.</p><h4 id="多旋翼的-land-detector" tabindex="-1">多旋翼的 Land Detector <a class="header-anchor" href="#多旋翼的-land-detector" aria-label="Permalink to &quot;多旋翼的 Land Detector&quot;">​</a></h4><p><strong>ground_contact</strong>: thrust setpoint and velocity in z-direction must be below a defined threshold for time GROUND_CONTACT_TRIGGER_TIME_US. When ground_contact is detected, the position controller turns off the thrust setpoint in body x and y.</p><p><strong>maybe_landed</strong>: it requires ground_contact together with a tighter thrust setpoint threshold and no velocity in the horizontal direction. The trigger time is defined by MAYBE_LAND_TRIGGER_TIME. When maybe_landed is detected, the position controller sets the thrust setpoint to zero.</p><p>源码：<a href="https://github.com/PX4/Firmware/tree/master/src/modules/load_mon" target="_blank" rel="noreferrer">modules/load_mon</a></p><p>There are 2 environment variables used for configuration: <code>replay</code>, which must be set to an ULog file name - it&#39;s the log file to be replayed. The second is the mode, specified via <code>replay_mode</code>:</p><p><a id="land_detector_usage"></a></p><h3 id="用法-8" tabindex="-1">用法 <a class="header-anchor" href="#用法-8" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>land_detector &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> load_mon &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         启动后台任务</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        打印状态信息</span></span></code></pre></div><h2 id="logger" tabindex="-1">logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;logger&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/load_mon" target="_blank" rel="noreferrer">modules/load_mon</a></p><h3 id="参数描述" tabindex="-1">参数描述 <a class="header-anchor" href="#参数描述" aria-label="Permalink to &quot;参数描述&quot;">​</a></h3><p>源码：<a href="https://github.com/PX4/Firmware/tree/master/src/modules/logger" target="_blank" rel="noreferrer">modules/logger</a></p><p>On NuttX it also checks the stack usage of each process and if it falls below 300 bytes, a warning is output, which will also appear in the log file.</p><p><a id="load_mon_usage"></a></p><h3 id="实现-4" tabindex="-1">实现 <a class="header-anchor" href="#实现-4" aria-label="Permalink to &quot;实现&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>load_mon &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="logger-1" tabindex="-1">logger <a class="header-anchor" href="#logger-1" aria-label="Permalink to &quot;logger&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/logger" target="_blank" rel="noreferrer">modules/logger</a></p><h3 id="用法-9" tabindex="-1">用法 <a class="header-anchor" href="#用法-9" aria-label="Permalink to &quot;用法&quot;">​</a></h3><p>System logger which logs a configurable set of uORB topics and system printf messages (<code>PX4_WARN</code> and <code>PX4_ERR</code>) to ULog files. These can be used for system and flight performance evaluation, tuning, replay and crash analysis.</p><p>It supports 2 backends:</p><ul><li>文件：写入 ULog 文件到文件系统中（SD 卡）</li><li>MAVLink: 通过 MAVLink 将 ULog 数据流传输到客户端上（需要客户端支持此方式）</li></ul><p>模块的实现使用了两个线程：</p><p>In between there is a write buffer with configurable size (and another fixed-size buffer for the mission log). It should be large to avoid dropouts. 缓冲区应大到可以避免出现数据溢出。 It can be enabled and configured via SDLOG_MISSION parameter. The normal log is always a superset of the mission log.</p><h3 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h3><p>立刻开始记录日志的典型用法：</p><ul><li>The main thread, running at a fixed rate (or polling on a topic if started with -p) and checking for data updates</li><li>写入线程，将数据写入文件中、</li></ul><p>In between there is a write buffer with configurable size (and another fixed-size buffer for the mission log). It should be large to avoid dropouts.</p><h3 id="参数描述-1" tabindex="-1">参数描述 <a class="header-anchor" href="#参数描述-1" aria-label="Permalink to &quot;参数描述&quot;">​</a></h3><p>Typical usage to start logging immediately:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>logger on</span></span></code></pre></div><p>Or if already running:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>logger on</span></span></code></pre></div><p><a id="logger_usage"></a></p><h3 id="参数描述-2" tabindex="-1">参数描述 <a class="header-anchor" href="#参数描述-2" aria-label="Permalink to &quot;参数描述&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>logger &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-m &lt;val&gt;]  Backend mode</span></span>
<span class="line"><span>                 values: file|mavlink|all, default: all</span></span>
<span class="line"><span>     [-x]        Enable/disable logging via Aux1 RC channel</span></span>
<span class="line"><span>     [-a]        Log 1st armed until shutdown</span></span>
<span class="line"><span>     [-e]        Enable logging right after start until disarm (otherwise only</span></span>
<span class="line"><span>                 when armed)</span></span>
<span class="line"><span>     [-f]        Log until shutdown (implies -e)</span></span>
<span class="line"><span>     [-t]        Use date/time for naming log directories and files</span></span>
<span class="line"><span>     [-r &lt;val&gt;]  Log rate in Hz, 0 means unlimited rate</span></span>
<span class="line"><span>                 default: 280</span></span>
<span class="line"><span>     [-b &lt;val&gt;]  Log buffer size in KiB</span></span>
<span class="line"><span>                 default: 12</span></span>
<span class="line"><span>     [-p &lt;val&gt;]  Poll on a topic instead of running with fixed rate (Log rate</span></span>
<span class="line"><span>                 and topic intervals are ignored if this is set)</span></span>
<span class="line"><span>                 values: &lt;topic_name&gt;</span></span>
<span class="line"><span>     [-c &lt;val&gt;]  Log rate factor (higher is faster)</span></span>
<span class="line"><span>                 default: 1.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   on            start logging now, override arming (logger must be running)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   off           stop logging now, override arming (logger must be running)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   trigger_watchdog manually trigger the watchdog now</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="mag-bias-estimator" tabindex="-1">mag_bias_estimator <a class="header-anchor" href="#mag-bias-estimator" aria-label="Permalink to &quot;mag_bias_estimator&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/mag_bias_estimator" target="_blank" rel="noreferrer">modules/mag_bias_estimator</a></p><h3 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Online magnetometer bias estimator.</p><p><a id="mag_bias_estimator_usage"></a></p><h3 id="用法-10" tabindex="-1">用法 <a class="header-anchor" href="#用法-10" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mag_bias_estimator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> wind_estimator &amp;lt;command&amp;gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        打印状态信息</span></span></code></pre></div><h2 id="replay" tabindex="-1">replay <a class="header-anchor" href="#replay" aria-label="Permalink to &quot;replay&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/manual_control" target="_blank" rel="noreferrer">modules/manual_control</a></p><h3 id="description-1" tabindex="-1">Description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Module consuming manual_control_inputs publishing one manual_control_setpoint.</p><p><a id="manual_control_usage"></a></p><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>manual_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="netman" tabindex="-1">netman <a class="header-anchor" href="#netman" aria-label="Permalink to &quot;netman&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/netman" target="_blank" rel="noreferrer">systemcmds/netman</a></p><h3 id="description-network-configuration-manager-saves-the-network-settings-in-non-volatile-memory-on-boot-the-update-option-will-be-run-if-a-network-configuration-does-not-exist-the-default-setting-will-be-saved-in-non-volatile-and-the-system-rebooted" tabindex="-1">Description Network configuration manager saves the network settings in non-volatile memory. On boot the <code>update</code> option will be run. If a network configuration does not exist. The default setting will be saved in non-volatile and the system rebooted. <a class="header-anchor" href="#description-network-configuration-manager-saves-the-network-settings-in-non-volatile-memory-on-boot-the-update-option-will-be-run-if-a-network-configuration-does-not-exist-the-default-setting-will-be-saved-in-non-volatile-and-the-system-rebooted" aria-label="Permalink to &quot;Description Network configuration manager saves the network settings in non-volatile memory. On boot the \`update\` option will be run. If a network configuration does not exist. The default setting will be saved in non-volatile and the system rebooted.&quot;">​</a></h3><h4 id="update" tabindex="-1">update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;update&quot;">​</a></h4><p><code>netman update</code> is run automatically by <a href="./../concept/system_startup.html#system-startup">a startup script</a>. When run, the <code>update</code> option will check for the existence of <code>net.cfg</code> in the root of the SD Card. It then saves the network settings from <code>net.cfg</code> in non-volatile memory, deletes the file and reboots the system.</p><h4 id="save" tabindex="-1">save <a class="header-anchor" href="#save" aria-label="Permalink to &quot;save&quot;">​</a></h4><p>The <code>save</code> option will save settings from non-volatile memory to a file named <code>net.cfg</code> on the SD Card filesystem for editing. Use this to edit the settings. Save does not immediately apply the network settings; the user must reboot the flight stack. By contrast, the <code>update</code> command is run by the start-up script, commits the settings to non-volatile memory, and reboots the flight controller (which will then use the new settings).</p><h4 id="show" tabindex="-1">show <a class="header-anchor" href="#show" aria-label="Permalink to &quot;show&quot;">​</a></h4><p>The <code>show</code> option will display the network settings in <code>net.cfg</code> to the console.</p><h3 id="examples-netman-save-save-the-parameters-to-the-sd-card-netman-show-display-current-settings-netman-update-i-eth0-do-an-update" tabindex="-1">Examples $ netman save # Save the parameters to the SD card. $ netman show # display current settings. $ netman update -i eth0 # do an update <a class="header-anchor" href="#examples-netman-save-save-the-parameters-to-the-sd-card-netman-show-display-current-settings-netman-update-i-eth0-do-an-update" aria-label="Permalink to &quot;Examples $ netman save           # Save the parameters to the SD card. $ netman show           # display current settings. $ netman update -i eth0 # do an update&quot;">​</a></h3><p><a id="netman_usage"></a></p><h3 id="用法-11" tabindex="-1">用法 <a class="header-anchor" href="#用法-11" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>netman &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   show          Display the current persistent network settings to the console.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   update        Check SD card for net.cfg and update network persistent network</span></span>
<span class="line"><span>                 settings.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   save          Save the current network parameters to the SD card.</span></span>
<span class="line"><span>     [-i &lt;val&gt;]  Set the interface name</span></span>
<span class="line"><span>                 default: eth0</span></span></code></pre></div><h2 id="pwm-input" tabindex="-1">pwm_input <a class="header-anchor" href="#pwm-input" aria-label="Permalink to &quot;pwm_input&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/pwm_input" target="_blank" rel="noreferrer">drivers/pwm_input</a></p><h3 id="参数描述-3" tabindex="-1">参数描述 <a class="header-anchor" href="#参数描述-3" aria-label="Permalink to &quot;参数描述&quot;">​</a></h3><p>Measures the PWM input on AUX5 (or MAIN5) via a timer capture ISR and publishes via the uORB &#39;pwm_input\` message.</p><p><a id="pwm_input_usage"></a></p><h3 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pwm_input &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="rc-update" tabindex="-1">rc_update <a class="header-anchor" href="#rc-update" aria-label="Permalink to &quot;rc_update&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/rc_update" target="_blank" rel="noreferrer">modules/rc_update</a></p><h3 id="description-2" tabindex="-1">Description <a class="header-anchor" href="#description-2" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>The rc_update module handles RC channel mapping: read the raw input channels (<code>input_rc</code>), then apply the calibration, map the RC channels to the configured channels &amp; mode switches and then publish as <code>rc_channels</code> and <code>manual_control_input</code>.</p><h3 id="implementation-1" tabindex="-1">Implementation <a class="header-anchor" href="#implementation-1" aria-label="Permalink to &quot;Implementation&quot;">​</a></h3><p>To reduce control latency, the module is scheduled on input_rc publications.</p><p><a id="rc_update_usage"></a></p><h3 id="usage-2" tabindex="-1">Usage <a class="header-anchor" href="#usage-2" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>rc_update &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="replay-1" tabindex="-1">replay <a class="header-anchor" href="#replay-1" aria-label="Permalink to &quot;replay&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/replay" target="_blank" rel="noreferrer">modules/replay</a></p><h3 id="description-3" tabindex="-1">Description <a class="header-anchor" href="#description-3" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>This module is used to replay ULog files.</p><p>There are 2 environment variables used for configuration: <code>replay</code>, which must be set to an ULog file name - it&#39;s the log file to be replayed. The second is the mode, specified via <code>replay_mode</code>:</p><ul><li><code>replay_mode=ekf2</code>: 指定 EKF2 回放模式。 <code>replay_mode=ekf2</code>: specific EKF2 replay mode. It can only be used with the ekf2 module, but allows the replay to run as fast as possible.</li><li>Generic otherwise: this can be used to replay any module(s), but the replay will be done with the same speed as the log was recorded.</li></ul><p>The module is typically used together with uORB publisher rules, to specify which messages should be replayed. The replay module will just publish all messages that are found in the log. It also applies the parameters from the log.</p><p>The replay procedure is documented on the <a href="https://docs.px4.io/v1.15/en/debug/system_wide_replay.html" target="_blank" rel="noreferrer">System-wide Replay</a> page.</p><p><a id="replay_usage"></a></p><h3 id="usage-3" tabindex="-1">Usage <a class="header-anchor" href="#usage-3" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>replay &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start replay, using log file from ENV variable &#39;replay&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   trystart      Same as &#39;start&#39;, but silently exit if no log file given</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   tryapplyparams Try to apply the parameters from the log file</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="send-event" tabindex="-1">send_event <a class="header-anchor" href="#send-event" aria-label="Permalink to &quot;send_event&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/events" target="_blank" rel="noreferrer">modules/events</a></p><h3 id="description-4" tabindex="-1">Description <a class="header-anchor" href="#description-4" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Background process running periodically on the LP work queue to perform housekeeping tasks. It is currently only responsible for tone alarm on RC Loss.</p><p>The tasks can be started via CLI or uORB topics (vehicle_command from MAVLink, etc.).</p><p><a id="send_event_usage"></a></p><h3 id="usage-4" tabindex="-1">Usage <a class="header-anchor" href="#usage-4" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>send_event &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-arispeed-sim" tabindex="-1">sensor_arispeed_sim <a class="header-anchor" href="#sensor-arispeed-sim" aria-label="Permalink to &quot;sensor_arispeed_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_airspeed_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_airspeed_sim</a></p><h3 id="description-5" tabindex="-1">Description <a class="header-anchor" href="#description-5" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p><a id="sensor_arispeed_sim_usage"></a></p><h3 id="usage-5" tabindex="-1">Usage <a class="header-anchor" href="#usage-5" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_arispeed_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-baro-sim" tabindex="-1">sensor_baro_sim <a class="header-anchor" href="#sensor-baro-sim" aria-label="Permalink to &quot;sensor_baro_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_baro_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_baro_sim</a></p><h3 id="description-6" tabindex="-1">Description <a class="header-anchor" href="#description-6" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p><a id="sensor_baro_sim_usage"></a></p><h3 id="实现-5" tabindex="-1">实现 <a class="header-anchor" href="#实现-5" aria-label="Permalink to &quot;实现&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_baro_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-gps-sim" tabindex="-1">sensor_gps_sim <a class="header-anchor" href="#sensor-gps-sim" aria-label="Permalink to &quot;sensor_gps_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_gps_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_gps_sim</a></p><h3 id="描述-15" tabindex="-1">描述 <a class="header-anchor" href="#描述-15" aria-label="Permalink to &quot;描述&quot;">​</a></h3><p><a id="sensor_gps_sim_usage"></a></p><h3 id="usage-6" tabindex="-1">Usage <a class="header-anchor" href="#usage-6" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_gps_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-mag-sim" tabindex="-1">sensor_mag_sim <a class="header-anchor" href="#sensor-mag-sim" aria-label="Permalink to &quot;sensor_mag_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_mag_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_mag_sim</a></p><h3 id="description-7" tabindex="-1">Description <a class="header-anchor" href="#description-7" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p><a id="sensor_mag_sim_usage"></a></p><h3 id="usage-7" tabindex="-1">Usage <a class="header-anchor" href="#usage-7" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_mag_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensors" tabindex="-1">sensors <a class="header-anchor" href="#sensors" aria-label="Permalink to &quot;sensors&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/sensors" target="_blank" rel="noreferrer">modules/sensors</a></p><h3 id="description-8" tabindex="-1">Description <a class="header-anchor" href="#description-8" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>The sensors module is central to the whole system. It takes low-level output from drivers, turns it into a more usable form, and publishes it for the rest of the system.</p><p>The provided functionality includes:</p><ul><li>Read the output from the sensor drivers (<code>SensorGyro</code>, etc.). 如果存在多个同类型传感器，那个模块将进行投票和容错处理。 然后应用飞控板的旋转和温度校正（如果被启用）。 And finally publish the data; one of the topics is <code>SensorCombined</code>, used by many parts of the system.</li><li>Make sure the sensor drivers get the updated calibration parameters (scale &amp; offset) when the parameters change or on startup. The sensor drivers use the ioctl interface for parameter updates. For this to work properly, the sensor drivers must already be running when <code>sensors</code> is started. 传感器驱动使用 ioctl 接口获取参数更新。 为了使这一功能正常运行，当 <code>sensors</code> 模块启动时传感器驱动必须已经处于运行状态。</li><li>Do sensor consistency checks and publish the <code>SensorsStatusImu</code> topic.</li></ul><h3 id="implementation-2" tabindex="-1">Implementation <a class="header-anchor" href="#implementation-2" aria-label="Permalink to &quot;Implementation&quot;">​</a></h3><p>It runs in its own thread and polls on the currently selected gyro topic.</p><p><a id="sensors_usage"></a></p><h3 id="usage-8" tabindex="-1">Usage <a class="header-anchor" href="#usage-8" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensors &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-h]        Start in HIL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="tattu-can" tabindex="-1">tattu_can <a class="header-anchor" href="#tattu-can" aria-label="Permalink to &quot;tattu_can&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/tattu_can" target="_blank" rel="noreferrer">drivers/tattu_can</a></p><h3 id="description-9" tabindex="-1">Description <a class="header-anchor" href="#description-9" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Driver for reading data from the Tattu 12S 16000mAh smart battery.</p><p><a id="tattu_can_usage"></a></p><h3 id="usage-9" tabindex="-1">Usage <a class="header-anchor" href="#usage-9" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tattu_can &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> wind_estimator &amp;lt;command&amp;gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        打印状态信息</span></span></code></pre></div><h2 id="temperature-compensation" tabindex="-1">temperature_compensation <a class="header-anchor" href="#temperature-compensation" aria-label="Permalink to &quot;temperature_compensation&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/temperature_compensation" target="_blank" rel="noreferrer">modules/temperature_compensation</a></p><h3 id="description-10" tabindex="-1">Description <a class="header-anchor" href="#description-10" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>The temperature compensation module allows all of the gyro(s), accel(s), and baro(s) in the system to be temperature compensated. The module monitors the data coming from the sensors and updates the associated sensor_correction topic whenever a change in temperature is detected. The module can also be configured to perform the coeffecient calculation routine at next boot, which allows the thermal calibration coeffecients to be calculated while the vehicle undergoes a temperature cycle.</p><p><a id="temperature_compensation_usage"></a></p><h3 id="usage-10" tabindex="-1">Usage <a class="header-anchor" href="#usage-10" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>temperature_compensation &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the module, which monitors the sensors and updates the</span></span>
<span class="line"><span>                 sensor_correction topic</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   calibrate     Run temperature calibration process</span></span>
<span class="line"><span>     [-a]        calibrate the accel</span></span>
<span class="line"><span>     [-g]        calibrate the gyro</span></span>
<span class="line"><span>     [-m]        calibrate the mag</span></span>
<span class="line"><span>     [-b]        calibrate the baro (if none of these is given, all will be</span></span>
<span class="line"><span>                 calibrated)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="tune-control" tabindex="-1">tune_control <a class="header-anchor" href="#tune-control" aria-label="Permalink to &quot;tune_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/tune_control" target="_blank" rel="noreferrer">systemcmds/tune_control</a></p><h3 id="description-11" tabindex="-1">Description <a class="header-anchor" href="#description-11" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Command-line tool to control &amp; test the (external) tunes.</p><p>Tunes are used to provide audible notification and warnings (e.g. when the system arms, gets position lock, etc.). The tool requires that a driver is running that can handle the tune_control uorb topic.</p><p>Information about the tune format and predefined system tunes can be found here: <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/lib/tunes/tune_definition.desc" target="_blank" rel="noreferrer">https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/lib/tunes/tune_definition.desc</a></p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Play system tune #2:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tune_control play -t 2</span></span></code></pre></div><p><a id="tune_control_usage"></a></p><h3 id="usage-11" tabindex="-1">Usage <a class="header-anchor" href="#usage-11" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tune_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   play          Play system tune or single note.</span></span>
<span class="line"><span>     error       Play error tune</span></span>
<span class="line"><span>     [-t &lt;val&gt;]  Play predefined system tune</span></span>
<span class="line"><span>                 default: 1</span></span>
<span class="line"><span>     [-f &lt;val&gt;]  Frequency of note in Hz (0-22kHz)</span></span>
<span class="line"><span>     [-d &lt;val&gt;]  Duration of note in us</span></span>
<span class="line"><span>     [-s &lt;val&gt;]  Volume level (loudness) of the note (0-100)</span></span>
<span class="line"><span>                 default: 40</span></span>
<span class="line"><span>     [-m &lt;val&gt;]  Melody in string form</span></span>
<span class="line"><span>                 values: &lt;string&gt; - e.g. &quot;MFT200e8a8a&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   libtest       Test library</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop          Stop playback (use for repeated tunes)</span></span></code></pre></div><h2 id="uxrce-dds-client" tabindex="-1">uxrce_dds_client <a class="header-anchor" href="#uxrce-dds-client" aria-label="Permalink to &quot;uxrce_dds_client&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/uxrce_dds_client" target="_blank" rel="noreferrer">modules/uxrce_dds_client</a></p><h3 id="description-12" tabindex="-1">Description <a class="header-anchor" href="#description-12" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>UXRCE-DDS Client used to communicate uORB topics with an Agent over serial or UDP.</p><h3 id="examples-1" tabindex="-1">Examples <a class="header-anchor" href="#examples-1" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>uxrce_dds_client start -t serial -d /dev/ttyS3 -b 921600</span></span>
<span class="line"><span>uxrce_dds_client start -t udp -h 127.0.0.1 -p 15555</span></span></code></pre></div><p><a id="uxrce_dds_client_usage"></a></p><h3 id="usage-12" tabindex="-1">Usage <a class="header-anchor" href="#usage-12" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>uxrce_dds_client &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-t &lt;val&gt;]  Transport protocol</span></span>
<span class="line"><span>                 values: serial|udp, default: udp</span></span>
<span class="line"><span>     [-d &lt;val&gt;]  serial device</span></span>
<span class="line"><span>                 values: &lt;file:dev&gt;</span></span>
<span class="line"><span>     [-b &lt;val&gt;]  Baudrate (can also be p:&lt;param_name&gt;)</span></span>
<span class="line"><span>                 default: 0</span></span>
<span class="line"><span>     [-h &lt;val&gt;]  Agent IP. If not provided, defaults to UXRCE_DDS_AG_IP</span></span>
<span class="line"><span>                 values: &lt;IP&gt;</span></span>
<span class="line"><span>     [-p &lt;val&gt;]  Agent listening port. If not provided, defaults to</span></span>
<span class="line"><span>                 UXRCE_DDS_PRT</span></span>
<span class="line"><span>     [-n &lt;val&gt;]  Client DDS namespace</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="work-queue" tabindex="-1">work_queue <a class="header-anchor" href="#work-queue" aria-label="Permalink to &quot;work_queue&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/work_queue" target="_blank" rel="noreferrer">systemcmds/work_queue</a></p><h3 id="description-13" tabindex="-1">Description <a class="header-anchor" href="#description-13" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Command-line tool to show work queue status.</p><p><a id="work_queue_usage"></a></p><h3 id="usage-13" tabindex="-1">Usage <a class="header-anchor" href="#usage-13" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>work_queue &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div>`,280),l=[p];function i(o,r,c,d,h,u){return e(),s("div",null,l)}const b=a(t,[["render",i]]);export{g as __pageData,b as default};
