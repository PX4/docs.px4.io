import{_ as s}from"./chunks/bootloader_update.Dqks0tXY.js";import{_ as i}from"./chunks/bootloader_fmu_v3_update.hb6XGZM6.js";import{_ as a,c as e,o as t,ab as l}from"./chunks/framework.CUflZczI.js";const y=JSON.parse('{"title":"부트로더 업데이트","description":"","frontmatter":{},"headers":[],"relativePath":"ko/advanced_config/bootloader_update.md","filePath":"ko/advanced_config/bootloader_update.md"}'),n={name:"ko/advanced_config/bootloader_update.md"},h=l(`<h1 id="부트로더-업데이트" tabindex="-1">부트로더 업데이트 <a class="header-anchor" href="#부트로더-업데이트" aria-label="Permalink to &quot;부트로더 업데이트&quot;">​</a></h1><p>The <em>PX4 Bootloader</em> is used to load firmware for <a href="./../flight_controller/pixhawk_series.html">Pixhawk boards</a> (PX4FMU, PX4IO).</p><p>Pixhawk controllers usually comes with an appropriate bootloader version pre-installed. However in some cases it is not present, or an older version is present that needs to be updated, or the board has been bricked and needs to be erased and the bootloader reinstalled.</p><p>이 섹션은 픽스호크 부트로더를 업데이트 방법을 설명합니다.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><ul><li>Most boards will need to use the <a href="#debug-probe-bootloader-update">Debug Probe</a> to update the bootloader.</li><li>On <a href="./../flight_controller/pixhawk6x-rt.html">FMUv6X-RT</a> you can <a href="./bootloader_update_v6xrt.html">install bootloader/unbrick boards via USB</a>. This is useful if you don&#39;t have a debug probe.</li><li>On FMUv2 and some custom firmware (only) you can use <a href="#qgc-bootloader-update">QGC Bootloader Update</a>.</li></ul></div><h2 id="building-the-px4-bootloader" tabindex="-1">Building the PX4 Bootloader <a class="header-anchor" href="#building-the-px4-bootloader" aria-label="Permalink to &quot;Building the PX4 Bootloader&quot;">​</a></h2><h3 id="px4-bootloader-fmuv6x-and-later" tabindex="-1">PX4 Bootloader FMUv6X and later <a class="header-anchor" href="#px4-bootloader-fmuv6x-and-later" aria-label="Permalink to &quot;PX4 Bootloader FMUv6X and later&quot;">​</a></h3><p>FMUv6X STM32H7)로 시작하는 보드는 인트리 PX4 부트로더를 사용합니다.</p><p>This can be built from within the <a href="https://github.com/PX4/PX4-Autopilot" target="_blank" rel="noreferrer">PX4-Autopilot</a> directory using the <code>make</code> command and the board-specific target with a <code>_bootloader</code> suffix.</p><p>For FMUv6X the command is:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v6x_bootloader</span></span></code></pre></div><p>This will build the bootloader binary as <code>build/px4_fmu-v6x_bootloader/px4_fmu-v6x_bootloader.elf</code>, which can be flashed via SWD or DFU. 부트로더를 빌드하는 경우 이러한 옵션중 하나를 충분히 숙지하여야합니다.</p><p>ELF 파일 대신 HEX 파일이 필요한 경우에는 objcopy를 사용하십시오.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm-none-eabi-objcopy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ihex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/px4_fmu-v6x_bootloader/px4_fmu-v6x_bootloader.elf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v6x_bootloader.hex</span></span></code></pre></div><h3 id="px4-bootloader-fmuv5x-and-earlier" tabindex="-1">PX4 Bootloader FMUv5X and earlier <a class="header-anchor" href="#px4-bootloader-fmuv5x-and-earlier" aria-label="Permalink to &quot;PX4 Bootloader FMUv5X and earlier&quot;">​</a></h3><p>사용 방법은 README의 지침을 참조하십시오.</p><p>The instructions in the repo README explain how to use it.</p><h2 id="debug-probe-bootloader-update" tabindex="-1">Debug Probe Bootloader Update <a class="header-anchor" href="#debug-probe-bootloader-update" aria-label="Permalink to &quot;Debug Probe Bootloader Update&quot;">​</a></h2><p>The following steps explain how you can &quot;manually&quot; update the bootloader using a <a href="./../debug/swd_debug.html#debug-probes-for-px4-hardware">compatible Debug Probe</a>:</p><ol><li><p>Get a binary containing the bootloader (either from dev team or <a href="#building-the-px4-bootloader">build it yourself</a>).</p></li><li><p>Get a <a href="./../debug/swd_debug.html#debug-probes-for-px4-hardware">Debug Probe</a>. Connect the probe your PC via USB and setup the <code>gdbserver</code>.</p></li><li><p>Go into the directory containing the binary and run the command for your target bootloader in the terminal:</p><ul><li><p>FMUv6X</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm-none-eabi-gdb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v6x_bootloader.elf</span></span></code></pre></div></li><li><p>FMUv6X-RT</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm-none-eabi-gdb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v6xrt_bootloader.elf</span></span></code></pre></div></li><li><p>FMUv5</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm-none-eabi-gdb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4fmuv5_bl.elf</span></span></code></pre></div></li></ul><div class="info custom-block"><p class="custom-block-title">H7 Bootloaders from <a href="https://github.com/PX4/PX4-Autopilot" target="_blank" rel="noreferrer">PX4/PX4-Autopilot</a> are named with pattern <code>*._bootloader.elf</code>. Bootloaders from <a href="https://github.com/PX4/PX4-Bootloader" target="_blank" rel="noreferrer">PX4/PX4-Bootloader</a> are named with the pattern <code>*_bl.elf</code>.</p></div></li></ol><p>:::</p><ol><li><p>The <em>gdb terminal</em> appears and it should display the following output:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gdb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (GNU </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Tools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Arm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Embedded</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Processors</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 7-2017-q4-major</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) 8.0.50.20171128-git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Copyright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (C) 2017 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a href=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://gnu.org/licenses/gpl.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x-nc=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://gnu.org/licenses/gpl.html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> free</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> software:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> are</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> free</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> change</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redistribute</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> it.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">There</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WARRANTY,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> permitted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> law.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;show copying&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;show warranty&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> details.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GDB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> was</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configured</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;--host=x86_64-linux-gnu --target=arm-none-eabi&quot;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;show configuration&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configuration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> details.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">For</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reporting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instructions,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> please</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> see:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> href=&quot;http://www.gnu.org/software/gdb/bugs/&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x-nc=&quot;1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://www.gnu.org/software/gdb/bugs/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Find</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GDB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manual</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> other</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> documentation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> resources</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> online</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> href=&quot;http://www.gnu.org/software/gdb/documentation/&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x-nc=&quot;1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://www.gnu.org/software/gdb/documentation/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">For</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;help&quot;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;apropos word&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commands</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> related</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;word&quot;...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Reading</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> symbols</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4fmuv5_bl.elf...done.</span></span></code></pre></div></li><li><p>Find your <code>&lt;dronecode-probe-id&gt;</code> by running an <code>ls</code> command in the <strong>/dev/serial/by-id</strong> directory.</p></li><li><p>Now connect to the debug probe with the following command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ext</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/serial/by-id/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dronecode-probe-i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p>Power on the Pixhawk with another USB cable and connect the probe to the <code>FMU-DEBUG</code> port.</p><div class="info custom-block"><p class="custom-block-title">If using a Dronecode probe you may need to remove the case in order to connect to the <code>FMU-DEBUG</code> port (e.g. on Pixhawk 4 you would do this using a T6 Torx screwdriver).</p></div></li></ol><p>:::</p><ol><li><p>Use the following command to scan for the Pixhawk\`s SWD and connect to it:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gdb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) mon swdp_scan</span></span></code></pre></div></li></ol><p>(gdb) attach 1</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>1. 이제 바이너리를 픽스호크에 로드하십시오:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`sh</span></span>
<span class="line"><span>(gdb) load</span></span></code></pre></div><p>After the bootloader has updated you can <a href="./../config/firmware.html">Load PX4 Firmware</a> using <em>QGroundControl</em>.</p><h2 id="qgc-bootloader-update" tabindex="-1">QGC Bootloader Update <a class="header-anchor" href="#qgc-bootloader-update" aria-label="Permalink to &quot;QGC Bootloader Update&quot;">​</a></h2><p>The easiest approach is to first use <em>QGroundControl</em> to install firmware that contains the desired/latest bootloader. 그런 다음, 매개변수 <a href="./../advanced_config/parameter_reference.html#SYS_BL_UPDATE">SYS_BL_UPDATE</a>를 설정하여 재시작시 부트로더 업데이트를 실행합니다.</p><p>This approach can only be used if <a href="./../advanced_config/parameter_reference.html#SYS_BL_UPDATE">SYS_BL_UPDATE</a> is present in firmware.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Currently only FMUv2 and some custom firmware includes the desired bootloader.</p></div><p>단계는 다음과 같습니다:</p><ol><li><p>SD카드를 삽입합니다 (발생 가능한 문제들의 디버깅을 위한 부트 로그 기록을 가능하게 합니다.)</p></li><li><p>적절한 부트로더를 포함하는 이미지를 사용하여 <a href="./../config/firmware.html#custom">펌웨어를 업데이트</a>합니다.</p><div class="info custom-block"><p class="custom-block-title">INFO</p></div></li></ol><p>The updated bootloader might be supplied in custom firmware (i.e. from the dev team), or it or may be included in the latest main branch. :::</p><ol><li>기체가 재부팅될 때까지 기다리십시오.</li><li><a href="./../advanced_config/parameter_reference.html#SYS_BL_UPDATE">SYS_BL_UPDATE</a> 파라미터를 <a href="./../advanced_config/parameters.html">찾아서 활성화</a> 하십시오.</li><li>재부팅하십시오 (보드의 연결을 끊고 다시 연결하십시오.). 부트로더 업데이트는 수초내에 완료됩니다.</li></ol><p>일반적으로이 시점에서 새로 설치된 부트로더를 사용하여 다시 <a href="./../config/firmware.html">펌웨어를 업데이트</a> 할 수 있습니다.</p><p>An specific example of this process for updating the FMUv2 bootloader is given below.</p><h3 id="fmuv2-bootloader-update" tabindex="-1">FMUv2 Bootloader Update <a class="header-anchor" href="#fmuv2-bootloader-update" aria-label="Permalink to &quot;FMUv2 Bootloader Update&quot;">​</a></h3><p>If <em>QGroundControl</em> installs the FMUv2 target (see console during installation), and you have a newer board, you may need to update the bootloader in order to access all the memory on your flight controller.</p><div class="info custom-block"><p class="custom-block-title">Early FMUv2 <a href="./../flight_controller/pixhawk_series.html#fmu_versions">Pixhawk-series</a> flight controllers had a <a href="./../flight_controller/silicon_errata.html#fmuv2-pixhawk-silicon-errata">hardware issue</a> that restricted them to using 1MB of flash memory. The problem is fixed on newer boards, but you may need to update the factory-provided bootloader in order to install FMUv3 Firmware and access all 2MB available memory.</p></div><p>To update the bootloader:</p><ol><li><p>SD카드를 삽입합니다 (발생 가능한 문제들의 디버깅을 위한 부트 로그 기록을 가능하게 합니다.)</p></li><li><p><a href="./../config/firmware.html">Update the Firmware</a> to PX4 <em>master</em> version (when updating the firmware, check <strong>Advanced settings</strong> and then select <strong>Developer Build (master)</strong> from the dropdown list). <em>QGroundControl</em> will automatically detect that the hardware supports FMUv2 and install the appropriate Firmware.</p><p><img src="`+s+'" alt="FMUv2 업데이트 "></p><p>기체가 재부팅될 때까지 기다리십시오.</p></li><li><p><a href="./../advanced_config/parameter_reference.html#SYS_BL_UPDATE">SYS_BL_UPDATE</a> 파라미터를 <a href="./../advanced_config/parameters.html">찾아서 활성화</a> 하십시오.</p></li><li><p>재부팅하십시오 (보드의 연결을 끊고 다시 연결하십시오.). 부트로더 업데이트는 수초내에 완료됩니다.</p></li><li><p>Then <a href="./../config/firmware.html">Update the Firmware</a> again. This time <em>QGroundControl</em> should autodetect the hardware as FMUv3 and update the Firmware appropriately.</p><p><img src="'+i+'" alt="FMUv3 update"></p><div class="info custom-block"><p class="custom-block-title">If the hardware has the <a href="./../flight_controller/silicon_errata.html#fmuv2-pixhawk-silicon-errata">Silicon Errata</a> it will still be detected as FMUv2 and you will see that FMUv2 was re-installed (in console). In this case you will not be able to install FMUv3 hardware.</p></div></li></ol><p>:::</p><h2 id="기타-보드-non-pixhawk" tabindex="-1">기타 보드 (Non-Pixhawk) <a class="header-anchor" href="#기타-보드-non-pixhawk" aria-label="Permalink to &quot;기타 보드 (Non-Pixhawk)&quot;">​</a></h2><p><a href="./../flight_controller/pixhawk_series.html">Pixhawk 시리즈</a>가 아닌 보드는 자체적인 부트로더 업데이트 방식이 있습니다.</p><p>Betaflight로 사전 플래싱된 보드에 대해서는 <a href="./bootloader_update_from_betaflight.html">Betaflight 시스템 부트로더 플래싱</a>을 참조하십시오.</p>',46),o=[h];function p(r,d,k,F,c,g){return t(),e("div",null,o)}const f=a(n,[["render",p]]);export{y as __pageData,f as default};
