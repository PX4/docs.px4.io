import{_ as s,c as i,o as a,ab as e}from"./chunks/framework.CUflZczI.js";const u=JSON.parse('{"title":"Making Serial Port Drivers User-Configurable","description":"","frontmatter":{},"headers":[],"relativePath":"en/uart/user_configurable_serial_driver.md","filePath":"en/uart/user_configurable_serial_driver.md"}'),t={name:"en/uart/user_configurable_serial_driver.md"},n=e(`<h1 id="making-serial-port-drivers-user-configurable" tabindex="-1">Making Serial Port Drivers User-Configurable <a class="header-anchor" href="#making-serial-port-drivers-user-configurable" aria-label="Permalink to &quot;Making Serial Port Drivers User-Configurable&quot;">​</a></h1><p>This topic explains how to set up a serial driver so that it can be end-user configured (via parameters) to run on any of a flight controller board&#39;s configurable serial ports.</p><h2 id="preconditions" tabindex="-1">Preconditions <a class="header-anchor" href="#preconditions" aria-label="Permalink to &quot;Preconditions&quot;">​</a></h2><p>The driver is assumed to already exist, and be started in the shell using the command syntax:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start -d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">serial_port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">baudrate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">param_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>where,</p><ul><li><code>-d</code>: serial port name.</li><li><code>-b</code>: Baud rate (optional) if the driver supports multiple baud rates. If supported, the driver must allow you to specify the rate as both a bare baudrate and as a parameter name in the form <code>-b p:&lt;param_name&gt;</code> (which can be parsed with <code>px4_get_parameter_value()</code>).<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>See the <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/drivers/gps/gps.cpp#L1023" target="_blank" rel="noreferrer">gps driver</a> for an example.</p></div></li></ul><h2 id="making-the-driver-configurable" tabindex="-1">Making the Driver Configurable <a class="header-anchor" href="#making-the-driver-configurable" aria-label="Permalink to &quot;Making the Driver Configurable&quot;">​</a></h2><p>To make driver configurable:</p><ol><li><p>Create a YAML module configuration file:</p><ul><li><p>Add a new file in the driver&#39;s source directory named <strong>module.yaml</strong></p></li><li><p>Insert the following text and adjust as needed:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">module_name: uLanding Radar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">serial_config:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ulanding_radar start -d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${SERIAL_DEV}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -b p:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${BAUD_PARAM}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      port_config_param:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: SENS_ULAND_CFG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        group: Sensors</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The full documentation of the module configuration file can be found in the <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/validation/module_schema.yaml" target="_blank" rel="noreferrer">validation/module_schema.yaml</a> file. This is also used to validate all configuration files in CI.</p></div></li></ul></li><li><p>Add the module configuration to the <strong>CMakeLists.txt</strong> file for the driver module:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">px4_add_module(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	MODULE drivers__ulanding</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	MAIN ulanding_radar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	SRCS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		ulanding.cpp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	MODULE_CONFIG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		module.yaml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	)</span></span></code></pre></div></li></ol>`,10),l=[n];function r(p,h,o,d,k,c){return a(),i("div",null,l)}const E=s(t,[["render",r]]);export{u as __pageData,E as default};
