import{_ as s,c as e,o as a,ab as i}from"./chunks/framework.CUflZczI.js";const u=JSON.parse('{"title":"Консолі/Оболонки PX4","description":"","frontmatter":{},"headers":[],"relativePath":"uk/debug/consoles.md","filePath":"uk/debug/consoles.md"}'),t={name:"uk/debug/consoles.md"},l=i(`<h1 id="консолі-оболонки-px4" tabindex="-1">Консолі/Оболонки PX4 <a class="header-anchor" href="#консолі-оболонки-px4" aria-label="Permalink to &quot;Консолі/Оболонки PX4&quot;">​</a></h1><p>PX4 дозволяє термінальний доступ до системи через <a href="./../debug/mavlink_shell.html">Оболонку MAVLink</a> та <a href="./../debug/system_console.html">Системну консоль</a>.</p><p>Ця сторінка пояснює основні відмінності та як використовується консоль/оболонка.</p><p><a id="console_vs_shell"></a></p><h2 id="системна-консоль-у-порівнянні-з-оболонкою" tabindex="-1">Системна консоль у порівнянні з оболонкою <a class="header-anchor" href="#системна-консоль-у-порівнянні-з-оболонкою" aria-label="Permalink to &quot;Системна консоль у порівнянні з оболонкою&quot;">​</a></h2><p><em>Системна консоль</em> PX4 забезпечує низькорівневий доступ до системи, виводу налагодження та аналізу процесу завантаження системи.</p><p>Є лише одна _Системна консоль _, яка працює на одному конкретному UART (порт налагодження, як налаштовано в NuttX) та зазвичай під&#39;єднана до комп&#39;ютера за допомогою кабелю FTDI (або якогось іншого адаптера для налагодження, наприклад, <a href="https://kb.zubax.com/display/MAINKB/Dronecode+Probe+documentation" target="_blank" rel="noreferrer">зонда Dronecode</a>).</p><ul><li>Використовується для <em>низькорівневого налагодження/розробки</em>: завантаження, NuttX, скриптів запуску, запуску плати, розробки центральних частин PX4 (наприклад uORB).</li><li>Зокрема, це єдине місце, де виводиться весь вивід завантаження (включаючи інформацію про програми, які автоматично запускаються при завантаженні).</li></ul><p>Оболонки надають високорівневий доступ до системи:</p><ul><li>Використовується для базового тестування модулів/виконання команд.</li><li>Лише <em>безпосередньо</em> показує вивід модулів, які ви запускаєте.</li><li>Не може <em>безпосередньо</em> показувати вивід завдань, запущених у робочій черзі.</li><li>Не може налагоджувати проблеми, коли система не запускається (оскільки вона ще не працює).</li></ul><div class="info custom-block"><p class="custom-block-title">Команда <code>dmesg</code> тепер доступна через оболонку на деяких платах, що дозволяє набагато більш низькорівневе налагодження, ніж раніше було можливо. Наприклад, за допомогою <code>dmesg -f &amp;</code> ви також бачите вивід фонових завдань.</p></div><p>Може бути кілька оболонок, які працюють на відведеному UART або через MAVLink. Оскільки MAVLink надає більшу гнучкість, наразі використовується лише <a href="./../debug/mavlink_shell.html">Оболонка MAVLink</a>.</p><p><a href="./../debug/system_console.html">Системна консоль</a> є необхідною, коли система не завантажується (вона відображає журнал завантаження системи при перезапуску плати за живленням). <a href="./../debug/mavlink_shell.html">MAVLink Shell</a> набагато легше налаштувати, тому як правило рекомендується для налагодження загалом.</p><p><a id="using_the_console"></a></p><h2 id="використання-консолі-оболонки" tabindex="-1">Використання Консолі/Оболонки <a class="header-anchor" href="#використання-консолі-оболонки" aria-label="Permalink to &quot;Використання Консолі/Оболонки&quot;">​</a></h2><p>Консоль/оболонка MAVLink та <a href="./../debug/system_console.html">Системна консоль</a> використовуються практично однаково.</p><p>Наприклад, введіть <code>ls</code>, щоб переглянути локальну файлову систему, <code>free</code>, щоб переглянути доступну вільну оперативну пам&#39;ять, <code>dmesg</code>, щоб подивитися вивід завантаження.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nsh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nsh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> free</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nsh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dmesg</span></span></code></pre></div><p>Нижче наведено кілька команд, які можна використати в <a href="https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=139629410" target="_blank" rel="noreferrer">NuttShell</a>, щоб отримати уявлення про систему.</p><p>Ця команда NSH надає доступну вільну пам&#39;ять:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">free</span></span></code></pre></div><p>Команда top показує використання стеку для кожного додатку:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">top</span></span></code></pre></div><p>Зверніть увагу, що використання стеку обчислюється за допомогою алгоритму забарвлення стеку та є максимумом з моменту початку завдання (а не поточним використанням).</p><p>Щоб побачити, що виконується у робочих чергах і з якою швидкістю, використовуйте:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">work_queue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span></code></pre></div><p>Для налагодження тем uORB:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uorb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> top</span></span></code></pre></div><p>Для перевірки певної рубрики uORB:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listener</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">topic_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Багато інших системних команд та модулів перелічені в <a href="./../modules/modules_main.html">Довіднику модулів та команд</a> (наприклад, <code>top</code>, <code>listener</code> тощо).</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Деякі команди можуть бути вимкнені на деяких платах (тобто деякі модулі не включені в прошивку для плат з обмеженнями по ОП або FLASH). У цьому випадку ви побачите відповідь: <code>command not found</code></p></div>`,32),p=[l];function n(h,o,d,c,r,k){return a(),e("div",null,p)}const m=s(t,[["render",n]]);export{u as __pageData,m as default};
