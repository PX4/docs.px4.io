import{_ as e,a}from"./chunks/px4_arch_fc_companion.BWVvemTR.js";import{_ as t,c as r,o,ab as s}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"PX4 시스템 아키텍처","description":"","frontmatter":{},"headers":[],"relativePath":"ko/concept/px4_systems_architecture.md","filePath":"ko/concept/px4_systems_architecture.md"}'),i={name:"ko/concept/px4_systems_architecture.md"},l=s('<h1 id="px4-시스템-아키텍처" tabindex="-1">PX4 시스템 아키텍처 <a class="header-anchor" href="#px4-시스템-아키텍처" aria-label="Permalink to &quot;PX4 시스템 아키텍처&quot;">​</a></h1><p>아래 섹션에서는 &quot;일반적인&quot; PX4 시스템의 하드웨어와 소프트웨어 개요를 제공합니다. 하나는 비행 콘트롤러만 있는 것이고 다른 하나는 비행 컨트롤러와 보조 컴퓨터(&quot;미션 컴퓨터&quot;라고도 함)가 있습니다.</p><p>:::note <a href="./../concept/architecture.html">PX4 아키텍처 개요</a>는 플라이트 스택과 미들웨어 정보를 제공합니다. Offboard APIs are covered in <a href="./../ros/">ROS</a> and <a href="https://mavsdk.mavlink.io/main/en/" target="_blank" rel="noreferrer">MAVSDK</a>. :::</p><h2 id="비행-콘트롤러" tabindex="-1">비행 콘트롤러 <a class="header-anchor" href="#비행-콘트롤러" aria-label="Permalink to &quot;비행 콘트롤러&quot;">​</a></h2><p>아래 다이어그램은 비행 콘트롤러 기반 PX4 시스템 개요입니다.</p><p><img src="'+e+'" alt="PX4 아키텍처 - FC 전용 시스템"></p><p>하드웨어 구성</p><ul><li><a href="./../flight_controller/README.html">비행 콘트롤러</a>(PX4 비행 스택 실행). 콘트롤러에는 대부분 내부 IMU, 나침반 및 기압계가 포함되어 있습니다.</li><li><a href="./../peripherals/esc_motors.html">Motor ESCs</a> connected to <a href="./../peripherals/pwm_escs_and_servo.html">PWM outputs</a>, <a href="./../dronecan/escs.html">DroneCAN</a> (DroneCAN allows two-way communication, not single direction as shown) or some other bus.</li><li>Sensors (<a href="./../gps_compass/">GPS</a>, <a href="./../gps_compass/">compass</a>, distance sensors, barometers, optical flow, barometers, ADSB transponders, etc.) connected via I2C, SPI, CAN, UART etc.</li><li><a href="./../camera/">Camera</a> or other payload. 카메라는 PWM 출력에 연결하거나 MAVLink로 연결할 수 있습니다.</li><li>지상국 컴퓨터/소프트웨어에 연결하기 위한 <a href="./../telemetry/README.html">텔레메트리 라디오</a>.</li><li>수동 제어를 위한 <a href="./../getting_started/rc_transmitter_receiver.html">RC 제어 시스템</a></li></ul><p>The left hand side of the diagram shows the software stack, which is horizontally aligned (approximately) with the hardware parts of the diagram.</p><ul><li>The ground station computer typically runs <a href="./../getting_started/px4_basic_concepts.html#qgc">QGroundControl</a> (or some other ground station software). 또한 <a href="https://mavsdk.mavlink.io/" target="_blank" rel="noreferrer">MAVSDK</a> 또는 <a href="./../ros/README.html">ROS</a>와 같은 로봇 소프트웨어를 실행할 수 있습니다.</li><li>비행 컨트롤러에서 실행되는 PX4 비행 스택에는 <a href="./../modules/modules_driver.html">드라이버</a>, <a href="./../modules/modules_communication.html">통신 모듈</a>, <a href="./../modules/modules_controller.html">컨트롤러</a>, <a href="./../modules/modules_controller.html">추정기</a> <a href="./../modules/modules_main.html">및 기타 미들웨어 및 시스템 모듈 등이 포함됩니다</a>.</li></ul><h2 id="비행-콘트롤러와-보조-컴퓨터" tabindex="-1">비행 콘트롤러와 보조 컴퓨터 <a class="header-anchor" href="#비행-콘트롤러와-보조-컴퓨터" aria-label="Permalink to &quot;비행 콘트롤러와 보조 컴퓨터&quot;">​</a></h2><p>아래 다이어그램은 비행 콘트롤러와 보조 컴퓨터(여기서는 &quot;임무 컴퓨터&quot;라고 함)를 포함하는 PX4 시스템을 나타냅니다.</p><p><img src="'+a+'" alt="PX4 아키텍처 - FC + 보조 컴퓨터"></p><p>비행 콘트롤러는 일반 PX4 비행 스택을 실행하고, 보조 컴퓨터는 <a href="./../computer_vision/obstacle_avoidance.html">물체 회피</a> 및 <a href="./../computer_vision/collision_prevention.html">충돌 방지</a>와 같은 고급 기능을 제공합니다. 두 시스템은 고속 직렬 또는 IP 링크로 연결되며, 일반적으로 <a href="https://mavlink.io/en/" target="_blank" rel="noreferrer">MAVLink 프로토콜</a>로 통신합니다. 지상국 및 클라우드와의 통신은 일반적으로 보조 컴퓨터를 통해 라우팅됩니다(예: Intel의 <a href="https://github.com/mavlink-router/mavlink-router" target="_blank" rel="noreferrer">MAVLink 라우터</a> 사용).</p><p>PX4 systems typically run a Linux OS on the companion computer (because the <a href="https://github.com/PX4/PX4-Avoidance" target="_blank" rel="noreferrer">PX4/PX4-Avoidance</a> project delivers ROS-based avoidance libraries designed for Linux). Linux는 NuttX보다 &quot;일반&quot; 소프트웨어 개발을 위한 플랫폼입니다. 많은 Linux 개발자와 유용한 소프트웨어가 이미 개발되어 있습니다(예: 컴퓨터 비전, 통신, 클라우드 통합, 하드웨어 드라이버용). 보조 컴퓨터는 때때로 같은 이유로 Android를 사용합니다.</p><p>:::note 다이어그램은 여러 PX4 기반 시스템에서 사용된 접근 방식인 LTE를 통한 클라우드 또는 지상국 연결 방법을 나타냅니다. PX4는 특별히 LTE와 클라우드 통합을 위한 소프트웨어를 제공하지 않습니다(사용자 맞춤형 개발이 필요함). :::</p>',16),n=[l];function h(c,m,p,d,_,u){return o(),r("div",null,n)}const k=t(i,[["render",h]]);export{g as __pageData,k as default};
