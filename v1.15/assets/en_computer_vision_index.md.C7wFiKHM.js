import{_ as e,c as o,o as i,ab as t}from"./chunks/framework.CUflZczI.js";const v=JSON.parse('{"title":"Computer Vision (Optical Flow, MoCap, VIO, Avoidance)","description":"","frontmatter":{},"headers":[],"relativePath":"en/computer_vision/index.md","filePath":"en/computer_vision/index.md"}'),a={name:"en/computer_vision/index.md"},n=t('<h1 id="computer-vision-optical-flow-mocap-vio-avoidance" tabindex="-1">Computer Vision (Optical Flow, MoCap, VIO, Avoidance) <a class="header-anchor" href="#computer-vision-optical-flow-mocap-vio-avoidance" aria-label="Permalink to &quot;Computer Vision (Optical Flow, MoCap, VIO, Avoidance)&quot;">​</a></h1><p><a href="https://en.wikipedia.org/wiki/Computer_vision" target="_blank" rel="noreferrer">Computer vision</a> techniques enable computers to use visual data to make sense of their environment.</p><p>PX4 uses computer vision systems (primarily running on <a href="./../companion_computer/">Companion Computers</a>) in order to support the following features:</p><ul><li>Pose/Velocity Estimation: <ul><li><a href="./../sensor/optical_flow.html">Optical Flow</a> provides 2D velocity estimation (using a downward facing camera and a downward facing distance sensor).</li><li><a href="./../computer_vision/motion_capture.html">Motion Capture</a> provides 3D pose estimation using a vision system that is <em>external</em> to the vehicle. It is primarily used for indoor navigation.</li><li><a href="./../computer_vision/visual_inertial_odometry.html">Visual Inertial Odometry (VIO)</a> provides 3D pose and velocity estimation using an onboard vision system and IMU. It is used for navigation when global position information is absent or unreliable.</li></ul></li><li>Avoidance/Path Planning: <ul><li><a href="./../computer_vision/collision_prevention.html">Collision Prevention</a> is used to stop vehicles before they can crash into an obstacle (primarily when flying in manual modes).</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <a href="./../complete_vehicles_mc/px4_vision_kit.html">PX4 Vision Autonomy Development Kit</a> (Holybro) is a robust and inexpensive kit for developers working with computer vision on PX4.</p></div><h2 id="external-resources" tabindex="-1">External Resources <a class="header-anchor" href="#external-resources" aria-label="Permalink to &quot;External Resources&quot;">​</a></h2><ul><li><a href="https://github.com/robin-shaun/XTDrone/blob/master/README.en.md" target="_blank" rel="noreferrer">XTDrone</a> - ROS + PX4 v1.9 simulation environment for computer vision. The <a href="https://www.yuque.com/xtdrone/manual_en" target="_blank" rel="noreferrer">XTDrone Manual</a> has everything you need to get started!</li></ul>',7),r=[n];function s(l,c,p,m,u,d){return i(),o("div",null,r)}const _=e(a,[["render",s]]);export{v as __pageData,_ as default};
