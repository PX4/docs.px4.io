import{_ as r,a,b as l}from"./chunks/pilotpi_sens_wiring.CWbVN67d.js";import{_ as i,E as e,c as o,J as h,m as t,a as n,ab as s,o as p}from"./chunks/framework.CUflZczI.js";const D=JSON.parse('{"title":"라즈베리파이 PilotPi 실드","description":"","frontmatter":{},"headers":[],"relativePath":"ko/flight_controller/raspberry_pi_pilotpi.md","filePath":"ko/flight_controller/raspberry_pi_pilotpi.md"}'),c={name:"ko/flight_controller/raspberry_pi_pilotpi.md"},u=t("h1",{id:"라즈베리파이-pilotpi-실드",tabindex:"-1"},[n("라즈베리파이 PilotPi 실드 "),t("a",{class:"header-anchor",href:"#라즈베리파이-pilotpi-실드","aria-label":'Permalink to "라즈베리파이 PilotPi 실드"'},"​")],-1),b=s('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>이 비행 콘트롤러에 대한 PX4는 <a href="./../flight_controller/autopilot_experimental.html">테스트 단계</a>입니다. Contact the <a href="mailto:lhf2613@gmail.com" target="_blank" rel="noreferrer">manufacturer</a> for hardware support or compliance issues.</p></div><p>The <em>PilotPi</em> shield is a fully functional solution to run PX4 autopilot directly on Raspberry Pi. 리눅스와 PX4 측면에서 지속적으로 업데이트되고 있는, 저비용 고확장성의 플랫폼입니다. 모든 구성 요소가 라즈베리파이와 PX4 커뮤니티의 업스트림 지원을 제공하므로, 독점 드라이버가 필요하지 않습니다. PCB와 회로도도 오픈 소스입니다.</p><p><img src="'+r+'" alt="PilotPi with RPi 4B"></p><h2 id="요약" tabindex="-1">요약 <a class="header-anchor" href="#요약" aria-label="Permalink to &quot;요약&quot;">​</a></h2><ul><li>지원 라즈베리파이 보드: <ul><li>라즈베리파이 2B/3B/3B+/4B</li></ul></li><li>지원 운영체제: <ul><li>라즈베리파이 OS</li><li>우분투 서버 (armhf/arm64)</li></ul></li><li>가속도계/자이로 <ul><li>ICM42688P</li></ul></li><li>자력계: <ul><li>IST8310</li></ul></li><li>기압계: <ul><li>MS5611</li></ul></li><li>PWM: <ul><li>PCA9685</li></ul></li><li>ADC: <ul><li>ADS1115</li></ul></li><li>전원: <ul><li>전압감지기능이 내장 3~6S 배터리.</li><li>USB 케이블 전원 공급</li></ul></li><li>Availability: <em>preparing for shipping</em></li></ul><h2 id="연결성" tabindex="-1">연결성 <a class="header-anchor" href="#연결성" aria-label="Permalink to &quot;연결성&quot;">​</a></h2><p>Shield는 다음을 제공합니다.</p><ul><li>PWM 출력 채널 16개</li><li>GPS 커넥터</li><li>텔레메트리 커넥터</li><li>외부 I2C 버스 커넥터(<strong>참고:</strong> CSI 카메라와 충돌)</li><li>RC 입력 포트(SBUS)</li><li>ADC 채널 범위 0 ~ 5V 3개</li><li>2*8 2.54mm 미사용 GPIO 커넥터</li></ul><p>라즈베리파이 직접 액세스</p><ul><li>USB 커넥터 4개</li><li>CSI 커넥터(<strong>참고:</strong> 외부 I2C 버스와 충돌)</li><li>기타</li></ul><h2 id="권장-배선" tabindex="-1">권장 배선 <a class="header-anchor" href="#권장-배선" aria-label="Permalink to &quot;권장 배선&quot;">​</a></h2><p><img src="'+a+'" alt="PilotPi PowerPart 배선"></p><p><img src="'+l+'" alt="PilotPi SensorPart 배선"></p><h2 id="핀배열" tabindex="-1">핀배열 <a class="header-anchor" href="#핀배열" aria-label="Permalink to &quot;핀배열&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>구형 GH1.25 커넥터를 사용합니다. 배선은 Pixhawk 2.4.8과 호환됩니다.</p></div><h3 id="커넥터" tabindex="-1">커넥터 <a class="header-anchor" href="#커넥터" aria-label="Permalink to &quot;커넥터&quot;">​</a></h3><h4 id="gps-커넥터" tabindex="-1">GPS 커넥터 <a class="header-anchor" href="#gps-커넥터" aria-label="Permalink to &quot;GPS 커넥터&quot;">​</a></h4><p><code>/dev/ttySC0</code>에 매핑됨</p><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1</td><td>VCC</td><td>+5V</td></tr><tr><td>2</td><td>TX</td><td>+3V3</td></tr><tr><td>3</td><td>RX</td><td>+3V3</td></tr><tr><td>4</td><td>NC</td><td>+3V3</td></tr><tr><td>5</td><td>NC</td><td>+3V3</td></tr><tr><td>6</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="텔레메트리-커넥터" tabindex="-1">텔레메트리 커넥터 <a class="header-anchor" href="#텔레메트리-커넥터" aria-label="Permalink to &quot;텔레메트리 커넥터&quot;">​</a></h4><p><code>/dev/ttySC1</code>에 매핑됨</p><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1</td><td>VCC</td><td>+5V</td></tr><tr><td>2</td><td>TX</td><td>+3V3</td></tr><tr><td>3</td><td>RX</td><td>+3V3</td></tr><tr><td>4</td><td>CTS</td><td>+3V3</td></tr><tr><td>5</td><td>RTS</td><td>+3V3</td></tr><tr><td>6</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="외부-i2c-커넥터" tabindex="-1">외부 I2C 커넥터 <a class="header-anchor" href="#외부-i2c-커넥터" aria-label="Permalink to &quot;외부 I2C 커넥터&quot;">​</a></h4><p><code>/dev/i2c-0</code>에 매핑됨</p><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1</td><td>VCC</td><td>+5V</td></tr><tr><td>2</td><td>SCL</td><td>+3v3(풀업)</td></tr><tr><td>3</td><td>SDA</td><td>+3v3(풀업)</td></tr><tr><td>4</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="rc-및-adc2-3-4" tabindex="-1">RC 및 ADC2/3/4 <a class="header-anchor" href="#rc-및-adc2-3-4" aria-label="Permalink to &quot;RC 및 ADC2/3/4&quot;">​</a></h4><p>RC는 RX 라인의 신호 인버터 스위치로 <code>/dev/ttyAMA0</code>에 매핑됩니다.</p><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1</td><td>RC</td><td>+3V3 ~ +5V</td></tr><tr><td>2</td><td>VCC</td><td>+5V</td></tr><tr><td>3</td><td>GND</td><td>GND</td></tr></tbody></table><ul><li>ADC1은 배터리 전압 모니터링을 위해 전압 분배기에 내부적으로 연결됩니다.</li><li>ADC2는 사용되지 않습니다.</li><li>ADC3는 아날로그 속도 센서에 연결할 수 있습니다.</li><li>ADC4에는 시스템 전압 레벨을 모니터링하기 위하여 ADC와 VCC 사이에 점퍼 캡이 있습니다.</li></ul><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1</td><td>ADCx</td><td>0V ~ +5V</td></tr><tr><td>2</td><td>VCC</td><td>+5V</td></tr><tr><td>3</td><td>GND</td><td>GND</td></tr></tbody></table><p>:::note ADC 3과 4는 대체 VCC 소스가 있습니다. &#39;Vref&#39; 스위치가 켜져 있으면 &#39;VCC&#39; 핀이 REF5050에 의해 구동됩니다. :::</p><h4 id="보드-상단의-미사용-gpio" tabindex="-1">보드 상단의 미사용 GPIO <a class="header-anchor" href="#보드-상단의-미사용-gpio" aria-label="Permalink to &quot;보드 상단의 미사용 GPIO&quot;">​</a></h4><table><thead><tr><th>실드 핀</th><th>BCM</th><th>WiringPi</th><th>RPi 핀</th></tr></thead><tbody><tr><td>1</td><td>3V3</td><td>3V3</td><td>3V3</td></tr><tr><td>2</td><td>5V</td><td>5V</td><td>5V</td></tr><tr><td>3</td><td>4</td><td>7</td><td>7</td></tr><tr><td>4</td><td>14</td><td>15</td><td>8</td></tr><tr><td>5</td><td>17</td><td>0</td><td>11</td></tr><tr><td>6</td><td>27</td><td>2</td><td>13</td></tr><tr><td>7</td><td>22</td><td>3</td><td>15</td></tr><tr><td>8</td><td>23</td><td>4</td><td>16</td></tr><tr><td>9</td><td>7</td><td>11</td><td>26</td></tr><tr><td>10</td><td>5</td><td>21</td><td>29</td></tr><tr><td>11</td><td>6</td><td>22</td><td>31</td></tr><tr><td>12</td><td>12</td><td>26</td><td>32</td></tr><tr><td>13</td><td>13</td><td>23</td><td>33</td></tr><tr><td>14</td><td>16</td><td>27</td><td>36</td></tr><tr><td>15</td><td>26</td><td>25</td><td>37</td></tr><tr><td>16</td><td>GND</td><td>GND</td><td>GND</td></tr></tbody></table><h3 id="스위치" tabindex="-1">스위치 <a class="header-anchor" href="#스위치" aria-label="Permalink to &quot;스위치&quot;">​</a></h3><h4 id="rc-인버터" tabindex="-1">RC 인버터 <a class="header-anchor" href="#rc-인버터" aria-label="Permalink to &quot;RC 인버터&quot;">​</a></h4><p>이 스위치는 RX 라인의 신호 극성을 결정합니다. <code>UART_RX = SW xor RC_INPUT</code></p><ul><li>켜짐: SBUS (신호 반전)에 적합</li><li>꺼짐: 보존됨</li></ul><h4 id="vref" tabindex="-1">Vref <a class="header-anchor" href="#vref" aria-label="Permalink to &quot;Vref&quot;">​</a></h4><p>ADC 3과 4는 다음에 의해 구동되는 VCC를 갖습니다.</p><ul><li>켜진 경우 REF5050에서 Vref 출력</li><li>꺼져있는 경우 라즈베리파이에서 직접 5V 핀</li></ul><h4 id="부팅-모드" tabindex="-1">부팅 모드 <a class="header-anchor" href="#부팅-모드" aria-label="Permalink to &quot;부팅 모드&quot;">​</a></h4><p>이 스위치는 Pin22(BCM25)에 연결됩니다. 시스템 rc 스크립트는 해당 값을 확인하고, PX4가 시스템 부팅시 시작 여부를 결정합니다.</p><ul><li>켜짐: 자동으로 PX4 시작</li><li>꺼짐: PX4를 시작하지 않습니다.</li></ul><h2 id="개발자-가이드" tabindex="-1">개발자 가이드 <a class="header-anchor" href="#개발자-가이드" aria-label="Permalink to &quot;개발자 가이드&quot;">​</a></h2><p>라즈베리파이 OS에 대한 특정 지침을 참고하십시오.</p><ul><li><a href="./raspberry_pi_pilotpi_rpios.html">Raspberry Pi OS Lite (armhf)</a></li><li><a href="./raspberry_pi_pilotpi_ubuntu_server.html">우분투 서버 (arm64 &amp; armhf)</a></li></ul>',46);function m(P,_,C,f,V,S){const d=e("LinkedBadge");return p(),o("div",null,[u,h(d,{type:"warning",text:"Experimental",url:"../flight_controller/autopilot_experimental.html"}),b])}const g=i(c,[["render",m]]);export{D as __pageData,g as default};
