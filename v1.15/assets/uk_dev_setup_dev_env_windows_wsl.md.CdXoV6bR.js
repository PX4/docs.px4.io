import{_ as s,a as i}from"./chunks/vscode_wsl.il4nWHb-.js";import{_ as a,c as t,o as e,ab as l}from"./chunks/framework.CUflZczI.js";const b=JSON.parse('{"title":"Середовище розробки Windows (засноване на WSL2)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/dev_setup/dev_env_windows_wsl.md","filePath":"uk/dev_setup/dev_env_windows_wsl.md"}'),n={name:"uk/dev_setup/dev_env_windows_wsl.md"},p=l('<h1 id="середовище-розробки-windows-засноване-на-wsl2" tabindex="-1">Середовище розробки Windows (засноване на WSL2) <a class="header-anchor" href="#середовище-розробки-windows-засноване-на-wsl2" aria-label="Permalink to &quot;Середовище розробки Windows (засноване на WSL2)&quot;">​</a></h1><p>Наступні інструкції пояснюють як налаштувати середовище розробки PX4 на Windows 10 або 11, запущене на Ubuntu Linux у <a href="https://docs.microsoft.com/en-us/windows/wsl/about" target="_blank" rel="noreferrer">WSL2</a>.</p><p>Це середовище може бути використане для збірки PX4 для:</p><ul><li><a href="./../dev_setup/building_px4.html#nuttx-pixhawk-based-boards">Pixhawk та іншого апаратного забезпечення на основі NuttX</a></li><li><a href="./../sim_gazebo_gz/">Симуляції Gazebo</a></li><li><a href="./../sim_gazebo_classic/">Симуляції Gazebo Classic</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Ця установка підтримується командою розробників PX4. Середовище в теорії має бути здатне збирати будь-яку ціль збірки, яку можна зібрати на Ubuntu. The list above are those targets that are regularly tested.</p></div><h2 id="загальнии-огляд" tabindex="-1">Загальний огляд <a class="header-anchor" href="#загальнии-огляд" aria-label="Permalink to &quot;Загальний огляд&quot;">​</a></h2><p><a href="https://docs.microsoft.com/en-us/windows/wsl/about" target="_blank" rel="noreferrer">Windows Subsystem для Linux</a> (<a href="https://docs.microsoft.com/en-us/windows/wsl/compare-versions" target="_blank" rel="noreferrer">WSL2</a>) дозволяє користувачам встановлювати й запускати <a href="./../dev_setup/dev_env_linux_ubuntu.html">середовище розробки Ubuntu</a> на Windows, <em>майже</em> так само як би його запустили на комп&#39;ютері Linux.</p><p>В цьому середовищі розробники можуть:</p><ul><li>Зібрати в оболонці WSL будь-який симулятор або цільову апаратну платформу, яка підтримується <a href="./../dev_setup/dev_env_linux_ubuntu.html">середовищем розробки Ubuntu</a>. (Ubuntu є платформою розробки PX4, яка підтримується та протестована найкраще).</li><li>Налагоджувати код в <a href="./dev_env_windows_wsl.html#visual-studio-code-integration">Visual Studio Code</a> запущений на Windows.</li><li>Спостерігати за <em>симуляцією</em>, яка запущена в WSL використовуючи <em>QGroundControl для Linux</em>. QGC для Linux автоматично під&#39;єднується до симуляції.</li></ul><p><em>QGroundControl для Windows</em> необхідна додатково, якщо потрібно:</p><ul><li><a href="#flash-a-flight-control-board">Поновлення прошивки</a> на реальному рухомому засобі.</li><li>Спостерігати за справжнім засобом. Зауважте, що також можна спостерігати за симуляцією, але потрібно вручну <a href="#qgroundcontrol-on-windows">під&#39;єднатися до симуляції, що запущена у WSL</a>.</li></ul><p>:::note Підключення до USB пристрою з WSL не підтримується, тому неможливо поновити прошивку за допомогою параметру <a href="./../dev_setup/building_px4.html#uploading-firmware-flashing-the-board"><code>upload</code></a> під час збірки у командній оболонці, або з <em>QGroundControl для Linux</em>. :::</p><p>:::note Цей підхід схожий на встановлення PX4 на <em>власну</em> віртуальну машину, як описано в <a href="./../dev_setup/dev_env_windows_vm.html">інструментарії на VM Windows</a>. Перевага WSL2 полягає в тому, що її віртуальна машина глибоко інтегрована в Windows, керується системою та оптимізована для ефективності. :::</p><h2 id="встановлення" tabindex="-1">Встановлення <a class="header-anchor" href="#встановлення" aria-label="Permalink to &quot;Встановлення&quot;">​</a></h2><h3 id="встановлення-wsl2" tabindex="-1">Встановлення WSL2 <a class="header-anchor" href="#встановлення-wsl2" aria-label="Permalink to &quot;Встановлення WSL2&quot;">​</a></h3><p>Щоб встановити WSL2 з Ubuntu на новій установці Windows 10 або 11:</p><ol><li><p>Переконайтеся, що функція віртуалізації увімкнена в BIOS вашого комп&#39;ютера. Зазвичай її називають &quot;Virtualization Technology&quot;, &quot;Intel VT-x&quot; чи &quot;AMD-V&quot; відповідно.</p></li><li><p>Відкрийте <em>cmd.exe</em> від імені адміністратора. Це можна зробити натиснувши кнопку &quot;Пуск&quot;, надрукувати <code>cmd</code>, натиснути правою кнопкою миші на пункті <em>Command prompt</em> та обрати <strong>Run as administrator</strong>.</p></li><li><p>Виконайте наступні команди для встановлення WSL2 та певної версії Ubuntu:</p><ul><li><p>Версія за замовчуванням (Ubuntu 22.04):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre></div></li><li><p>Ubuntu 20.04 (<a href="./../sim_gazebo_classic/README.html">Симуляція Gazebo-Classic</a>)</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ubuntu-20.04</span></span></code></pre></div></li><li><p>Ubuntu 22.04 (<a href="./../sim_gazebo_gz/README.html">Симуляція Gazebo</a>)</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ubuntu-22.04</span></span></code></pre></div></li></ul></li></ol><p>:::note Ви також можете встановити<a href="https://www.microsoft.com/store/productId/9MTTCL66CPXJ" target="_blank" rel="noreferrer">Ubuntu 20.04</a> та <a href="https://www.microsoft.com/store/productId/9PN20MSR04DW" target="_blank" rel="noreferrer">Ubuntu 22.04</a> з магазину застосунків, який дозволяє видалити програму за допомогою звичайної функції Windows Додати/Видалити: :::</p><ol><li>WSL запитає про ім&#39;я користувача та пароль для встановлення Ubuntu. Запишіть ці облікові дані, оскільки вони знадобляться пізніше!</li></ol><p>Тепер командний рядок є терміналом в нововстановленому середовищі Ubuntu.</p><h3 id="відкриття-оболонки-wsl" tabindex="-1">Відкриття оболонки WSL <a class="header-anchor" href="#відкриття-оболонки-wsl" aria-label="Permalink to &quot;Відкриття оболонки WSL&quot;">​</a></h3><p>Всі операції для встановлення та збірки PX4 повинні бути виконані в оболонці WSL (можна використати ту саму оболонку в якій встановлювалася WSL2 або відкрити нову).</p><p>Якщо ви використовуєте <a href="https://learn.microsoft.com/en-us/windows/terminal/install" target="_blank" rel="noreferrer">Windows Terminal</a> ви можете відкрити консоль у встановленому WSL середовищі, як показано, та вийти з нього, закривши вкладку.</p><p><img src="'+s+`" alt="Windows Terminal показує, як вибрати оболонку Ubuntu"></p><p>Щоб відкрити оболонку WSL за допомогою командного рядка:</p><ol><li><p>Відкрийте командний рядок:</p><ul><li>Натисніть кнопку Windows <strong>Пуск</strong>.</li><li>Введіть <code>cmd</code> і натисніть <strong>Enter</strong>, щоб відкрити консоль.</li></ul></li><li><p>Щоб запустити WSL і отримати доступ до WSL оболонки, виконайте команду:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">distribution_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Наприклад:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ubuntu</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ubuntu-20.04</span></span></code></pre></div><p>Якщо у вас тільки одна версія Ubuntu, ви можете просто використати <code>wsl</code>.</p></li></ol><p>Введіть наступні команди, щоб спочатку закрити WSL оболонку, а потім завершити WSL:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">distribution_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --shutdown</span></span></code></pre></div><p>Як варіант, після введення <code>exit</code> можна просто закрити консоль.</p><h3 id="встановлення-інструментарію-px4" tabindex="-1">Встановлення інструментарію PX4 <a class="header-anchor" href="#встановлення-інструментарію-px4" aria-label="Permalink to &quot;Встановлення інструментарію PX4&quot;">​</a></h3><p>Далі ми завантажуємо вихідний код PX4 у середовищі WSL2 і використовуємо звичайний <em>скрипт встановлювання для Ubuntu</em> для налаштування середовища розробника. This will install the toolchain for Gazebo Classic simulation and Pixhawk/NuttX hardware.</p><p>Щоб встановити інструментарій розробки:</p><ol><li><p><a href="#opening-a-wsl-shell">Відкрийте оболонку WSL2</a> (якщо вона ще відкрита, ви можете використати ту саму що для встановлення WSL2).</p></li><li><p>Виконайте команду <code>cd ~</code> для переходу в домашню директорію WSL для подальших кроків.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p></div></li></ol><p>Це важливо! Якщо ви працюєте за межами файлової системи WSL, то ви стикнетесь з такими проблемами, як дуже повільне виконання та помилки прав доступу/дозволів. :::</p><ol><li><p>Завантажте вихідний код PX4 за допомогою <code>git</code> (вже встановлений у WSL2):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot.git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span></code></pre></div></li></ol><p>:::note Скрипти налаштування середовища у вихідному коді зазвичай працюють для останніх релізів PX4. Якщо ви працюєте зі старішою версією PX4, то може знадобитися <a href="./../contribute/git_examples.html#get-a-specific-release">отримати вихідний код для конкретного релізу</a>. :::</p><ol><li><p>Запустіть скрипт встановлення <strong>ubuntu.sh</strong> і зробіть вибір у будь-яких підказках по ходу виконання скрипту:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./PX4-Autopilot/Tools/setup/ubuntu.sh</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">This installs tools to build PX4 for Pixhawk and either Gazebo or Gazebo Classic targets:</p><ul><li>Також можна використовувати опції <code>--no-nuttx</code> та <code>--no-sim-tools</code>, щоб пропустити встановлення інструментів для NuttX та/або симуляції.</li><li>Інші цілі збірки Linux не перевірені (ви можете спробувати їх, ввівши відповідні команди у <a href="./../dev_setup/dev_env_linux_ubuntu.html">середовищі розробки Ubuntu</a> в оболонці WSL).</li></ul></div></li></ol><p>:::</p><ol><li><p>Перезапустіть &quot;комп&#39;ютер WSL&quot; після завершення скрипту (вийти з оболонки, вимкнути WSL та перезапустити WSL):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --shutdown</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span></span></code></pre></div></li><li><p>Перейдіть в репозиторій PX4 в домашній директорії WSL:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/PX4-Autopilot</span></span></code></pre></div></li><li><p>Зберіть ціль PX4 SITL та перевірте середовище:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span></span></code></pre></div></li></ol><p>Для додаткових варіантів збірки дивіться <a href="./../dev_setup/building_px4.html">Збірка програмного забезпечення PX4</a>.</p><h2 id="інтеграція-з-visual-studio-code" tabindex="-1">Інтеграція з Visual Studio Code <a class="header-anchor" href="#інтеграція-з-visual-studio-code" aria-label="Permalink to &quot;Інтеграція з Visual Studio Code&quot;">​</a></h2><p>VS Code на Windows добре інтегрований з WSL.</p><p>Для налаштування інтеграції:</p><ol><li><p><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">Завантажте</a> і встановіть Visual Studio Code (VS Code) на Windows.</p></li><li><p>Відкрийте <em>VS Code</em>.</p></li><li><p>Встановіть розширення під назвою <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl" target="_blank" rel="noreferrer">Remote - WSL</a> (з магазину)</p></li><li><p><a href="#opening-a-wsl-shell">Відкрийте оболонку WSL</a></p></li><li><p>У WSL оболонці перейдіть у директорію PX4:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/PX4-Autopilot</span></span></code></pre></div></li><li><p>В оболонці WSL запустіть VS Code:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>Це відкриє IDE повністю інтегроване в WSL оболонку.</p><p>Переконайтеся, що ви завжди відкриваєте PX4 репозиторій у режимі Remote WSL.</p></li><li><p>Наступного разу, коли ви захочете розробляти у WSL2, ви легко зможете відкрити його знову в режимі Remote WSL, обравши <strong>Open Recent</strong> (як показано нижче). Це запустить WSL.</p><p><img src="`+i+`" alt=""></p><p>Зверніть увагу, що IP-адреса віртуальної машини WSL буде змінена, так що ви не зможете контролювати симуляцію з QGC для Windows (ви все ще можете використовувати QGC для Linux)</p></li></ol><h2 id="qgroundcontrol" tabindex="-1">QGroundControl <a class="header-anchor" href="#qgroundcontrol" aria-label="Permalink to &quot;QGroundControl&quot;">​</a></h2><p>Для підключення до запущеної симуляції, ви можете запустити QGroundControl або в WSL або у Windows. Якщо вам потрібно <a href="#flash-a-flight-control-board">записати у плату керування польотом</a> нову прошивку, ви можете зробити це лише у QGroundControl для Windows.</p><h3 id="qgroundcontrol-у-wsl" tabindex="-1">QGroundControl у WSL <a class="header-anchor" href="#qgroundcontrol-у-wsl" aria-label="Permalink to &quot;QGroundControl у WSL&quot;">​</a></h3><p>Найпростіший спосіб налаштувати та використовувати QGroundControl - це завантажити версію для Linux у WSL.</p><p>Це можна зробити з оболонки WSL.</p><ol><li><p>У браузері перейдіть в QGC <a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/getting_started/download_and_install.html#ubuntu" target="_blank" rel="noreferrer">Ubuntu download section</a></p></li><li><p>Клацніть правою кнопкою миші на посилання <strong>QGroundControl.AppImage</strong> та виберіть &quot;Копіювати адресу посилання&quot;. Це буде щось на зразок _<a href="https://d176td9ibe4jno.cloudfront.net/builds/master/QGroundControl.AppImage_" target="_blank" rel="noreferrer">https://d176td9ibe4jno.cloudfront.net/builds/master/QGroundControl.AppImage_</a></p></li><li><p><a href="#opening-a-wsl-shell">Відкрийте оболонку WSL</a> і введіть наступні команди щоб завантажити AppImage та зробити його виконуваним (замінить URL до AppImage, де зазначено):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">the_copied_AppImage_UR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> QGroundControl.AppImage</span></span></code></pre></div></li><li><p>Запустіть QGroundControl:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./QGroundControl.AppImage</span></span></code></pre></div></li></ol><p>QGroundControl запуститься та автоматично приєднається до запущеної симуляції, що дозволить вам спостерігати та контролювати ваші рухомі засоби.</p><p>Ви не зможете використовувати його для встановлення прошивки PX4, оскільки WSL не надає доступу до послідовних пристроїв.</p><h3 id="qgroundcontrol-на-windows" tabindex="-1">QGroundcontrol на Windows <a class="header-anchor" href="#qgroundcontrol-на-windows" aria-label="Permalink to &quot;QGroundcontrol на Windows&quot;">​</a></h3><p>Встановіть <a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/getting_started/download_and_install.html#windows" target="_blank" rel="noreferrer">QGroundControl on Windows</a> якщо ви хочете мати змогу оновити апаратне забезпечення за допомогою прошивки, створеної у PX4.</p><p>Ці кроки описують, як ви можете під&#39;єднатися до симуляції, яке працює в WSL:</p><ol><li><p><a href="#opening-a-wsl-shell">Відкрийте оболонку WSL</a></p></li><li><p>Перевірте IP-адресу віртуальної машини WSL запустивши команду <code>ip addr | grep eth0</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">6:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1500</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qlen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    inet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 172.18.46.131/20</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 172.18.47.255</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scope</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span></span></code></pre></div><p>Скопіюйте першу <code>inet</code> частину адреси інтерфейсу <code>eth0</code> у буфер обміну. В цьому випадку: <code>172.18.46.131</code>.</p></li><li><p>У QGC перейдіть у <strong>Q &gt; Налаштування додатку &gt; Канали зв&#39;язку</strong></p></li><li><p>Додайте UDP канал з назвою &quot;WSL&quot; до порту <code>18570</code> з IP-адресою скопійованою вище.</p></li><li><p>Збережіть і під&#39;єднайтеся до нього.</p></li></ol><p>:::note Вам доведеться оновляти канал зв&#39;язку з WSL у QGC щоразу, коли WSL буде перезапущено (тому що вона отримує динамічну IP-адресу). :::</p><h2 id="прошивка-плати-керування-польотом" tabindex="-1">Прошивка плати керування польотом <a class="header-anchor" href="#прошивка-плати-керування-польотом" aria-label="Permalink to &quot;Прошивка плати керування польотом&quot;">​</a></h2><p>Запис нестандартного двійкового файлу PX4 повинно бути зроблено за допомогою <a href="#qgroundcontrol-on-windows">QGroundControl для Windows</a>, оскільки WSL2 не надає прямий доступ до послідовних пристроїв, таких як плати Pixhawk.</p><p>Зробіть наступні кроки для прошивки вашого бінарного файлу, зібраного у WSL:</p><ol><li><p>Зберіть, якщо ще це не зробили, бінарний файл у WSL, тобто за допомогою <a href="./dev_env_windows_wsl.html#opening-a-wsl-shell">WSL shell</a> та виконавши:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v5</span></span></code></pre></div><p>Примітка: використовуйте правильну ціль збірки для вашої плати. Для плати Pixhawk 4 можна використати &quot;px4_fmu-v5&quot;.</p></li><li><p>Від&#39;єднайте USB-кабель плати Pixhawk від комп&#39;ютера, якщо він був підключений.</p></li><li><p>Відкрийте QGC.</p></li><li><p>У QGC перейдіть у <strong>Q &gt; Налаштування рухомого засобу &gt; Прошивка</strong></p></li><li><p>Під&#39;єднайте Pixhawk плату через USB</p></li><li><p>Після підключення оберіть &quot;Польотний набір PX4&quot;, відмітьте &quot;Просунуті налаштування&quot; і оберіть &quot;Користувацький файл прошивки ...&quot; зі списку що розкрився нижче.</p></li><li><p>Оберіть бінарний файл прошивки, який ви щойно зібрали. У відкритому діалозі знайдіть розташування &quot;Linux&quot; з іконкою пінгвіна на лівій панелі. Зазвичай, вона в самому низу. Оберіть файл за шляхом: <code>Ubuntu\\home\\{ваш користувач у WSL}\\PX4-Autopilot\\build\\{ціль збірки}\\{ціль збірки}.px4</code></p><p>:::note Ви можете додати директорію до обраного, щоб швидко отримати доступ до неї. :::</p></li><li><p>Почніть прошивку.</p></li></ol><h2 id="усунення-проблем" tabindex="-1">Усунення проблем <a class="header-anchor" href="#усунення-проблем" aria-label="Permalink to &quot;Усунення проблем&quot;">​</a></h2><p>Якщо маєте будь-які проблеми з установкою, перевірте наявну <a href="https://learn.microsoft.com/en-us/windows/wsl/install" target="_blank" rel="noreferrer">документацію із встановлення Microsoft WSL</a>.</p><p>Ми також рекомендуємо мати останню версію Windows-драйвера GPU, а також встановити останню версію <a href="https://launchpad.net/~kisak/+archive/ubuntu/kisak-mesa" target="_blank" rel="noreferrer">kisak mesa</a> в середовищі Ubuntu для того, щоб більшість емулювалась більшість функцій OpenGL:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-apt-repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ppa:kisak/kisak-mesa</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span></code></pre></div>`,65),o=[p];function h(d,r,k,u,c,g){return e(),t("div",null,o)}const m=a(n,[["render",h]]);export{b as __pageData,m as default};
