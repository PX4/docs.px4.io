import{_ as s,c as a,o as i,ab as t}from"./chunks/framework.CUflZczI.js";const d=JSON.parse('{"title":"TrajectoryWaypoint (UORB message)","description":"","frontmatter":{},"headers":[],"relativePath":"en/msg_docs/TrajectoryWaypoint.md","filePath":"en/msg_docs/TrajectoryWaypoint.md"}'),n={name:"en/msg_docs/TrajectoryWaypoint.md"},e=t(`<h1 id="trajectorywaypoint-uorb-message" tabindex="-1">TrajectoryWaypoint (UORB message) <a class="header-anchor" href="#trajectorywaypoint-uorb-message" aria-label="Permalink to &quot;TrajectoryWaypoint (UORB message)&quot;">â€‹</a></h1><p>Waypoint Trajectory description. See also Mavlink TRAJECTORY msg The topic trajectory_waypoint describe each waypoint defined in vehicle_trajectory_waypoint</p><p><a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/TrajectoryWaypoint.msg" target="_blank" rel="noreferrer">source file</a></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Waypoint Trajectory description. See also Mavlink TRAJECTORY msg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># The topic trajectory_waypoint describe each waypoint defined in vehicle_trajectory_waypoint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint64 timestamp		# time since system </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microseconds)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] position</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] velocity</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">float32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] acceleration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 yaw</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">float32 yaw_speed</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> point_valid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uint8 type</span></span></code></pre></div>`,4),p=[e];function l(o,r,h,c,k,y){return i(),a("div",null,p)}const g=s(n,[["render",l]]);export{d as __pageData,g as default};
