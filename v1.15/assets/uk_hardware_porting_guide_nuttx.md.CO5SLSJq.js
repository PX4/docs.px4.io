import{_ as t,c as s,o as a,ab as e}from"./chunks/framework.CUflZczI.js";const k=JSON.parse('{"title":"Посібник з портування NuttX","description":"","frontmatter":{},"headers":[],"relativePath":"uk/hardware/porting_guide_nuttx.md","filePath":"uk/hardware/porting_guide_nuttx.md"}'),i={name:"uk/hardware/porting_guide_nuttx.md"},n=e(`<h1 id="посібник-з-портування-nuttx" tabindex="-1">Посібник з портування NuttX <a class="header-anchor" href="#посібник-з-портування-nuttx" aria-label="Permalink to &quot;Посібник з портування NuttX&quot;">​</a></h1><p>Для портування PX4 на NuttX на новий апаратний пристрій, цей апаратний пристрій повинен бути підтриманий NuttX. Проект NuttX зберігає відмінний <a href="https://cwiki.apache.org/confluence/display/NUTTX/Porting+Guide" target="_blank" rel="noreferrer">посібник з портативності</a> для портування NuttX на нову обчислювальну платформу.</p><p>Наступний посібник передбачає, що ви використовуєте вже підтримувану апаратну мету або вже портували NuttX (включаючи <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/platforms/nuttx/src/px4" target="_blank" rel="noreferrer">базовий рівень PX4</a>).</p><p>Налаштувальні файли для всіх плат, включаючи лінкерні сценарії та інші необхідні налаштування, розташовані під <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/boards/" target="_blank" rel="noreferrer">/boards</a> у каталозі, що відповідає постачальнику та платі (тобто <strong>boards/<em>VENDOR</em>/<em>MODEL</em>/</strong>).</p><p>Наступний приклад використовує FMUv5, оскільки це остання <a href="./../hardware/reference_design.html">посилання конфігурації</a> для контролерів польоту на основі NuttX:</p><ul><li>Виконайте <code>make px4_fmu-v5_default</code> з каталогу <strong>PX4-Autopilot</strong>, щоб збудувати конфігурацію FMUv5</li><li>Основні файлы конфігурації FMUv5 розташовані за адресою: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/boards/px4/fmu-v5" target="_blank" rel="noreferrer">/boards/px4/fmu-v5</a>. <ul><li>Шапка конкретної плати (конфігурація контактів NuttX та годинника): <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/boards/px4/fmu-v5/nuttx-config/include/board.h" target="_blank" rel="noreferrer">/boards/px4/fmu-v5/nuttx-config/include/board.h</a>.</li><li>Специфічний заголовок дошки (конфігурація PX4): <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/boards/px4/fmu-v5/src/board_config.h" target="_blank" rel="noreferrer">/boards/px4/fmu-v5/src/board_config.h</a>.</li><li>Конфігурація операційної системи NuttX (створена за допомогою NuttX menuconfig): <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/boards/px4/fmu-v5/nuttx-config/nsh/defconfig" target="_blank" rel="noreferrer">/boards/px4/fmu-v5/nuttx-config/nsh/defconfig</a>.</li><li>Налаштування збірки: <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/boards/px4/fmu-v5/default.px4board" target="_blank" rel="noreferrer">дошка/px4/fmu-v5/default.px4board</a>.</li></ul></li></ul><h2 id="налаштування-меню-nuttx-menuconfig" tabindex="-1">Налаштування меню NuttX Menuconfig <a class="header-anchor" href="#налаштування-меню-nuttx-menuconfig" aria-label="Permalink to &quot;Налаштування меню NuttX Menuconfig&quot;">​</a></h2><p>Щоб змінити конфігурацію операційної системи NuttX, ви можете використовувати <a href="https://bitbucket.org/patacongo/nuttx/src/master/" target="_blank" rel="noreferrer">menuconfig</a> за допомогою ярликів PX4:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v5_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> menuconfig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v5_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qconfig</span></span></code></pre></div><p>Для свіжих встановлень PX4 на Ubuntu з використанням <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/Tools/setup/ubuntu.sh" target="_blank" rel="noreferrer">ubuntu.sh</a> вам також потрібно буде встановити інструменти <em>kconfig</em> з <a href="https://bitbucket.org/nuttx/tools/src/master/" target="_blank" rel="noreferrer">інструментів NuttX</a>.</p><div class="info custom-block"><p class="custom-block-title">Наступні кроки не потрібні у разі використання <a href="https://hub.docker.com/r/px4io/px4-dev-nuttx/" target="_blank" rel="noreferrer">контейнера docker px4-dev-nuttx</a> або встановлення на macOS за нашими звичайними інструкціями (оскільки вони включають<code>kconfig-mconf</code>).</p></div><p>Виконайте наступні команди з будь-якого каталогу:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://bitbucket.org/nuttx/tools.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tools/kconfig-frontends</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gperf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --enable-mconf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --disable-nconf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --disable-gconf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --enable-qconf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix=/usr</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p><code>--префікс=/usr</code> визначає конкретне місце встановлення (яке повинно бути у змінній середовища <code>PATH</code>). Параметри <code>--enable-mconf</code> та <code>--enable-qconf</code> увімкнуть опції <code>menuconfig</code> та <code>qconfig</code> відповідно.</p><p>Для запуску <code>qconfig</code> може знадобитися встановити додаткові залежності Qt.</p><h3 id="завантажувач" tabindex="-1">Завантажувач <a class="header-anchor" href="#завантажувач" aria-label="Permalink to &quot;Завантажувач&quot;">​</a></h3><p>Спочатку вам знадобиться завантажувач, який залежить від цільового обладнання:</p><ul><li>STM32H7: завантажувач базується на NuttX та включений в прошивку PX4. Дивіться <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/boards/holybro/durandal-v1/nuttx-config/bootloader" target="_blank" rel="noreferrer">тут</a> як приклад.</li><li>Для всіх інших цілей використовується <a href="https://github.com/PX4/Bootloader" target="_blank" rel="noreferrer">https://github.com/PX4/Bootloader</a>. Дивіться <a href="https://github.com/PX4/Bootloader/pull/155/files" target="_blank" rel="noreferrer">тут</a> для прикладу того, як додати нову ціль. Потім перейдіть за посиланням <a href="./../software_update/stm32_bootloader.html">інструкції з компіляції та прошивки</a>.</li></ul><h3 id="кроки-портування-прошивки" tabindex="-1">Кроки портування прошивки <a class="header-anchor" href="#кроки-портування-прошивки" aria-label="Permalink to &quot;Кроки портування прошивки&quot;">​</a></h3><ol><li><p>Переконайтеся, що у вас працює <a href="./../dev_setup/dev_env.html">середовище розробки</a> та ви встановили інструмент конфігурації &#39;menuconfig\` NuttX (див. вище).</p></li><li><p>Завантажте вихідний код і переконайтеся, що ви можете зібрати існуючу ціль:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v5</span></span></code></pre></div></li><li><p>Знаходьте існуючу ціль, яка використовує той самий (або тісно пов&#39;язаний) тип ЦП, і скопіюйте її. Наприклад для STM32F7:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boards/manufacturer</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boards/px4/fmu-v5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boards/manufacturer/my-target-v1</span></span></code></pre></div><p>Змініть <strong>виробника</strong> на назву виробника та <strong>my-target-v1</strong> на назву вашої плати.</p></li></ol><p>Далі вам потрібно пройти через усі файли у <strong>boards/manufacturer/my-target-v1</strong> та оновити їх відповідно до вашої плати.</p><ol><li><strong>прошивка.prototype</strong>: оновлення ідентифікатора та назви плати</li><li><strong>default.px4board</strong>: оновіть <strong>VENDOR</strong> та <strong>MODEL</strong>, щоб відповідали іменам каталогів (<strong>my-target-v1</strong>). Налаштування послідовних портів.</li><li>Налаштуйте NuttX (<strong>defconfig</strong>) через <code>make manufacturer_my-target-v1 menuconfig</code>: налаштуйте ЦП та мікросхему, налаштуйте периферійні пристрої (UART&#39;s, SPI, I2C, ADC).</li><li><strong>nuttx-config/include/board.h</strong>: Налаштуйте контакти NuttX. Для всіх зовнішніх пристроїв з кількома варіантами контактів, NuttX повинен знати контакт. Вони визначені у файлі шапки конкретного чіпу, наприклад <a href="https://github.com/PX4/NuttX/blob/px4_firmware_nuttx-8.2/arch/arm/src/stm32f7/hardware/stm32f74xx75xx_pinmap.h" target="_blank" rel="noreferrer">stm32f74xx75xx_pinmap.h</a>.</li><li><strong>src</strong>: пройдіться по всім файлам у каталозі <strong>src</strong> та внесіть необхідні зміни, зокрема у файлі <strong>board_config.h</strong>.</li><li><strong>init/rc.board_sensors</strong>: запускає сенсори, які підключені до плати.</li></ol>`,22),r=[n];function l(o,p,h,d,c,u){return a(),s("div",null,r)}const f=t(i,[["render",l]]);export{k as __pageData,f as default};
