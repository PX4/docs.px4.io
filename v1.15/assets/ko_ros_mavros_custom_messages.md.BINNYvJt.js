import{_ as s,c as i,o as a,ab as n}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"MAVROS에서 PX4로 사용자 정의 메시지 전송","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ros/mavros_custom_messages.md","filePath":"ko/ros/mavros_custom_messages.md"}'),l={name:"ko/ros/mavros_custom_messages.md"},p=n(`<h1 id="mavros에서-px4로-사용자-정의-메시지-전송" tabindex="-1">MAVROS에서 PX4로 사용자 정의 메시지 전송 <a class="header-anchor" href="#mavros에서-px4로-사용자-정의-메시지-전송" aria-label="Permalink to &quot;MAVROS에서 PX4로 사용자 정의 메시지 전송&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>이 문서는 다음 환경에서 테스트하였습니다.</p><ul><li><strong>Ubuntu:</strong> 20.04</li><li><strong>ROS:</strong> Noetic</li><li><strong>PX4 Firmware:</strong> v1.13</li></ul><p>그러나 이러한 단계는 상당히 일반적이므로 수정이 거의 없이 다른 배포판/버전에서 작동합니다.</p></div><h2 id="mavros-설치" tabindex="-1">MAVROS 설치 <a class="header-anchor" href="#mavros-설치" aria-label="Permalink to &quot;MAVROS 설치&quot;">​</a></h2><p><a href="https://github.com/mavlink/mavros/blob/master/mavros/README.md" target="_blank" rel="noreferrer">mavlink/mavros</a>의 <em>소스 설치</em> 지침에 따라 &quot;ROS Kinetic&quot;을 설치합니다.</p><h2 id="mavros" tabindex="-1">MAVROS <a class="header-anchor" href="#mavros" aria-label="Permalink to &quot;MAVROS&quot;">​</a></h2><ol><li><p>아래 코드를 사용하여 이 예에서 <strong>keyboard_command.cpp</strong>(<strong>workspace/src/mavros/mavros_extras/src/plugins</strong>에 있음)라는 이름의 새 MAVROS 플러그인을 생성합니다.</p><p>이 코드는 ROS 주제 <code>/mavros/keyboard_command/keyboard_sub</code>의 &#39;char&#39; 메시지를 구독하고 MAVLink 메시지로 전송합니다.</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;mavros/mavros_plugin.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;pluginlib/class_list_macros.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;iostream&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;std_msgs/Char.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> namespace mavros {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> namespace extra_plugins{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class KeyboardCommandPlugin : public plugin::PluginBase {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> public:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     KeyboardCommandPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PluginBase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         nh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;~keyboard_command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UAS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uas_)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         PluginBase::initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(uas_);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         keyboard_sub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nh.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keyboard_sub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KeyboardCommandPlugin::keyboard_cb, this);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     Subscriptions </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_subscriptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* RX disabled */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> private:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     ros::NodeHandle nh;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     ros::Subscriber keyboard_sub;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> keyboard_cb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> std_msgs::Char::ConstPtr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">req)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         std::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Got Char : &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req-&gt;data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  std::endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         mavlink::common::msg::KEY_COMMAND kc {};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         kc.command </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req-&gt;data;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         UAS_FCU</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m_uas)-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send_message_ignore_drop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(kc);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // namespace extra_plugins</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // namespace mavros</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PLUGINLIB_EXPORT_CLASS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mavros::extra_plugins::KeyboardCommandPlugin, mavros::plugin::PluginBase)</span></span></code></pre></div></li><li><p><strong>mavros_plugins.xml</strong>(<strong>workspace/src/mavros/mavros_extras</strong>)을 편집하고 다음 줄을 추가합니다.</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keyboard_command&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mavros::extra_plugins::KeyboardCommandPlugin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> base_class_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mavros::plugin::PluginBase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Accepts keyboard command.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>CMakeLists.txt</strong>(<strong>workspace/src/mavros/mavros_extras</strong>)를 편집하고 <code>add_library</code>에 다음 줄을 추가합니다.</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">add_library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  src/plugins/keyboard_command.cpp </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p>(<strong>workspace/src/mavlink/message_definitions/v1.0</strong>)의 <strong>common.xml</strong> 내부에서 다음 줄을 복사하여 MAVLink 메시지를 추가합니다.</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">message</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;229&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;KEY_COMMAND&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Keyboard char command.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">field</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;char&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div></li></ol><h2 id="px4-수정사항" tabindex="-1">PX4 수정사항 <a class="header-anchor" href="#px4-수정사항" aria-label="Permalink to &quot;PX4 수정사항&quot;">​</a></h2><ol><li>Inside <strong>common.xml</strong> (in <strong>PX4-Autopilot/src/modules/mavlink/mavlink/message_definitions/v1.0</strong>), add your MAVLink message as following (same procedure as for MAVROS section above):<div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">message</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;229&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;KEY_COMMAND&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Keyboard char command.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">field</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;char&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div></li></ol><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Make sure that the <strong>common.xml</strong> files in the following directories are exactly the same:</p><ul><li><code>PX4-Autopilot/src/modules/mavlink/mavlink/message_definitions/v1.0</code></li><li><code>workspace/src/mavlink/message_definitions/v1.0</code> are exactly the same.</li></ul></div><ol><li><p>(PX4-Autopilot/msg)에서 자신만의 uORB 메시지 파일 <strong>key_command.msg</strong>를 만듭니다. 이 예에서 &quot;key_command.msg&quot;에는 다음 코드만 있습니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>uint64 timestamp # time since system start (microseconds)</span></span>
<span class="line"><span>char cmd</span></span></code></pre></div><p>Then, in <strong>CMakeLists.txt</strong> (in <strong>PX4-Autopilot/msg</strong>), include:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     key_command.msg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     )</span></span></code></pre></div></li><li><p><strong>mavlink_receiver.h</strong>를 편집합니다. (<strong>PX4-Autopilot/src/modules/mavlink</strong>)</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;uORB/topics/key_command.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MavlinkReceiver</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handle_message_key_command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mavlink_message_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    orb_advert_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _key_command_pub{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nullptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>mavlink_receiver.cpp</strong>를 수정합니다(<strong>PX4-Autopilot/src/modules/mavlink</strong>). 여기에서 PX4는 ROS에서 보낸 MAVLink 메시지를 수신하고, 이를 uORB 주제로 게시합니다.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MavlinkReceiver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handle_message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mavlink_message_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> case</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MAVLINK_MSG_ID_KEY_COMMAND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        handle_message_key_command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(msg);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MavlinkReceiver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handle_message_key_command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mavlink_message_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    mavlink_key_command_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> man;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mavlink_msg_key_command_decode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(msg, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">man);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key_command_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    key.timestamp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hrt_absolute_time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    key.cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> man.command;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (_key_command_pub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nullptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        _key_command_pub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> orb_advertise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORB_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key_command), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        orb_publish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORB_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key_command), _key_command_pub, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>예제 구독자 모듈처럼 자신만의 uORB 주제 구독자를 생성합니다. 이 예에서는 (/PX4-Autopilot/src/modules/key_receiver)에서 모델을 생성할 수 있습니다. In this directory, create three files <strong>CMakeLists.txt</strong>, <strong>key_receiver.cpp</strong>, <strong>Kconfig</strong> Each one looks like the following.</p><p>-CMakeLists.txt</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">px4_add_module(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    MODULE modules__key_receiver</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    MAIN key_receiver</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    STACK_MAIN 2500</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    STACK_MAX 4000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    SRCS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        key_receiver.cpp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    DEPENDS</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span></code></pre></div><p>-key_receiver.cpp</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>#include &lt;px4_platform_common/px4_config.h&gt;</span></span>
<span class="line"><span>#include &lt;px4_platform_common/tasks.h&gt;</span></span>
<span class="line"><span>#include &lt;px4_platform_common/posix.h&gt;</span></span>
<span class="line"><span>#include &lt;unistd.h&gt;</span></span>
<span class="line"><span>#include &lt;stdio.h&gt;</span></span>
<span class="line"><span>#include &lt;poll.h&gt;</span></span>
<span class="line"><span>#include &lt;string.h&gt;</span></span>
<span class="line"><span>#include &lt;math.h&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#include &lt;uORB/uORB.h&gt;</span></span>
<span class="line"><span>#include &lt;uORB/topics/key_command.h&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>extern &quot;C&quot; __EXPORT int key_receiver_main(int argc, char **argv);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>int key_receiver_main(int argc, char **argv)</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    int key_sub_fd = orb_subscribe(ORB_ID(key_command));</span></span>
<span class="line"><span>    orb_set_interval(key_sub_fd, 200); // limit the update rate to 200ms</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    px4_pollfd_struct_t fds[] = {</span></span>
<span class="line"><span>        { .fd = key_sub_fd,   .events = POLLIN },</span></span>
<span class="line"><span>    };</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    int error_counter = 0;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    for (int i = 0; i &lt; 10; i++)</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        int poll_ret = px4_poll(fds, 1, 1000);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        if (poll_ret == 0)</span></span>
<span class="line"><span>        {</span></span>
<span class="line"><span>            PX4_ERR(&quot;Got no data within a second&quot;);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        else if (poll_ret &lt; 0)</span></span>
<span class="line"><span>        {</span></span>
<span class="line"><span>            if (error_counter &lt; 10 || error_counter % 50 == 0)</span></span>
<span class="line"><span>            {</span></span>
<span class="line"><span>                PX4_ERR(&quot;ERROR return value from poll(): %d&quot;, poll_ret);</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            error_counter++;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        else</span></span>
<span class="line"><span>        {</span></span>
<span class="line"><span>            if (fds[0].revents &amp; POLLIN)</span></span>
<span class="line"><span>            {</span></span>
<span class="line"><span>                struct key_command_s input;</span></span>
<span class="line"><span>                orb_copy(ORB_ID(key_command), key_sub_fd, &amp;input);</span></span>
<span class="line"><span>                PX4_INFO(&quot;Received Char : %c&quot;, input.cmd);</span></span>
<span class="line"><span>             }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    return 0;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>-Kconfig</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span> menuconfig MODULES_KEY_RECEIVER</span></span>
<span class="line"><span> bool &quot;key_receiver&quot;</span></span>
<span class="line"><span> default n</span></span>
<span class="line"><span> ---help---</span></span>
<span class="line"><span>     Enable support for key_receiver</span></span></code></pre></div><p>자세한 설명은 <a href="./../modules/hello_sky.html">첫 번째 지원서 작성</a> 항목을 참고하십시오.</p></li><li><p>Lastly, add your module in the <strong>default.px4board</strong> file correspondent to your board in <strong>PX4-Autopilot/boards/</strong>. For example: -for the Pixhawk 4, add the following code in <strong>PX4-Autopilot/boards/px4/fmu-v5/default.px4board</strong>: -for the SITL, add the following code in <strong>PX4-Autopilot/boards/px4/sitl/default.px4board</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span> CONFIG_MODULES_KEY_RECEIVER=y</span></span></code></pre></div></li></ol><p>MODULES ...</p><h2 id="building" tabindex="-1">Building <a class="header-anchor" href="#building" aria-label="Permalink to &quot;Building&quot;">​</a></h2><h3 id="build-for-ros" tabindex="-1">Build for ROS <a class="header-anchor" href="#build-for-ros" aria-label="Permalink to &quot;Build for ROS&quot;">​</a></h3><ol><li><p>In your workspace enter: <code>catkin build</code>.</p></li><li><p>Beforehand, you have to set your &quot;px4.launch&quot; in (/workspace/src/mavros/mavros/launch). Edit &quot;px4.launch&quot; as below. If you are using USB to connect your computer with Pixhawk, you have to set &quot;fcu_url&quot; as shown below. But, if you are using CP2102 to connect your computer with Pixhawk, you have to replace &quot;ttyACM0&quot; with &quot;ttyUSB0&quot;. And if you are using the SITL to connect to your terminal, you have to replace &quot;/dev/ttyACM0:57600&quot; with &quot;udp://:14540@127.0.0.1:14557&quot;. Modifying &quot;gcs_url&quot; is to connect your Pixhawk with UDP, because serial communication cannot accept MAVROS, and your nutshell connection simultaneously.</p></li><li><p>Write your IP address at &quot;xxx.xx.xxx.xxx&quot;</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fcu_url&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/dev/ttyACM0:57600&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gcs_url&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;udp://:14550@xxx.xx.xxx.xxx:14557&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div></li></ol><h3 id="ros-빌드" tabindex="-1">ROS 빌드 <a class="header-anchor" href="#ros-빌드" aria-label="Permalink to &quot;ROS 빌드&quot;">​</a></h3><ol><li><p>Clean the previously built PX4-Autopilot directory. In the root of <strong>PX4-Autopilot</strong> directory:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span></span></code></pre></div></li><li><p>Build PX4-Autopilot and upload <a href="./../dev_setup/building_px4.html#nuttx-pixhawk-based-boards">in the normal way</a>.</p><p>For example:</p><ul><li>to build for Pixhawk 4/FMUv5 execute the following command in the root of the PX4-Autopilot directory:</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_fmu-v5_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upload</span></span></code></pre></div><ul><li>to build for SITL execute the following command in the root of the PX4-Autopilot directory (using jmavsim simulation):</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div></li></ol><h2 id="빌드" tabindex="-1">빌드 <a class="header-anchor" href="#빌드" aria-label="Permalink to &quot;빌드&quot;">​</a></h2><p>이제 작업을 빌드할 준비가 되었습니다!</p><h3 id="px4-빌드" tabindex="-1">PX4 빌드 <a class="header-anchor" href="#px4-빌드" aria-label="Permalink to &quot;PX4 빌드&quot;">​</a></h3><ol><li>In a terminal enter<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">roslaunch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mavros</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4.launch</span></span></code></pre></div></li><li>In a second terminal run:<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rostopic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mavros/keyboard_command/keyboard_sub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> std_msgs/Char</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 97</span></span></code></pre></div>This means, publish 97 (&#39;a&#39; in ASCII) to ROS topic &quot;/mavros/keyboard_command/keyboard_sub&quot; in message type &quot;std_msgs/Char&quot;. &quot;-r 10&quot; means to publish continuously in &quot;10Hz&quot;.</li></ol><h3 id="ros-실행" tabindex="-1">ROS 실행 <a class="header-anchor" href="#ros-실행" aria-label="Permalink to &quot;ROS 실행&quot;">​</a></h3><ol><li><p>Enter the Pixhawk nutshell through UDP. Replace xxx.xx.xxx.xxx with your IP.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">roslaunch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mavros</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4.launch</span></span></code></pre></div></li><li><p>After few seconds, press <strong>Enter</strong> a couple of times. You should see a prompt in the terminal as below:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rostopic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mavros/keyboard_command/keyboard_sub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> std_msgs/Char</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 97</span></span></code></pre></div><p>Type &quot;key_receiver&quot;, to run your subscriber module.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nsh&gt; key_receiver</span></span></code></pre></div></li></ol><p>MAVROS 메시지가 PX4로 전송되는 지 테스트합니다.</p>`,23),t=[p];function e(h,k,r,o,d,E){return a(),i("div",null,t)}const y=s(l,[["render",e]]);export{g as __pageData,y as default};
