import{_ as e,a as o,b as a,c as t,d as i,e as l,f as s,g as r,h as d,i as p}from"./chunks/vscode_intellisense.cdSAS1zP.js";import{_ as u,c as n,o as c,ab as m}from"./chunks/framework.CUflZczI.js";const I=JSON.parse('{"title":"Visual Studio Code IDE (VSCode)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/dev_setup/vscode.md","filePath":"uk/dev_setup/vscode.md"}'),h={name:"uk/dev_setup/vscode.md"},g=m('<h1 id="visual-studio-code-ide-vscode" tabindex="-1">Visual Studio Code IDE (VSCode) <a class="header-anchor" href="#visual-studio-code-ide-vscode" aria-label="Permalink to &quot;Visual Studio Code IDE (VSCode)&quot;">​</a></h1><p><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">Visual Studio Code</a> is a powerful cross-platform source code editor/IDE that can be used for PX4 development on Ubuntu, Windows, and macOS.</p><p>Є багато причин використання VSCode для розробки PX4:</p><ul><li>Зробити усі налаштування <em>дійсно</em> займає калька хвилин.</li><li>A rich extension ecosystem that enables a huge range of tools needed for PX4 development: C/C++ (with solid <em>cmake</em> integration), <em>Python</em>, <em>Jinja2</em>, ROS messages, and even DroneCAN dsdl.</li><li>Чудова інтеграція з Github.</li></ul><p>Цей розділ пояснює, як налаштувати IDE і почати розробку.</p><p>:::note Існують інші потужні IDE, але вони, як правило, потребують більше зусиль для інтеграції з PX4. Налаштування для <em>VScode</em> зберігаються у дереві коду PX4/PX4-Autopilot (<a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/.vscode" target="_blank" rel="noreferrer">PX4-Autopilot/.vscode</a>) тому процес налаштування простий і складається тільки з додавання директорії проєкту. :::</p><h2 id="попередні-вимоги" tabindex="-1">Попередні вимоги <a class="header-anchor" href="#попередні-вимоги" aria-label="Permalink to &quot;Попередні вимоги&quot;">​</a></h2><p>Потрібно, щоб командний рядок <a href="./../dev_setup/dev_env.html">середовища розробки PX4</a> для вашої платформи було встановлено і завантажено репозиторій вихідного коду <em>Firmware</em>.</p><h2 id="встановлення-та-налаштування" tabindex="-1">Встановлення та налаштування <a class="header-anchor" href="#встановлення-та-налаштування" aria-label="Permalink to &quot;Встановлення та налаштування&quot;">​</a></h2><ol><li><p><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">Завантажте та встановіть VSCode</a> (вам буде запропоновано правильну версію для вашої ОС).</p></li><li><p>Відкрийте VSCode і додайте вихідний код PX4:</p><ul><li>Оберіть <em>Open folder ...</em> варіант на вітальній сторінці (або використовуючи меню: <strong>File &gt; Open Folder</strong>): <img src="'+e+'" alt="Відкрити каталог"></li><li>З&#39;явиться діалогове вікно вибору файлу. Оберіть директорію <strong>PX4-Autopilot</strong> та натисніть <strong>OK</strong>.</li></ul><p>Файли та налаштування проєкту будуть завантажені в <em>VSCode</em>.</p></li><li><p>Натисніть <strong>Install All</strong> на підказці <em>This workspace has extension recommendations</em> (вона з&#39;явиться в нижній правій частині IDE). <img src="'+o+'" alt="Встановити розширення"></p><p>VSCode відкриє панель <em>Extensions</em> в лівій частині тому ви зможете спостерігати за прогресом установки.</p><p><img src="'+a+'" alt="PX4 завантажено в VSCode Explorer"></p></li><li><p>Багато повідомлень/підказок може з&#39;явитися в правому нижньому куті</p><div class="tip custom-block"><p class="custom-block-title">TIP</p></div></li></ol><p>Якщо підказки зникнуть, натисніть на значок «тривоги» праворуч від нижньої синьої панелі. :::</p><ul><li>Якщо буде запропоновано встановити нову версію <em>cmake</em>: <ul><li>Оберіть <strong>No</strong> (правильна версія вже встановлена з <a href="./../dev_setup/dev_env.html">середовищем розробки PX4</a>).</li></ul></li><li>Якщо буде запропоновану увійти у <em>github.com</em> та додати облікові дані: <ul><li>Це ваш розсуд! Це забезпечує глибоку інтеграцію між Github та IDE, що може спростити ваш робочий процес.</li></ul></li><li>Інші підказки необов&#39;язкові та можуть бути встановлені, якщо вважаються корисними. </li></ul><p><a id="building"></a></p><h2 id="збірка-px4" tabindex="-1">Збірка PX4 <a class="header-anchor" href="#збірка-px4" aria-label="Permalink to &quot;Збірка PX4&quot;">​</a></h2><p>Для збірки:</p><ol><li><p>Оберіть свою ціль збірки (&quot;cmake build config&quot;):</p><ul><li><p>Поточна <em>ціль збірки cmake</em> показується на синій панелі <em>config</em> внизу (якщо це бажана ціль, пропустіть наступний крок). <img src="'+t+'" alt="Вибрати ціль збірки Cmake"></p><div class="info custom-block"><p class="custom-block-title">The cmake target you select affects the targets offered for when <a href="#debugging">building/debugging</a> (i.e. for hardware debugging you must select a hardware target like <code>px4_fmu-v6</code>).</p></div></li></ul></li></ol><p>:::</p><ul><li>Натисніть на ціль на панелі config, щоб показати інші параметри та вибрати ту, яка вам потрібна (це замінить обрану ціль).</li><li><em>Cmake</em> згодом налаштує ваш проєкт (див. сповіщення внизу праворуч). <img src="'+i+'" alt="Cmake config project"></li><li>Зачекайте, поки налаштування завершиться. Коли це буде зроблено, сповіщення зникнуть і буде показано розташування збірки: <img src="'+l+'" alt="Cmake config project">.</li></ul><ol><li>Тоді ви зможете почати збірку з панелі config (оберіть або <strong>Build</strong> або <strong>Debug</strong>). <img src="'+s+'" alt="Запустити налагодження або зібрати"></li></ol><p>Після збірки принаймні раз ви зможете використовувати автодоповнення коду та інші функції <em>VSCode</em>.</p><h2 id="налагодження" tabindex="-1">Налагодження <a class="header-anchor" href="#налагодження" aria-label="Permalink to &quot;Налагодження&quot;">​</a></h2><p><a id="debugging_sitl"></a></p><h3 id="налагодження-sitl" tabindex="-1">Налагодження SITL <a class="header-anchor" href="#налагодження-sitl" aria-label="Permalink to &quot;Налагодження SITL&quot;">​</a></h3><p>Для налагодження PX4 в SITL:</p><ol><li><p>Виберіть іконку debug на бічній панелі (позначена червоним) щоб показати панель налагодження.<img src="'+r+'" alt="Запустити налагодження"></p></li><li><p>Потім виберіть ціль для налагодження (наприклад, <em>Debug SITL (Gazebo Iris)</em> з верхньої панелі налагодження (позначено пурпуровою рамкою).</p><p>:::note Цілі налагодження які пропонуються (позначено пурпуровим) збігаються з вашою ціллю збірки (позначено жовтою рамкою у нижній панелі). Наприклад, для налагодження цілей збірки SITL, ваша ціль повинна містити SITL. :::</p></li><li><p>Почніть налагодження, натиснувши стрілку &quot;play&quot; налагодження (поруч із ціллю налагодження у верхній панелі - позначено рожевою рамкою).</p></li></ol><p>Під час налагодження ви можете встановити точки зупинки, переходити до коду, на відміну від нормального процесу розробки.</p><h3 id="апаратне-налагодження" tabindex="-1">Апаратне налагодження <a class="header-anchor" href="#апаратне-налагодження" aria-label="Permalink to &quot;Апаратне налагодження&quot;">​</a></h3><p>Інструкції в розділі <a href="./../debug/swd_debug.html">Порт налагодження SWD</a> пояснюють як під&#39;єднатися для інтерфейсу SWD на розповсюджених політних контролерах (наприклад, використовуючи зонди Dronecode або Blackmagic).</p><p>Після під&#39;єднання до інтерфейсу SWD, апаратне налагодження в VSCode таке ж саме як і для <a href="#debugging_sitl">Налагодження SITL</a>, за винятком того, що обирається ціль налагодження відповідна до типу налагоджувача (та прошивки), наприклад <code>jlink (px4_fmu-v5)</code>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Щоб побачити варіант <code>jlink</code> ви повинні обрати <a href="#building-px4">cmake ціль для збірки прошивки</a>.</p></div><p><img src="'+d+'" alt="Зображення, яке показує апаратні цілі з вибором для різних зондів"></p><p><a id="code completion"></a></p><h2 id="автодоповнення-коду" tabindex="-1">Автодоповнення коду <a class="header-anchor" href="#автодоповнення-коду" aria-label="Permalink to &quot;Автодоповнення коду&quot;">​</a></h2><p>Для того щоб автодоповнення коду працювало (та інша магія IntelliSense) вам потрібна активна конфігурація та код повинен бути <a href="#building">зібраний</a>.</p><p>Після того, як це зроблено, вам не потрібно нічого робити; інструментарій автоматично запропонує вам символи мови поки ви друкуєте.</p><p><img src="'+p+'" alt="IntelliSense"></p><h2 id="усунення-проблем" tabindex="-1">Усунення проблем <a class="header-anchor" href="#усунення-проблем" aria-label="Permalink to &quot;Усунення проблем&quot;">​</a></h2><p>Цей розділ включає вказівки для помилок з налаштування та збірки.</p><h3 id="ubuntu-18-04-visual-studio-code-не-може-спостерігати-за-змінами-в-коді-у-великому-робочому-середовищі" tabindex="-1">Ubuntu 18.04: &quot;Visual Studio Code не може спостерігати за змінами в коді у великому робочому середовищі&quot; <a class="header-anchor" href="#ubuntu-18-04-visual-studio-code-не-може-спостерігати-за-змінами-в-коді-у-великому-робочому-середовищі" aria-label="Permalink to &quot;Ubuntu 18.04: &quot;Visual Studio Code не може спостерігати за змінами в коді у великому робочому середовищі&quot;&quot;">​</a></h3><p>Ця помилка з&#39;являється при старті. На деяких системах існує обмеження зверху накладене на застосунки оперувати лише 8192 файлами, що означає VSCode можливо не матиме можливості виявити зміни у файлах у <code>/PX4-Autopilot</code>.</p><p>Ви можете збільшити цей ліміт, щоб уникнути помилки, коштом споживання пам&#39;яті. Слідуйте <a href="https://code.visualstudio.com/docs/setup/linux#_visual-studio-code-is-unable-to-watch-for-file-changes-in-this-large-workspace-error-enospc" target="_blank" rel="noreferrer">інструкціям тут</a>. Значення 65536 має бути більш ніж достатнім.</p>',41),_=[g];function b(f,k,v,S,P,q){return c(),n("div",null,_)}const V=u(h,[["render",b]]);export{I as __pageData,V as default};
