import{_ as e}from"./chunks/ark_cannode.94N0Y4kX.js";import{_ as a,c as r,o as n,ab as o}from"./chunks/framework.CUflZczI.js";const _=JSON.parse('{"title":"ARK CANnode","description":"","frontmatter":{},"headers":[],"relativePath":"en/dronecan/ark_cannode.md","filePath":"en/dronecan/ark_cannode.md"}'),t={name:"en/dronecan/ark_cannode.md"},i=o('<h1 id="ark-cannode" tabindex="-1">ARK CANnode <a class="header-anchor" href="#ark-cannode" aria-label="Permalink to &quot;ARK CANnode&quot;">​</a></h1><p><a href="https://arkelectron.com/product/ark-cannode/" target="_blank" rel="noreferrer">ARK CANnode</a> is an open source generic <a href="./../dronecan/">DroneCAN</a> node that includes a 6 degree of freedom IMU. Its main purpose is to enable the use of non-CAN sensors (I2C, SPI, UART) on the CAN bus. It also has PWM outputs to expand a vehicle&#39;s control outputs in quantity and physical distance.</p><p><img src="'+e+'" alt="ARK CANnode"></p><h2 id="where-to-buy" tabindex="-1">Where to Buy <a class="header-anchor" href="#where-to-buy" aria-label="Permalink to &quot;Where to Buy&quot;">​</a></h2><p>Order this module from:</p><ul><li><a href="https://arkelectron.com/product/ark-cannode/" target="_blank" rel="noreferrer">ARK Electronics</a> (US)</li></ul><h2 id="hardware-specifications" tabindex="-1">Hardware Specifications <a class="header-anchor" href="#hardware-specifications" aria-label="Permalink to &quot;Hardware Specifications&quot;">​</a></h2><ul><li><a href="https://github.com/ARK-Electronics/ARK_CANNODE" target="_blank" rel="noreferrer">Open Source Schematic and BOM</a></li><li>Sensors <ul><li>Bosch BMI088 6-Axis IMU or Invensense ICM-42688-P 6-Axis IMU</li></ul></li><li>STM32F412CGU6 MCU <ul><li>1MB Flash</li></ul></li><li>Two Pixhawk Standard CAN Connectors <ul><li>4 Pin JST GH</li></ul></li><li>Pixhawk Standard I2C Connector <ul><li>4 Pin JST GH</li></ul></li><li>Pixhawk Standard UART/I2C Connector (Basic GPS Port) <ul><li>6 Pin JST GH</li></ul></li><li>Pixhawk Standard SPI Connector <ul><li>7 Pin JST GH</li></ul></li><li>PWM Connector <ul><li>10 Pin JST JST</li><li>8 PWM Outputs</li><li>Matches Pixhawk 4 PWM Connector Pinout</li></ul></li><li>Pixhawk Standard Debug Connector <ul><li>6 Pin JST SH</li></ul></li><li>Small Form Factor <ul><li>3cm x 3cm x 1.3cm</li></ul></li><li>LED Indicators</li><li>USA Built</li><li>Power Requirements <ul><li>5V</li><li>Current dependent on connected peripherals</li></ul></li></ul><h2 id="hardware-setup" tabindex="-1">Hardware Setup <a class="header-anchor" href="#hardware-setup" aria-label="Permalink to &quot;Hardware Setup&quot;">​</a></h2><h3 id="wiring" tabindex="-1">Wiring <a class="header-anchor" href="#wiring" aria-label="Permalink to &quot;Wiring&quot;">​</a></h3><p>The ARK CANnode is connected to the CAN bus using a Pixhawk standard 4 pin JST GH cable. For more information, refer to the <a href="./../can/#wiring">CAN Wiring</a> instructions.</p><h2 id="firmware-setup" tabindex="-1">Firmware Setup <a class="header-anchor" href="#firmware-setup" aria-label="Permalink to &quot;Firmware Setup&quot;">​</a></h2><p>ARK CANnode runs the <a href="./px4_cannode_fw.html">PX4 DroneCAN Firmware</a>. As such, it supports firmware update over the CAN bus and <a href="./#node-id-allocation">dynamic node allocation</a>.</p><p>ARK CANnode boards ship with recent firmware pre-installed, but if you want to build and flash the latest firmware yourself see <a href="./px4_cannode_fw.html#building-the-firmware">PX4 DroneCAN Firmware &gt; Building the Firmware</a>.</p><ul><li>Firmware target: <code>ark_cannode_default</code></li><li>Bootloader target: <code>ark_cannode_canbootloader</code></li></ul><h2 id="flight-controller-configuration" tabindex="-1">Flight Controller Configuration <a class="header-anchor" href="#flight-controller-configuration" aria-label="Permalink to &quot;Flight Controller Configuration&quot;">​</a></h2><h3 id="enable-dronecan" tabindex="-1">Enable DroneCAN <a class="header-anchor" href="#enable-dronecan" aria-label="Permalink to &quot;Enable DroneCAN&quot;">​</a></h3><p>In order to use the ARK CANnode board, connect it to the Pixhawk CAN bus and enable the DroneCAN driver by setting parameter <a href="./../advanced_config/parameter_reference.html#UAVCAN_ENABLE">UAVCAN_ENABLE</a> to <code>2</code> for dynamic node allocation (or <code>3</code> if using <a href="./../dronecan/escs.html">DroneCAN ESCs</a>).</p><p>The steps are:</p><ul><li>In <em>QGroundControl</em> set the parameter <a href="./../advanced_config/parameter_reference.html#UAVCAN_ENABLE">UAVCAN_ENABLE</a> to <code>2</code> or <code>3</code> and reboot (see <a href="./../advanced_config/parameters.html">Finding/Updating Parameters</a>).</li><li>Connect ARK CANnode CAN to the Pixhawk CAN.</li></ul><p>Once enabled, the module will be detected on boot.</p><p>DroneCAN configuration in PX4 is explained in more detail in <a href="./../dronecan/#enabling-dronecan">DroneCAN &gt; Enabling DroneCAN</a>.</p><h3 id="enable-sensors" tabindex="-1">Enable Sensors <a class="header-anchor" href="#enable-sensors" aria-label="Permalink to &quot;Enable Sensors&quot;">​</a></h3><p>You will need to enable the subscriber appropriate for each of the sensors that are connected to the ARK CANnode.</p><p>This is done using the the parameters named like <code>UAVCAN_SUB_*</code> in the parameter reference (such as <a href="./../advanced_config/parameter_reference.html#UAVCAN_SUB_ASPD">UAVCAN_SUB_ASPD</a>, <a href="./../advanced_config/parameter_reference.html#UAVCAN_SUB_BARO">UAVCAN_SUB_BARO</a> etc.).</p><h2 id="ark-cannode-configuration" tabindex="-1">Ark CANNode Configuration <a class="header-anchor" href="#ark-cannode-configuration" aria-label="Permalink to &quot;Ark CANNode Configuration&quot;">​</a></h2><p>On the ARK CANnode, you may need to configure the following parameters:</p><table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><a id="CANNODE_TERM"></a><a href="./../advanced_config/parameter_reference.html#CANNODE_TERM">CANNODE_TERM</a></td><td>CAN built-in bus termination.</td></tr></tbody></table><h2 id="led-meanings" tabindex="-1">LED Meanings <a class="header-anchor" href="#led-meanings" aria-label="Permalink to &quot;LED Meanings&quot;">​</a></h2><p>You will see both red and blue LEDs on the ARK CANnode when it is being flashed, and a solid blue LED if it is running properly.</p><p>If you see a solid red LED there is an error and you should check the following:</p><ul><li>Make sure the flight controller has an SD card installed.</li><li>Make sure the ARK CANnode has <code>ark_cannode_canbootloader</code> installed prior to flashing <code>ark_cannode_default</code>.</li><li>Remove binaries from the root and ufw directories of the SD card and try to build and flash again.</li></ul>',32),l=[i];function d(c,h,s,u,f,p){return n(),r("div",null,l)}const b=a(t,[["render",d]]);export{_ as __pageData,b as default};
