import{_ as t,a as r,b as a,c as e}from"./chunks/grau_acsp4_2_roh.BHP37tYT.js";import{_ as d,a as i,b as o,c as l,d as s}from"./chunks/pixracer_r09_esp_01.B7iWJNSv.js";import{_ as h}from"./chunks/grau_b_pixracer_frskys.port_connection.DNhWqeoY.js";import{_ as n,c,o as p,ab as u}from"./chunks/framework.CUflZczI.js";const q=JSON.parse('{"title":"mRo Pixracer","description":"","frontmatter":{},"headers":[],"relativePath":"ko/flight_controller/pixracer.md","filePath":"ko/flight_controller/pixracer.md"}'),m={name:"ko/flight_controller/pixracer.md"},b=u('<h1 id="mro-pixracer" tabindex="-1">mRo Pixracer <a class="header-anchor" href="#mro-pixracer" aria-label="Permalink to &quot;mRo Pixracer&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">PX4에서는 이 제품을 제조하지 않습니다. 하드웨어 지원과 호환 문제는 <a href="https://store.mrobotics.io/" target="_blank" rel="noreferrer">제조사</a>에 문의하십시오.</p></div><p>Pixhawk<sup>®</sup> XRacer 보드 제품군은 소형 레이싱 쿼드와 비행기에 최적화되어 있습니다. In contrast to <a href="./../flight_controller/pixfalcon.html">Pixfalcon</a> and <a href="./../flight_controller/pixhawk.html">Pixhawk</a> it has in-built WiFi, new sensors, convenient full servo headers, CAN and supports 2M flash.</p><img src="'+t+'" width="300px" title="pixracer + 8266 회색"><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>이 자동조종장치는 PX4 유지관리 및 테스트 팀에서 <a href="./../flight_controller/autopilot_pixhawk_standard.html">지원</a>합니다.</p></div><h2 id="주요-특징" tabindex="-1">주요 특징 <a class="header-anchor" href="#주요-특징" aria-label="Permalink to &quot;주요 특징&quot;">​</a></h2><ul><li>메인 시스템 온 칩 : <a href="http://www.st.com/web/en/catalog/mmc/FM141/SC1169/SS1577/LN1789" target="_blank" rel="noreferrer">STM32F427VIT6 rev.3</a><ul><li>CPU : 단정밀도 FPU의 180MHz ARM Cortexex<sup>®</sup> M4</li><li>RAM : 256KB SRAM (L1)</li></ul></li><li>표준 FPV 폼 팩터 : 36x36mm, 표준 30.5mm 구멍 패턴</li><li>Invensense<sup>®</sup> ICM-20608 가속 / 자이로 (4KHz) / MPU9250 가속 / 자이로 / 마그 (4KHz)</li><li>온도 보상 기능 HMC5983 자력계</li><li>Measurement Specialties MS5611 기압계</li><li>JST GH 커넥터</li><li>microSD (로깅)</li><li>Futaba S.BUS 및 S.BUS2 / Spektrum DSM2 및 DSMX / Graupner SUMD / PPM 입력 / Yuneec ST24</li><li>FrSky<sup>®</sup> 텔레메트리 포트</li><li>OneShot PWM 출력 (구성 가능)</li><li>옵션 : 안전 스위치 및 부저</li></ul><h2 id="구매처" tabindex="-1">구매처 <a class="header-anchor" href="#구매처" aria-label="Permalink to &quot;구매처&quot;">​</a></h2><p>Pixracer is available from the <a href="https://store.mrobotics.io/mRo-PixRacer-R15-Official-p/m10023a.htm" target="_blank" rel="noreferrer">mRobotics.io</a>.</p><p>액세서리에는 다음이 포함됩니다.</p><ul><li><a href="https://hobbyking.com/en_us/hkpilot-32-digital-air-speed-sensor-and-pitot-tube-set.html" target="_blank" rel="noreferrer">디지털 대기속도 센서</a></li><li><a href="https://hobbyking.com/en_us/micro-hkpilot-telemetry-radio-module-with-on-screen-display-osd-unit-433mhz.html" target="_blank" rel="noreferrer">Hobbyking<sup>®</sup> OSD + EU Telemetry (433 MHz)</a></li></ul><h2 id="키트" tabindex="-1">키트 <a class="header-anchor" href="#키트" aria-label="Permalink to &quot;키트&quot;">​</a></h2><p>Pixracer는 별도의 항공전자기기 전원공급장치를 사용하도록 설계되었습니다. 이는 모터 또는 ESC의 전류 서지가 비행 컨트롤러로 다시 흐르고 섬세한 센서를 방해하는 것을 방지하는 데 필요합니다.</p><ul><li>전원 모듈(전압 및 전류 감지 포함)</li><li>I2C 스플리터(AUAV, Hobbyking 및 3DR<sup>®</sup> 주변 장치 지원)</li><li>모든 일반 주변기기용 케이블 키트</li></ul><h2 id="wi-fi-usb-필요-없음" tabindex="-1">Wi-Fi(USB 필요 없음) <a class="header-anchor" href="#wi-fi-usb-필요-없음" aria-label="Permalink to &quot;Wi-Fi(USB 필요 없음)&quot;">​</a></h2><p>보드의 주요 기능중 하나는 새 펌웨어, 시스템 설정과 기내 원격 측정을 위해 Wi-Fi를 사용할 수 있는 것입니다. 이를 통해 데스크탑 시스템이 필요없습니다.</p><ul><li><a href="./../telemetry/esp8266_wifi_module.html">ESP8266 Wifi</a></li><li><a href="https://github.com/dogmaphobic/mavesp8266" target="_blank" rel="noreferrer">맞춤형 ESP8266 MAVLink 펌웨어</a></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Firmware upgrade is not yet enabled over WiFi (it is supported by the default bootloader but not yet enabled). Setup and telemetry are supported.</p></div><h2 id="assembly" tabindex="-1">Assembly <a class="header-anchor" href="#assembly" aria-label="Permalink to &quot;Assembly&quot;">​</a></h2><p><a href="./../assembly/quick_start_pixracer.html">Pixracer 배선 퀵 스타트</a>를 참고하십시오</p><h2 id="wiring-diagrams" tabindex="-1">Wiring Diagrams <a class="header-anchor" href="#wiring-diagrams" aria-label="Permalink to &quot;Wiring Diagrams&quot;">​</a></h2><p><img src="'+r+'" alt="Grau setup pixracer top"></p><div class="info custom-block"><p class="custom-block-title">If using <code>TELEM2</code> for an external telemetry module you will need to configure it as a MAVLink serial port. 더 자세한 정보는 이곳을 참고하십시오: <a href="./../assembly/quick_start_pixracer.html#external-telemetry">Pixracer 배선 퀵 스타트 &gt; 외부 텔레메트리</a></p></div><p><img src="'+a+'" alt="Grau setup pixracer bottom"></p><p><img src="'+d+'" alt="setup pixracer GPS"></p><p><img src="'+h+'" alt="Grau b Pixracer FrSkyS.Port Connection"></p><p><img src="'+e+'" alt="Grau ACSP4 2 roh"></p><p><img src="'+i+'" alt="Grau ACSP5 roh"></p><h2 id="connectors" tabindex="-1">Connectors <a class="header-anchor" href="#connectors" aria-label="Permalink to &quot;Connectors&quot;">​</a></h2><p>All connectors follow the <a href="https://pixhawk.org/pixhawk-connector-standard/" target="_blank" rel="noreferrer">Pixhawk connector standard</a>. Unless noted otherwise all connectors are JST GH.</p><h2 id="pinouts" tabindex="-1">Pinouts <a class="header-anchor" href="#pinouts" aria-label="Permalink to &quot;Pinouts&quot;">​</a></h2><p><img src="'+o+'" alt="Pixracer top pinouts"></p><p><img src="'+l+'" alt="Pixracer bottom pinouts"></p><p><img src="'+s+'" alt="Pixracer esp"></p><h4 id="telem1-telem2-osd-포트" tabindex="-1">TELEM1, TELEM2+OSD 포트 <a class="header-anchor" href="#telem1-telem2-osd-포트" aria-label="Permalink to &quot;TELEM1, TELEM2+OSD 포트&quot;">​</a></h4><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1 (적)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (흑)</td><td>TX (출력)</td><td>+3.3V</td></tr><tr><td>3 (흑)</td><td>RX (입력)</td><td>+3.3V</td></tr><tr><td>4 (흑)</td><td>CTS (입력)</td><td>+3.3V</td></tr><tr><td>5 (흑)</td><td>RTS (출력)</td><td>+3.3V</td></tr><tr><td>6 (흑)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="gps-포트" tabindex="-1">GPS 포트 <a class="header-anchor" href="#gps-포트" aria-label="Permalink to &quot;GPS 포트&quot;">​</a></h4><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1 (적)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (흑)</td><td>TX (출력)</td><td>+3.3V</td></tr><tr><td>3 (흑)</td><td>RX (입력)</td><td>+3.3V</td></tr><tr><td>4 (흑)</td><td>I2C1 SCL</td><td>+3.3V</td></tr><tr><td>5 (흑)</td><td>I2C1 SDA</td><td>+3.3V</td></tr><tr><td>6 (흑)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="frsky-텔레메트리-serial4" tabindex="-1">FrSky 텔레메트리/SERIAL4 <a class="header-anchor" href="#frsky-텔레메트리-serial4" aria-label="Permalink to &quot;FrSky 텔레메트리/SERIAL4&quot;">​</a></h4><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1 (적)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (흑)</td><td>TX (출력)</td><td>+3.3V</td></tr><tr><td>3 (흑)</td><td>RX (입력)</td><td>+3.3V</td></tr><tr><td>4 (흑)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="rc-입력-ppm-s-bus-spektrum-sumd-st24-허용" tabindex="-1">RC 입력(PPM/S.BUS/Spektrum/SUMD/ST24 허용) <a class="header-anchor" href="#rc-입력-ppm-s-bus-spektrum-sumd-st24-허용" aria-label="Permalink to &quot;RC 입력(PPM/S.BUS/Spektrum/SUMD/ST24 허용)&quot;">​</a></h4><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1 (적)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (흑)</td><td>RC 입력</td><td>+3.3V</td></tr><tr><td>3 (흑)</td><td>RSSI 입력</td><td>+3.3V</td></tr><tr><td>4 (흑)</td><td>VDD 3V3</td><td>+3.3V</td></tr><tr><td>5 (흑)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="can" tabindex="-1">CAN <a class="header-anchor" href="#can" aria-label="Permalink to &quot;CAN&quot;">​</a></h4><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1 (적)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (흑)</td><td>CAN_H</td><td>+12V</td></tr><tr><td>3 (흑)</td><td>CAN_L</td><td>+12V</td></tr><tr><td>4 (흑)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="전원" tabindex="-1">전원 <a class="header-anchor" href="#전원" aria-label="Permalink to &quot;전원&quot;">​</a></h4><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1 (적)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (흑)</td><td>VCC</td><td>+5V</td></tr><tr><td>3 (흑)</td><td>전류</td><td>+3.3V</td></tr><tr><td>4 (흑)</td><td>전압</td><td>+3.3V</td></tr><tr><td>5 (흑)</td><td>GND</td><td>GND</td></tr><tr><td>6 (흑)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="스위치" tabindex="-1">스위치 <a class="header-anchor" href="#스위치" aria-label="Permalink to &quot;스위치&quot;">​</a></h4><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1 (적)</td><td>SAFETY</td><td>GND</td></tr><tr><td>2 (흑)</td><td>!IO_LED_SAFETY</td><td>GND</td></tr><tr><td>3 (흑)</td><td>VCC</td><td>+3.3V</td></tr><tr><td>4 (흑)</td><td>BUZZER-</td><td>-</td></tr><tr><td>5 (흑)</td><td>BUZZER+</td><td>-</td></tr></tbody></table><h4 id="디버그-포트" tabindex="-1">디버그 포트 <a class="header-anchor" href="#디버그-포트" aria-label="Permalink to &quot;디버그 포트&quot;">​</a></h4><p>The pinouts and connector comply with the <a href="./../debug/swd_debug.html#pixhawk-debug-mini">Pixhawk Debug Mini</a> interface defined in the <a href="https://github.com/pixhawk/Pixhawk-Standards/blob/master/DS-009%20Pixhawk%20Connector%20Standard.pdf" target="_blank" rel="noreferrer">Pixhawk Connector Standard</a> (JST SM06B connector).</p><table><thead><tr><th>핀</th><th>신호</th><th>전압</th></tr></thead><tbody><tr><td>1 (적)</td><td>VCC TARGET SHIFT</td><td>+3.3V</td></tr><tr><td>2 (흑)</td><td>CONSOLE TX (출력)</td><td>+3.3V</td></tr><tr><td>3 (흑)</td><td>CONSOLE RX (입력)</td><td>+3.3V</td></tr><tr><td>4 (흑)</td><td>SWDIO</td><td>+3.3V</td></tr><tr><td>5 (흑)</td><td>SWCLK</td><td>+3.3V</td></tr><tr><td>6 (흑)</td><td>GND</td><td>GND</td></tr></tbody></table><p>For information about using this port see:</p><ul><li><a href="./../debug/swd_debug.html">SWD Debug Port</a></li><li><a href="./../debug/system_console.html">PX4 System Console</a> (Note, the FMU console maps to UART7).</li></ul><h2 id="serial-port-mapping" tabindex="-1">Serial Port Mapping <a class="header-anchor" href="#serial-port-mapping" aria-label="Permalink to &quot;Serial Port Mapping&quot;">​</a></h2><table><thead><tr><th>UART</th><th>장치</th><th>포트</th></tr></thead><tbody><tr><td>UART1</td><td>/dev/ttyS0</td><td>WiFi (ESP8266)</td></tr><tr><td>USART2</td><td>/dev/ttyS1</td><td>TELEM1 (흐름 제어)</td></tr><tr><td>USART3</td><td>/dev/ttyS2</td><td>TELEM2 (흐름 제어)</td></tr><tr><td>UART4</td><td></td><td></td></tr><tr><td>UART7</td><td>콘솔</td><td></td></tr><tr><td>UART8</td><td>SERIAL4</td><td></td></tr></tbody></table><h2 id="schematics" tabindex="-1">Schematics <a class="header-anchor" href="#schematics" aria-label="Permalink to &quot;Schematics&quot;">​</a></h2><p>The reference is provided as: <a href="https://github.com/AUAV-OpenSource/FMUv4-PixRacer" target="_blank" rel="noreferrer">Altium Design Files</a></p><p>The following PDF files are provided for <em>convenience only</em>:</p><ul><li><a href="https://github.com/PX4/PX4-user_guide/raw/v1.15/assets/flight_controller/pixracer/pixracer-rc12-12-06-2015-1330.pdf" target="_blank" rel="noreferrer">pixracer-rc12-12-06-2015-1330.pdf</a></li><li><a href="https://github.com/PX4/px4_user_guide/raw/master/assets/flight_controller/pixracer/pixracer-r14.pdf" target="_blank" rel="noreferrer">pixracer-r14.pdf</a> - R14 또는 RC14는 SDCard 소켓 옆에 인쇄됩니다.</li></ul><h2 id="building-firmware" tabindex="-1">Building Firmware <a class="header-anchor" href="#building-firmware" aria-label="Permalink to &quot;Building Firmware&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Most users will not need to build this firmware! It is pre-built and automatically installed by <em>QGroundControl</em> when appropriate hardware is connected.</p></div><p>To <a href="./../dev_setup/building_px4.html">build PX4</a> for this target:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>make px4_fmu-v4_default</span></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p><a href="./../config/compass.html">Compass calibration</a> should be done with USB disconnected. This is always recommended, but is necessary on Pixracer because the USB connection produces particularly large levels of magnetic interference.</p><p>Configuration is otherwise the same as for other boards.</p><h2 id="credits" tabindex="-1">Credits <a class="header-anchor" href="#credits" aria-label="Permalink to &quot;Credits&quot;">​</a></h2><p>This design was created by Nick Arsov and Phillip Kocmoud and architected by Lorenz Meier, David Sidrane and Leonard Hall.</p>',68),f=[b];function g(S,_,k,P,x,y){return p(),c("div",null,f)}const D=n(m,[["render",g]]);export{q as __pageData,D as default};
