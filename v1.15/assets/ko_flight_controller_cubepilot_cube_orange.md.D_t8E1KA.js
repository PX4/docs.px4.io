import{_ as t}from"./chunks/cube_orange_hero.DBSCb87I.js";import{_ as d,a as r}from"./chunks/cube_ports_usb_sdcard.DjqeRsN_.js";import{_ as e,c as a,o as l,ab as i}from"./chunks/framework.CUflZczI.js";const S=JSON.parse('{"title":"CubePilot Cube Orange Flight Controller","description":"","frontmatter":{},"headers":[],"relativePath":"ko/flight_controller/cubepilot_cube_orange.md","filePath":"ko/flight_controller/cubepilot_cube_orange.md"}'),o={name:"ko/flight_controller/cubepilot_cube_orange.md"},h=i('<h1 id="cubepilot-cube-orange-flight-controller" tabindex="-1">CubePilot Cube Orange Flight Controller <a class="header-anchor" href="#cubepilot-cube-orange-flight-controller" aria-label="Permalink to &quot;CubePilot Cube Orange Flight Controller&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">PX4에서는 이 제품을 제조하지 않습니다. 하드웨어 지원과 호환 문제는 <a href="https://cubepilot.org/#/home" target="_blank" rel="noreferrer">제조사</a>에 문의하십시오.</p></div><p>The <a href="https://www.cubepilot.com/#/cube/features" target="_blank" rel="noreferrer">Cube Orange</a> flight controller is a flexible autopilot intended primarily for manufacturers of commercial systems.</p><p><img src="'+t+'" alt="Cube Orange"></p><p>배선을 줄이고 신뢰성을 높이며 조립을 쉽게하기 위해 도메인별 캐리어 보드와 함께 사용하도록 설계되었습니다. 예를 들어, 상용 검사 기체 캐리어보드에는 보조 컴퓨터용 연결이 포함될 수 있는 반면, 레이서 용 캐리어보드는 기체 프레임을 형성하는 ESC를 포함할 수 있습니다.</p><p>The ADS-B carrier board includes a customized 1090MHz ADSB-In receiver from uAvionix. This provides attitude and location of commercial manned aircraft within the range of Cube. This is automatically configured and enabled in the default PX4 firmware.</p><p>Cube에는 2 개의 IMU에 진동 차단이 포함되어 있으며, 세 번째 고정 IMU는 참조 백업용으로 사용됩니다.</p><p>:::note 제조업체 <a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview" target="_blank" rel="noreferrer">Cube 문서</a>에는 <a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview#differences-between-cube-colours" target="_blank" rel="noreferrer">큐브 색상 간의 차이점</a> 뿐만 아니라 자세한 정보를 제공합니다. :::</p><h2 id="주요-특징" tabindex="-1">주요 특징 <a class="header-anchor" href="#주요-특징" aria-label="Permalink to &quot;주요 특징&quot;">​</a></h2><ul><li>32bit STM32H753VI (32bit <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M7" target="_blank" rel="noreferrer">ARM Cortex M7</a>, 400 MHz, Flash 2MB, RAM 1MB).</li><li>32 비트 STM32F103 failsafe 코 프로세서</li><li>14 개 PWM/서보 출력(페일세이프 및 수동 오버라이드 포함 8 개, 보조, 고전력 호환 6 개)</li><li>추가 주변 장치(UART, I2C, CAN) 다양한 연결 옵션</li><li>전용 프로세서와 독립형 전원 공급 장치(고정익 적용)로 비행중 복구 기능과 수동 오버라이드 통합 백업 시스템</li><li>Backup system integrates mixing, providing consistent autopilot and manual override mixing modes (fixed-wing use)</li><li>중복 전원공급장치 및 자동 장애 조치</li><li>외부 안전 스위치</li><li>다색 LED 주시각 표시기</li><li>고전력 멀티톤 피에조 오디오 표시기</li><li>장기간 고속 로깅용 microSD 카드</li></ul><p><a id="stores"></a></p><h2 id="구매처" tabindex="-1">구매처 <a class="header-anchor" href="#구매처" aria-label="Permalink to &quot;구매처&quot;">​</a></h2><ul><li><a href="https://www.cubepilot.com/#/reseller/list" target="_blank" rel="noreferrer">Reseller list</a></li></ul><h2 id="조립" tabindex="-1">조립 <a class="header-anchor" href="#조립" aria-label="Permalink to &quot;조립&quot;">​</a></h2><p><a href="./../assembly/quick_start_cube.html">Cube 배선 퀵 스타트</a></p><h2 id="사양" tabindex="-1">사양 <a class="header-anchor" href="#사양" aria-label="Permalink to &quot;사양&quot;">​</a></h2><ul><li><strong>프로세서:</strong><ul><li>STM32H753VI (32bit <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M7" target="_blank" rel="noreferrer">ARM Cortex M7</a>)</li><li>400 MHz</li><li>1 MB RAM</li><li>2MB 플래시 (완전 액세스 가능)</li></ul></li><li><strong>장애복구 co-processor:</strong><ul><li>STM32F103 (32bit <em>ARM Cortex-M3</em>)</li><li>24 MHz</li><li>8 KB SRAM</li></ul></li><li><strong>센서:</strong> (모두 SPI를 통해 연결됨) <ul><li><strong>가속도계:</strong> (3) ICM20948, ICM20649, ICM20602</li><li><strong>자이로스코프:</strong> (3) ICM20948, ICM20649, ICM20602</li><li><strong>나침반:</strong> (1) ICM20948</li><li><strong>기압계:</strong> (2) MS5611</li></ul></li><li><strong>작동 조건:</strong><ul><li><strong>작동 온도:</strong> -10C ~ 55C</li><li><strong>IP 등급/방수:</strong> 방수 아님</li><li><strong>서보 레일 입력 전압:</strong> 3.3V / 5V</li><li><strong>USB 포트 입력:</strong><ul><li>전압: 4V - 5.7V</li><li>정격 전류: 250 mA</li></ul></li><li><strong>전원:</strong><ul><li>입력 전압: 4.1V - 5.7V</li><li>정격 입력 전류: 2.5A</li><li>정격 입/출력 전력: 14W</li></ul></li></ul></li><li><strong>크기:</strong><ul><li><strong>Cube:</strong> 38.25mm x 38.25mm x 22.3mm</li><li><strong>캐리어:</strong> 94.5mm x 44.3mm x 17.3mm</li></ul></li><li><strong>인터페이스</strong><ul><li>IO 포트: 14 개의 PWM 서보 출력(IO에서 8 개, FMU에서 6 개)</li><li>UART (직렬 포트) 5개, 1 개의 고전력 지원, 2x (HW 흐름 제어 포함)</li><li>CAN 2개(하나는 내부 3.3V 트랜시버, 하나는 확장 커넥터에 있음)</li><li><strong>RC 입력:</strong><ul><li>Spektrum DSM/DSM2/DSM-X® Satellite 호환 입력</li><li>Futaba S.BUS® 호환 입력 및 출력</li><li>PPM 합계 신호 입력</li></ul></li><li>RSSI(PWM 또는 전압) 입력</li><li>I2C</li><li>SPI</li><li>3.3v ADC 입력</li><li>내부 microUSB 포트 및 외부 microUSB 포트 확장</li></ul></li></ul><h2 id="포트" tabindex="-1">포트 <a class="header-anchor" href="#포트" aria-label="Permalink to &quot;포트&quot;">​</a></h2><h3 id="위쪽-gps-telem-등" tabindex="-1">위쪽(GPS, TELEM 등) <a class="header-anchor" href="#위쪽-gps-telem-등" aria-label="Permalink to &quot;위쪽(GPS, TELEM 등)&quot;">​</a></h3><p><img src="'+d+'" alt="큐브 포트-상단 (GPS, TELEM 등) 및 메인/AUX"></p><h2 id="pinouts" tabindex="-1">Pinouts <a class="header-anchor" href="#pinouts" aria-label="Permalink to &quot;Pinouts&quot;">​</a></h2><h4 id="telem1-telem2-ports" tabindex="-1">TELEM1, TELEM2 ports <a class="header-anchor" href="#telem1-telem2-ports" aria-label="Permalink to &quot;TELEM1, TELEM2 ports&quot;">​</a></h4><table><thead><tr><th>Pin</th><th>Signal</th><th>Volt</th></tr></thead><tbody><tr><td>1 (red)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (blk)</td><td>TX (OUT)</td><td>+3.3V</td></tr><tr><td>3 (blk)</td><td>RX (IN)</td><td>+3.3V</td></tr><tr><td>4 (blk)</td><td>CTS (IN)</td><td>+3.3V</td></tr><tr><td>5 (blk)</td><td>RTS (OUT)</td><td>+3.3V</td></tr><tr><td>6 (blk)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="gps1-port" tabindex="-1">GPS1 port <a class="header-anchor" href="#gps1-port" aria-label="Permalink to &quot;GPS1 port&quot;">​</a></h4><table><thead><tr><th>Pin</th><th>Signal</th><th>Volt</th></tr></thead><tbody><tr><td>1 (red)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (blk)</td><td>TX (OUT)</td><td>+3.3V</td></tr><tr><td>3 (blk)</td><td>RX (IN)</td><td>+3.3V</td></tr><tr><td>4 (blk)</td><td>SCL I2C2</td><td>+3.3V</td></tr><tr><td>5 (blk)</td><td>SDA I2C2</td><td>+3.3V</td></tr><tr><td>6 (blk)</td><td>Safety Button</td><td>GND</td></tr><tr><td>7 (blk)</td><td>Button LED</td><td>GND</td></tr><tr><td>8 (blk)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="gps2-port" tabindex="-1">GPS2 port <a class="header-anchor" href="#gps2-port" aria-label="Permalink to &quot;GPS2 port&quot;">​</a></h4><table><thead><tr><th>Pin</th><th>Signal</th><th>Volt</th></tr></thead><tbody><tr><td>1 (red)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (blk)</td><td>TX (OUT)</td><td>+3.3V</td></tr><tr><td>3 (blk)</td><td>RX (IN)</td><td>+3.3V</td></tr><tr><td>4 (blk)</td><td>SCL I2C1</td><td>+3.3V</td></tr><tr><td>5 (blk)</td><td>SDA I2C1</td><td>+3.3V</td></tr><tr><td>6 (blk)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="adc" tabindex="-1">ADC <a class="header-anchor" href="#adc" aria-label="Permalink to &quot;ADC&quot;">​</a></h4><table><thead><tr><th>Pin</th><th>Signal</th><th>Volt</th></tr></thead><tbody><tr><td>1 (red)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (blk)</td><td>ADC IN</td><td>up to +6.6V</td></tr><tr><td>3 (blk)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="i2c" tabindex="-1">I2C <a class="header-anchor" href="#i2c" aria-label="Permalink to &quot;I2C&quot;">​</a></h4><table><thead><tr><th>Pin</th><th>Signal</th><th>Volt</th></tr></thead><tbody><tr><td>1 (red)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (blk)</td><td>SCL</td><td>+3.3 (pullups)</td></tr><tr><td>3 (blk)</td><td>SDA</td><td>+3.3 (pullups)</td></tr><tr><td>4 (blk)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="can1-can2" tabindex="-1">CAN1 &amp; CAN2 <a class="header-anchor" href="#can1-can2" aria-label="Permalink to &quot;CAN1 &amp; CAN2&quot;">​</a></h4><table><thead><tr><th>Pin</th><th>Signal</th><th>Volt</th></tr></thead><tbody><tr><td>1 (red)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (blk)</td><td>CAN_H</td><td>+12V</td></tr><tr><td>3 (blk)</td><td>CAN_L</td><td>+12V</td></tr><tr><td>4 (blk)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="power1-power2" tabindex="-1">POWER1 &amp; POWER2 <a class="header-anchor" href="#power1-power2" aria-label="Permalink to &quot;POWER1 &amp; POWER2&quot;">​</a></h4><table><thead><tr><th>Pin</th><th>Signal</th><th>Volt</th></tr></thead><tbody><tr><td>1 (red)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (red)</td><td>VCC</td><td>+5V</td></tr><tr><td>3 (blk)</td><td>CURRENT sensing</td><td>+3.3V</td></tr><tr><td>4 (blk)</td><td>VOLTAGE sensing</td><td>+3.3V</td></tr><tr><td>5 (blk)</td><td>GND</td><td>GND</td></tr><tr><td>6 (blk)</td><td>GND</td><td>GND</td></tr></tbody></table><h4 id="usb" tabindex="-1">USB <a class="header-anchor" href="#usb" aria-label="Permalink to &quot;USB&quot;">​</a></h4><table><thead><tr><th>Pin</th><th>Signal</th><th>Volt</th></tr></thead><tbody><tr><td>1 (red)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (blk)</td><td>OTG_DP1</td><td>+3.3V</td></tr><tr><td>3 (blk)</td><td>OTG_DM1</td><td>+3.3V</td></tr><tr><td>4 (blk)</td><td>GND</td><td>GND</td></tr><tr><td>5 (blk)</td><td>BUZZER</td><td>Battery voltage</td></tr><tr><td>6 (blk)</td><td>FMU Error LED</td><td></td></tr></tbody></table><h4 id="spkt" tabindex="-1">SPKT <a class="header-anchor" href="#spkt" aria-label="Permalink to &quot;SPKT&quot;">​</a></h4><table><thead><tr><th>Pin</th><th>Signal</th><th>Volt</th></tr></thead><tbody><tr><td>1 (blk)</td><td>IN</td><td></td></tr><tr><td>2 (blk)</td><td>GND</td><td>GND</td></tr><tr><td>3 (red)</td><td>OUT</td><td>+3.3V</td></tr></tbody></table><h4 id="telem1-telem2" tabindex="-1">TELEM1, TELEM2 <a class="header-anchor" href="#telem1-telem2" aria-label="Permalink to &quot;TELEM1, TELEM2&quot;">​</a></h4><table><thead><tr><th>Pin</th><th>Signal</th><th>Volt</th></tr></thead><tbody><tr><td>1 (red)</td><td>VCC</td><td>+5V</td></tr><tr><td>2 (blk)</td><td>TX (OUT)</td><td>+3.3V to 5V</td></tr><tr><td>3 (blk)</td><td>RX (IN)</td><td>+3.3V to 5V</td></tr><tr><td>4 (blk)</td><td>CTS (OUT)</td><td>+3.3V to 5V</td></tr><tr><td>5 (blk)</td><td>RTS (IN)</td><td>+3.3V to 5V</td></tr><tr><td>6 (blk)</td><td>GND</td><td>GND</td></tr></tbody></table><h2 id="시리얼-포트-매핑" tabindex="-1">시리얼 포트 매핑 <a class="header-anchor" href="#시리얼-포트-매핑" aria-label="Permalink to &quot;시리얼 포트 매핑&quot;">​</a></h2><table><thead><tr><th>UART</th><th>장치</th><th>포트</th></tr></thead><tbody><tr><td>USART2</td><td>/dev/ttyS0</td><td>TELEM1 (흐름 제어)</td></tr><tr><td>USART3</td><td>/dev/ttyS1</td><td>TELEM2 (흐름 제어)</td></tr><tr><td>UART4</td><td>/dev/ttyS2</td><td>GPS1</td></tr><tr><td>USART6</td><td>/dev/ttyS3</td><td>PX4IO</td></tr><tr><td>UART7</td><td>/dev/ttyS4</td><td>CONSOLE/ADSB-IN</td></tr><tr><td>UART8</td><td>/dev/ttyS5</td><td>GPS2</td></tr></tbody></table><h3 id="usb-sdcard-포트" tabindex="-1">USB/SDCard 포트 <a class="header-anchor" href="#usb-sdcard-포트" aria-label="Permalink to &quot;USB/SDCard 포트&quot;">​</a></h3><p><img src="'+r+'" alt="큐브 USB/SDCard 포트 "></p><h2 id="펌웨어-빌드" tabindex="-1">펌웨어 빌드 <a class="header-anchor" href="#펌웨어-빌드" aria-label="Permalink to &quot;펌웨어 빌드&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">대부분의 사용자들은 펌웨어를 빌드할 필요는 없습니다. It is pre-built and automatically installed by <em>QGroundControl</em> when appropriate hardware is connected.</p><p>:::</p><p>이 대상에 대해 <a href="./../dev_setup/building_px4.html">PX4를 빌드</a>하려면 터미널을 열고 다음을 입력하십시오.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>make cubepilot_cubeorange</span></span></code></pre></div><h2 id="schematics" tabindex="-1">Schematics <a class="header-anchor" href="#schematics" aria-label="Permalink to &quot;Schematics&quot;">​</a></h2><p>보드 설계도와 문서는 <a href="https://github.com/proficnc/The-Cube" target="_blank" rel="noreferrer">The Cube Project</a>를 참고하십시오.</p><h2 id="추가-정보-및-문서" tabindex="-1">추가 정보 및 문서 <a class="header-anchor" href="#추가-정보-및-문서" aria-label="Permalink to &quot;추가 정보 및 문서&quot;">​</a></h2><ul><li><a href="./../assembly/quick_start_cube.html">Cube 배선 퀵 스타트</a></li><li>Cube 문서 (제조사) : <ul><li><a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview" target="_blank" rel="noreferrer">큐브 모듈 개요</a></li><li><a href="https://docs.cubepilot.org/user-guides/autopilot/the-cube-user-manual" target="_blank" rel="noreferrer">큐브 사용 설명서</a></li><li><a href="https://docs.cubepilot.org/user-guides/carrier-boards/mini-carrier-board" target="_blank" rel="noreferrer">미니 캐리어 보드</a></li></ul></li></ul></div>',47),n=[h];function s(b,u,c,p,g,m){return l(),a("div",null,n)}const P=e(o,[["render",s]]);export{S as __pageData,P as default};
