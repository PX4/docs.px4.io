import{_ as e,a as t}from"./chunks/tune_musicmaker_ansi_output.CrgKVrrc.js";import{_ as s,c as a,o as i,ab as l}from"./chunks/framework.CUflZczI.js";const b=JSON.parse('{"title":"系统通知提示音","description":"","frontmatter":{},"headers":[],"relativePath":"zh/advanced/system_tunes.md","filePath":"zh/advanced/system_tunes.md"}'),n={name:"zh/advanced/system_tunes.md"},o=l(`<h1 id="系统通知提示音" tabindex="-1">系统通知提示音 <a class="header-anchor" href="#系统通知提示音" aria-label="Permalink to &quot;系统通知提示音&quot;">​</a></h1><p>PX4 定义了一些用于为系统状态和问题提供音频通知的 <a href="./../getting_started/tunes.html">标准音符/提示音</a>（比如系统启动，解锁成功，电池警告等）</p><p>Tunes are specified using strings (in <a href="http://artscene.textfiles.com/ansimusic/information/ansimtech.txt" target="_blank" rel="noreferrer">ANSI Music notation</a>) and played by code using the <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/lib/tunes" target="_blank" rel="noreferrer">tunes</a> library. 乐曲库也包含默认系统调节列表 - 见 <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/lib/tunes/tune_definition.desc" target="_blank" rel="noreferrer">lib/tunes/tune_definition.desc</a>。</p><p>PX4 还有一个模块可以用于播放（测试）默认或用户自定义音乐。</p><p>本主题提供了如何创建您自己的声音并添加/替换系统通知音调/乐曲的通用指导。</p><h2 id="创建乐曲" tabindex="-1">创建乐曲 <a class="header-anchor" href="#创建乐曲" aria-label="Permalink to &quot;创建乐曲&quot;">​</a></h2><p>提示音字符串使用 <a href="http://artscene.textfiles.com/ansimusic/information/ansimtech.txt" target="_blank" rel="noreferrer">ANSI 音乐提示</a> 定义。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>有关格式的更多信息可以在 <a href="https://en.wikibooks.org/wiki/QBasic/Appendix#PLAY" target="_blank" rel="noreferrer">QBasic PLAY statement</a> (Wikibooks) 中查找，并已在 <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/lib/tunes/tune_definition.desc" target="_blank" rel="noreferrer">tune_definition.desc</a>复制。 这允许您编辑乐曲并在您的电脑上播放， 然后导出为 PX4 可以播放的格式。</p><p>创建新调节的最简单方式是使用音乐编辑器。 这允许您编辑音乐并在您的电脑上播放， 然后导出为 PX4 可以播放的格式。</p><p>ANSI 音乐在 ANSI BBS 系统中很受欢迎，因此最好的编辑工具是 DOS 实用程序。 在 Windows 上，一个选项是在 <em>Dosbox</em> 内使用 <em>Melody Master</em>。</p><p>使用软件的步骤是：</p><ol><li><p>下载 <a href="http://www.dosbox.com/" target="_blank" rel="noreferrer">DosBox</a> 并安装应用程序</p></li><li><p>下载 <a href="ftp://archives.thebbs.org/ansi_utilities/melody21.zip" target="_blank" rel="noreferrer">Melody Master</a> 并解压缩到新目录</p></li><li><p>打开 <em>Dosbox</em> 控制台</p></li><li><p>将 Melody 主目录挂载到 DosBox，如下：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">path_to_directory</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">elody21</span></span></code></pre></div></li><li><p>使用以下命令启动 <em>Melody Master</em></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">c:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span></span></code></pre></div></li><li><p>您可以选择点击略过几个画面，然后按 <strong>1</strong> 显示_Melody Master_： <img src="`+e+'" alt="Melody Master 2.1"></p><p>屏幕的下半部分提供了关于键盘快捷键的实用工具（箭头用于移动， 和选择笔记长度的数字等）。</p></li><li><p>当您准备好时保存音乐：</p><ul><li>按 <strong>F2</strong> 以在您的 Melody 安装目录 <em>/Music</em> 子文件夹中给乐曲命名并保存。</li><li>按 <strong>F7</strong>, 向右滚动旋钮，在输出列表选择格式，获取 ANSI。 文件将导出到 Melody 主目录的 <em>root</em>（具有相同名称和文件类型特定扩展名）。</li></ul></li><li><p>打开文件。 输出可能看起来像这样：</p><p><img src="'+t+'" alt="来自文件的 ANSI 输出"></p></li><li><p>可以在 PX4 中播放的字符串是 <code>MNT</code> 和 <code>P64</code>: <code>150L1O3DL16CL32&lt;B&gt;C&lt;AEL16A</code></p></li></ol><h2 id="测试乐曲" tabindex="-1">测试乐曲 <a class="header-anchor" href="#测试乐曲" aria-label="Permalink to &quot;测试乐曲&quot;">​</a></h2><p>当您准备好在 PX4 上尝试新的乐曲时，请使用 <a href="./../modules/modules_system.html#tunecontrol">tune_control</a> 库。 例如，要测试我们在上面“创建的”乐曲，您应在控制台或 shell（例如 <a href="./../debug/mavlink_shell.html">MAVLink Shell</a>）上输入以下命令 ：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tune_control</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> play</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;150L1O3DL16CL32&lt;B&gt;C&lt;AEL16A&quot;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">开箱即用产品中，<code>tune_control</code> 只存在于实际硬件上（而不是模拟器）。</p></div></div><h2 id="正在替换已存在的乐曲" tabindex="-1">正在替换已存在的乐曲 <a class="header-anchor" href="#正在替换已存在的乐曲" aria-label="Permalink to &quot;正在替换已存在的乐曲&quot;">​</a></h2><p>提示音在 <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/lib/tunes/tune_definition.desc" target="_blank" rel="noreferrer">tune_definition.desc</a> 中定义。</p><p>如果你只需要替换现有的乐曲，可以在自己的 fork 中替换文件， 并更新 <code>PX4_DEFINE_TUNE</code> 中定义的乐曲字符串。</p><h2 id="添加新乐曲" tabindex="-1">添加新乐曲 <a class="header-anchor" href="#添加新乐曲" aria-label="Permalink to &quot;添加新乐曲&quot;">​</a></h2><p>待开发</p>',13),r=[o];function p(h,c,d,u,k,m){return i(),a("div",null,r)}const f=s(n,[["render",p]]);export{b as __pageData,f as default};
