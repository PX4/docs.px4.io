import{_ as a}from"./chunks/px4_companion_computer_simple.DIdcS0D1.js";import{_ as e,c as r,o as t,ab as o}from"./chunks/framework.CUflZczI.js";const k=JSON.parse('{"title":"机载计算机","description":"","frontmatter":{},"headers":[],"relativePath":"zh/companion_computer/index.md","filePath":"zh/companion_computer/index.md"}'),i={name:"zh/companion_computer/index.md"},l=o('<h1 id="机载计算机" tabindex="-1">机载计算机 <a class="header-anchor" href="#机载计算机" aria-label="Permalink to &quot;机载计算机&quot;">​</a></h1><p>机载计算机 (“任务计算机”) 是连接到飞控的独立机载计算机，使得诸如<a href="./../computer_vision/obstacle_avoidance.html">避障</a>和<a href="./../computer_vision/collision_prevention.html">防撞</a>等计算密集型功能成为可能。</p><p>下图显示了一个可能的无人驾驶架构，其中包括飞控和机载计算机。</p><p><img src="'+a+'" alt="PX4 架构 - 飞控 + 机载计算机"></p><p>飞控在 NuttX 上运行 PX4, 提供核心飞控和安全代码。 机载计算机通常运行 Linux, 因为这是一个“通用”软件开发的更好平台。 他们使用快速串行或以太网连接，通常使用 <a href="https://mavlink.io/en/" target="_blank" rel="noreferrer">MAVLink 协议</a> 或 uXRCE-DDS进行通信。</p><p>地面站和云端的通信通常使用机载计算机路由(例如使用<a href="https://github.com/mavlink-router/mavlink-router" target="_blank" rel="noreferrer">MAVLink Router</a>)。</p><h2 id="pixhawk-自动驾驶仪总线载板与机载计算机" tabindex="-1">Pixhawk 自动驾驶仪总线载板与机载计算机 <a class="header-anchor" href="#pixhawk-自动驾驶仪总线载板与机载计算机" aria-label="Permalink to &quot;Pixhawk 自动驾驶仪总线载板与机载计算机&quot;">​</a></h2><p>The following carrier boards make it easy to integrate Pixhawk flight controllers with a companion computer, significantly easing both hardware and software setup. 这些板支持<a href="./../flight_controller/pixhawk_autopilot_bus.html">Pixhawk Autopilot Bus (PAB)</a>开放标准，因此您可以插入任何兼容的控制器：</p><ul><li><a href="https://holybro.com/products/pixhawk-jetson-baseboard" target="_blank" rel="noreferrer">Holybro Pixhawk Jetson 基板</a></li><li><a href="./../companion_computer/holybro_pixhawk_rpi_cm4_baseboard.html">Holybro Pixhawk RPI CM4 基板</a></li><li><a href="https://arkelectron.gitbook.io/ark-documentation/flight-controllers/ark-jetson-pab-carrier" target="_blank" rel="noreferrer">ARK Jetson PAB 载板</a></li></ul><h2 id="管理集成系统" tabindex="-1">管理集成系统 <a class="header-anchor" href="#管理集成系统" aria-label="Permalink to &quot;管理集成系统&quot;">​</a></h2><p>以下集成的机载计算机/飞控系统默认使用受控/自定义版本的飞控和机载计算机软件。 它们在这里列出，因为它们可以使用 &quot;vanilla&quot; PX4 固件进行更新，以进行测试/快速开发。</p><ul><li><a href="./../companion_computer/auterion_skynode.html">Auterion Skynode</a></li><li><a href="https://docs.modalai.com/voxl-2/" target="_blank" rel="noreferrer">ModalAI VOXL 2</a></li></ul><h2 id="机载计算机选项" tabindex="-1">机载计算机选项 <a class="header-anchor" href="#机载计算机选项" aria-label="Permalink to &quot;机载计算机选项&quot;">​</a></h2><p>PX4 可以与计算机一起使用，可以配置为通过基于串口(或以太网端口) 的 MAVLink 或 microROS/uXRCE-DDS 进行通信。 以下列出了一小部分可能的替代方案。</p><p>高性能计算机：</p><ul><li><a href="https://docs.modalai.com/voxl2-external-flight-controller/" target="_blank" rel="noreferrer">ModalAI VOXL 2</a></li><li><a href="https://nxp.gitbook.io/navqplus/user-contributed-content/ros2/microdds" target="_blank" rel="noreferrer">NXP NavQPlus</a></li><li><a href="https://developer.nvidia.com/embedded/jetson-tx2" target="_blank" rel="noreferrer">Nvidia Jetson TX2</a></li></ul><ul><li><a href="https://www.intel.com/content/www/us/en/products/details/nuc.html" target="_blank" rel="noreferrer">Intel NUC</a></li><li><a href="https://www.gigabyte.com/Mini-PcBarebone/BRIX" target="_blank" rel="noreferrer">Gigabyte Brix</a></li></ul><p>小型/低功耗设备如：</p><ul><li><a href="./../companion_computer/pixhawk_rpi.html">树莓派</a></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>计算机的选择取决于：成本，重量，安装方便和所需的计算资源的权衡。</p></div><h2 id="机载计算机软件" tabindex="-1">机载计算机软件 <a class="header-anchor" href="#机载计算机软件" aria-label="Permalink to &quot;机载计算机软件&quot;">​</a></h2><p>机载计算机需要运行能与飞控通信的软件，并将消息路由到地面站和云端。</p><h4 id="无人机应用程序" tabindex="-1">无人机应用程序 <a class="header-anchor" href="#无人机应用程序" aria-label="Permalink to &quot;无人机应用程序&quot;">​</a></h4><p>Drone API 和 SDK 允许您编写能够控制 PX4 的软件。 主流的可选方案有：</p><ul><li>不同编程语言的 <a href="https://mavsdk.mavlink.io/main/en/index.html" target="_blank" rel="noreferrer">MAVSDK</a> - 库是 MAVLink 系统接口，用于无人机，相机或地面站系统。</li><li><a href="./../ros2/">ROS 2</a> 用于与 ROS 2 节点进行通信（也可以使用）。</li><li><a href="./../ros/mavros_installation.html">ROS 1 和 MAVROS</a></li></ul><p>MAVSDK 通常更容易学习和使用，而 ROS 提供更多预先编写的软件，用于像计算机视觉这样的高级案例。 <a href="./../robotics/#what-api-should-i-use">Drone APIs and SDKs &gt; 我该使用哪个 API?</a> 详细解释了不同的选项。</p><p>您还可以从头开始编写您的自定义 MAVLink 库：</p><ul><li><a href="https://github.com/mavlink/c_uart_interface_example" target="_blank" rel="noreferrer">C/C++ 示例代码</a> 显示如何连接自定义代码</li><li>MAVLink 还可以与<a href="https://mavlink.io/en/#mavlink-project-generatorslanguages" target="_blank" rel="noreferrer">许多其他编程语言</a>一起使用</li></ul><h4 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h4><p>如果您需要将 MAVLink 从载具桥接到地面站或 IP 网络，您将需要一个路由器。 或者如果您需要多个连接：</p><ul><li><a href="https://github.com/intel/mavlink-router" target="_blank" rel="noreferrer">MAVLink 路由器</a> （推荐）</li><li><a href="https://ardupilot.org/mavproxy/" target="_blank" rel="noreferrer">MAVProxy</a></li></ul><h2 id="以太网设置" tabindex="-1">以太网设置 <a class="header-anchor" href="#以太网设置" aria-label="Permalink to &quot;以太网设置&quot;">​</a></h2><p>以太网是推荐的连接方式，如果飞行控制器支持的话。 请参阅<a href="./../advanced_config/ethernet_setup.html">以太网设置</a>获取说明。</p><h2 id="飞控特定设置" tabindex="-1">飞控特定设置 <a class="header-anchor" href="#飞控特定设置" aria-label="Permalink to &quot;飞控特定设置&quot;">​</a></h2><p>以下章节介绍了如何为特定的飞控设置机载计算机，特别是当您不是使用以太网连接时。</p><ul><li><a href="./../companion_computer/pixhawk_companion.html">使用机载计算机与 Pixhawk 控制器</a></li></ul><h2 id="更多信息" tabindex="-1">更多信息 <a class="header-anchor" href="#更多信息" aria-label="Permalink to &quot;更多信息&quot;">​</a></h2><ul><li><a href="./../companion_computer/companion_computer_peripherals.html">机载计算机外设</a></li><li><a href="./../concept/px4_systems_architecture.html#fc-and-companion-computer">PX4 系统架构 &gt; 飞控和机载计算机</a></li></ul>',38),n=[l];function h(p,s,c,u,m,d){return t(),r("div",null,n)}const b=e(i,[["render",h]]);export{k as __pageData,b as default};
