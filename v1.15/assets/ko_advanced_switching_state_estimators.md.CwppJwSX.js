import{_ as e,c as t,o as a,ab as i}from"./chunks/framework.CUflZczI.js";const u=JSON.parse('{"title":"상태 추정기 전환","description":"","frontmatter":{},"headers":[],"relativePath":"ko/advanced/switching_state_estimators.md","filePath":"ko/advanced/switching_state_estimators.md"}'),o={name:"ko/advanced/switching_state_estimators.md"},s=i('<h1 id="상태-추정기-전환" tabindex="-1">상태 추정기 전환 <a class="header-anchor" href="#상태-추정기-전환" aria-label="Permalink to &quot;상태 추정기 전환&quot;">​</a></h1><p>어떤 상태 추정기를 사용할 수 있고 어떻게 전환할 수 있는 지를 설명합니다.</p><div class="tip custom-block"><p class="custom-block-title">EKF2 is the default and should be used unless you have a reason not to (in particular on vehicles with a GNSS/GPS). The Q-Estimator can be used if you don&#39;t have GPS, and is commonly used in <a href="./../config_mc/racer_setup.html">multicopter racers</a>.</p></div><h2 id="가용-추정기" tabindex="-1">가용 추정기 <a class="header-anchor" href="#가용-추정기" aria-label="Permalink to &quot;가용 추정기&quot;">​</a></h2><p>사용 가능한 추정기는 다음과 같습니다.</p><ul><li><p><strong>EKF2 attitude, position and wind states estimator</strong> (<em>recommended</em>) - An extended Kalman filter estimating attitude, 3D position / velocity and wind states.</p></li><li><p><strong>LPE position estimator</strong> (<em>deprecated</em>) - An extended Kalman filter for 3D position and velocity states.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p></div></li></ul><p>LPE is deprecated. It works (at time of writing, in PX4 v1.14) but is no longer supported or maintained. :::</p><ul><li><strong>Q attitude estimator</strong> - A very simple, quaternion based complementary filter for attitude. It does not require a GPS, magnetometer, or barometer. </li></ul><h2 id="다양한-추정기-활성화-방법" tabindex="-1">다양한 추정기 활성화 방법 <a class="header-anchor" href="#다양한-추정기-활성화-방법" aria-label="Permalink to &quot;다양한 추정기 활성화 방법&quot;">​</a></h2><p>To enable a particular estimator enable its parameter and disable the others:</p><ul><li><a href="./../advanced_config/parameter_reference.html#EKF2_EN">EKF2_EN</a> - EKF2 (default/recommended)</li><li><a href="./../advanced_config/parameter_reference.html#ATT_EN">ATT_EN</a> - Q Estimator (quaternion based attitude estimator)</li><li><a href="./../advanced_config/parameter_reference.html#LPE_EN">LPE_EN</a> - LPE (not supported for Fixed-wing)</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>It is important to enable one, and only one, estimator. If more than one is enabled, the first to publish the UOrb topics <a href="./../msg_docs/VehicleAttitude.html">vehicle_attitude</a> or <a href="./../msg_docs/VehicleLocalPosition.html">vehicle_local_position</a> is used. If none are enabled then the topics are not published.</p></div><p>:::note FMU-v2(전용)의 경우에는 필요한 추정기를 포함하도록 PX4를 빌드하여야 합니다(예: EKF2: <code>make px4_fmu-v2</code>, LPE: <code>make px4_fmu-v2_lpe</code>). 이는 FMU-v2가 두 추정기를 모두 포함하기에는 리소스가 너무 제한되어 있기 때문입니다. 다른 Pixhawk FMU 버전에는 둘 다 포함되어 있습니다. :::</p>',13),n=[s];function r(l,d,c,m,p,h){return a(),t("div",null,n)}const f=e(o,[["render",r]]);export{u as __pageData,f as default};
