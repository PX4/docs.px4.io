import{_ as e}from"./chunks/px4_fmu_io_functions.CjO4wA90.js";import{_ as a,c as r,o as t,ab as i}from"./chunks/framework.CUflZczI.js";const m=JSON.parse('{"title":"Проектування контролера польоту PX4","description":"","frontmatter":{},"headers":[],"relativePath":"uk/hardware/reference_design.md","filePath":"uk/hardware/reference_design.md"}'),o={name:"uk/hardware/reference_design.md"},n=i('<h1 id="проектування-контролера-польоту-px4" tabindex="-1">Проектування контролера польоту PX4 <a class="header-anchor" href="#проектування-контролера-польоту-px4" aria-label="Permalink to &quot;Проектування контролера польоту PX4&quot;">​</a></h1><p>Референсний дизайн PX4 - це серія польотних контролерів <a href="./../flight_controller/pixhawk_series.html">Pixhawk</a>. Спочатку випущений у 2011 році, цей дизайн зараз на своєму 5-му <a href="#reference_design_generations">поколінні</a> (десяте покоління дошки знаходиться в процесі розробки).</p><h2 id="сумісність-з-бінарним-кодом" tabindex="-1">Сумісність з бінарним кодом <a class="header-anchor" href="#сумісність-з-бінарним-кодом" aria-label="Permalink to &quot;Сумісність з бінарним кодом&quot;">​</a></h2><p>Всі плати, виготовлені за певним дизайном, мають бути сумісними з двійковим кодом (тобто можуть запускати ту ж саму прошивку). З 2018 року ми будемо надавати набір тестів для перевірки бінарної сумісності, який дозволить нам перевірити та сертифікувати цю сумісність.</p><p>Покоління FMU 1-3 були розроблені як відкрите обладнання, тоді як покоління FMU 4 та 5 надали лише специфікації роз&#39;ємів та живлення (схеми були створені окремими виробниками). Для кращої сумісності, починаючи з FMUv6 і пізніше, буде використано повний модельний референтний дизайн.</p><p><a id="reference_design_generations"></a></p><h2 id="reference-design-generations" tabindex="-1">Reference Design Generations <a class="header-anchor" href="#reference-design-generations" aria-label="Permalink to &quot;Reference Design Generations&quot;">​</a></h2><ul><li>FMUv1: Development board (STM32F407, 128 KB RAM, 1MB flash, <a href="https://github.com/PX4/Hardware/tree/master/FMUv1" target="_blank" rel="noreferrer">schematics</a>) (no longer supported by PX4)</li><li>FMUv2: Pixhawk (STM32F427, 168 MHz, 192 KB RAM, 1MB flash, <a href="https://github.com/PX4/Hardware/tree/master/FMUv2" target="_blank" rel="noreferrer">schematics</a>)</li><li>FMUv3: Pixhawk variants with 2MB flash (3DR Pixhawk 2 (Solo), Hex Pixhawk 2.1, Holybro Pixfalcon, 3DR Pixhawk Mini, STM32F427, 168 MHz, 256 KB RAM, 2 MB flash, <a href="https://github.com/PX4/Hardware/tree/master/FMUv3_REV_D" target="_blank" rel="noreferrer">schematics</a>)</li><li>FMUv4: Pixracer (STM32F427, 168 MHz, 256 KB RAM, 2 MB flash, <a href="https://docs.google.com/spreadsheets/d/1raRRouNsveQz8cj-EneWG6iW0dqGfRAifI91I2Sr5E0/edit#gid=1585075739" target="_blank" rel="noreferrer">pinout</a>)</li><li>FMUv4 PRO: Drotek Pixhawk 3 PRO (STM32F469, 180 MHz, 384 KB RAM, 2 MB flash, <a href="https://docs.google.com/spreadsheets/d/1raRRouNsveQz8cj-EneWG6iW0dqGfRAifI91I2Sr5E0/edit#gid=1585075739" target="_blank" rel="noreferrer">pinout</a>)</li><li>FMUv5: Holybro Pixhawk 4 (STM32F765, 216 MHz, 512 KB RAM, 2 MB flash, <a href="https://docs.google.com/spreadsheets/d/1-n0__BYDedQrc_2NHqBenG1DNepAgnHpSGglke-QQwY/edit#gid=912976165" target="_blank" rel="noreferrer">pinout</a>)</li><li>FMUv6: work in progress, final name TBD, variant 6s (STM32H7, 400 MHz, 2 MB RAM, 2 MB flash) and variant 6i (i.MX RT1050, 600 MHz, 512 KB RAM, external flash)</li></ul><h2 id="розподіл-функціи-основноі-ввід-вивідноі-функціі" tabindex="-1">Розподіл функцій основної / ввід-вивідної функції <a class="header-anchor" href="#розподіл-функціи-основноі-ввід-вивідноі-функціі" aria-label="Permalink to &quot;Розподіл функцій основної / ввід-вивідної функції&quot;">​</a></h2><p>Діаграма нижче показує розподіл обов&#39;язків автобуса та функціональних відповідальностей між платами FMU та I/O в контролері польоту серії Pixhawk (плати вбудовані в один фізичний модуль).</p><p><img src="'+e+'" alt="PX4 Main/IO Functional Breakdown"></p><p>Деякі контролери серії Pixhawk будуються без плати введення-виведення для зменшення розміру або складності, або для кращого вирішення певних сценаріїв використання плати. У цьому випадку І/O драйвер не запущений.</p><div class="info custom-block"><p class="custom-block-title">Виробник варіантів польотного контролера без плати введення/виведення часто називають &quot;зменшеною&quot; версією тієї, яка включає плату I/O: наприклад, <em>Pixhawk 4</em> <strong>Міні</strong><em>, _CUAV v5 <strong>нано</strong></em>.</p></div><p>Побудовані цілі, які повинні працювати на контролерах польоту з платою вводу/виводу, картують виходи FMU на <code>AUX</code>, а виходи введення/виводу на <code>MAIN</code> (див. діаграму вище). Якщо ціль запускається на обладнанні, де відсутня або вимкнена плата вводу-виводу, вихідні сигнали головних ШШ не будуть присутні. Можливо, ви побачите це, наприклад, запустивши <code>px4_fmu-v5_default</code> на <a href="./../flight_controller/pixhawk4.html">Pixhawk 4</a> (з IO) та <a href="./../flight_controller/pixhawk4_mini.html">Pixhawk 4 Mini</a> (без IO).</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>На <a href="./../flight_controller/pixhawk4_mini.html">Pixhawk 4 Mini</a> це призводить до неспівпадіння між екранованим написом <code>MAIN</code> на пульті управління кольорової літальної апаратури та шини <code>AUX</code>, яка відображається під час <a href="./../config/actuators.html">Конфігурації приводів</a>. :::info якщо ціль збірки призначена виконуватися лише на контролері польоту, який не має вводу/виводу, тоді вихідні FMU відображаються на <code>MAIN</code> (наприклад, ціль <code>px4_fmu-v4_default</code> для <a href="./../flight_controller/pixracer.html">Pixracer</a>).</p><p>Вихідні PWM PX4 відображені на порти <code>MAIN</code> або <code>AUX</code> у <a href="./../config/actuators.html">Конфігурації Приводів</a>.</p></div>',15),s=[n];function l(c,h,d,f,p,_){return t(),r("div",null,s)}const k=a(o,[["render",l]]);export{m as __pageData,k as default};
