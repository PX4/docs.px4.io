import{_ as t}from"./chunks/SIH_diagram.BzKy1QSs.js";import{_ as l,E as o,c as n,J as s,m as i,a as e,ab as r,o as h}from"./chunks/framework.CUflZczI.js";const P=JSON.parse('{"title":"Моделювання в апаратному забезпеченні (SIH)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/sim_sih/index.md","filePath":"uk/sim_sih/index.md"}'),p={name:"uk/sim_sih/index.md"},d=i("h1",{id:"моделювання-в-апаратному-забезпеченні-sih",tabindex:"-1"},[e("Моделювання в апаратному забезпеченні (SIH) "),i("a",{class:"header-anchor",href:"#моделювання-в-апаратному-забезпеченні-sih","aria-label":'Permalink to "Моделювання в апаратному забезпеченні (SIH)"'},"​")],-1),c=r('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This simulator is <a href="./../simulation/community_supported_simulators.html">community supported and maintained</a>. It may or may not work with current versions of PX4 (known to work in PX4 v1.14).</p><p>See <a href="./../dev_setup/dev_env.html">Toolchain Installation</a> for information about the environments and tools supported by the core development team.</p></div><p>Simulation-In-Hardware (SIH) is an alternative to <a href="./../simulation/hitl.html">Hardware In The Loop simulation (HITL)</a> for quadrotors, fixed-wing vehicles (airplane), and VTOL tailsitters.</p><p>SIH can be used by new PX4 users to get familiar with PX4 and the different modes and features, and of course to learn to fly a vehicle using an RC controller in simulation, which is not possible using SITL.</p><h2 id="загальнии-огляд" tabindex="-1">Загальний огляд <a class="header-anchor" href="#загальнии-огляд" aria-label="Permalink to &quot;Загальний огляд&quot;">​</a></h2><p>With SIH the whole simulation is running on embedded hardware: the controller, the state estimator, and the simulator. The Desktop computer is only used to display the virtual vehicle.</p><p><img src="'+t+'" alt="Simulator MAVLink API"></p><h3 id="сумісність" tabindex="-1">Сумісність <a class="header-anchor" href="#сумісність" aria-label="Permalink to &quot;Сумісність&quot;">​</a></h3><ul><li>SIH is compatible with all PX4 supported boards except those based on FMUv2.</li><li>SIH для квадрокоптера підтримується з версії PX4 v1.9.</li><li>SIH для фіксованих крил (літака) та VTOL-конвертоплана підтримується з версії PX4 v1.13.</li><li>SIH як SITL (без апаратного забезпечення) з версії PX4 v1.14.</li></ul><h3 id="переваги" tabindex="-1">Переваги <a class="header-anchor" href="#переваги" aria-label="Permalink to &quot;Переваги&quot;">​</a></h3><p>SIH provides several benefits over HITL:</p><ul><li>Він забезпечує синхронізований час, уникаючи двостороннього з&#39;єднання з комп&#39;ютером. В результаті користувачеві не потрібен такий потужний настільний комп&#39;ютер.</li><li>Усе моделювання залишається в середовищі PX4. Розробники, які знайомі з PX4, можуть легше включити свою власну математичну модель в симулятор. Вони, наприклад, можуть змінити аеродинамічну модель або рівень шуму датчиків, або навіть додати датчик для симуляції.</li><li>Фізичні параметри, які представляють транспортний засіб (такі як маса, інерція та максимальна сила тяги), можна легко змінити з параметрів <a href="./../advanced_config/parameter_reference.html#simulation-in-hardware">SIH</a>.</li></ul><h2 id="вимоги" tabindex="-1">Вимоги <a class="header-anchor" href="#вимоги" aria-label="Permalink to &quot;Вимоги&quot;">​</a></h2><p>To run the SIH, you will need a:</p><ul><li><a href="./../flight_controller/README.html">Контролер польоту</a>, наприклад плата серії Pixhawk</li><li><a href="./../getting_started/px4_basic_concepts.html#manual-control">Ручне управління</a>: або <a href="./../getting_started/rc_transmitter_receiver.html">радіосистема управління,</a> або <a href="./../config/joystick.html">джойстик</a>.</li><li>QGroundControl for flying the vehicle via GCS.</li><li>Development computer for visualizing the virtual vehicle (optional).</li></ul><p>Починаючи з PX4 v1.14, ви можете запускати SIH &quot;як SITL&quot;, у цьому випадку контролер польоту не потрібен.</p><h2 id="налаштування-sih" tabindex="-1">Налаштування SIH <a class="header-anchor" href="#налаштування-sih" aria-label="Permalink to &quot;Налаштування SIH&quot;">​</a></h2><p>Щоб налаштувати SIH</p><ol><li>Підключіть контролер польоту до настільного комп’ютера за допомогою кабелю USB</li><li>Відкрийте QGroundControl і зачекайте, поки контролер польоту також завантажиться та підключиться.</li><li>Відкрийте <a href="./../config/airframe.html">Vehicle Setup &gt; Airframe</a>, а потім виберіть потрібний каркас: <ul><li><a href="./../airframes/airframe_reference.html#copter_simulation_sih_quadcopter_x">Квадрокоптер SIH X</a></li><li><a href="./../airframes/airframe_reference.html#plane_simulation_sih_plane_aert">SIH літак AERT</a></li><li><a href="./../airframes/airframe_reference.html#vtol_simulation_sih_tailsitter_duo">SIH Tailsitter Duo</a></li></ul></li></ol><p>Потім автопілот перезавантажиться. Після перезапуску модуль <code>sih</code> запускається, і транспортний засіб має відображатися на карті наземної станції керування.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Літак повинен злітати в ручному режимі на повному газі. Крім того, якщо літак розбився, оцінювач стану може втратити своє виправлення.</p></div><h2 id="setting-up-the-display-optional" tabindex="-1">Setting up the Display (optional) <a class="header-anchor" href="#setting-up-the-display-optional" aria-label="Permalink to &quot;Setting up the Display (optional)&quot;">​</a></h2><p>The SIH can be displayed using <a href="./../sim_jmavsim/">jMAVSim</a> as a visualiser.</p><div class="tip custom-block"><p class="custom-block-title">SIH</p><p>does not <em>need</em> a visualiser — you can connect with QGroundControl and fly the vehicle without one.</p></div><p>Для відображення симульованого транспортного засобу:</p><ol><li><p>Закрийте <em>QGroundControl</em> (якщо відкрито).</p></li><li><p>Відключіть і знову підключіть контролер польоту (дайте декілька секунд на його завантаження).</p></li><li><p>Запустіть jMAVSim, викликавши скрипт <strong>jmavsim_run.sh</strong> з терміналу:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Tools/simulation/jmavsim/jmavsim_run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/ttyACM0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2000000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span></span></code></pre></div><p>де прапорці такі:</p><ul><li><code>-q</code>, щоб дозволити зв&#39;язок з <em>QGroundControl</em> (необов&#39;язково).</li><li><code>-d</code>, щоб розпочати роботу з послідовним пристроєм <code>/dev/ttyACM0</code> на Linux. На macOS це буде <code>/dev/tty.usbmodem1</code>.</li><li><code>-b</code>, щоб встановити швидкість передачі даних через послідовний порт на <code>2000000</code>.</li><li><code>-o</code>, щоб запустити jMAVSim тільки у <em>режимі відображення</em> (тобто фізичний двигун вимкнено, і jMAVSim лише відображає траєкторію, надану SIH в реальному часі).</li><li>додайте прапорець <code>-a</code>, щоб відобразити літак, або &#39;-t&#39;, щоб відобразити вертикальнітник. Якщо цей прапорець не вказаний, за замовчуванням відображатиметься квадрокоптер.</li></ul></li><li><p>Через кілька секунд можна знову відкрити <em>QGroundControl</em>.</p></li></ol><p>На цьому етапі систему можна запустити та вивести в польот. Транспортний засіб можна спостерігати за рухом в jMAVSim та на екрані <em>польоту QGC</em>.</p><h2 id="запуск-sih-як-sitl-без-апаратних-засобів" tabindex="-1">Запуск SIH як SITL (без апаратних засобів) <a class="header-anchor" href="#запуск-sih-як-sitl-без-апаратних-засобів" aria-label="Permalink to &quot;Запуск SIH як SITL (без апаратних засобів)&quot;">​</a></h2><p>SIH можна запустити як SITL (Software-In-The-Loop) з версії 1.14. Це означає, що код симуляції виконується на ноутбуці/комп&#39;ютері, подібно до Gazebo або jMAVSim. У цьому випадку не потрібне апаратне забезпечення контролера польоту.</p><p>Для запуску SIH як SITL:</p><ol><li><p>Встановіть <a href="./../dev_setup/dev_env.html">PX4 набір інструментів розробника</a>.</p></li><li><p>Виконайте відповідну команду make для кожного типу транспортного засобу (в корені репозиторію PX4-Autopilot):</p><ul><li><p>квадротор:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sihsim_quadx</span></span></code></pre></div></li><li><p>Закріплені крила (літаки):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sihsim_airplane</span></span></code></pre></div></li><li><p>XVert VTOL tailsitter:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sihsim_xvert</span></span></code></pre></div></li></ul></li></ol><p>SITL дозволяє виконувати симуляцію швидше, ніж у реальному часі. To run the airplane simulation 10 times faster than real time, run the command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PX4_SIM_SPEED_FACTOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sihsim_airplane</span></span></code></pre></div><p>To display the vehicle in jMAVSim during SITL mode, enter the following command in another terminal:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Tools/simulation/jmavsim/jmavsim_run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 19410</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span></span></code></pre></div><ul><li>add a flag <code>-a</code> to display an aircraft or <code>-t</code> to display a tailsitter. If this flag is not present a quadrotor will be displayed by default.</li></ul><h2 id="динамічнии-режим" tabindex="-1">Динамічний режим <a class="header-anchor" href="#динамічнии-режим" aria-label="Permalink to &quot;Динамічний режим&quot;">​</a></h2><p>Динамічні моделі для різних транспортних засобів:</p><ul><li>Квадротор: <a href="https://github.com/PX4/PX4-user_guide/raw/v1.15/assets/simulation/SIH_dynamic_model.pdf" target="_blank" rel="noreferrer">pdf звіт</a>.</li><li>З нерухомим крилом: на основі кандидатської дисертації: «Моделювання динаміки маневрених безпілотних літальних апаратів з нерухомим крилом» Khan, Waqas, під керівництвом Nahon, Meyer, Університет Макгілла, докторська дисертація, 2016.</li><li>Tailsitter: Натхненний магістерською дисертацією: «Моделювання та керування безпілотним літальним апаратом з літаючим крилом» Chiappinelli, Romain, під керівництвом Nahon, Meyer, Університет Макгілла, магістерська робота, 2018.</li></ul><h2 id="відео" tabindex="-1">Відео <a class="header-anchor" href="#відео" aria-label="Permalink to &quot;Відео&quot;">​</a></h2>',39),m=i("p",null,[i("div",{class:"embed-responsive embed-responsive-16by9"},[i("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/PzIpSCRD8Jo",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),u=i("h2",{id:"автори",tabindex:"-1"},[e("Автори "),i("a",{class:"header-anchor",href:"#автори","aria-label":'Permalink to "Автори"'},"​")],-1),k=i("p",null,"SIH спочатку був розроблений компанією Coriolis g Corporation. Модель літака та моделі вертикальних засідателів були додані компанією Altitude R&D inc. Обидві ці компанії знаходяться в Канаді:",-1),g=i("ul",null,[i("li",null,"Coriolis g developped a new type of Vertical Takeoff and Landing (VTOL) vehicles based on passive coupling systems;"),i("li",null,[i("a",{href:"https://www.altitude-rd.com/",target:"_blank",rel:"noreferrer"},"Altitude R&D"),e(" is specialized in dynamics, control, and real-time simulation (today relocated in Zurich).")])],-1),v=i("p",null,"Симулятор випущений безкоштовно під ліцензією BSD.",-1);function _(f,b,y,C,F,S){const a=o("Badge");return h(),n("div",null,[d,s(a,{type:"tip",text:"PX4 v1.9 (MC)"}),s(a,{type:"tip",text:"PX4 v1.13 (MC, VTOL, FW)"}),c,m,u,k,g,v])}const w=l(p,[["render",_]]);export{P as __pageData,w as default};
