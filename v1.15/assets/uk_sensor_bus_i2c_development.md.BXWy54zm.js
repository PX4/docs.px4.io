import{_ as e,c as r,o as a,ab as t}from"./chunks/framework.CUflZczI.js";const b=JSON.parse('{"title":"Шина I2C (Огляд розробки)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/sensor_bus/i2c_development.md","filePath":"uk/sensor_bus/i2c_development.md"}'),s={name:"uk/sensor_bus/i2c_development.md"},i=t('<h1 id="шина-i2c-огляд-розробки" tabindex="-1">Шина I2C (Огляд розробки) <a class="header-anchor" href="#шина-i2c-огляд-розробки" aria-label="Permalink to &quot;Шина I2C (Огляд розробки)&quot;">​</a></h1><p>I2C - це протокол послідовного обміну даними у вигляді пакетів, який дозволяє підключати кілька головних пристроїв до кількох підчинених пристроїв, використовуючи лише 2 провідника для кожного з&#39;єднання. Цей протокол призначений для підключення периферійних ІС з низькою швидкістю до процесорів та мікроконтролерів у короткій дистанційній, внутрішньоплатній комунікації.</p><p>Pixhawk/PX4 підтримує її для:</p><ul><li>Підключення зовнішніх компонентів, які вимагають вищих швидкостей передачі даних, ніж ті, що надає строгий послідовний UART, такі як далекоміри.</li><li>Сумісність з периферійними пристроями, які підтримують лише I2C.</li><li>Дозвіл декількох пристроїв приєднатися до одного шини (корисно для збереження портів). Наприклад, світлодіоди, компас, дальномери і т. д.</li></ul><div class="info custom-block"><p class="custom-block-title">Сторінка <a href="./../sensor_bus/i2c_general.html">Апаратне &gt; Периферійні пристрої I2C</a> містить інформацію про те, як <em>використовувати</em> (а не інтегрувати) периферійні пристрої I2C та вирішувати типові проблеми налаштування.</p></div><div class="tip custom-block"><p class="custom-block-title">IMUs (акселерометри/гіроскопи) не повинні бути підключені через I2C (зазвичай використовується шина <a href="https://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus" target="_blank" rel="noreferrer">SPI</a>). Шина недостатньо швидка навіть з одним приєднаним пристроєм для виконання фільтрації вібрації (наприклад), і продуктивність погіршується ще більше з кожним додатковим пристроєм на шині.</p></div><h2 id="інтеграція-пристроів-i2c" tabindex="-1">Інтеграція пристроїв I2C <a class="header-anchor" href="#інтеграція-пристроів-i2c" aria-label="Permalink to &quot;Інтеграція пристроїв I2C&quot;">​</a></h2><p>Драйвери повинні <code>#include &lt;drivers/device/i2c.h&gt;</code> та потім надати реалізацію абстрактного базового класу <code>I2C</code>, визначеного в <strong>I2C.hpp</strong> для цільового обладнання (тобто для NuttX <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/lib/drivers/device/nuttx/I2C.hpp" target="_blank" rel="noreferrer">тут</a>).</p><p>Невелика кількість водіїв також повинні включати заголовки для свого типу пристрою (<strong>drv_*.h</strong>) в <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers" target="_blank" rel="noreferrer">/src/drivers/</a> - наприклад, <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/drivers/drv_led.h" target="_blank" rel="noreferrer">drv_led.h</a>.</p><p>Для включення драйвера в прошивку потрібно додати драйвер до файлу cmake, специфічного для плати, який відповідає цілі, для якої ви хочете збудувати. Ви можете це зробити для одного драйвера:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>CONFIG_DRIVERS_DISTANCE_SENSOR_LIGHTWARE_LASER_I2C=y</span></span></code></pre></div><p>Ви також можете включити всі драйвери певного типу.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>CONFIG_COMMON_DISTANCE_SENSOR=y</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Наприклад, ви можете побачити / знайти <code>CONFIG_DRIVERS_DISTANCE_SENSOR_LIGHTWARE_LASER_I2C</code> в конфігурації <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/boards/px4/fmu-v4/default.px4board" target="_blank" rel="noreferrer">px4_fmu-v4_default</a>.</p></div><h2 id="приклади-драивера-i2c" tabindex="-1">Приклади драйвера I2C <a class="header-anchor" href="#приклади-драивера-i2c" aria-label="Permalink to &quot;Приклади драйвера I2C&quot;">​</a></h2><p>Щоб знайти приклади драйверів I2C, шукайте <strong>i2c.h</strong> за посиланням <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers" target="_blank" rel="noreferrer">/src/drivers/</a>.</p><p>Ось декілька прикладів:</p><ul><li><a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/distance_sensor/lightware_laser_i2c" target="_blank" rel="noreferrer">drivers/distance_sensor/lightware_laser_i2c</a> - Драйвер I2C для <a href="./../sensor/sfxx_lidar.html">Lightware SF1XX LIDAR</a>.</li><li><a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/distance_sensor/lightware_laser_serial" target="_blank" rel="noreferrer">drivers/distance_sensor/lightware_laser_serial</a> - Серійний драйвер для <a href="./../sensor/sfxx_lidar.html">Lightware SF1XX LIDAR</a>.</li><li><a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/barometer/ms5611" target="_blank" rel="noreferrer">drivers/ms5611</a> - Драйвер I2C для барометричного датчика тиску MS5611 та MS6507, підключеного через I2C (або SPI).</li></ul><h2 id="детальна-інформація" tabindex="-1">Детальна інформація <a class="header-anchor" href="#детальна-інформація" aria-label="Permalink to &quot;Детальна інформація&quot;">​</a></h2><ul><li><a href="https://en.wikipedia.org/wiki/I%C2%B2C" target="_blank" rel="noreferrer">I2C</a> (Вікіпедія)</li><li><a href="https://learn.sparkfun.com/tutorials/i2c" target="_blank" rel="noreferrer">Порівняльний огляд I2C</a> (learn.sparkfun.com)</li><li><a href="./../middleware/drivers.html">Фреймворк драйвера</a></li></ul>',20),l=[i];function o(c,n,p,d,h,_){return a(),r("div",null,l)}const m=e(s,[["render",o]]);export{b as __pageData,m as default};
