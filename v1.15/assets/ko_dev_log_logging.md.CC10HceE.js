import{_ as s}from"./chunks/qgc-log-streaming.DWyyikx0.js";import{_ as a,c as e,o as i,ab as t}from"./chunks/framework.CUflZczI.js";const F=JSON.parse('{"title":"로깅","description":"","frontmatter":{},"headers":[],"relativePath":"ko/dev_log/logging.md","filePath":"ko/dev_log/logging.md"}'),l={name:"ko/dev_log/logging.md"},n=t(`<h1 id="로깅" tabindex="-1">로깅 <a class="header-anchor" href="#로깅" aria-label="Permalink to &quot;로깅&quot;">​</a></h1><p>The <a href="./../modules/modules_system.html#logger">system logger</a> is able to log any ORB topic with all included fields. 필요한 모든 것은 <code>.msg</code> 파일에서 생성되므로, 주제 이름만 지정하면 됩니다. 선택적 간격 매개변수는 특정 주제의 최대 로깅 속도를 지정합니다. 주제의 모든 기존 인스턴스가 기록됩니다.</p><p>출력 로그 형식은 <a href="./../dev_log/ulog_file_format.html">ULog</a> 입니다.</p><h2 id="사용법" tabindex="-1">사용법 <a class="header-anchor" href="#사용법" aria-label="Permalink to &quot;사용법&quot;">​</a></h2><p>기본적으로, 로깅은 시동을 걸었을 때 시작하며, 제동 후 중지합니다. 새 로그 파일은 시동을 걸 때마다 SD 카드에 생성됩니다. 현재 상태를 표시하려면 콘솔에서 <code>logger status</code>명령을 사용하십시오. 로깅을 바로 시작하고 싶다면 <code>logger on</code> 명령을 내리십시오. 이 명령은 시동을 걸었을 때, 시동 동작보다 우선합니다. <code>logger off</code> 명령은 그 반대입니다.</p><p>If logging stops due to a write error, or reaching the <a href="#file-size-limitations">maximum file size</a>, PX4 will automatically restart logging in a new file.</p><p>For a list of all supported logger commands and parameters, use:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>logger help</span></span></code></pre></div><h2 id="구성" tabindex="-1">구성 <a class="header-anchor" href="#구성" aria-label="Permalink to &quot;구성&quot;">​</a></h2><p>The logging system is configured by default to collect sensible logs for <a href="./../getting_started/flight_reporting.html">flight reporting</a> with <a href="http://logs.px4.io" target="_blank" rel="noreferrer">Flight Review</a>.</p><p>로깅은 <a href="./../advanced_config/parameter_reference.html#sd-logging">SD 로깅</a> 매개변수를 사용하여 설정할 수 있습니다. 변경할 가능성이 높은 매개변수가 아래에 설명되어 있습니다.</p><table><thead><tr><th>매개 변수</th><th>설명</th></tr></thead><tbody><tr><td><a href="./../advanced_config/parameter_reference.html#SDLOG_MODE">SDLOG_MODE</a></td><td>Logging Mode. Defines when logging starts and stops.<br>- <code>-1</code>: Logging disabled.<br>- <code>0</code>: Log when armed until disarm (default).<br>- <code>1</code>: Log from boot until disarm.<br>- <code>2</code>: Log from boot until shutdown.<br>- <code>3</code>: Log based on the <a href="./../advanced_config/parameter_reference.html#RC_MAP_AUX1">AUX1 RC channel</a>.<br>- <code>4</code>: Log from first armed until shutdown.</td></tr><tr><td><a href="./../advanced_config/parameter_reference.html#SDLOG_PROFILE">SDLOG_PROFILE</a></td><td>로깅 프로파일. 자주 사용되지 않는 로깅/분석을 활성화하려면 이것을 사용하십시오(예: EKF2 재생, PID 및 필터 튜닝을 위한 고속 로깅, 열 온도 보정).</td></tr><tr><td><a href="./../advanced_config/parameter_reference.html#SDLOG_MISSION">SDLOG_MISSION</a></td><td>Create very small additional &quot;Mission Log&quot;.<br>This log can <em>not</em> be used with <a href="./../log/flight_log_analysis.html#flight-review-online-tool">Flight Review</a>, but is useful when you need a small log for geotagging or regulatory compliance.</td></tr></tbody></table><p>Useful settings for specific cases:</p><ul><li>Raw sensor data for comparison: <a href="./../advanced_config/parameter_reference.html#SDLOG_MODE">SDLOG_MODE=1</a> and <a href="./../advanced_config/parameter_reference.html#SDLOG_PROFILE">SDLOG_PROFILE=64</a>.</li><li>Disabling logging altogether: <a href="./../advanced_config/parameter_reference.html#SDLOG_MODE">SDLOG_MODE=<code>-1</code></a></li></ul><h3 id="logger-module" tabindex="-1">Logger module <a class="header-anchor" href="#logger-module" aria-label="Permalink to &quot;Logger module&quot;">​</a></h3><p><em>Developers</em> can further configure what information is logged via the <a href="./../modules/modules_system.html#logger">logger</a> module. This allows, for example, logging of your own uORB topics.</p><h3 id="진단sd-카드-설정" tabindex="-1">진단SD 카드 설정 <a class="header-anchor" href="#진단sd-카드-설정" aria-label="Permalink to &quot;진단SD 카드 설정&quot;">​</a></h3><p>Separately, the list of logged topics can also be customized with a file on the SD card. Create a file <code>etc/logging/logger_topics.txt</code> on the card with a list of topics (For SITL, it&#39;s <code>build/px4_sitl_default/rootfs/fs/microsd/etc/logging/logger_topics.txt</code>):</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;topic_name&gt; &lt;interval&gt; &lt;instance&gt;</span></span></code></pre></div><p><code>&lt;interval&gt;</code>은 선택 사항이며, 지정된 경우 이 항목에 대해 기록된 두 메시지 사이의 최소 시간 간격(ms)을 정의합니다. 지정하지 않으면, 주제가 최대 속도로 기록됩니다.</p><p><code>&lt;instance&gt;</code>은 선택 사항이며, 지정된 경우 기록할 인스턴스를 정의합니다. 지정하지 않으면, 토픽의 모든 인스턴스를 로깅합니다. <code>&lt;instance&gt;</code>를 지정하려면, <code>&lt;interval&gt;</code>을 반드시 지정하여야합니다. 0 값을 설정하면 최대 기록율로 지정할 수 있습니다.</p><p>이 파일의 주제는 기본적으로 기록된 모든 주제를 대체합니다.</p><p>예 :</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_accel 0 0</span></span>
<span class="line"><span>sensor_accel 100 1</span></span>
<span class="line"><span>sensor_gyro 200</span></span>
<span class="line"><span>sensor_mag 200 1</span></span></code></pre></div><p>이 구성은 최대 속도에서 sensor_accel 0, 10Hz에서 sensor_accel 1, 5Hz에서 모든 sensor_gyro 인스턴스 및 5Hz에서 sensor_mag 1을 기록합니다.</p><h2 id="스크립트" tabindex="-1">스크립트 <a class="header-anchor" href="#스크립트" aria-label="Permalink to &quot;스크립트&quot;">​</a></h2><p><a href="https://github.com/PX4/pyulog" target="_blank" rel="noreferrer">pyulog</a> 저장소에 로깅 파일을 분석하고 변환하는 여러 스크립트가 있습니다.</p><h2 id="file-size-limitations" tabindex="-1">File size limitations <a class="header-anchor" href="#file-size-limitations" aria-label="Permalink to &quot;File size limitations&quot;">​</a></h2><p>The maximum file size depends on the file system and OS. The size limit on NuttX is currently around 2GB.</p><h2 id="손실" tabindex="-1">손실 <a class="header-anchor" href="#손실" aria-label="Permalink to &quot;손실&quot;">​</a></h2><p>로깅 드롭아웃은 바람직하지 않으며, 드롭아웃의 양에 영향을 미치는 몇 가지 요소가 있습니다.</p><ul><li>테스트한 대부분의 SD 카드는 분당 여러 번 일시 중지되었습니다. 이는 기록 명령을 처리함에 있어 수 100ms 정도의 지연이 있음을 보여줍니다. 이런 현상으로 인해 그동안 기록 버퍼가 차면 손실을 유발합니다. (아래와 같이) SD 카드에 따라 영향을 받습니다.</li><li>SD 카드를 포맷하면, 손실을 어느정도 예방할 수 있습니다.</li><li>로그 버퍼 크기를 늘리면 도움이 됩니다.</li><li>선택한 토픽에 대한 로깅 율을 줄이거나 필요없는 토픽을 로깅 목록에서 제거하십시오(<code>info.py</code>가 이 문제 해결에 도움됨).</li></ul><h2 id="sd-카드" tabindex="-1">SD 카드 <a class="header-anchor" href="#sd-카드" aria-label="Permalink to &quot;SD 카드&quot;">​</a></h2><p>다음은 다양한 SD 카드에 대한 성능 테스트 결과입니다. 테스트는 Pixracer에서 수행되었습니다. 결과는 Pixhawk에도 적용됩니다.</p><p>The table below shows the <strong>mean sequential write speed [KB/s]</strong> / <strong>maximum write time per block (average) [ms]</strong> for F4- (Pixracer), F7-, and H7-based flight controllers.</p><table><thead><tr><th>SD 카드</th><th>F4</th><th>최대 기록 시간 / 블록 (평균) [ms]</th><th>H7</th></tr></thead><tbody><tr><td>SanDisk Extreme U3 32GB</td><td>461</td><td>1800/10</td><td>2900/8</td></tr><tr><td>Samsung EVO Plus 32GB</td><td>348</td><td>40</td><td>1900/9-60</td></tr><tr><td>Sandisk Ultra Class 10 8GB</td><td>212</td><td>60</td><td>?/?</td></tr><tr><td>Sandisk Class 4 8GB</td><td>331</td><td>220</td><td>?/?</td></tr><tr><td>SanDisk Class 10 32 GB (High Endurance Video Monitoring Card)</td><td>209</td><td>150</td><td>?/?</td></tr><tr><td>Lexar U1 (Class 10), 16GB High-Performance</td><td>196</td><td>500</td><td>?/?</td></tr><tr><td>Sandisk Ultra PLUS Class 10 16GB</td><td>334</td><td>250</td><td>?/?</td></tr><tr><td>Sandisk Pixtor Class 10 16GB</td><td>332</td><td>150</td><td>?/?</td></tr><tr><td>Sandisk Extreme PLUS Class 10 32GB</td><td>332 / 150</td><td>?/?</td><td>?/?</td></tr></tbody></table><p>Logging bandwidth with the default topics is around 50 KB/s, which almost all SD cards satisfy in terms of their mean sequential write speed.</p><p>More important than the mean write speed is spikes (or generally high values) in the maximum write time per block (of 4 KB) or <code>fsync</code> times, as a long write time means a larger log buffer is needed to avoid dropouts.</p><p>PX4 uses bigger buffers on F7/H7 and read caching, which is enough to compensate for spikes in many poor cards. That said, if your card has an <code>fsync</code> or write duration of several 100ms it is should not be preferred for use with PX4. You can check the value by running <a href="./../modules/modules_command.html#sd-bench">sd_bench</a> should be run with more iterations (around 100 should do).</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sd_bench</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span></code></pre></div><p>이것은 최소 버퍼 크기를 정의합니다. 이 최대값이 클수록 드롭아웃을 피하기 위하여 더 큰 로그 버퍼가 필요합니다. PX4 uses bigger buffers on F7/H7 and read caching to make up for some of these issues.</p><div class="info custom-block"><p class="custom-block-title">If you have concerns about a particular card you can run the above test and report the results to <a href="https://github.com/PX4/PX4-Autopilot/issues/4634" target="_blank" rel="noreferrer">https://github.com/PX4/PX4-Autopilot/issues/4634</a>. <code>&lt;instance&gt;</code>를 지정하려면, <code>&lt;interval&gt;</code>을 반드시 지정해야합니다.</p><h2 id="로그-스트리밍" tabindex="-1">로그 스트리밍 <a class="header-anchor" href="#로그-스트리밍" aria-label="Permalink to &quot;로그 스트리밍&quot;">​</a></h2><p>로깅을 수행하는 전통적인 완벽한 방법은 FMU에서 SD 카드를 사용하는 것입니다. 그러나, MAVLink를 통하여 동일한 로깅 데이터를 보내는 대체 로그 스트리밍이 있습니다. 이 방법은 예를 들어 FMU에 SD 카드 슬롯이 없는 경우(예: Intel® Aero Ready to Fly Drone) 또는 단순히 SD 카드를 처리할 필요가 없는 경우에 사용할 수 있습니다. 두 방법 모두 독립적으로 동시에 사용할 수 있습니다.</p><p>요구 사항은 최소 ~50KB/s 네트웍 속도입니다(예: WiFi 링크). 그리고, 한 클라이언트만 동시에 로그 스트리밍을 요청할 수 있습니다. 연결이 안정적일 필요는 없으며, 프로토콜은 드롭을 처리하도록 설계되었습니다.</p><p>ulog 스트리밍을 지원하는 다양한 클라이언트가 있습니다.</p><ul><li>PX4-Autopilot/Tools의 <code>mavlink_ulog_streaming.py</code> 스크립트</li><li>QGroundControl<img src="`+s+`" alt="QGC 로그 스트리밍 "></li><li><a href="https://github.com/ecmnet/MAVGCL" target="_blank" rel="noreferrer">MAVGCL</a></li></ul><h3 id="진단" tabindex="-1">진단 <a class="header-anchor" href="#진단" aria-label="Permalink to &quot;진단&quot;">​</a></h3><ul><li><p>로그 실시간 전송을 시작하지 않았다면, <code>logger</code>를 실행 중인지(위 참고) 확인하고, 시작하는 동안 콘솔 출력을 살펴보십시오.</p></li><li><p>그래도 작동하지 않으면, MAVLink 2를 사용하고 있는지 확인하십시오. <code>MAV_PROTO_VER</code> 매개변수 값을 2로 강제 설정하십시오.</p></li><li><p>로그 스트리밍은 구성된 MAVLink 속도(<code>-r</code> 매개변수)의 최대 70%를 사용합니다. 더 큰 전송율이 요구되는 상황에서는, 메세지가 사라집니다. 현재 사용된 백분율은 <code>mavlink 상태</code>로 검사할 수 있습니다(이 예에서는 1.8%가 사용됨).</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">instance</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #0:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        GCS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> heartbeat:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  160955</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> us</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        mavlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chan:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:           </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GENERIC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LINK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RADIO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        flow</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> control:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   OFF</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        rates:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        tx:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 95.781</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kB/s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        txerr:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kB/s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        rx:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.021</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kB/s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        rate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mult:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        ULog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rate:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1.8%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 70.0%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        accepting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commands:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> YES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        MAVLink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        transport</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> protocol:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UDP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (14556)</span></span></code></pre></div><p>또한 <code>txerr</code> 값이 0에 머물러있는지 확인하십시오. 만약 이 값이 올라간다면, NuttX 전송 버퍼가 너무 작거나, 물리 링크 대역폭이 포화 상태이거나, 하드웨어가 데이터를 처리하기에 너무 느린 상황을 의미합니다.</p></li></ul></div>`,42),o=[n];function r(d,h,p,c,g,k){return i(),e("div",null,o)}const f=a(l,[["render",r]]);export{F as __pageData,f as default};
