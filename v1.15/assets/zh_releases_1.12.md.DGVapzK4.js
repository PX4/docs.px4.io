import{_ as e,c as t,o as r,ab as a}from"./chunks/framework.CUflZczI.js";const m=JSON.parse('{"title":"Release 1.12","description":"","frontmatter":{},"headers":[],"relativePath":"zh/releases/1.12.md","filePath":"zh/releases/1.12.md"}'),o={name:"zh/releases/1.12.md"},i=a(`<h1 id="release-1-12" tabindex="-1">Release 1.12 <a class="header-anchor" href="#release-1-12" aria-label="Permalink to &quot;Release 1.12&quot;">​</a></h1><ul><li><a href="#release-1-12">Release 1.12</a><ul><li><a href="#pre-releases">Pre Releases</a></li><li><a href="#changes">Changes</a><ul><li><a href="#common">Common</a></li><li><a href="#sensors">Sensors</a></li><li><a href="#hardware">Hardware</a></li><li><a href="#mavlink">MAVLink</a></li><li><a href="#commander">Commander</a></li><li><a href="#multicopter">Multicopter</a></li><li><a href="#vtol">VTOL</a></li><li><a href="#control">Control</a></li><li><a href="#gps">GPS</a></li><li><a href="#nuttx">NuttX</a></li><li><a href="#uavcan">UAVCAN</a></li></ul></li></ul></li></ul><h2 id="pre-releases" tabindex="-1">Pre Releases <a class="header-anchor" href="#pre-releases" aria-label="Permalink to &quot;Pre Releases&quot;">​</a></h2><ul><li><a href="https://github.com/PX4/PX4-Autopilot/releases/tag/v1.12.0-beta4" target="_blank" rel="noreferrer">Beta 4</a></li><li><a href="https://github.com/PX4/PX4-Autopilot/releases/tag/v1.12.0-beta3" target="_blank" rel="noreferrer">Beta 3</a></li><li><a href="https://github.com/PX4/PX4-Autopilot/releases/tag/v1.12.0-beta2" target="_blank" rel="noreferrer">Beta 2</a></li><li><a href="https://github.com/PX4/PX4-Autopilot/releases/tag/v1.12.0-beta1" target="_blank" rel="noreferrer">Beta 1</a></li></ul><h2 id="changes" tabindex="-1">Changes <a class="header-anchor" href="#changes" aria-label="Permalink to &quot;Changes&quot;">​</a></h2><h3 id="common" tabindex="-1">Common <a class="header-anchor" href="#common" aria-label="Permalink to &quot;Common&quot;">​</a></h3><ul><li><strong>RTL Trigger based on remaining flight range (<a href="https://github.com/PX4/PX4-Autopilot/pull/16399" target="_blank" rel="noreferrer">PR#16399</a>)</strong><ul><li>Calculates time to home, on RTL, taking into account vehicle speed, wind speed, and destination distance/direction</li></ul></li><li><strong>Pre-emptive geofence breach (<a href="https://github.com/PX4/PX4-Autopilot/pull/16400" target="_blank" rel="noreferrer">PR#16400</a>)</strong><ul><li>Triggers a breach if the <em>predicted</em> current trajectory will result in a breach, allowing the vehicle to be re-routed to a safe hold position.</li></ul></li><li><strong>Airframe Scripts</strong><ul><li>The syntax for setting defaults was changed and custom scripts require an update</li><li>See <a href="https://github.com/PX4/PX4-Autopilot/pull/16796/files#diff-dcf2f5536f47f260e5e0ff3b3fd22eaef6b6c510126463d70affa0eb7bd4d3ddL20" target="_blank" rel="noreferrer">PR#16796</a> for an example.</li></ul></li><li>Safety (switch) defaults to off (motors are disarmed, but servos / flaps can move)</li><li>Safety switch is latching: Once it is disabled, it will stay disabled</li><li>Land detector: Expand land detection to use the ground distance if a distance sensor is present</li><li>Added support for IRC Ghost including telemetry</li></ul><h3 id="sensors" tabindex="-1">Sensors <a class="header-anchor" href="#sensors" aria-label="Permalink to &quot;Sensors&quot;">​</a></h3><ul><li>Magnetometer calibration faster and more robust <ul><li>new soft iron calibration coefficients</li><li>automatically determine the rotation of external sensors</li></ul></li><li>Optimized rate control sensor pipeline (minimal inner loop end-to-end latency)</li></ul><h3 id="hardware" tabindex="-1">Hardware <a class="header-anchor" href="#hardware" aria-label="Permalink to &quot;Hardware&quot;">​</a></h3><p>The release includes new hardware support for the following boards, peripherals, and accessories:</p><ul><li>Pixhawk FMUv6U (Read more about this spec on the <a href="https://github.com/pixhawk/Pixhawk-Standards" target="_blank" rel="noreferrer">Pixhawk GitHub Repository</a>)</li><li>Pixhawk FMUv6X (Read more about this spec on the <a href="https://github.com/pixhawk/Pixhawk-Standards" target="_blank" rel="noreferrer">Pixhawk GitHub Repository</a>)</li><li>CUAV X7 / X7Pro (<a href="http://www.cuav.net/en/x7en/" target="_blank" rel="noreferrer">Read more about this product on the manufacturers site</a>]</li><li>CUAV Nora (<a href="http://www.cuav.net/en/nora/" target="_blank" rel="noreferrer">Read more about this product on the manufacturers site</a>)</li><li>CUAV CAN GPS (<a href="http://www.cuav.net/en/neo-3-2/" target="_blank" rel="noreferrer">Read more about this product on the manufacturers site</a>)</li><li>SP Racing H7 Extreme (<a href="http://seriouslypro.com/spracingh7extreme" target="_blank" rel="noreferrer">Read more about this product on the manufacturers site</a>)</li><li>Bitcraze Crazyflie v2.1 (<a href="https://www.bitcraze.io/products/crazyflie-2-1/" target="_blank" rel="noreferrer">Read more about this product on the manufacturers site</a>)</li><li>ARK CAN Flow (<a href="https://arkelectron.com/product/ark-flow/" target="_blank" rel="noreferrer">Read more about this product on the manufacturers site</a>)</li><li>mRo Ctrl Zero H7 (Experimental) (<a href="https://store.mrobotics.io/mRo-Control-Zero-F7-p/mro-ctrl-zero-f7.htm" target="_blank" rel="noreferrer">Read more about this product on the manufacturers site</a>)</li></ul><p>These are removed:</p><ul><li>Removal of discontinued Intel AeroFC</li></ul><h3 id="mavlink" tabindex="-1">MAVLink <a class="header-anchor" href="#mavlink" aria-label="Permalink to &quot;MAVLink&quot;">​</a></h3><ul><li><strong>MAVLink Ethernet configuration (<a href="https://github.com/PX4/PX4-Autopilot/pull/14460" target="_blank" rel="noreferrer">PR#14460</a>)</strong><ul><li>MAVLink Ethernet channel settings such as UDP port, remote port and broadcast mode now can be changed dynamically via parameters.</li></ul></li><li><strong>Support for querying <code>COMPONENT_INFORMATION</code> (<a href="https://github.com/PX4/PX4-Autopilot/pull/16039" target="_blank" rel="noreferrer">PR#16039</a>)</strong><ul><li>Parameter metadata is now automatically synchronized in combination with QGC daily.</li><li>This new message allows any MAVLink system to request rich hierarchical information from an autopilot, i.e., to understand which commands are supported in missions or to get parameter metadata. This message was introduced primarily to help GCS better understand autopilots (RFC: <a href="https://github.com/mavlink/mavlink/issues/1339" target="_blank" rel="noreferrer">mavlink#1339</a>)</li></ul></li></ul><h3 id="commander" tabindex="-1">Commander <a class="header-anchor" href="#commander" aria-label="Permalink to &quot;Commander&quot;">​</a></h3><ul><li><strong>Commander: use control mode flags and cleanup arm/disarm (<a href="https://github.com/PX4/PX4-Autopilot/pull/16266" target="_blank" rel="noreferrer">PR#16266</a>)</strong><ul><li>Consolidate scattered arming requirements in arm_disarm(), and, keeps the <code>vehicle_control_mode</code> last state in commander</li></ul></li><li><strong>Commander: Separate out manual control setpoint processing (<a href="https://github.com/PX4/PX4-Autopilot/pull/16878" target="_blank" rel="noreferrer">PR#16878</a>)</strong><ul><li>Adds a new class <code>ManualControl</code> for handling <code>manual_control_setpoint</code> and handles RC loss, RC override, and RC arming/disarming</li></ul></li></ul><h3 id="multicopter" tabindex="-1">Multicopter <a class="header-anchor" href="#multicopter" aria-label="Permalink to &quot;Multicopter&quot;">​</a></h3><ul><li><p><strong>More intuitive stick feel in Position mode</strong></p><ul><li>Horizontal stick input mapped to acceleration instead of velocity setpoints</li><li>Removes unexpected tilt changes upon reaching travel speed velocity</li><li>Intuitive shunting e.g. when landing</li><li>Opt out possible using <a href="./../advanced_config/parameter_reference.html#MPC_POS_MODE">MPC_POS_MODE</a></li><li>Development: <a href="https://github.com/PX4/PX4-Autopilot/pull/12072" target="_blank" rel="noreferrer">First attempt</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/16052" target="_blank" rel="noreferrer">Introduction</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/16320" target="_blank" rel="noreferrer">Improvements</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/16786" target="_blank" rel="noreferrer">Bugfix zero oscillation</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/16791" target="_blank" rel="noreferrer">Bugfix position unlock</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/17078" target="_blank" rel="noreferrer">Bugfix invalid setpoint</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/17437" target="_blank" rel="noreferrer">Bugfix high velocity pre takeoff</a></li></ul></li><li><p><strong>Hover thrust independent velocity control gains</strong></p><ul><li>Parameters <code>MPC_{XY/Z}_VEL_{P/I/D}</code> were replaced with <code>MPC_{XY/Z}_VEL_{P/I/D}_ACC</code>, see: <a href="./../advanced_config/parameter_reference.html#MPC_XY_VEL_P_ACC">MPC_XY_VEL_P_ACC</a>, <a href="./../advanced_config/parameter_reference.html#MPC_XY_VEL_I_ACC">MPC_XY_VEL_I_ACC</a>, <a href="./../advanced_config/parameter_reference.html#MPC_XY_VEL_D_ACC">MPC_XY_VEL_D_ACC</a>, <a href="./../advanced_config/parameter_reference.html#MPC_Z_VEL_P_ACC">MPC_Z_VEL_P_ACC</a>, <a href="./../advanced_config/parameter_reference.html#MPC_Z_VEL_I_ACC">MPC_Z_VEL_I_ACC</a>, <a href="./../advanced_config/parameter_reference.html#MPC_Z_VEL_D_ACC">MPC_Z_VEL_D_ACC</a></li></ul></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The gains have a new meaning</p><pre><code>- Scale from velocity error in $m/s$ to acceleration output in $m/s^2$
- Existing gains need to roughly be rescaled by a factor of: $gravitational \\_ constant / hover\\_thrust$
- Automatic parameter transition assumes 50% hover thrust: \`~10m/s^2 / 50% = 20 m/s^2\`. See [question](https://github.com/PX4/PX4-Autopilot/pull/14823#issuecomment-791357646)
</code></pre></div><ul><li><p>Development: <a href="https://github.com/PX4/PX4-Autopilot/pull/14749" target="_blank" rel="noreferrer">Logic introduction</a>, <a href="https://github.com/PX4/PX4-Autopilot/pull/14823" target="_blank" rel="noreferrer">Parameter replacement</a></p></li><li><p><strong>Improve Rounded Turns (<a href="https://github.com/PX4/PX4-Autopilot/pull/16376" target="_blank" rel="noreferrer">PR#16376</a>)</strong></p><ul><li>Creates a more rounded turn at waypoints in multirotor missions (using L1-style guidance logic in corners)</li><li>See <a href="./../flight_modes_fw/mission.html#rounded-turns-inter-waypoint-trajectory">Mission Mode &gt; Inter-waypoint Trajectory</a> and <a href="./../flying/missions.html#setting-acceptance-turning-radius">Mission &gt; Setting Acceptance/Turning Radius</a></li></ul></li><li><p><strong>Removal of Rattitude flight mode (<a href="https://github.com/PX4/PX4-Autopilot/pull/17019" target="_blank" rel="noreferrer">PR#17019</a>)</strong></p><ul><li>Let us know if you want it back.</li></ul></li></ul><h3 id="vtol" tabindex="-1">VTOL <a class="header-anchor" href="#vtol" aria-label="Permalink to &quot;VTOL&quot;">​</a></h3><ul><li><strong>RTL improvements (<a href="https://github.com/PX4/PX4-Autopilot/pull/16377" target="_blank" rel="noreferrer">PR#16377</a>)</strong><ul><li>Hardens the RTL safety failsafes taking into consideration the many edge cases when trying to land, depending on the current vehicle mode (Multicopter vs Fixed-wing)</li></ul></li><li>Fixed-wing / VTOL significant TECS improvements</li></ul><h3 id="control" tabindex="-1">Control <a class="header-anchor" href="#control" aria-label="Permalink to &quot;Control&quot;">​</a></h3><ul><li><strong>Dynamic Notch Filter updated with Gyro FFT (<a href="https://github.com/PX4/PX4-Autopilot/pull/16385" target="_blank" rel="noreferrer">PR#16385</a>)</strong><ul><li>Adds dynamic notch filtering to the gyro control data resulting in much smoother control</li></ul></li><li><strong>Multi-EKF enabled by default</strong> on stm32f7 and stm32h7 boards</li></ul><h3 id="gps" tabindex="-1">GPS <a class="header-anchor" href="#gps" aria-label="Permalink to &quot;GPS&quot;">​</a></h3><ul><li>The GPS protocol now defaults to u-blox for faster startup, and <a href="./../advanced_config/parameter_reference.html#GPS_1_PROTOCOL">GPS_x_PROTOCOL</a> needs to be changed if another GPS is used.</li></ul><h3 id="nuttx" tabindex="-1">NuttX <a class="header-anchor" href="#nuttx" aria-label="Permalink to &quot;NuttX&quot;">​</a></h3><p>Nuttx was upgraded from <a href="https://github.com/apache/incubator-nuttx/compare/nuttx-8.2..nuttx-10.0.1" target="_blank" rel="noreferrer">8.2+ to NuttX 10.10.0+</a> (@ <a href="https://github.com/apache/incubator-nuttx/commit/904a602c74dc08a100b5c2bd490807de19e73e10" target="_blank" rel="noreferrer">904a602c74dc08a100b5c2bd490807de19e73e10</a>)</p><ul><li><p><strong>SDCARD performance:</strong> Results in better performance on H7 Targets</p><ul><li>[<strong>BACKPORT</strong>] stm32:SDIO:Use 250 Ms Data path timeout, regardless of Card Clock frequency</li><li>[<strong>BACKPORT</strong>] stm32h7:SDMMC:Use 250 Ms Data path timeout, regardless of Card Clock frequency</li><li>[<strong>BACKPORT</strong>] stm32f7:SDMMC:Use 250 Ms Data path timeout, regardless of Card Clock frequency</li><li>[<strong>BACKPORT</strong>] Fixes race condition in event wait logic of SDMMC driver.</li><li>[<strong>BACKPORT</strong>] mmcsd:Stuck in 1-bit mode, Removed CONFIG_ARCH_HAVE_SDIO_DELAYED_INVLDT</li></ul></li><li><p><strong>Ethernet stability:</strong></p><ul><li>[<strong>BACKPORT</strong>] stm32x7:Ethernet Fixed hardfaults, from too big frames</li><li>[<strong>BACKPORT</strong>] stm32:Ethernet Fix too big frames</li></ul></li><li><p><strong>Boot up stability</strong> V5-V6X ensuring the LSE (RTC) oscillator is started</p><ul><li><p>[<strong>BACKPORT</strong>] stm32h7:lse fix Kconfig help text</p></li><li><p>[<strong>BACKPORT</strong>] stm32f7:lse Use Kconfig values directly</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7:Add DBGMCU</p></li><li><p>[<strong>BACKPORT</strong>] stm32f7:Add option to auto select LSE CAPABILITY</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7:Add option to auto select LSE CAPABILITY</p><div class="info custom-block"><p class="custom-block-title">INFO</p></div></li></ul></li></ul><p>This Knob will cycle through the correct* values from low to high. To avoid damaging the crystal. We want to use the lowest setting that gets the OSC running. See app note AN2867 *It will take into account the rev of the silicon and use the correct code points to achieve the drive strength. See Eratta ES0392 Rev 7 2.2.14 LSE oscillator driving capability selection bits are swapped. :::</p><ul><li><p><strong>Driver changes</strong></p><ul><li><p>[<strong>BACKPORT</strong>] drivers/serial: fix Rx interrupt enable for cdcacm</p></li><li><p>[<strong>BACKPORT</strong>] binnfmt:Fix return before close ELF fd</p></li><li><p>[<strong>BACKPORT</strong>] stm32f7:Allow for reuse of the OTG_ID GPIO</p></li><li><p>[<strong>BACKPORT</strong>] stm32f7:SDMMC fix reset of do_gpio</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7: serial: use dma tx semaphore as resource holder</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7:SDMMC fix reset of do_gpio</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7:Serial Add RX and TX DMA</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7:Allow for reuse of the OTG_ID GPIO</p></li><li><p>[<strong>BACKPORT</strong>] Kinetis:kinetis:Replace DMA</p></li><li><p>[<strong>BACKPORT</strong>] kinetis:Serial use eDMA</p></li><li><p>[<strong>BACKPORT</strong>] kinetis:SPI use eDMA</p></li><li><p>[<strong>BACKPORT</strong>] Kinetis:Serail No DMA Poll needed</p></li><li><p>[<strong>BACKPORT</strong>] libc/stdio: Preallocate the stdin, stdout and stderr For targets without consoles.</p></li></ul></li><li><p><strong>FlexCan fixes</strong></p><ul><li>[<strong>BACKPORT</strong>][flexcan] Correct reset state for CTRL1 register</li><li>[<strong>BACKPORT</strong>][flexcan] Fix TX drop #2792 and correctly set CAN timings to non-zeroed registers</li><li>[<strong>BACKPORT</strong>] FlexCAN Fix TX abort process</li></ul></li><li><p><strong>Support for CAN bootloader</strong></p><ul><li>[<strong>BACKPORT</strong>] s32k1xx:Support ramfunc</li></ul></li><li><p><strong>STM32F412 cleanup</strong></p></li><li><p>[<strong>BACKPORT</strong>] stm32f412:Corrected Pin count</p></li><li><p>[<strong>BACKPORT</strong>] stm32f412:Replaced Kludged pinmap with one for SoC</p></li><li><p>[<strong>BACKPORT</strong>] stm32412: Fixes pinmap CAN1</p></li><li><p><strong>Security patches</strong></p></li><li><p>[<strong>BACKPORT</strong>] tcp: Remove incomplete support for TCP reassembly</p></li><li><p>[<strong>BACKPORT</strong>] net/tcp/tcp_input.c: Correct bad check of urgent data length</p></li><li><p>[<strong>BACKPORT</strong>] libc: Add additional checks to malloc realloc and memalign</p></li><li><p><strong>IMXRT fixes</strong></p></li><li><p>Add Single wire and proper parity settings to IMXRT to support sbus etal.</p></li><li><p>[<strong>BACKPORT</strong>] imxrt:serial support single-wire mode</p></li><li><p>[<strong>BACKPORT</strong>] imxrt:imxrt_lowputc Fixed parity settings.</p></li><li><p><strong>STM32H7 improvements</strong></p></li><li><p>[<strong>BACKPORT</strong>] stm32h7:SPI Fix 16 bit SPI mode</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7:DMA BDMA does not auto disabled on completion</p></li><li><p>[<strong>BACKPORT</strong>] Fix HEAP clobbering static data in SRAM4</p></li><li><p>[<strong>BACKPORT</strong>] stm32h7:SDMMC fix reset of do_gpio</p></li></ul><h3 id="uavcan" tabindex="-1">UAVCAN <a class="header-anchor" href="#uavcan" aria-label="Permalink to &quot;UAVCAN&quot;">​</a></h3><ul><li>UAVCANv0: Although the fundamental features like Firmware upgrades and parameter sync of CAN nodes have been implemented for over 5 years, we refreshed support now that finally, devices are on the market. Typical CAN GPS, airspeed and power modules are supported</li><li>UAVCANv0 Node: PX4 supported building nodes for many years - now we support building specific targets like the CUAV GPS units</li><li>UAVCANv1: Initial alpha of a complete end-to-end implementation</li></ul>`,35),l=[i];function n(s,u,c,p,h,d){return r(),t("div",null,l)}const f=e(o,[["render",n]]);export{m as __pageData,f as default};
