import{_ as a,a as e}from"./chunks/gimbal-simulation.BEN-KceN.js";import{_ as i,c as t,o,ab as l}from"./chunks/framework.CUflZczI.js";const u=JSON.parse('{"title":"云台配置","description":"","frontmatter":{},"headers":[],"relativePath":"zh/advanced/gimbal_control.md","filePath":"zh/advanced/gimbal_control.md"}'),s={name:"zh/advanced/gimbal_control.md"},r=l('<h1 id="云台配置" tabindex="-1">云台配置 <a class="header-anchor" href="#云台配置" aria-label="Permalink to &quot;云台配置&quot;">​</a></h1><p>本页面介绍了如何配置及控制一个安装了相机（或其他任务载荷）的云台。</p><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>PX4 包含了一个通用的挂载设备/云台的控制驱动，它含有多种输入输出方式。</p><ul><li>输入方式定义控制云台挂在的协议，该协议由 PX4 管理。 该输入方式可能是一个遥控器，一个可以发送 MAVLink 的地面站，或者两者 — 两种可以自动切换。</li><li>输出方式定义了 PX4 如何与连接的云台通信。 推荐的协议是 MAVLink v2, 但您也可以直接连接到飞控的 PWM 输出端口。</li></ul><p>PX4 接收输入信号，并且将其路由/翻译后发送到输出。 任何输入方式都可以被选择来驱动任何输出。</p><p>输入和输出都使用参数进行配置。 输入通过参数<a href="./../advanced_config/parameter_reference.html#MNT_MODE_IN">MNT_MODE_IN</a>进行设置。 默认情况下设置为 <code>Disabled (-1)</code> 既驱动不运行。 在选择输入模式后，请重新启动飞行器以启动挂载驱动程序。</p><p><code>MNT_MODE_IN</code> 应该被设置为下列选项中的其中一个： <code>RC (1)</code> ，<code>MAVlink gimbal protocol v2 (4)</code> 或 <code>Auto (0)</code> (其他选项已废弃)。 如果选择 <code>Auto(0)</code>，则云台将基于最新地输入自动选择 RC 或 MAVLink 作为输入。 请注意，从 MAVLink 到 RC 的自动切换需要一个大幅度地杆量操作！</p><p>输出通过参数<a href="./../advanced_config/parameter_reference.html#MNT_MODE_OUT">MNT_MODE_OUT</a>进行设置。 默认情况下，输出被设置为 PXM 端口(<code>AUX (0)</code>)。 如果云台支持 <a href="https://mavlink.io/en/services/gimbal_v2.html" target="_blank" rel="noreferrer">MAVLink Gimbal Protocol v2</a> ，应该选择 <code>MAVLink gimbal protocl v2 (2)</code>。</p><p>云台驱动的完整参数列表可在 <a href="./../advanced_config/parameter_reference.html#mount">参数 &gt; Mount</a> 中找到。 下面介绍了一些通用的云台相关设置。</p><h2 id="mavlink-云台-mnt-mode-out-mavlink" tabindex="-1">MAVLink 云台 (MNT_MODE_OUT=MAVLINK) <a class="header-anchor" href="#mavlink-云台-mnt-mode-out-mavlink" aria-label="Permalink to &quot;MAVLink 云台 (MNT_MODE_OUT=MAVLINK)&quot;">​</a></h2><p>系统上的每个物理云台装置必须有自己的高级云台管理器， 地面站通过使用MAVLink云台协议发现它。 地面站将高级 <a href="https://mavlink.io/en/services/gimbal_v2.html#gimbal-manager-messages" target="_blank" rel="noreferrer">MAVLink Gimbal Manager</a> 命令发送给它想要控制的云台管理器。 而管理器则会发送适当的较低级别的“云台设备”命令来控制云台。</p><p>PX4可以配置为云台管理器以控制耽搁云台设备（可以是物理连接的设备，或者实现云台设备接口<a href="https://mavlink.io/en/services/gimbal_v2.html#gimbal-device-messages" target="_blank" rel="noreferrer">gimbal device interface</a>的MAVLink云台</p><p>要启用 MAVLink云台 ，首先设置参数 <a href="./../advanced_config/parameter_reference.html#MNT_MODE_IN">MNT_MODE_IN</a> 为 <code>MAVlink gimbal protocol v2</code> 和 <a href="./../advanced_config/parameter_reference.html#MNT_MODE_OUT">MNT_MODE_OUT</a> 为 <code>MAVlink gimbal protocol v2</code></p><p>云台使用<a href="./../peripherals/mavlink_peripherals.html">MAVLink Peripherals (GCS/OSD/Companion)</a>中的指导可以连接到_任意未用串口_（参见<a href="./../peripherals/serial_configuration.html#serial-port-configuration">串口配置</a>） 例如， 如果飞行控制器上的 <code>TELEM2</code> 端口未被使用，您可以将其连接到云台并设置下面的 PX4 参数：</p><ul><li><a href="./../advanced_config/parameter_reference.html#MAV_1_CONFIG">MAV_1_CONFIG</a>为<strong>TELEM2</strong>（如果<code>MAV_1_CONFIG</code>已经用于连接机载计算机，使用<code>MAV_2_CONFIG</code>）。</li><li><a href="./../advanced_config/parameter_reference.html#MAV_1_MODE">MAV_1_MODE</a>为<strong>NORMAL</strong></li><li><a href="./../advanced_config/parameter_reference.html#SER_TEL2_BAUD">SER_TEL2)BAUD</a>设置为厂家建议的波特率。</li></ul><h3 id="多云台支持" tabindex="-1">多云台支持 <a class="header-anchor" href="#多云台支持" aria-label="Permalink to &quot;多云台支持&quot;">​</a></h3><p>PX4 可以自动为已连接的 PWM 云台或第一个在任何接口上检测到相同的系统 id 的 MAVLink 云台设备创建一个云台管理器。 它不会自动为它检测到的其他MAVLink云台设备创建云台管理器。</p><p>您可以支持额外的云台 ，但他们必须：</p><ul><li>实现 云台 <em>管理器</em> 协议</li><li>在 MAVLink 网络上对地面站和 PX4 可见。 这可能需要在PX4、GCS和云台之间配置流量转接。</li><li>每个云台必须有一个独特的ID。 对于已连接的 PWM 云台，这将是飞控系统的组件 ID</li></ul><h2 id="飞控-pwm-输出上的云台-mnt-mode-out-aux" tabindex="-1">飞控 PWM 输出上的云台 (MNT_MODE_OUT=AUX) <a class="header-anchor" href="#飞控-pwm-输出上的云台-mnt-mode-out-aux" aria-label="Permalink to &quot;飞控 PWM 输出上的云台 (MNT_MODE_OUT=AUX)&quot;">​</a></h2><p>也可以通过连接到最多三个飞行控制器PWM端口来控制云台，并将输出模式设置为 <code>MNT_MODE_OUT=AUX</code>。</p><p>用于控制云台的输出引脚设置在 <a href="./../config/actuators.html#actuator-outputs">Acuator 配置 &gt; 输出</a> 中通过选择任何三个未使用的驱动输出并赋予它们以下输出功能：</p><ul><li><code>Gimbal Roll</code>：输出控制云台滚动。</li><li><code>Gimbal Pitch</code>：输出控制云台俯仰。</li><li><code>Gimbal Yaw</code>: Output controls Gimbal yaw.</li></ul><p>例如，您可能有以下设置可将云台滚动、俯仰和偏航分配给 AUX1-3 输出。</p><p><img src="'+a+'" alt="云台执行器配置"></p><p>PWM 值可以用来解锁， 最大和最小值的 PWM 值同样可以用于舵机。 使用 <a href="./../config/actuators.html#actuator-testing">Actuator Test sliders</a> 来确认每个滑块移动适当的坐标轴， 并改变数值，以便使云台处于在滑块中解锁、低和高位置的适当位置。 这些数值也可以在云台文档中提供。</p><h2 id="sitl-software-in-the-loop" tabindex="-1">SITL (Software In The Loop) <a class="header-anchor" href="#sitl-software-in-the-loop" aria-label="Permalink to &quot;SITL (Software In The Loop)&quot;">​</a></h2><p><a href="./../sim_gazebo_classic/">Gazebo Classic</a> 模拟器中 <a href="./../sim_gazebo_classic/vehicles.html#typhoon-h480-hexrotor">Typhoon H480 模型</a> 带有一个预配置的模拟云台。</p><p>要运行它，请使用：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_typhoon_h480</span></span></code></pre></div><p>为了能够在其他模型或者仿真器件下测试 <a href="./../modules/modules_driver.html#gimbal">gimbal driver</a>，请确保驱动运行 (使用 <code>gimbal start</code>)。然后再配置它的参数。</p><h2 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h2><p>该驱动程序提供了一个简单的测试命令。 接下来描述了在 SITL 中的测试方式，但是这些指令也可以在真实的设备中使用。</p><p>使用下面这条指令开始仿真（不需要修改任何参数）：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_typhoon_h480</span></span></code></pre></div><p>确保无人机是上锁状态，例如使用<code>commander takeoff</code>， 然后用下面的命令来控制云台 (例如) ：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gimbal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yaw</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span></code></pre></div><p>注意模拟的云台自身稳定，因此如果发送 MAVLink 命令，设置<code>stabilize</code>标志为<code>false</code>。</p><p><img src="'+e+'" alt="Gazebo 云台仿真"></p>',40),n=[r];function c(h,p,d,_,m,k){return o(),t("div",null,n)}const f=i(s,[["render",c]]);export{u as __pageData,f as default};
