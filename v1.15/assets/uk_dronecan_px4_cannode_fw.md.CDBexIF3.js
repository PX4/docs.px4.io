import{_ as a,c as e,o as s,ab as t}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"PX4 Прошивка DroneCAN","description":"","frontmatter":{},"headers":[],"relativePath":"uk/dronecan/px4_cannode_fw.md","filePath":"uk/dronecan/px4_cannode_fw.md"}'),r={name:"uk/dronecan/px4_cannode_fw.md"},i=t(`<h1 id="px4-прошивка-dronecan" tabindex="-1">PX4 Прошивка DroneCAN <a class="header-anchor" href="#px4-прошивка-dronecan" aria-label="Permalink to &quot;PX4 Прошивка DroneCAN&quot;">​</a></h1><p>PX4 може працювати як прошивка на багатьох периферійних пристроях DroneCAN. Є кілька переваг цього:</p><ul><li>PX4 має вбудовані драйвери для <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers" target="_blank" rel="noreferrer">широкого спектру</a> датчиків та периферійних компонентів.</li><li>PX4 має міцну реалізацію драйвера DroneCAN, яка пройшла кілька років полевих випробувань.</li><li>PX4 постійно розвивається. Ви регулярно отримуєте доступ до останніх покращень.</li><li>Код оцінки та керування PX4 дозволяє легко створювати &quot;розумні&quot; канноди, такі як інтегровані модулі AHRS.</li><li>Прошивка повністю відкритого коду (PX4 має ліцензію BSD).</li></ul><h2 id="збірка-прошивки" tabindex="-1">Збірка прошивки <a class="header-anchor" href="#збірка-прошивки" aria-label="Permalink to &quot;Збірка прошивки&quot;">​</a></h2><p>Дотримуйтесь <a href="./../dev_setup/building_px4.html">документів зі збірки PX4</a> точно так, як ви збудували б вбудоване програмне забезпечення для контролера польоту. Конфігурації збірки пристрою зберігаються <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/boards" target="_blank" rel="noreferrer">тут</a>. Після встановлення <a href="./../dev_setup/dev_env.html">інструменту PX4</a>, склонуйте джерела та зіберіть. Наприклад, для побудови для цілі <a href="./ark_flow.html">Ark Flow</a>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ark_can-flow_default</span></span></code></pre></div><p>Це створить вихідний файл у <strong>build/ark_can-flow_default</strong> з назвою <strong>XX-X.X.XXXXXXXX.uavcan.bin</strong>. Дотримуйтесь інструкцій на <a href="./#firmware-update">Оновлення прошивки DroneCAN</a>, щоб оновити прошивку.</p><h2 id="інформація-про-розробника" tabindex="-1">Інформація про розробника <a class="header-anchor" href="#інформація-про-розробника" aria-label="Permalink to &quot;Інформація про розробника&quot;">​</a></h2><p>Цей розділ містить інформацію, яка є актуальною для розробників, які хочуть додати підтримку нового апаратного забезпечення DroneCAN до автопілота PX4.</p><h3 id="встановлення-завантажувача-dronecan" tabindex="-1">Встановлення завантажувача DroneCAN <a class="header-anchor" href="#встановлення-завантажувача-dronecan" aria-label="Permalink to &quot;Встановлення завантажувача DroneCAN&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Зазвичай пристрої DroneCAN поставляються з попередньо встановленим завантажувачем. Не слід дотримуватися інструкцій у цьому розділі, якщо ви не розробляєте пристрої DroneCAN, або (випадково) пошкодили / видалили свій завантажувач.</p></div><p>Проект PX4 включає стандартний завантажувач DroneCAN для пристроїв STM32.</p><p>Завантажувач займає перших 8-16 КБ флеш-пам&#39;яті і є першим кодом, що виконується при увімкненні живлення. Зазвичай завантажувач виконує ініціалізацію пристрою низького рівня, автоматично визначає швидкість передачі даних на шині CAN, виступає як <a href="./#node-id-allocation">клієнт динамічного ідентифікатора вузла DroneCAN</a> для отримання унікального ідентифікатора вузла та очікує підтвердження від контролера польоту перед продовженням завантаження програми.</p><p>Цей процес забезпечує можливість відновлення пристрою DroneCAN від недійсного або пошкодженого програмного забезпечення додатка без втручання користувача, а також дозволяє автоматичне оновлення програмного забезпечення.</p><p>Побудуйте прошивку завантажувача, вказавши той самий периферійний цільовий об&#39;єкт з конфігурацією збірки <code>canbootloader</code> замість конфігурації <code>default</code>.</p><p>Наприклад, для побудови для цілі <a href="./ark_flow.html">Ark Flow</a>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PX4/PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ark_can-flow_canbootloader</span></span></code></pre></div><p>Бінарний файл потім може бути спалахнутий на мікроконтролері за допомогою вашого улюбленого відлагоджувача SWD/JTAG, такого як <a href="https://black-magic.org/index.html" target="_blank" rel="noreferrer">Чорна Магія Sonda</a>, <a href="https://www.st.com/en/development-tools/st-link-v2.html" target="_blank" rel="noreferrer">ST-Link</a> або <a href="https://www.segger.com/products/debug-probes/j-link/" target="_blank" rel="noreferrer">Segger JLink</a>.</p><h3 id="налаштування-прошивки" tabindex="-1">Налаштування прошивки <a class="header-anchor" href="#налаштування-прошивки" aria-label="Permalink to &quot;Налаштування прошивки&quot;">​</a></h3><p>Переважно, вбудоване програмне забезпечення периферійних пристроїв працює так само, як і версії програмного забезпечення контролера польоту. Проте, більшість модулів вимкнено - лише драйвери сенсорів, драйвер DroneCAN та внутрішня інфраструктура (uORB, тощо) увімкнені.</p><p>Комунікація DroneCAN обробляється модулем <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/uavcannode" target="_blank" rel="noreferrer">uavcannode</a>. Цей драйвер відповідає за комунікацію з боку виробника - він отримує дані сенсорів/виконавчих пристроїв з uORB, серіалізує їх за допомогою бібліотек DroneCAN та публікує їх по CAN. У майбутньому це, ймовірно, буде об&#39;єднано з модулем <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/uavcan" target="_blank" rel="noreferrer">uavcan</a>, який відповідає за драйвери з боку керуючого пристрою (споживача), які отримують/десеріалізують дані з шини CAN та публікують їх через uORB.</p><p>Система збірки також створює прошивкові бінарні файли, призначені для прошивки через загрузчик DroneCAN через підтримку мигання [PX4&#39;s DroneCAN flashing support] або DroneCAN GUI, крім стандартних сирових бінарних, ELF та <code>.px4</code> прошивкових файлів.</p>`,22),n=[i];function o(l,p,h,c,d,k){return s(),e("div",null,n)}const _=a(r,[["render",o]]);export{g as __pageData,_ as default};
