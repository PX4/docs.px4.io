import{_ as a,c as e,o as i,ab as t}from"./chunks/framework.CUflZczI.js";const f=JSON.parse('{"title":"장애물 회피","description":"","frontmatter":{},"headers":[],"relativePath":"ko/computer_vision/obstacle_avoidance.md","filePath":"ko/computer_vision/obstacle_avoidance.md"}'),o={name:"ko/computer_vision/obstacle_avoidance.md"},r=t('<h1 id="장애물-회피" tabindex="-1">장애물 회피 <a class="header-anchor" href="#장애물-회피" aria-label="Permalink to &quot;장애물 회피&quot;">​</a></h1><p><em>장애물 회피</em> 기능을 사용하여 계획된 경로를 비행시 장애물 주위를 탐색 할 수 있습니다.</p><p>이 기능을 사용하려면 컴퓨터 비전 소프트웨어를 실행하는 보조 컴퓨터가 필요합니다. 이 소프트웨어는 주어진 원하는 궤적에 대한 경로, 매핑 및 장애물 주변 탐색을 제공하여 최적의 경로를 제공합니다.</p><p>장애물 회피는 자동 모드를위한 것이며 현재 <a href="#mission_mode">임무</a> 및 <a href="#offboard_mode">오프 보드 모드</a>의 멀티콥터에 지원됩니다.</p><p>두 가지 모드에서 기능을 설정하고 활성화하는 방법에 대하여 설명합니다.</p><h2 id="제약-사항과-성능" tabindex="-1">제약 사항과 성능 <a class="header-anchor" href="#제약-사항과-성능" aria-label="Permalink to &quot;제약 사항과 성능&quot;">​</a></h2><ul><li><p>장애물 회피를 위한 최대 속도는 현재 약 3m/s입니다 (회피 경로 계산 비용으로 인해).</p><div class="info custom-block"><p class="custom-block-title">Obstacle avoidance can use the <em>local planner</em> (emits messages at ~30Hz and can move at around 3 m/s) or <em>global planner</em> (emits messages at ~10Hz and mission speed with obstacle avoidance is around 1-1.5 m/s).</p></div></li></ul><p>:::</p><p><a id="offboard_mode"></a></p><h2 id="오프보드-모드-회피" tabindex="-1">오프보드 모드 회피 <a class="header-anchor" href="#오프보드-모드-회피" aria-label="Permalink to &quot;오프보드 모드 회피&quot;">​</a></h2><p>PX4는 <a href="./../flight_modes/offboard.html">오프 보드 모드</a>에서 장애물 회피를 지원합니다.</p><p>원하는 경로는 보조 컴퓨터에서 실행되는 <a href="./../ros/README.html">ROS</a> 노드에서 가져옵니다. 이것은 장애물 회피 모듈 (다른 ROS 노드)로 전달됩니다. 회피 소프트웨어는 <code>SET_POSITION_TARGET_LOCAL_NED</code> 메시지의 스트림으로 비행 스택에 계획된 경로를 전송합니다.</p><p>PX4는 <a href="./../flight_modes/offboard.html">오프 보드 모드</a>에서 장애물 회피를 지원합니다.</p><p>Companion-side hardware setup and hardware/software configuration is provided in the <a href="https://github.com/PX4/PX4-Avoidance" target="_blank" rel="noreferrer">PX4/PX4-Avoidance</a> Github repo.</p><p><a id="mission_mode"></a></p><h2 id="임무-모드-회피" tabindex="-1">임무 모드 회피 <a class="header-anchor" href="#임무-모드-회피" aria-label="Permalink to &quot;임무 모드 회피&quot;">​</a></h2><p>PX4는 보조 컴퓨터의 회피 소프트웨어를 사용하여 <a href="./../flight_modes/mission.html">임무 모드</a>에서 장애물 회피를 지원합니다.</p><h3 id="임무-수행" tabindex="-1">임무 수행 <a class="header-anchor" href="#임무-수행" aria-label="Permalink to &quot;임무 수행&quot;">​</a></h3><p>PX4는 보조 컴퓨터의 회피 소프트웨어를 사용하여 <a href="./../flight_modes/mission.html">임무 모드</a>에서 장애물 회피를 지원합니다.</p><p>회피가 활성화된 경우 차이점은 다음과 같습니다.</p><ul><li>웨이포인트는 기체의 방향과 관계없이 허용 반경내에 있을 때 &quot;도달&quot;한 것으로 간주됩니다. <ul><li>이것은 기체의 특정 방향 (즉, 이전 웨이포인트에서 &quot;가까운&quot;직선)으로 웨이포인트에 도달해야하는 일반 임무와의 차이점입니다. 장애물 회피 알고리즘이 기체 방향을 완전히 제어하고, 기체는 항상 현재 시야에서 움직이기 때문에 장애물 회피가 활성화된 경우이 제약 조건을 충족할 수 없습니다.</li></ul></li><li>PX4 starts emitting a new current/next waypoint once the previous waypoint is reached (i.e. as soon as the vehicle enters its acceptance radius).</li><li>If a waypoint is <em>inside</em> an obstacle it may be unreachable (and the mission will be stuck). <ul><li>이전-현재 웨이포인트 라인의 기체 투영이 현재 웨이포인트를 통과하면 수락 반경이 확대되어 현재 웨이포인트에 도달한 것으로 설정됩니다.</li><li>If the vehicle is within the x-y acceptance radius, the altitude acceptance is modified such that the mission progresses (even if it is not in the altitude acceptance radius).</li></ul></li><li>원래의 미션 속도 (<em>QGroundControl</em>/PX4에 설정 됨)는 무시됩니다. 속도는 회피 소프트웨어에 의해 결정됩니다. <ul><li><em>로컬 플래너</em> 임무 속도는 약 3m/s입니다.</li><li><em>글로벌 플래너</em> 임무 속도는 약 1~1.5m/s입니다.</li></ul></li></ul><p>If PX4 stops receiving setpoint updates for more than half a second it will switch into <a href="./../flight_modes_mc/hold.html">Hold mode</a>.</p><h3 id="px4-설정" tabindex="-1">PX4 설정 <a class="header-anchor" href="#px4-설정" aria-label="Permalink to &quot;PX4 설정&quot;">​</a></h3><p>장애물 회피는 <a href="./../advanced_config/parameter_reference.html#COM_OBS_AVOID">COM_OBS_AVOID</a>를 1로 <a href="./../advanced_config/parameters.html">설정</a>하여 PX4 내에서 활성화됩니다.</p><p>:::note <code>COM_OBS_AVOID</code>는 <a href="./../computer_vision/safe_landing.html">안전 착륙</a> 및 PX4 <a href="./../computer_vision/path_planning_interface.html">경로 계획 오프 보드 인터페이스</a> (추적 인터페이스)를 사용하는 기타 기능을 활성화하여 외부 경로 계획 서비스를 PX4와 통합합니다. :::</p><h2 id="보조-컴퓨터-설정" tabindex="-1">보조 컴퓨터 설정 <a class="header-anchor" href="#보조-컴퓨터-설정" aria-label="Permalink to &quot;보조 컴퓨터 설정&quot;">​</a></h2><p>Companion-side hardware setup and hardware/software configuration is provided in the <a href="https://github.com/PX4/PX4-Avoidance" target="_blank" rel="noreferrer">PX4/PX4-Avoidance</a> Github repo.</p><p>보조 컴퓨터 하드웨어와 소프트웨어 구성과 설정은 <a href="https://github.com/PX4/avoidance#obstacle-detection-and-avoidance" target="_blank" rel="noreferrer">PX4 회피</a> Github 저장소에서 제공됩니다.</p><p><a id="interface"></a></p><h2 id="장애물-회피-인터페이스" tabindex="-1">장애물 회피 인터페이스 <a class="header-anchor" href="#장애물-회피-인터페이스" aria-label="Permalink to &quot;장애물 회피 인터페이스&quot;">​</a></h2><p>PX4는 <a href="./../computer_vision/obstacle_avoidance.html#mission_mode">임무중 장애물 회피</a>, <a href="./../computer_vision/safe_landing.html">안전 착륙</a> 및 향후 서비스를 포함하여 보조 컴퓨터의 경로 계획 서비스를 통합하기 위하여 <a href="./../computer_vision/path_planning_interface.html">경로 계획 오프 보드 인터페이스</a>를 사용합니다.</p><p>PX4는 <a href="./../computer_vision/obstacle_avoidance.html#mission_mode">임무중 장애물 회피</a>, <a href="./../computer_vision/safe_landing.html">안전 착륙</a> 및 향후 서비스를 포함하여 보조 컴퓨터의 경로 계획 서비스를 통합하기 위하여 <a href="./../computer_vision/path_planning_interface.html">경로 계획 오프 보드 인터페이스</a>를 사용합니다.</p><h2 id="지원-하드웨어" tabindex="-1">지원 하드웨어 <a class="header-anchor" href="#지원-하드웨어" aria-label="Permalink to &quot;지원 하드웨어&quot;">​</a></h2><p>Tested companion computers and cameras are listed in <a href="https://github.com/PX4/PX4-Avoidance#run-on-hardware" target="_blank" rel="noreferrer">PX4/PX4-Avoidance</a>.</p>',34),n=[r];function s(l,h,c,d,p,m){return i(),e("div",null,n)}const u=a(o,[["render",s]]);export{f as __pageData,u as default};
