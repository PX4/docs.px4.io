import{_ as a,c as e,o as t,ab as l,m as s,a as i}from"./chunks/framework.CUflZczI.js";const f=JSON.parse('{"title":"飞行任务","description":"","frontmatter":{},"headers":[],"relativePath":"zh/concept/flight_tasks.md","filePath":"zh/concept/flight_tasks.md"}'),n={name:"zh/concept/flight_tasks.md"},h=l(`<h1 id="飞行任务" tabindex="-1">飞行任务 <a class="header-anchor" href="#飞行任务" aria-label="Permalink to &quot;飞行任务&quot;">​</a></h1><p><em>Flight Tasks</em> are used within <a href="./../concept/flight_modes.html">Flight Modes</a> to provide specific movement behaviours: e.g. follow me, or flight smoothing.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>A flight task is a class in the flight task framework derived from the base class <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/flight_mode_manager/tasks/FlightTask/FlightTask.hpp" target="_blank" rel="noreferrer">FlightTask</a>. Its goal is to generate setpoints for the controller from arbitrary input data, where each task implements the desired vehicle behavior for a specific mode. Programmers typically override the <code>activate()</code> and <code>update()</code> virtual methods by calling the base task&#39;s minimal implementation and extending with the implementation of the desired behavior. The <code>activate()</code> method is called when switching to the task and allows to initialize its state and take over gently from the passed over setpoints the previous task was just applying.</p><p><code>update()</code> is called on every loop iteration during the execution and contains the core behavior implementation producing setpoints.</p><p>By convention tasks are contained in a subfolder of <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/flight_mode_manager/tasks" target="_blank" rel="noreferrer">PX4-Autopilot/src/modules/flight_mode_manager/tasks</a> named after the task, and the source files are named with the prefix &quot;FlightTask&quot;.</p><div class="info custom-block"><p class="custom-block-title">Video overviews from PX4 developer summits are <a href="#video">provided below</a>.</p></div><h2 id="creating-a-flight-task" tabindex="-1">Creating a Flight Task <a class="header-anchor" href="#creating-a-flight-task" aria-label="Permalink to &quot;Creating a Flight Task&quot;">​</a></h2><p>The instructions below might be used to create a task named <em>MyTask</em>:</p><ol><li><p>Create a directory for the new flight task in <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/flight_mode_manager/tasks" target="_blank" rel="noreferrer">PX4-Autopilot/src/modules/flight_mode_manager/tasks</a>. By convention the directory is named after the task, so we will call it <strong>/MyTask</strong>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PX4-Autopilot/src/modules/flight_mode_manager/tasks/MyTask</span></span></code></pre></div></li><li><p>Create empty source code and <em>cmake</em> files for the new flight task in the <em>MyTask</em> directory using the prefix &quot;FlightTask&quot;:</p><ul><li>CMakeLists.txt</li><li>FlightTaskMyTask.hpp</li><li>FlightTaskMyTask.cpp</li></ul></li><li><p>Update <strong>CMakeLists.txt</strong> for the new task</p><ul><li><p>Copy the contents of the <strong>CMakeLists.txt</strong> for another task - e.g. <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/flight_mode_manager/tasks/Orbit/CMakeLists.txt" target="_blank" rel="noreferrer">Orbit/CMakeLists.txt</a></p></li><li><p>Update the copyright to the current year</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">############################################################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   Copyright (c) 2021 PX4 Development Team. All rights reserved.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span></code></pre></div></li><li><p>Modify the code to reflect the new task - e.g. replace <code>FlightTaskOrbit</code> with <code>FlightTaskMyTask</code>. The code will look something like this:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">px4_add_library(FlightTaskMyTask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    FlightTaskMyTask.cpp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">target_link_libraries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FlightTaskMyTask </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PUBLIC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FlightTask)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">target_include_directories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FlightTaskMyTask </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PUBLIC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \${CMAKE_CURRENT_SOURCE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul></li><li><p>Update the header file (in this case <strong>FlightTaskMyTask.hpp</strong>): Most tasks reimplement the virtual methods <code>activate()</code> and <code>update()</code>, and in this example we also have a private variable.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#pragma</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> once</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;FlightTask.hpp&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlightTaskMyTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlightTask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  FlightTaskMyTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  virtual</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ~FlightTaskMyTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> activate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> trajectory_setpoint_s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">last_setpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _origin_z{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div></li><li><p>Update the cpp file as appropriate. This example provides as simple implementation of <strong>FlightTaskMyTask.cpp</strong> that simply indicates that the task methods are called.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;FlightTaskMyTask.hpp&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlightTaskMyTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">activate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> trajectory_setpoint_s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">last_setpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlightTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">activate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(last_setpoint);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  PX4_INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FlightTaskMyTask activate was called! ret: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ret);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // report if activation was successful</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ret;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlightTaskMyTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  PX4_INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FlightTaskMyTask update was called!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // report update</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>Add the new task to the list of tasks to be built in <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/flight_mode_manager/CMakeLists.txt#L40" target="_blank" rel="noreferrer">PX4-Autopilot/src/modules/flight_mode_manager/CMakeLists.txt</a>:</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> px4_constrained_flash_build)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(APPEND flight_tasks_all</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  AutoFollowTarget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Orbit</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MyTask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div></li><li><p>Update a flight mode to ensure that the task is called. Usually a parameter is used to select when a particular flight task should be used.</p><p>For example, to enable our new <code>MyTask</code> in multicopter Position mode:</p><ul><li><p>Update <code>MPC_POS_MODE</code> (<a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/mc_pos_control/multicopter_position_mode_params.c" target="_blank" rel="noreferrer">multicopter_position_mode_params.c</a>) to add an option for selecting &quot;MyTask&quot; if the parameter has a previously unused value like 5:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @value </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Direct velocity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @value </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Smoothed velocity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @value </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Acceleration based</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @value </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> My task</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @group Multicopter Position Control</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PARAM_DEFINE_INT32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MPC_POS_MODE, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><p>Add a case for your new option in the switch for the parameter <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/modules/flight_mode_manager/FlightModeManager.cpp#L266-L285" target="_blank" rel="noreferrer">FlightModeManager.cpp</a> to enable the task when <code>_param_mpc_pos_mode</code> has the right value.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// manual position control</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (_param_mpc_pos_mode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     error </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> switchTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FlightTaskIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ManualPositionSmoothVel);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Add case for new task: MyTask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     error </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> switchTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FlightTaskIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MyTask);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div></li></ul></li></ol><h2 id="test-new-flight-task" tabindex="-1">Test New Flight Task <a class="header-anchor" href="#test-new-flight-task" aria-label="Permalink to &quot;Test New Flight Task&quot;">​</a></h2><p>To test the flight task you need to run the vehicle with the task enabled. For the example above, this means setting the parameter <code>MPC_POS_MODE</code> to 5, taking off, and switching the vehicle to <a href="./../flight_modes_mc/position.html">Position mode</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The task defined above should only be tested on the simulator. The code doesn&#39;t actually create setpoints so the vehicle will not fly.</p></div><p>Build SITL simulation (gazebo-classic)</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic</span></span></code></pre></div><p>Open QGroundControl (if not open, no message information will be printed out). In the console, takeoff and switch to Position mode:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pxh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commander</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> takeoff</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pxh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commander</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> posctl</span></span></code></pre></div><p>The console will continuously display: <code>INFO [FlightTaskMyTask] FlightTaskMyTask update was called!</code>. If you want to change to another flight mode, you can type a command to change the mode, such as <code>commander mode altctl</code>.</p><h2 id="video" tabindex="-1">Video <a class="header-anchor" href="#video" aria-label="Permalink to &quot;Video&quot;">​</a></h2><p>The following videos provide an overview of flight tasks in PX4. The first covers the state of the flight task framework in PX4 v1.9. The second is an update, which covers the changes in PX4 v1.11.</p><h3 id="px4-flight-task-architecture-overview-px4-developer-summit-2019" tabindex="-1">PX4 Flight Task Architecture Overview (PX4 Developer Summit 2019) <a class="header-anchor" href="#px4-flight-task-architecture-overview-px4-developer-summit-2019" aria-label="Permalink to &quot;PX4 Flight Task Architecture Overview (PX4 Developer Summit 2019)&quot;">​</a></h3><p>A description of how flight modes work in PX4 v1.9 (Dennis Mannhart, Matthias Grob).</p>`,22),p=s("p",null,[s("div",{class:"embed-responsive embed-responsive-16by9"},[s("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/-dkQG8YLffc",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),k=s("h3",{id:"overview-of-multicopter-control-from-sensors-to-motors-px4-developer-summit-virtual-2020",tabindex:"-1"},[i("Overview of multicopter control from sensors to motors (PX4 Developer Summit Virtual 2020) "),s("a",{class:"header-anchor",href:"#overview-of-multicopter-control-from-sensors-to-motors-px4-developer-summit-virtual-2020","aria-label":'Permalink to "Overview of multicopter control from sensors to motors (PX4 Developer Summit Virtual 2020)"'},"​")],-1),r=s("p",null,[s("div",{class:"embed-responsive embed-responsive-16by9"},[s("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/orvng_11ngQ",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),o=s("p",null,[i("The relevant section of this video is an update of flight tasks in PX4 v11.1 at (9min 20sec). The "),s("a",{href:"https://static.sched.com/hosted_files/px4developersummitvirtual2020/1b/PX4%20Developer%20Summit%202020%20-%20Overview%20of%20multicopter%20control%20from%20sensors%20to%20motors.pdf",target:"_blank",rel:"noreferrer"},"slides can be found here (PDF)"),i(" - Slides 9 and 12 are relevant.")],-1),d=[h,p,k,r,o];function c(g,E,y,m,u,F){return t(),e("div",null,d)}const b=a(n,[["render",c]]);export{f as __pageData,b as default};
