import{_ as a}from"./chunks/hardware-pixfalcon.DI0URypg.js";import{_ as i,E as o,c as r,J as l,m as e,a as n,ab as s,o as d}from"./chunks/framework.CUflZczI.js";const v=JSON.parse('{"title":"Pixfalcon Flight Controller (Discontinued)","description":"","frontmatter":{},"headers":[],"relativePath":"en/flight_controller/pixfalcon.md","filePath":"en/flight_controller/pixfalcon.md"}'),c={name:"en/flight_controller/pixfalcon.md"},h=e("h1",{id:"pixfalcon-flight-controller-discontinued",tabindex:"-1"},[n("Pixfalcon Flight Controller (Discontinued) "),e("a",{class:"header-anchor",href:"#pixfalcon-flight-controller-discontinued","aria-label":'Permalink to "Pixfalcon Flight Controller (Discontinued)"'},"​")],-1),p=s('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This flight controller has been <a href="./../flight_controller/autopilot_experimental.html">discontinued</a> and is no longer commercially available.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>PX4 does not manufacture this (or any) autopilot. Contact the <a href="https://holybro.com/" target="_blank" rel="noreferrer">manufacturer</a> for hardware support or compliance issues.</p></div><p>The Pixfalcon autopilot (designed by <a href="https://holybro.com/" target="_blank" rel="noreferrer">Holybro<sup>®</sup></a>) is binary-compatible (FMUv2) derivative of the <a href="./../flight_controller/pixhawk.html">Pixhawk 1</a> design that has been optimized for space-constrained applications such as FPV racers. It has less IO to allow for the reduction in size.</p><p><img src="'+a+'" alt="Pixfalcon hero image"></p><h2 id="quick-summary" tabindex="-1">Quick Summary <a class="header-anchor" href="#quick-summary" aria-label="Permalink to &quot;Quick Summary&quot;">​</a></h2><ul><li>Main System-on-Chip: <a href="http://www.st.com/web/en/catalog/mmc/FM141/SC1169/SS1577/LN1789" target="_blank" rel="noreferrer">STM32F427</a><ul><li>CPU: 180 MHz ARM<sup>®</sup> Cortex<sup>®</sup> M4 with single-precision FPU</li><li>RAM: 256 KB SRAM (L1)</li></ul></li><li>Failsafe System-on-Chip: STM32F100 <ul><li>CPU: 24 MHz ARM Cortex M3</li><li>RAM: 8 KB SRAM</li></ul></li><li>GPS: u-blox<sup>®</sup> M8 (bundled)</li></ul><h3 id="connectivity" tabindex="-1">Connectivity <a class="header-anchor" href="#connectivity" aria-label="Permalink to &quot;Connectivity&quot;">​</a></h3><ul><li>1x I2C</li><li>2x UART (one for Telemetry / OSD, no flow control)</li><li>8x PWM with manual override</li><li>S.BUS / PPM input</li></ul><h2 id="availability" tabindex="-1">Availability: <a class="header-anchor" href="#availability" aria-label="Permalink to &quot;Availability:&quot;">​</a></h2><p>From distributor <a href="https://hobbyking.com/en_us/pixfalcon-micro-px4-autopilot-plus-micro-m8n-gps-and-mega-pbd-power-module.html" target="_blank" rel="noreferrer">Hobbyking<sup>®</sup></a></p><p>Optional hardware:</p><ul><li>Optical flow: PX4 Flow unit from manufacturer <a href="https://holybro.com/products/px4flow" target="_blank" rel="noreferrer">Holybro</a></li><li>Digital Airspeed sensor from manufacturer <a href="https://holybro.com/products/digital-air-speed-sensor" target="_blank" rel="noreferrer">Holybro</a> or distributor <a href="https://hobbyking.com/en_us/hkpilot-32-digital-air-speed-sensor-and-pitot-tube-set.html" target="_blank" rel="noreferrer">Hobbyking</a></li><li>On screen display with integrated Telemetry: <ul><li><a href="https://hobbyking.com/en_us/micro-hkpilot-telemetry-radio-module-with-on-screen-display-osd-unit-433mhz.html" target="_blank" rel="noreferrer">Hobbyking OSD + EU Telemetry (433 MHz)</a></li></ul></li><li>Pure Telemetry options: <ul><li><a href="https://hobbyking.com/en_us/apm-pixhawk-wireless-wifi-radio-module.html" target="_blank" rel="noreferrer">Hobbyking Wifi Telemetry</a></li><li><a href="./../telemetry/sik_radio.html">SIK Radios</a></li></ul></li></ul><h2 id="building-firmware" tabindex="-1">Building Firmware <a class="header-anchor" href="#building-firmware" aria-label="Permalink to &quot;Building Firmware&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Most users will not need to build this firmware! It is pre-built and automatically installed by <em>QGroundControl</em> when appropriate hardware is connected.</p></div><p>To <a href="./../dev_setup/building_px4.html">build PX4</a> for this target:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>make px4_fmu-v2_default</span></span></code></pre></div><h2 id="debug-port" tabindex="-1">Debug Port <a class="header-anchor" href="#debug-port" aria-label="Permalink to &quot;Debug Port&quot;">​</a></h2><p>This board does not have a debug port (i.e it does not have a port for accessing the <a href="./../debug/system_console.html">System Console</a> or the <a href="./../debug/swd_debug.html">SWD interface</a> (JTAG).</p><p>Developers will need to solder wires to the board test pads for SWD, and to the STM32F4 (IC) TX and RX to get a console.</p><h2 id="serial-port-mapping" tabindex="-1">Serial Port Mapping <a class="header-anchor" href="#serial-port-mapping" aria-label="Permalink to &quot;Serial Port Mapping&quot;">​</a></h2><table><thead><tr><th>UART</th><th>Device</th><th>Port</th></tr></thead><tbody><tr><td>UART1</td><td>/dev/ttyS0</td><td>IO Debug</td></tr><tr><td>USART2</td><td>/dev/ttyS1</td><td>TELEM1 (No flow control)</td></tr><tr><td>UART4</td><td>/dev/ttyS2</td><td>GPS</td></tr></tbody></table>',21);function u(m,b,f,g,_,y){const t=o("Badge");return d(),r("div",null,[h,l(t,{type:"info",text:"Discontinued"}),p])}const P=i(c,[["render",u]]);export{v as __pageData,P as default};
