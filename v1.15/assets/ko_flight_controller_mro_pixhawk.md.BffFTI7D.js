import{_ as t}from"./chunks/mro_pixhawk.C5e_Tu28.js";import{_ as a,c as i,o as e,ab as r}from"./chunks/framework.CUflZczI.js";const b=JSON.parse('{"title":"mRo Pixhawk 비행 컨트롤러 (Pixhawk 1)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/flight_controller/mro_pixhawk.md","filePath":"ko/flight_controller/mro_pixhawk.md"}'),l={name:"ko/flight_controller/mro_pixhawk.md"},o=r('<h1 id="mro-pixhawk-비행-컨트롤러-pixhawk-1" tabindex="-1">mRo Pixhawk 비행 컨트롤러 (Pixhawk 1) <a class="header-anchor" href="#mro-pixhawk-비행-컨트롤러-pixhawk-1" aria-label="Permalink to &quot;mRo Pixhawk 비행 컨트롤러 (Pixhawk 1)&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">PX4에서는 이 제품을 제조하지 않습니다. 하드웨어 지원과 호환 문제는 <a href="https://store.mrobotics.io/" target="_blank" rel="noreferrer">제조사</a>에 문의하십시오.</p></div><p>The <em>mRo Pixhawk<sup>®</sup></em> is a hardware compatible version of the original <a href="./../flight_controller/pixhawk.html">Pixhawk 1</a>. PX4를 <a href="https://nuttx.apache.org/" target="_blank" rel="noreferrer">NuttX</a> OS에서 실행합니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>컨트롤러는 3DR<sup>®</sup> <a href="./../flight_controller/pixhawk.html">Pixhawk 1</a>의 드롭인 교체로 사용할 수 있습니다. 가장 큰 차이점은 <a href="https://pixhawk.org/" target="_blank" rel="noreferrer">Pixhawk-project</a> <strong>FMUv3</strong> 개방형 하드웨어 설계를 기반인 것입니다. 이는 원래 Pixhawk 1을 1MB의 플래시로 제한 버그를 수정합니다.</p></div><p><img src="'+t+'" alt="mRo Pixhawk 이미지"></p><p>PX4 실행을 위한 조립 설정 방법은 <a href="./../assembly/quick_start_pixhawk.html">Pixhawk 배선 퀵 스타트</a>를 참고하십시오.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>이 자동조종장치는 PX4 유지관리 및 테스트 팀에서 <a href="./../flight_controller/autopilot_pixhawk_standard.html">지원</a>합니다.</p></div><h2 id="주요-특징" tabindex="-1">주요 특징 <a class="header-anchor" href="#주요-특징" aria-label="Permalink to &quot;주요 특징&quot;">​</a></h2><ul><li><p>마이크로 프로세서:</p><ul><li>FPU가있는 32 비트 STM32F427 코어 텍스<sup>®</sup> M4 코어</li><li>168 MHz / 256 KB RAM / 2 MB 플래시</li><li>32 비트 STM32F100 failsafe 코프로세서</li><li>24 MHz/8 KB RAM/64 KB 플래시</li></ul></li><li><p>센서:</p><ul><li>ST Micro L3GD20 3축 16비트 자이로스코프</li><li>ST Micro LSM303D 3축 14비트 가속도계/ 력계</li><li>Invensense<sup>®</sup> MPU 6000 3축 가속도계/자이로스코프</li><li>MEAS MS5611 기압계</li></ul></li><li><p>인터페이스:</p><ul><li>UART (직렬 포트) 5개, 1 개의 고전력 지원, 2x (HW 흐름 제어 포함)</li><li>CAN 2 개</li><li>최대 DX8의 Spektrum DSM/DSM2/DSM-X® Satellite 호환 입력(DX9 이상은 지원되지 않음)</li><li>Futaba<sup>®</sup> S.BUS 호환 입력 및 출력</li><li>PPM 합계 신호</li><li>RSSI (PWM 또는 전압) 입력</li><li>I2C</li><li>SPI</li><li>3.3 및 6.6V ADC 입력</li><li>외부 microUSB 포트</li></ul></li><li><p>전원 시스템 :</p><ul><li>자동 복구 기능의 이상적인 다이오드 컨트롤러</li><li>서보 레일 고전력 (7V) 및 고전류 준비</li><li>모든 주변 장치 출력 과전류 보호, 모든 입력 ESD 보호</li></ul></li><li><p>무게와 크기 :</p><ul><li>무게 : 38g (1.31oz)</li><li>너비 : 50mm (1.96 &quot;)</li><li>두께 : 15.5mm (.613 &quot;)</li><li>길이 : 81.5mm (3.21&quot;)</li></ul></li></ul><h2 id="유효성" tabindex="-1">유효성 <a class="header-anchor" href="#유효성" aria-label="Permalink to &quot;유효성&quot;">​</a></h2><ul><li><a href="https://store.mrobotics.io/Genuine-PixHawk-1-Barebones-p/mro-pixhawk1-bb-mr.htm" target="_blank" rel="noreferrer">Bare Bones</a> - Just the board (useful as a 3DR Pixhawk replacement)</li><li><a href="https://store.mrobotics.io/Genuine-PixHawk-Flight-Controller-p/mro-pixhawk1-minkit-mr.htm" target="_blank" rel="noreferrer">mRo Pixhawk 2.4.6 Essential Kit!</a> - Everything except for telemetry radios</li><li><a href="https://store.mrobotics.io/product-p/mro-pixhawk1-fullkit-mr.htm" target="_blank" rel="noreferrer">mRo Pixhawk 2.4.6 Cool Kit! (Limited edition)</a> - Everything you need including telemetry radios</li></ul><h2 id="펌웨어-빌드" tabindex="-1">펌웨어 빌드 <a class="header-anchor" href="#펌웨어-빌드" aria-label="Permalink to &quot;펌웨어 빌드&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">대부분의 사용자들은 펌웨어를 빌드할 필요는 없습니다. It is pre-built and automatically installed by <em>QGroundControl</em> when appropriate hardware is connected.</p><p>:::</p><p>이 대상에 대한 <a href="./../dev_setup/building_px4.html">PX4 빌드</a> 방법 :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>make px4_fmu-v3_default</span></span></code></pre></div><h2 id="디버그-포트" tabindex="-1">디버그 포트 <a class="header-anchor" href="#디버그-포트" aria-label="Permalink to &quot;디버그 포트&quot;">​</a></h2><p><a href="./../flight_controller/pixhawk.html#debug-ports">3DR Pixhawk 1 &gt; 디버그 포트</a>를 참고하십시오.</p><h2 id="핀배열" tabindex="-1">핀배열 <a class="header-anchor" href="#핀배열" aria-label="Permalink to &quot;핀배열&quot;">​</a></h2><p><a href="./../flight_controller/pixhawk.html#pinouts">3DR Pixhawk 1 &gt; 핀배열</a>을 참고하십시오.</p><h2 id="시리얼-포트-매핑" tabindex="-1">시리얼 포트 매핑 <a class="header-anchor" href="#시리얼-포트-매핑" aria-label="Permalink to &quot;시리얼 포트 매핑&quot;">​</a></h2><table><thead><tr><th>UART</th><th>장치</th><th>포트</th></tr></thead><tbody><tr><td>UART1</td><td>/dev/ttyS0</td><td>IO 디버그</td></tr><tr><td>USART2</td><td>/dev/ttyS1</td><td>TELEM1 (흐름 제어)</td></tr><tr><td>USART3</td><td>/dev/ttyS2</td><td>TELEM2 (흐름 제어)</td></tr><tr><td>UART4</td><td></td><td></td></tr><tr><td>UART7</td><td>콘솔</td><td></td></tr><tr><td>UART8</td><td>SERIAL4</td><td></td></tr></tbody></table><h2 id="회로도" tabindex="-1">회로도 <a class="header-anchor" href="#회로도" aria-label="Permalink to &quot;회로도&quot;">​</a></h2><p>이 보드는 <a href="https://pixhawk.org/" target="_blank" rel="noreferrer"> Pixhawk-project</a> <strong>FMUv3</strong> 오픈 하드웨어 디자인을 기반으로합니다.</p><ul><li><a href="https://github.com/PX4/Hardware/raw/master/FMUv3_REV_D/Schematic%20Print/Schematic%20Prints.PDF" target="_blank" rel="noreferrer">FMUv3 schematic</a> - 회로도 및 레이아웃</li></ul><p>:::note CC-BY-SA 3.0 라이센스 오픈 하드웨어 설계로 모든 회로도와 설계 파일을 <a href="https://github.com/PX4/Hardware" target="_blank" rel="noreferrer">사용할 수 있습니다</a>. :::</p></div>',13),h=[o];function s(p,n,d,c,m,u){return e(),i("div",null,h)}const f=a(l,[["render",s]]);export{b as __pageData,f as default};
