import{_ as a}from"./chunks/flightgearUI.DQc3R5Ae.js";import{_ as t,c as e,o as n,ab as s,m as i}from"./chunks/framework.CUflZczI.js";const b=JSON.parse('{"title":"FlightGear Simulation","description":"","frontmatter":{},"headers":[],"relativePath":"ko/sim_flightgear/index.md","filePath":"ko/sim_flightgear/index.md"}'),l={name:"ko/sim_flightgear/index.md"},h=s('<h1 id="flightgear-simulation" tabindex="-1">FlightGear Simulation <a class="header-anchor" href="#flightgear-simulation" aria-label="Permalink to &quot;FlightGear Simulation&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This simulator is <a href="./../simulation/community_supported_simulators.html">community supported and maintained</a>. It may or may not work with current versions of PX4.</p><p>See <a href="./../dev_setup/dev_env.html">Toolchain Installation</a> for information about the environments and tools supported by the core development team.</p></div><p><a href="https://www.flightgear.org/" target="_blank" rel="noreferrer">FlightGear</a> is a flight simulator with powerful <a href="http://wiki.flightgear.org/Flight_Dynamics_Model" target="_blank" rel="noreferrer">FDM engines</a>. This allows FlightGear to simulate rotorcrafts under various meteorological conditions (which is why the bridge was originally developed by <a href="https://www.thunderfly.cz/" target="_blank" rel="noreferrer">ThunderFly s.r.o.</a>).</p><p>This page describes FlightGear&#39;s single-vehicle use in SITL. For information about multi-vehicle use see: <a href="./../sim_flightgear/multi_vehicle.html">Multi-Vehicle Simulation with FlightGear</a>.</p><p><strong>Supported Vehicles:</strong> Autogyro, Plane, Rover.</p>',5),r=i("p",null,[i("div",{class:"embed-responsive embed-responsive-16by9"},[i("iframe",{class:"embed-responsive-item youtube-player",type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/iqdcN5Gj4wI",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""})])],-1),o=s(`<p><a href="https://mermaid-js.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiZ3JhcGggTFI7XG4gIEZsaWdodEdlYXIgLS0-IEZsaWdodEdlYXItQnJpZGdlO1xuICBGbGlnaHRHZWFyLUJyaWRnZSAtLT4gTUFWTGluaztcbiAgTUFWTGluayAtLT4gUFg0X1NJVEw7XG5cdCIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0In0sInVwZGF0ZUVkaXRvciI6ZmFsc2V9" target="_blank" rel="noreferrer"><img src="https://mermaid.ink/img/eyJjb2RlIjoiZ3JhcGggTFI7XG4gIEZsaWdodEdlYXIgLS0-IEZsaWdodEdlYXItQnJpZGdlO1xuICBGbGlnaHRHZWFyLUJyaWRnZSAtLT4gTUFWTGluaztcbiAgTUFWTGluayAtLT4gUFg0X1NJVEw7XG5cdCIsIm1lcm1haWQiOnsidGhlbWUiOiJkZWZhdWx0In0sInVwZGF0ZUVkaXRvciI6ZmFsc2V9" alt="Mermaid Graph "></a></p><div class="info custom-block"><p class="custom-block-title">See <a href="./../simulation/">Simulation</a> for general information about simulators, the simulation environment, and simulation configuration (e.g. supported vehicles).</p></div><h2 id="installation-ubuntu-linux" tabindex="-1">Installation (Ubuntu Linux) <a class="header-anchor" href="#installation-ubuntu-linux" aria-label="Permalink to &quot;Installation (Ubuntu Linux)&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>These instructions were tested on Ubuntu 18.04</p></div><ol><li><p>Install the usual <a href="./../dev_setup/dev_env_linux_ubuntu.html">Development Environment on Ubuntu LTS / Debian Linux</a>.</p></li><li><p>Install FlightGear:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-apt-repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ppa:saiarcot895/flightgear</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flightgear</span></span></code></pre></div><p>This installs the latest stable FlightGear version from the PAA repository along with the FGdata package.</p></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For some models (e.g. those with electric engines) the daily build with the newest features may be necessary. Install this using the <a href="https://launchpad.net/~saiarcot895/+archive/ubuntu/flightgear-edge" target="_blank" rel="noreferrer">daily build PPA</a>.</p></div><ol><li><p>Check that you are able to run FlightGear:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fgfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --launcher</span></span></code></pre></div></li><li><p>Set write permissions to the <strong>Protocols</strong> folder in the FlightGear installation directory:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a+w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/games/flightgear/Protocol</span></span></code></pre></div><p>Setting the permissions is required because the PX4-FlightGear-Bridge puts the communication definition file here.</p></li></ol><p>Additional installation instructions can be found on <a href="http://wiki.flightgear.org/Howto:Install_Flightgear_from_a_PPA" target="_blank" rel="noreferrer">FlightGear wiki</a>.</p><h2 id="running-the-simulation" tabindex="-1">Running the Simulation <a class="header-anchor" href="#running-the-simulation" aria-label="Permalink to &quot;Running the Simulation&quot;">​</a></h2><p>Run a simulation by starting PX4 SITL, specifying the airframe configuration of your choice.</p><p>The easiest way to do this is to open a terminal in the root directory of the PX4 <em>PX4-Autopilot</em> repository and call <code>make</code> for the desired target. For example, to start a plane simulation :</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/PX4-Autopilot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_nolockstep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flightgear_rascal</span></span></code></pre></div><p>The supported vehicles and <code>make</code> commands are listed below (click on the links to see the vehicle images).</p><table><thead><tr><th>Vehicle</th><th>Command</th></tr></thead><tbody><tr><td><a href="./../sim_flightgear/vehicles.html#standard-plane">Standard Plane</a></td><td><code>make px4_sitl_nolockstep flightgear_rascal</code></td></tr><tr><td><a href="./../sim_flightgear/vehicles.html#ackerman-vehicle-ugv-rover">Ackermann vehicle (UGV/Rover)</a></td><td><code>make px4_sitl_nolockstep flightgear_tf-r1</code></td></tr><tr><td><a href="./../sim_flightgear/vehicles.html#autogyro">Autogyro</a></td><td><code>make px4_sitl_nolockstep flightgear_tf-g1</code></td></tr></tbody></table><p>The commands above launch a single vehicle with the full UI. <em>QGroundControl</em> should be able to automatically connect to the simulated vehicle.</p><div class="info custom-block"><p class="custom-block-title">For the full list of FlightGear build targets (highlighted) run:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_nolockstep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list_vmd_make_targets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flightgear_</span></span></code></pre></div><p>For additional information see: <a href="./../sim_flightgear/vehicles.html">FlightGear Vehicles</a> (this includes information about &quot;unsupported&quot; vehicles, and adding new vehicles).</p></div><div class="info custom-block"><p class="custom-block-title">The <a href="./../dev_setup/dev_env.html">Installing Files and Code</a> guide is a useful reference if there are build errors.</p></div><h2 id="taking-it-to-the-sky" tabindex="-1">Taking it to the Sky <a class="header-anchor" href="#taking-it-to-the-sky" aria-label="Permalink to &quot;Taking it to the Sky&quot;">​</a></h2><p>The <code>make</code> commands mentioned above first build PX4 and then run it along with the FlightGear simulator.</p><p>Once the PX4 has started it will launch the PX4 shell as shown below. You must select enter to get the command prompt.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">______</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  __</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   __</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    ___</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ___</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\ \\ \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">V</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  __/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   \\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\ \\ \\_</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     \\/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   \\/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">px4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> starting.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [px4] Calling startup script: /bin/sh etc/init.d-posix/rcS 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [param] selected parameter default file eeprom/parameters_1034</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">I</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;m Mavlink to FlightGear Bridge</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Target Bridge Freq: 200, send data every step: 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  5   -1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  7   -1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  2   1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  4   1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[param] Loaded: eeprom/parameters_1034</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [dataman] Unknown restart, data manager file &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./dataman</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39; size is 11798680 bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [simulator] Waiting for simulator to accept connection on TCP port 4560</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [simulator] Simulator connected on TCP port 4560.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [commander] LED: open /dev/led0 failed (22)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [commander] Mission #3 loaded, 9 WPs, curr: 8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [mavlink] mode: Normal, data rate: 4000000 B/s on udp port 18570 remote port 14550</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [airspeed_selector] No airspeed sensor detected. Switch to non-airspeed mode.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [mavlink] mode: Onboard, data rate: 4000000 B/s on udp port 14580 remote port 14540</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [mavlink] mode: Onboard, data rate: 4000 B/s on udp port 14280 remote port 14030</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [logger] logger started (mode=all)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [logger] Start file log (type: full)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [logger] Opened full log file: ./log/2020-04-28/22_03_36.ulg</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [mavlink] MAVLink only on localhost (set param MAV_{i}_BROADCAST = 1 to enable network)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INFO  [px4] Startup script returned successfully</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pxh&gt; StatsHandler::StatsHandler() Setting up GL2 compatible shaders</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Now checking for plug-in osgPlugins-3.4.1/osgdb_nvtt.so</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PX4 Communicator: PX4 Connected.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pxh&gt;</span></span></code></pre></div><p>The console will print out status as PX4 loads the airframe-specific initialization and parameter files, wait for (and connect to) the simulator. Once there is an INFO print that [ecl/EKF] is <code>commencing GPS fusion</code> the vehicle is ready to arm. At this point, you should see a FlightGear window with some view of aircraft.</p><div class="info custom-block"><p class="custom-block-title">You can change the view by pressing <strong>Ctrl+V</strong>.</p></div><p><img src="`+a+'" alt="FlightGear UI"></p><p>You can bring it into the air by typing:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pxh&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commander</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> takeoff</span></span></code></pre></div><h2 id="usage-configuration-options" tabindex="-1">Usage/Configuration Options <a class="header-anchor" href="#usage-configuration-options" aria-label="Permalink to &quot;Usage/Configuration Options&quot;">​</a></h2><p>You can tune your FG installation/settings by the following environment variables:</p><ul><li><code>FG\\_BINARY</code> - absolute path to FG binary to run. (It can be an AppImage)</li><li><code>FG\\_MODELS\\_DIR</code> - absolute path to the folder containing the manually-downloaded aircraft models which should be used for simulation.</li><li><code>FG\\_ARGS\\_EX</code> - any additional FG parameters.</li></ul><p><a id="frame_rate"></a></p><h3 id="display-the-frame-rate" tabindex="-1">Display the frame rate <a class="header-anchor" href="#display-the-frame-rate" aria-label="Permalink to &quot;Display the frame rate&quot;">​</a></h3><p>In FlightGear you can display the frame rate by enabling it in: <strong>View &gt; View Options &gt; Show frame rate</strong>.</p><h3 id="set-custom-takeoff-location" tabindex="-1">Set Custom Takeoff Location <a class="header-anchor" href="#set-custom-takeoff-location" aria-label="Permalink to &quot;Set Custom Takeoff Location&quot;">​</a></h3><p>Takeoff location in SITL FlightGear can be set using additional variables. Setting the variable will override the default takeoff location.</p><p>The variables which can be set are as follows: <code>--airport</code>, <code>--runway</code>, and <code>--offset-distance</code>. Other options can be found on <a href="http://wiki.flightgear.org/Command_line_options#Initial_Position_and_Orientation" target="_blank" rel="noreferrer">FlightGear wiki</a></p><p>For example:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FG_ARGS_EX</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--airport=PHNL&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_nolockstep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flightgear_rascal</span></span></code></pre></div><p>The example above starts the simulation on the <a href="http://wiki.flightgear.org/Suggested_airports" target="_blank" rel="noreferrer">Honolulu international airport</a></p><h3 id="using-a-joystick" tabindex="-1">Using a Joystick <a class="header-anchor" href="#using-a-joystick" aria-label="Permalink to &quot;Using a Joystick&quot;">​</a></h3><p>Joystick and thumb-joystick are supported through <em>QGroundControl</em> (<a href="./../simulation/#joystick-gamepad-integration">setup instructions here</a>).</p><p>The joystick input in FlightGear should be disabled in otherwise there will be a &quot;race condition&quot; between the FG joystick input and PX4 commands.</p><h2 id="extending-and-customizing" tabindex="-1">Extending and Customizing <a class="header-anchor" href="#extending-and-customizing" aria-label="Permalink to &quot;Extending and Customizing&quot;">​</a></h2><p>To extend or customize the simulation interface, edit the files in the <strong>Tools/simulation/flightgear/flightgear_bridge</strong> folder. The code is available in the <a href="https://github.com/ThunderFly-aerospace/PX4-FlightGear-Bridge" target="_blank" rel="noreferrer">PX4-FlightGear-Bridge repository</a> on Github.</p><h2 id="further-information" tabindex="-1">Further Information <a class="header-anchor" href="#further-information" aria-label="Permalink to &quot;Further Information&quot;">​</a></h2><ul><li><a href="https://github.com/ThunderFly-aerospace/PX4-FlightGear-Bridge" target="_blank" rel="noreferrer">PX4-FlightGear-Bridge readme</a></li></ul>',45),p=[h,r,o];function d(k,g,c,F,u,m){return n(),e("div",null,p)}const _=t(l,[["render",d]]);export{b as __pageData,_ as default};
