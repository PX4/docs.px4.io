import{_ as a,c as s,o as n,ab as e}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"모듈 참조: 시스템","description":"","frontmatter":{},"headers":[],"relativePath":"ko/modules/modules_system.md","filePath":"ko/modules/modules_system.md"}'),t={name:"ko/modules/modules_system.md"},p=e(`<h1 id="모듈-참조-시스템" tabindex="-1">모듈 참조: 시스템 <a class="header-anchor" href="#모듈-참조-시스템" aria-label="Permalink to &quot;모듈 참조: 시스템&quot;">​</a></h1><h2 id="battery-simulator" tabindex="-1">battery_simulator <a class="header-anchor" href="#battery-simulator" aria-label="Permalink to &quot;battery_simulator&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/battery_simulator" target="_blank" rel="noreferrer">modules/simulation/battery_simulator</a></p><h3 id="설명" tabindex="-1">설명 <a class="header-anchor" href="#설명" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p><a id="battery_simulator_usage"></a></p><h3 id="사용법" tabindex="-1">사용법 <a class="header-anchor" href="#사용법" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>battery_simulator &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="battery-status" tabindex="-1">battery_status <a class="header-anchor" href="#battery-status" aria-label="Permalink to &quot;battery_status&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/battery_status" target="_blank" rel="noreferrer">modules/battery_status</a></p><h3 id="설명-1" tabindex="-1">설명 <a class="header-anchor" href="#설명-1" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>제공 기능은 다음과 같습니다:</p><ul><li>ADC 드라이버의 출력을 읽고(ioctl 인터페이스를 통해) <code>battery_status</code>를 게시합니다.</li></ul><h3 id="구현" tabindex="-1">구현 <a class="header-anchor" href="#구현" aria-label="Permalink to &quot;구현&quot;">​</a></h3><p>자체 스레드에서 실행되고, 현재 선택된 자이로 주제를 폴링합니다.</p><p><a id="battery_status_usage"></a></p><h3 id="사용법-1" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-1" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>battery_status &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="camera-feedback" tabindex="-1">camera_feedback <a class="header-anchor" href="#camera-feedback" aria-label="Permalink to &quot;camera_feedback&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/camera_feedback" target="_blank" rel="noreferrer">modules/camera_feedback</a></p><h3 id="설명-2" tabindex="-1">설명 <a class="header-anchor" href="#설명-2" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>The camera_feedback module publishes <code>CameraCapture</code> UORB topics when image capture has been triggered.</p><p>If camera capture is enabled, then trigger information from the camera capture pin is published; otherwise trigger information at the point the camera was commanded to trigger is published (from the <code>camera_trigger</code> module).</p><p>The <code>CAMERA_IMAGE_CAPTURED</code> message is then emitted (by streaming code) following <code>CameraCapture</code> updates. <code>CameraCapture</code> topics are also logged and can be used for geotagging.</p><h3 id="구현-1" tabindex="-1">구현 <a class="header-anchor" href="#구현-1" aria-label="Permalink to &quot;구현&quot;">​</a></h3><p><code>CameraTrigger</code> topics are published by the <code>camera_trigger</code> module (<code>feedback</code> field set <code>false</code>) when image capture is triggered, and may also be published by the <code>camera_capture</code> driver (with <code>feedback</code> field set <code>true</code>) if the camera capture pin is activated.</p><p>The <code>camera_feedback</code> module subscribes to <code>CameraTrigger</code>. It discards topics from the <code>camera_trigger</code> module if camera capture is enabled. For the topics that are not discarded it creates a <code>CameraCapture</code> topic with the timestamp information from the <code>CameraTrigger</code> and position information from the vehicle.</p><p><a id="camera_feedback_usage"></a></p><h3 id="사용법-2" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-2" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>camera_feedback &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="cdcacm-autostart" tabindex="-1">cdcacm_autostart <a class="header-anchor" href="#cdcacm-autostart" aria-label="Permalink to &quot;cdcacm_autostart&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers/cdcacm_autostart" target="_blank" rel="noreferrer">drivers/cdcacm_autostart</a></p><h3 id="설명-3" tabindex="-1">설명 <a class="header-anchor" href="#설명-3" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>This module listens on USB and auto-configures the protocol depending on the bytes received. The supported protocols are: MAVLink, nsh, and ublox serial passthrough. If the parameter SYS_USB_AUTO=2 the module will only try to start mavlink as long as the USB VBUS is detected. Otherwise it will spin and continue to check for VBUS and start mavlink once it is detected.</p><p><a id="cdcacm_autostart_usage"></a></p><h3 id="사용법-3" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-3" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cdcacm_autostart &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="commander" tabindex="-1">commander <a class="header-anchor" href="#commander" aria-label="Permalink to &quot;commander&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/commander" target="_blank" rel="noreferrer">modules/commander</a></p><h3 id="설명-4" tabindex="-1">설명 <a class="header-anchor" href="#설명-4" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>커맨더 모듈에는 모드 전환 및 안전 장치 동작을 위한 상태 머신이 포함되어 있습니다.</p><p><a id="commander_usage"></a></p><h3 id="사용법-4" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-4" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>commander &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-h]        Enable HIL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   calibrate     Run sensor calibration</span></span>
<span class="line"><span>     mag|baro|accel|gyro|level|esc|airspeed Calibration type</span></span>
<span class="line"><span>     quick       Quick calibration (accel only, not recommended)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   check         Run preflight checks</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   arm</span></span>
<span class="line"><span>     [-f]        Force arming (do not run preflight checks)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   disarm</span></span>
<span class="line"><span>     [-f]        Force disarming (disarm in air)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   takeoff</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   land</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   transition    VTOL transition</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   mode          Change flight mode</span></span>
<span class="line"><span>     manual|acro|offboard|stabilized|altctl|posctl|position:slow|auto:mission|au</span></span>
<span class="line"><span>                 to:loiter|auto:rtl|auto:takeoff|auto:land|auto:precland|ext1</span></span>
<span class="line"><span>                 Flight mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   pair</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   lockdown</span></span>
<span class="line"><span>     on|off      Turn lockdown on or off</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   set_ekf_origin</span></span>
<span class="line"><span>     lat, lon, alt Origin Latitude, Longitude, Altitude</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   lat|lon|alt   Origin latitude longitude altitude</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   poweroff      Power off board (if supported)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="dataman" tabindex="-1">dataman <a class="header-anchor" href="#dataman" aria-label="Permalink to &quot;dataman&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/dataman" target="_blank" rel="noreferrer">modules/dataman</a></p><h3 id="설명-5" tabindex="-1">설명 <a class="header-anchor" href="#설명-5" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>C API를 통해 간단한 데이터베이스 형태로 시스템에 영구 저장소를 제공하는 모듈입니다. 다중 백엔드가 지원됩니다.</p><ul><li>파일(예: SD 카드)</li><li>RAM (영구적이지 않음)</li></ul><p>임무 웨이포인트, 임무 상태 및 지오펜스 다각형과 같은 다양한 유형의 구조화된 데이터를 저장합니다. 각 유형은 특정 유형과 고정된 최대 저장 항목 수를 가지고 있어, 빠른 랜덤 액세스가 가능합니다.</p><h3 id="구현-2" tabindex="-1">구현 <a class="header-anchor" href="#구현-2" aria-label="Permalink to &quot;구현&quot;">​</a></h3><p>단일 항목을 읽고 쓰는 것은 항상 원자적입니다.</p><p><a id="dataman_usage"></a></p><h3 id="사용법-5" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-5" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dataman &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-f &lt;val&gt;]  Storage file</span></span>
<span class="line"><span>                 values: &lt;file&gt;</span></span>
<span class="line"><span>     [-r]        Use RAM backend (NOT persistent)</span></span>
<span class="line"><span></span></span>
<span class="line"><span> The options -f and -r are mutually exclusive. If nothing is specified, a file</span></span>
<span class="line"><span> &#39;dataman&#39; is used</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="dmesg" tabindex="-1">dmesg <a class="header-anchor" href="#dmesg" aria-label="Permalink to &quot;dmesg&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/systemcmds/dmesg" target="_blank" rel="noreferrer">systemcmds/dmesg</a></p><h3 id="설명-6" tabindex="-1">설명 <a class="header-anchor" href="#설명-6" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>부팅 콘솔 메시지를 출력합니다. NuttX의 작업 대기열 및 syslog의 출력은 캡처되지 않습니다.</p><h3 id="예" tabindex="-1">예 <a class="header-anchor" href="#예" aria-label="Permalink to &quot;예&quot;">​</a></h3><p>백그라운드에서 모든 메시지를 출력합니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dmesg -f &amp;</span></span></code></pre></div><p><a id="dmesg_usage"></a></p><h3 id="사용법-6" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-6" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dmesg &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>     [-f]        Follow: wait for new messages</span></span></code></pre></div><h2 id="esc-battery" tabindex="-1">esc_battery <a class="header-anchor" href="#esc-battery" aria-label="Permalink to &quot;esc_battery&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/esc_battery" target="_blank" rel="noreferrer">modules/esc_battery</a></p><h3 id="설명-7" tabindex="-1">설명 <a class="header-anchor" href="#설명-7" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>ESC 상태의 정보를 사용하여 구현하고, 배터리 상태를 게시합니다.</p><p><a id="esc_battery_usage"></a></p><h3 id="사용법-7" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-7" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>esc_battery &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="gyro-calibration" tabindex="-1">gyro_calibration <a class="header-anchor" href="#gyro-calibration" aria-label="Permalink to &quot;gyro_calibration&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/gyro_calibration" target="_blank" rel="noreferrer">modules/gyro_calibration</a></p><h3 id="설명-8" tabindex="-1">설명 <a class="header-anchor" href="#설명-8" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>간단한 온라인 자이로스코프 교정.</p><p><a id="gyro_calibration_usage"></a></p><h3 id="사용법-8" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-8" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>gyro_calibration &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="gyro-fft" tabindex="-1">gyro_fft <a class="header-anchor" href="#gyro-fft" aria-label="Permalink to &quot;gyro_fft&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/gyro_fft" target="_blank" rel="noreferrer">modules/gyro_fft</a></p><h3 id="설명-9" tabindex="-1">설명 <a class="header-anchor" href="#설명-9" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p><a id="gyro_fft_usage"></a></p><h3 id="사용법-9" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-9" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>gyro_fft &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="heater" tabindex="-1">heater <a class="header-anchor" href="#heater" aria-label="Permalink to &quot;heater&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/drivers/heater" target="_blank" rel="noreferrer">drivers/heater</a></p><h3 id="설명-10" tabindex="-1">설명 <a class="header-anchor" href="#설명-10" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>설정점에서 IMU 온도를 조절하기 위하여 LP 작업 대기열에서 주기적으로 실행되는 백그라운드 프로세스입니다.</p><p>이 작업은 부팅 시 SENS_EN_THERMAL을 설정하거나, CLI를 통하여 시작 스크립트에서 시작할 수 있습니다.</p><p><a id="heater_usage"></a></p><h3 id="사용법-10" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-10" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>heater &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   test          prints PWM capture info.</span></span></code></pre></div><h2 id="i2c-launcher" tabindex="-1">i2c_launcher <a class="header-anchor" href="#i2c-launcher" aria-label="Permalink to &quot;i2c_launcher&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/systemcmds/i2c_launcher" target="_blank" rel="noreferrer">systemcmds/i2c_launcher</a></p><h3 id="설명-11" tabindex="-1">설명 <a class="header-anchor" href="#설명-11" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>Daemon that starts drivers based on found I2C devices.</p><p><a id="i2c_launcher_usage"></a></p><h3 id="사용법-11" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-11" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>i2c_launcher &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     -b &lt;val&gt;    Bus number</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="land-detector" tabindex="-1">land_detector <a class="header-anchor" href="#land-detector" aria-label="Permalink to &quot;land_detector&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/land_detector" target="_blank" rel="noreferrer">modules/land_detector</a></p><h3 id="설명-12" tabindex="-1">설명 <a class="header-anchor" href="#설명-12" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>차량의 자유낙하와 착지상태를 감지하고, <code>vehicle_land_detected</code> 주제를 게시하는 모듈입니다. 각 차량 유형(멀티로터, 고정익, vtol, ...)은 명령 추력, 무장 상태 및 차량 모션과 같은 다양한 상태를 고려하여 자체 알고리즘을 제공합니다.</p><h3 id="구현-3" tabindex="-1">구현 <a class="header-anchor" href="#구현-3" aria-label="Permalink to &quot;구현&quot;">​</a></h3><p>모든 유형은 공통 기본 클래스를 사용하여 자체 클래스에서 구현됩니다. 기본 클래스는 상태를 유지합니다(착륙, 아마도_착륙, 지상_접촉). 가능한 각 상태는 파생 클래스에서 구현됩니다. 각 내부 상태의 히스테리시스 및 고정된 우선 순위에 따라 실제 land_detector 상태가 결정됩니다.</p><h4 id="멀티콥터-착륙-감지기" tabindex="-1">멀티콥터 착륙 감지기 <a class="header-anchor" href="#멀티콥터-착륙-감지기" aria-label="Permalink to &quot;멀티콥터 착륙 감지기&quot;">​</a></h4><p><strong>ground_contact</strong>: z 방향의 추력 설정점 및 속도는 GROUND_CONTACT_TRIGGER_TIME_US 시간에 대해 정의된 임계값 미만이어야 합니다. ground_contact가 감지되면, 위치 컨트롤러는 본체 x 및 y의 추력 설정값을 끕니다.</p><p><strong>maybe_landed</strong>: 더 엄격한 추력 설정값 임계값과 함께 ground_contact가 필요하며, 수평 방향으로 속도가 없습니다. 트리거 시간은 MAYBE_LAND_TRIGGER_TIME에 의해 정의됩니다. Maybe_landed가 감지되면 위치 컨트롤러는 추력 설정값을 0으로 설정합니다.</p><p><strong>착륙</strong>: LAND_DETECTOR_TRIGGER_TIME_US 시간 동안 참이 되기 위해서는 may_landed가 필요합니다.</p><p>모듈은 HP 작업 대기열에서 주기적으로 실행됩니다.</p><p><a id="land_detector_usage"></a></p><h3 id="사용법-12" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-12" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>land_detector &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span>     fixedwing|multicopter|vtol|rover|airship Select vehicle type</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="load-mon" tabindex="-1">load_mon <a class="header-anchor" href="#load-mon" aria-label="Permalink to &quot;load_mon&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/load_mon" target="_blank" rel="noreferrer">modules/load_mon</a></p><h3 id="사용법-13" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-13" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><p>CPU 로드 및 RAM 사용량을 계산하고, <code>cpuload</code> 주제를 게시하기 위하여 낮은 우선순위 작업 대기열에서 주기적으로 실행되는 백그라운드 프로세스입니다.</p><p>NuttX에서는 각 프로세스의 스택 사용량도 확인하고, 300바이트 미만으로 떨어지면 경고가 출력되고 로그 파일에도 기록됩니다.</p><p><a id="load_mon_usage"></a></p><h3 id="설명-13" tabindex="-1">설명 <a class="header-anchor" href="#설명-13" aria-label="Permalink to &quot;설명&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>load_mon &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="logger" tabindex="-1">logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;logger&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/logger" target="_blank" rel="noreferrer">modules/logger</a></p><h3 id="사용법-14" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-14" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><p>설정 가능한 uORB 주제 세트와 시스템 printf 메시지(<code>PX4_WARN</code> 및 <code>PX4_ERR</code>)를 ULog 파일에 기록하는 시스템 로거입니다. 시스템 및 비행 성능 평가, 튜닝, 재생 및 충돌 분석에 사용할 수 있습니다.</p><p>2개의 백엔드를 지원합니다.</p><ul><li>파일: ULog 파일을 파일 시스템(SD 카드)에 기록합니다.</li><li>MAVLink: MAVLink를 통해 ULog 데이터를 클라이언트로 스트리밍합니다(클라이언트가 이를 지원해야 함).</li></ul><p>두 백엔드를 동시에 활성화하고 사용할 수 있습니다.</p><p>파일 백엔드는 전체(일반 로그)와 미션 로그의 두 가지 유형의 로그 파일을 지원합니다. 임무 로그는 축소된 ulog 파일이며, 지오태깅 또는 차량 관리 등에 사용할 수 있습니다. SDLOG_MISSION 매개변수를 통하여 활성화 및 설정할 수 있습니다. 일반 로그는 항상 미션 로그의 상위 집합입니다.</p><h3 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h3><p>구현은 두 개의 스레드를 사용합니다.</p><ul><li>고정된 속도로 실행되는 메인 스레드(또는 -p로 시작된 경우 주제에 대한 폴링) 및 데이터 업데이트 확인</li><li>작성자 스레드, 파일에 데이터 쓰기</li></ul><p>그 사이에는 구성 가능한 크기의 쓰기 버퍼가 있습니다(및 미션 로그를 위한 또 다른 고정 크기 버퍼). 드롭아웃을 방지하려면 크기가 커야 합니다.</p><h3 id="예-1" tabindex="-1">예 <a class="header-anchor" href="#예-1" aria-label="Permalink to &quot;예&quot;">​</a></h3><p>즉시 로깅을 시작하는 일반적인 사용법입니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>logger start -e -t</span></span></code></pre></div><p>또는, 이미 동작중일 경우</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>logger on</span></span></code></pre></div><p><a id="logger_usage"></a></p><h3 id="설명-14" tabindex="-1">설명 <a class="header-anchor" href="#설명-14" aria-label="Permalink to &quot;설명&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>logger &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-m &lt;val&gt;]  Backend mode</span></span>
<span class="line"><span>                 values: file|mavlink|all, default: all</span></span>
<span class="line"><span>     [-x]        Enable/disable logging via Aux1 RC channel</span></span>
<span class="line"><span>     [-a]        Log 1st armed until shutdown</span></span>
<span class="line"><span>     [-e]        Enable logging right after start until disarm (otherwise only</span></span>
<span class="line"><span>                 when armed)</span></span>
<span class="line"><span>     [-f]        Log until shutdown (implies -e)</span></span>
<span class="line"><span>     [-t]        Use date/time for naming log directories and files</span></span>
<span class="line"><span>     [-r &lt;val&gt;]  Log rate in Hz, 0 means unlimited rate</span></span>
<span class="line"><span>                 default: 280</span></span>
<span class="line"><span>     [-b &lt;val&gt;]  Log buffer size in KiB</span></span>
<span class="line"><span>                 default: 12</span></span>
<span class="line"><span>     [-p &lt;val&gt;]  Poll on a topic instead of running with fixed rate (Log rate</span></span>
<span class="line"><span>                 and topic intervals are ignored if this is set)</span></span>
<span class="line"><span>                 values: &lt;topic_name&gt;</span></span>
<span class="line"><span>     [-c &lt;val&gt;]  Log rate factor (higher is faster)</span></span>
<span class="line"><span>                 default: 1.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   on            start logging now, override arming (logger must be running)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   off           stop logging now, override arming (logger must be running)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   trigger_watchdog manually trigger the watchdog now</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="netman" tabindex="-1">netman <a class="header-anchor" href="#netman" aria-label="Permalink to &quot;netman&quot;">​</a></h2><p>소스: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/systemcmds/netman" target="_blank" rel="noreferrer">systemcmds/nshterm</a></p><h3 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Online magnetometer bias estimator.</p><p><a id="mag_bias_estimator_usage"></a></p><h3 id="설명-15" tabindex="-1">설명 <a class="header-anchor" href="#설명-15" aria-label="Permalink to &quot;설명&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>netman &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   show          Display the current persistent network settings to the console.</span></span></code></pre></div><h2 id="pwm-input" tabindex="-1">pwm_input <a class="header-anchor" href="#pwm-input" aria-label="Permalink to &quot;pwm_input&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/manual_control" target="_blank" rel="noreferrer">modules/manual_control</a></p><h3 id="description-1" tabindex="-1">Description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Module consuming manual_control_inputs publishing one manual_control_setpoint.</p><p><a id="manual_control_usage"></a></p><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pwm_input &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="netman-1" tabindex="-1">netman <a class="header-anchor" href="#netman-1" aria-label="Permalink to &quot;netman&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/systemcmds/netman" target="_blank" rel="noreferrer">systemcmds/netman</a></p><h3 id="description-network-configuration-manager-saves-the-network-settings-in-non-volatile-memory-on-boot-the-update-option-will-be-run-if-a-network-configuration-does-not-exist-the-default-setting-will-be-saved-in-non-volatile-and-the-system-rebooted" tabindex="-1">Description Network configuration manager saves the network settings in non-volatile memory. On boot the <code>update</code> option will be run. If a network configuration does not exist. The default setting will be saved in non-volatile and the system rebooted. <a class="header-anchor" href="#description-network-configuration-manager-saves-the-network-settings-in-non-volatile-memory-on-boot-the-update-option-will-be-run-if-a-network-configuration-does-not-exist-the-default-setting-will-be-saved-in-non-volatile-and-the-system-rebooted" aria-label="Permalink to &quot;Description Network configuration manager saves the network settings in non-volatile memory. On boot the \`update\` option will be run. If a network configuration does not exist. The default setting will be saved in non-volatile and the system rebooted.&quot;">​</a></h3><h4 id="update" tabindex="-1">update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;update&quot;">​</a></h4><p><code>netman update</code> is run automatically by <a href="./../concept/system_startup.html#system-startup">a startup script</a>. When run, the <code>update</code> option will check for the existence of <code>net.cfg</code> in the root of the SD Card. It then saves the network settings from <code>net.cfg</code> in non-volatile memory, deletes the file and reboots the system.</p><h4 id="save" tabindex="-1">save <a class="header-anchor" href="#save" aria-label="Permalink to &quot;save&quot;">​</a></h4><p>The <code>save</code> option will save settings from non-volatile memory to a file named <code>net.cfg</code> on the SD Card filesystem for editing. Use this to edit the settings. Save does not immediately apply the network settings; the user must reboot the flight stack. By contrast, the <code>update</code> command is run by the start-up script, commits the settings to non-volatile memory, and reboots the flight controller (which will then use the new settings).</p><h4 id="show" tabindex="-1">show <a class="header-anchor" href="#show" aria-label="Permalink to &quot;show&quot;">​</a></h4><p>The <code>show</code> option will display the network settings in <code>net.cfg</code> to the console.</p><h3 id="examples-netman-save-save-the-parameters-to-the-sd-card-netman-show-display-current-settings-netman-update-i-eth0-do-an-update" tabindex="-1">Examples $ netman save # Save the parameters to the SD card. $ netman show # display current settings. $ netman update -i eth0 # do an update <a class="header-anchor" href="#examples-netman-save-save-the-parameters-to-the-sd-card-netman-show-display-current-settings-netman-update-i-eth0-do-an-update" aria-label="Permalink to &quot;Examples $ netman save           # Save the parameters to the SD card. $ netman show           # display current settings. $ netman update -i eth0 # do an update&quot;">​</a></h3><p><a id="netman_usage"></a></p><h3 id="사용법-15" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-15" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>netman &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   show          Display the current persistent network settings to the console.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   update        Check SD card for net.cfg and update network persistent network</span></span>
<span class="line"><span>                 settings.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   save          Save the current network parameters to the SD card.</span></span>
<span class="line"><span>     [-i &lt;val&gt;]  Set the interface name</span></span>
<span class="line"><span>                 default: eth0</span></span></code></pre></div><h2 id="pwm-input-1" tabindex="-1">pwm_input <a class="header-anchor" href="#pwm-input-1" aria-label="Permalink to &quot;pwm_input&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/drivers/pwm_input" target="_blank" rel="noreferrer">drivers/pwm_input</a></p><h3 id="설명-16" tabindex="-1">설명 <a class="header-anchor" href="#설명-16" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p>Measures the PWM input on AUX5 (or MAIN5) via a timer capture ISR and publishes via the uORB &#39;pwm_input\` message.</p><p><a id="pwm_input_usage"></a></p><h3 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pwm_input &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="rc-update" tabindex="-1">rc_update <a class="header-anchor" href="#rc-update" aria-label="Permalink to &quot;rc_update&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/rc_update" target="_blank" rel="noreferrer">modules/rc_update</a></p><h3 id="description-2" tabindex="-1">Description <a class="header-anchor" href="#description-2" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>The rc_update module handles RC channel mapping: read the raw input channels (<code>input_rc</code>), then apply the calibration, map the RC channels to the configured channels &amp; mode switches and then publish as <code>rc_channels</code> and <code>manual_control_input</code>.</p><h3 id="implementation-1" tabindex="-1">Implementation <a class="header-anchor" href="#implementation-1" aria-label="Permalink to &quot;Implementation&quot;">​</a></h3><p>To reduce control latency, the module is scheduled on input_rc publications.</p><p><a id="rc_update_usage"></a></p><h3 id="usage-2" tabindex="-1">Usage <a class="header-anchor" href="#usage-2" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>rc_update &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="replay" tabindex="-1">replay <a class="header-anchor" href="#replay" aria-label="Permalink to &quot;replay&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/replay" target="_blank" rel="noreferrer">modules/replay</a></p><h3 id="description-3" tabindex="-1">Description <a class="header-anchor" href="#description-3" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>This module is used to replay ULog files.</p><p>There are 2 environment variables used for configuration: <code>replay</code>, which must be set to an ULog file name - it&#39;s the log file to be replayed. The second is the mode, specified via <code>replay_mode</code>:</p><ul><li><code>replay_mode=ekf2</code>: 특정 EKF2 재생 모드. ekf2 모듈과 함께만 사용할 수 있지만, 가능한 한 빨리 재생할 수 있습니다.</li><li>일반 그렇지 않으면 이것은 모든 모듈을 재생하는 데 사용할 수 있지만 재생은 로그가 기록된 것과 동일한 속도로 수행됩니다.</li></ul><p>The module is typically used together with uORB publisher rules, to specify which messages should be replayed. The replay module will just publish all messages that are found in the log. It also applies the parameters from the log.</p><p>The replay procedure is documented on the <a href="https://docs.px4.io/v1.15/en/debug/system_wide_replay.html" target="_blank" rel="noreferrer">System-wide Replay</a> page.</p><p><a id="replay_usage"></a></p><h3 id="usage-3" tabindex="-1">Usage <a class="header-anchor" href="#usage-3" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>replay &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start replay, using log file from ENV variable &#39;replay&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   trystart      Same as &#39;start&#39;, but silently exit if no log file given</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   tryapplyparams Try to apply the parameters from the log file</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="send-event" tabindex="-1">send_event <a class="header-anchor" href="#send-event" aria-label="Permalink to &quot;send_event&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/events" target="_blank" rel="noreferrer">modules/events</a></p><h3 id="description-4" tabindex="-1">Description <a class="header-anchor" href="#description-4" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Background process running periodically on the LP work queue to perform housekeeping tasks. It is currently only responsible for tone alarm on RC Loss.</p><p>The tasks can be started via CLI or uORB topics (vehicle_command from MAVLink, etc.).</p><p><a id="send_event_usage"></a></p><h3 id="usage-4" tabindex="-1">Usage <a class="header-anchor" href="#usage-4" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>send_event &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the background task</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-arispeed-sim" tabindex="-1">sensor_arispeed_sim <a class="header-anchor" href="#sensor-arispeed-sim" aria-label="Permalink to &quot;sensor_arispeed_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_airspeed_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_airspeed_sim</a></p><h3 id="description-5" tabindex="-1">Description <a class="header-anchor" href="#description-5" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p><a id="sensor_arispeed_sim_usage"></a></p><h3 id="usage-5" tabindex="-1">Usage <a class="header-anchor" href="#usage-5" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_arispeed_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-baro-sim" tabindex="-1">sensor_baro_sim <a class="header-anchor" href="#sensor-baro-sim" aria-label="Permalink to &quot;sensor_baro_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_baro_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_baro_sim</a></p><h3 id="description-6" tabindex="-1">Description <a class="header-anchor" href="#description-6" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p><a id="sensor_baro_sim_usage"></a></p><h3 id="사용법-16" tabindex="-1">사용법 <a class="header-anchor" href="#사용법-16" aria-label="Permalink to &quot;사용법&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_baro_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-gps-sim" tabindex="-1">sensor_gps_sim <a class="header-anchor" href="#sensor-gps-sim" aria-label="Permalink to &quot;sensor_gps_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_gps_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_gps_sim</a></p><h3 id="설명-17" tabindex="-1">설명 <a class="header-anchor" href="#설명-17" aria-label="Permalink to &quot;설명&quot;">​</a></h3><p><a id="sensor_gps_sim_usage"></a></p><h3 id="usage-6" tabindex="-1">Usage <a class="header-anchor" href="#usage-6" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_gps_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensor-mag-sim" tabindex="-1">sensor_mag_sim <a class="header-anchor" href="#sensor-mag-sim" aria-label="Permalink to &quot;sensor_mag_sim&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/simulation/sensor_mag_sim" target="_blank" rel="noreferrer">modules/simulation/sensor_mag_sim</a></p><h3 id="description-7" tabindex="-1">Description <a class="header-anchor" href="#description-7" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p><a id="sensor_mag_sim_usage"></a></p><h3 id="usage-7" tabindex="-1">Usage <a class="header-anchor" href="#usage-7" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensor_mag_sim &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="sensors" tabindex="-1">sensors <a class="header-anchor" href="#sensors" aria-label="Permalink to &quot;sensors&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/sensors" target="_blank" rel="noreferrer">modules/sensors</a></p><h3 id="description-8" tabindex="-1">Description <a class="header-anchor" href="#description-8" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>The sensors module is central to the whole system. It takes low-level output from drivers, turns it into a more usable form, and publishes it for the rest of the system.</p><p>The provided functionality includes:</p><ul><li>Read the output from the sensor drivers (<code>SensorGyro</code>, etc.). 동일한 유형이 여러 개 있는 경우 투표 및 장애 조치 처리를 수행합니다. 그런 다음, 보드 회전 및 온도 보정을 적용합니다(활성화된 경우). And finally publish the data; one of the topics is <code>SensorCombined</code>, used by many parts of the system.</li><li>매개변수가 변경되거나 시작될 때 센서 드라이버가 업데이트된 보정 매개변수(스케일 및 오프셋)를 가져오는 지 확인하십시오. 센서 드라이버는 매개변수 업데이트를 위하여 ioctl 인터페이스를 사용합니다. 이것이 제대로 작동하려면, <code>센서</code>가 시작될 때 센서 드라이버가 이미 실행되고 있어야 합니다.</li><li>Do sensor consistency checks and publish the <code>SensorsStatusImu</code> topic.</li></ul><h3 id="implementation-2" tabindex="-1">Implementation <a class="header-anchor" href="#implementation-2" aria-label="Permalink to &quot;Implementation&quot;">​</a></h3><p>It runs in its own thread and polls on the currently selected gyro topic.</p><p><a id="sensors_usage"></a></p><h3 id="usage-8" tabindex="-1">Usage <a class="header-anchor" href="#usage-8" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sensors &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-h]        Start in HIL mode</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="tattu-can" tabindex="-1">tattu_can <a class="header-anchor" href="#tattu-can" aria-label="Permalink to &quot;tattu_can&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/drivers/tattu_can" target="_blank" rel="noreferrer">drivers/tattu_can</a></p><h3 id="description-9" tabindex="-1">Description <a class="header-anchor" href="#description-9" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Driver for reading data from the Tattu 12S 16000mAh smart battery.</p><p><a id="tattu_can_usage"></a></p><h3 id="usage-9" tabindex="-1">Usage <a class="header-anchor" href="#usage-9" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tattu_can &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="temperature-compensation" tabindex="-1">temperature_compensation <a class="header-anchor" href="#temperature-compensation" aria-label="Permalink to &quot;temperature_compensation&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/modules/temperature_compensation" target="_blank" rel="noreferrer">modules/temperature_compensation</a></p><h3 id="description-10" tabindex="-1">Description <a class="header-anchor" href="#description-10" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>The temperature compensation module allows all of the gyro(s), accel(s), and baro(s) in the system to be temperature compensated. The module monitors the data coming from the sensors and updates the associated sensor_correction topic whenever a change in temperature is detected. The module can also be configured to perform the coeffecient calculation routine at next boot, which allows the thermal calibration coeffecients to be calculated while the vehicle undergoes a temperature cycle.</p><p><a id="temperature_compensation_usage"></a></p><h3 id="usage-10" tabindex="-1">Usage <a class="header-anchor" href="#usage-10" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>temperature_compensation &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start         Start the module, which monitors the sensors and updates the</span></span>
<span class="line"><span>                 sensor_correction topic</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   calibrate     Run temperature calibration process</span></span>
<span class="line"><span>     [-a]        calibrate the accel</span></span>
<span class="line"><span>     [-g]        calibrate the gyro</span></span>
<span class="line"><span>     [-m]        calibrate the mag</span></span>
<span class="line"><span>     [-b]        calibrate the baro (if none of these is given, all will be</span></span>
<span class="line"><span>                 calibrated)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="tune-control" tabindex="-1">tune_control <a class="header-anchor" href="#tune-control" aria-label="Permalink to &quot;tune_control&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/systemcmds/tune_control" target="_blank" rel="noreferrer">systemcmds/tune_control</a></p><h3 id="description-11" tabindex="-1">Description <a class="header-anchor" href="#description-11" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Command-line tool to control &amp; test the (external) tunes.</p><p>Tunes are used to provide audible notification and warnings (e.g. when the system arms, gets position lock, etc.). The tool requires that a driver is running that can handle the tune_control uorb topic.</p><p>Information about the tune format and predefined system tunes can be found here: <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/lib/tunes/tune_definition.desc" target="_blank" rel="noreferrer">https://github.com/PX4/PX4-Autopilot/blob/release/1.15/src/lib/tunes/tune_definition.desc</a></p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Play system tune #2:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tune_control play -t 2</span></span></code></pre></div><p><a id="tune_control_usage"></a></p><h3 id="usage-11" tabindex="-1">Usage <a class="header-anchor" href="#usage-11" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>tune_control &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   play          Play system tune or single note.</span></span>
<span class="line"><span>     error       Play error tune</span></span>
<span class="line"><span>     [-t &lt;val&gt;]  Play predefined system tune</span></span>
<span class="line"><span>                 default: 1</span></span>
<span class="line"><span>     [-f &lt;val&gt;]  Frequency of note in Hz (0-22kHz)</span></span>
<span class="line"><span>     [-d &lt;val&gt;]  Duration of note in us</span></span>
<span class="line"><span>     [-s &lt;val&gt;]  Volume level (loudness) of the note (0-100)</span></span>
<span class="line"><span>                 default: 40</span></span>
<span class="line"><span>     [-m &lt;val&gt;]  Melody in string form</span></span>
<span class="line"><span>                 values: &lt;string&gt; - e.g. &quot;MFT200e8a8a&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   libtest       Test library</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop          Stop playback (use for repeated tunes)</span></span></code></pre></div><h2 id="uxrce-dds-client" tabindex="-1">uxrce_dds_client <a class="header-anchor" href="#uxrce-dds-client" aria-label="Permalink to &quot;uxrce_dds_client&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/modules/uxrce_dds_client" target="_blank" rel="noreferrer">modules/uxrce_dds_client</a></p><h3 id="description-12" tabindex="-1">Description <a class="header-anchor" href="#description-12" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>UXRCE-DDS Client used to communicate uORB topics with an Agent over serial or UDP.</p><h3 id="examples-1" tabindex="-1">Examples <a class="header-anchor" href="#examples-1" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>uxrce_dds_client start -t serial -d /dev/ttyS3 -b 921600</span></span>
<span class="line"><span>uxrce_dds_client start -t udp -h 127.0.0.1 -p 15555</span></span></code></pre></div><p><a id="uxrce_dds_client_usage"></a></p><h3 id="usage-12" tabindex="-1">Usage <a class="header-anchor" href="#usage-12" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>uxrce_dds_client &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span>     [-t &lt;val&gt;]  Transport protocol</span></span>
<span class="line"><span>                 values: serial|udp, default: udp</span></span>
<span class="line"><span>     [-d &lt;val&gt;]  serial device</span></span>
<span class="line"><span>                 values: &lt;file:dev&gt;</span></span>
<span class="line"><span>     [-b &lt;val&gt;]  Baudrate (can also be p:&lt;param_name&gt;)</span></span>
<span class="line"><span>                 default: 0</span></span>
<span class="line"><span>     [-h &lt;val&gt;]  Agent IP. If not provided, defaults to UXRCE_DDS_AG_IP</span></span>
<span class="line"><span>                 values: &lt;IP&gt;</span></span>
<span class="line"><span>     [-p &lt;val&gt;]  Agent listening port. If not provided, defaults to</span></span>
<span class="line"><span>                 UXRCE_DDS_PRT</span></span>
<span class="line"><span>     [-n &lt;val&gt;]  Client DDS namespace</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div><h2 id="work-queue" tabindex="-1">work_queue <a class="header-anchor" href="#work-queue" aria-label="Permalink to &quot;work_queue&quot;">​</a></h2><p>Source: <a href="https://github.com/PX4/PX4-Autopilot/tree/master/src/systemcmds/work_queue" target="_blank" rel="noreferrer">systemcmds/work_queue</a></p><h3 id="description-13" tabindex="-1">Description <a class="header-anchor" href="#description-13" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Command-line tool to show work queue status.</p><p><a id="work_queue_usage"></a></p><h3 id="usage-13" tabindex="-1">Usage <a class="header-anchor" href="#usage-13" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>work_queue &lt;command&gt; [arguments...]</span></span>
<span class="line"><span> Commands:</span></span>
<span class="line"><span>   start</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   stop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   status        print status info</span></span></code></pre></div>`,280),l=[p];function i(o,r,c,d,h,u){return n(),s("div",null,l)}const b=a(t,[["render",i]]);export{g as __pageData,b as default};
