import{_ as t,a as e,b as a}from"./chunks/mro_x21_wiring.D9V6_9jN.js";import{_ as r,c as l,o as i,ab as o}from"./chunks/framework.CUflZczI.js";const S=JSON.parse('{"title":"mRo-X2.1 자동조종장치","description":"","frontmatter":{},"headers":[],"relativePath":"ko/flight_controller/mro_x2.1.md","filePath":"ko/flight_controller/mro_x2.1.md"}'),s={name:"ko/flight_controller/mro_x2.1.md"},d=o('<h1 id="mro-x2-1-자동조종장치" tabindex="-1">mRo-X2.1 자동조종장치 <a class="header-anchor" href="#mro-x2-1-자동조종장치" aria-label="Permalink to &quot;mRo-X2.1 자동조종장치&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">PX4에서는 이 제품을 제조하지 않습니다. 하드웨어 지원과 호환 문제는 <a href="https://store.mrobotics.io/" target="_blank" rel="noreferrer">제조사</a>에 문의하십시오.</p></div><p><a href="http://www.mRobotics.io/" target="_blank" rel="noreferrer"> mRo-X2.1 자동 조종 장치</a>는 Pixhawk<sup>®</sup> - 프로젝트 <strong>FMUv2</strong> 오픈 하드웨어 디자인을 기반으로합니다. PX4를 <a href="https://nuttx.apache.org/" target="_blank" rel="noreferrer">NuttX</a> OS에서 실행합니다.</p><p><img src="'+t+'" alt="mRo X2.1"></p><p>:::note 이 비행 컨트롤러는 <a href="./../flight_controller/autopilot_manufacturer_supported.html">제조업체의 지원</a>을 받을 수 있습니다. :::</p><h2 id="요약" tabindex="-1">요약 <a class="header-anchor" href="#요약" aria-label="Permalink to &quot;요약&quot;">​</a></h2><ul><li>메인 시스템 온칩: <a href="http://www.st.com/web/en/catalog/mmc/FM141/SC1169/SS1577/LN1789" target="_blank" rel="noreferrer">STM32F427</a><ul><li>CPU : STM32F427VIT6 ARM<sup>®</sup> 마이크로 컨트롤러 - 개정판 3</li><li>IO: STM32F100C8T6 ARM<sup>®</sup> 마이크로 컨트롤러</li></ul></li><li>센서: <ul><li>Invensense<sup>®</sup> MPU9250 9DOF</li><li>Invensense ICM-20602 6DOF</li><li>MEAS MS5611 기압계</li></ul></li><li>크기/중량 <ul><li>크기: 36mm x 50mm (수직, 수평 또는 헤더가 설치되지 않은 상태로 주문 가능)</li><li>장착 지점 : 직경 30.5mm x 30.5mm 3.2mm</li><li>중량: 10.9g</li></ul></li></ul><p>아래 다이어그램은 Pixhawk 1과 비교한 것입니다. mRo는 거의 동일한 하드웨어와 연결 기능을 제공하지만, 설치 공간이 훨씬 작습니다. 주요 차이점은 업데이트된 센서와 Rev 3 FMU입니다.</p><p><img src="'+e+'" alt="Mro Pixhawk 1과 X2.1 비교"></p><h2 id="연결성" tabindex="-1">연결성 <a class="header-anchor" href="#연결성" aria-label="Permalink to &quot;연결성&quot;">​</a></h2><ul><li>2.54mm 헤더 :</li><li>I2C가 장착 된 GPS(UART4)</li><li>CAN 버스</li><li>RC 입력</li><li>PPM 입력</li><li>Spektrum 입력</li><li>RSSI 입력</li><li>sBus 입력</li><li>sBus 출력</li><li>전원 입력</li><li>부저 출력</li><li>LED 출력</li><li>Servo 출력 8개</li><li>Aux 출력 6개</li><li>오프 보드 microUSB 커넥터</li><li>Kill Pin output <em>(Currently not supported by firmware)</em></li><li>항속 센서</li><li>USART2 (Telem 1)</li><li>USART3 (Telem 2)</li><li>UART7 (콘솔)</li><li>UART8 (OSD)</li></ul><h2 id="px4-부트로더-문제" tabindex="-1">PX4 부트로더 문제 <a class="header-anchor" href="#px4-부트로더-문제" aria-label="Permalink to &quot;PX4 부트로더 문제&quot;">​</a></h2><p>기본적으로 mRo X2.1은 PX4가 아닌 ArduPilot<sup>®</sup> 용으로 미리 설정되어 제공될 수 있습니다. This can be seen during firmware update when the board is recognized as FMUv2 instead of X2.1.</p><p>이 경우 <a href="https://github.com/PX4/px4_user_guide/raw/master/assets/hardware/BL_Update_X21.zip" target="_blank" rel="noreferrer">BL_Update_X21.zip</a>을 사용하여 부트로더를 업데이트하여합니다 이 캘리브레이션을 수행하지 않으면 나침반 방향이 잘못되어 보조 IMU는 감지되지 않을 수 있습니다. 이 캘리브레이션을 수행하지 않으면 나침반 방향이 잘못되어 보조 IMU는 감지되지 않을 수 있습니다.</p><p>업데이트 단계는 다음과 같습니다.</p><ol><li><a href="https://github.com/PX4/px4_user_guide/raw/master/assets/hardware/BL_Update_X21.zip" target="_blank" rel="noreferrer">BL_Update_X21.zip</a>을 다운로드하고 압축을 해제하십시오.</li><li>Find the folder <em>BL_Update_X21</em>. 여기에는 <strong>rc.txt</strong> 파일이 들어있는 <strong>bin</strong> 파일과 <strong>/etc</strong> 하위 폴더가 있습니다</li><li>이 파일을 마이크로 SD 카드의 루트 디렉토리에 복사하여 mRO x2.1에 삽입하십시오.</li><li>Mro x2.1의 전원을 켜십시오. 부팅시까지 기다렸다가 한 번 재부팅하십시오.</li></ol><h2 id="구매처" tabindex="-1">구매처 <a class="header-anchor" href="#구매처" aria-label="Permalink to &quot;구매처&quot;">​</a></h2><p>이 제품은 <a href="https://store.mrobotics.io/mRo-X2-1-Rev-2-p/m10021a.htm" target="_blank" rel="noreferrer">mRobotics<sup>®</sup> 상점</a>에서 주문할 수 있습니다.</p><h2 id="배선-가이드" tabindex="-1">배선 가이드 <a class="header-anchor" href="#배선-가이드" aria-label="Permalink to &quot;배선 가이드&quot;">​</a></h2><p><img src="'+a+'" alt="mRo_X2.1 배선"></p><h2 id="펌웨어-빌드" tabindex="-1">펌웨어 빌드 <a class="header-anchor" href="#펌웨어-빌드" aria-label="Permalink to &quot;펌웨어 빌드&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">대부분의 사용자들은 펌웨어를 빌드할 필요는 없습니다. It is pre-built and automatically installed by <em>QGroundControl</em> when appropriate hardware is connected.</p><p>:::</p><p>이 대상에 대한 <a href="./../dev_setup/building_px4.html">PX4 빌드</a> 방법 :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>make mro_x21_default</span></span></code></pre></div><h2 id="회로도" tabindex="-1">회로도 <a class="header-anchor" href="#회로도" aria-label="Permalink to &quot;회로도&quot;">​</a></h2><p>이 보드는 mRo 하드웨어 저장수 <a href="https://github.com/mRoboticsIO/Hardware/blob/master/X2.1/Docs/x21_V2_schematic.pdf" target="_blank" rel="noreferrer">x21_V2_schematic.pdf</a>에 문서화되어 있습니다.</p><h2 id="시리얼-포트-매핑" tabindex="-1">시리얼 포트 매핑 <a class="header-anchor" href="#시리얼-포트-매핑" aria-label="Permalink to &quot;시리얼 포트 매핑&quot;">​</a></h2><table><thead><tr><th>UART</th><th>장치</th><th>포트</th></tr></thead><tbody><tr><td>USART1</td><td>/dev/ttyS0</td><td>IO 디버그</td></tr><tr><td>USART2</td><td>/dev/ttyS1</td><td>SERIAL1</td></tr><tr><td>USART3</td><td>/dev/ttyS2</td><td>TELEM2</td></tr><tr><td>UART4</td><td>/dev/ttyS3</td><td>GPS/I2C</td></tr><tr><td>USART6</td><td>/dev/ttyS4</td><td>PX4IO</td></tr><tr><td>UART7</td><td>/dev/ttyS5</td><td>SERIAL5 콘솔</td></tr><tr><td>UART8</td><td>/dev/ttyS6</td><td>SERIAL4</td></tr></tbody></table></div>',22),n=[d];function p(h,m,c,u,_,b){return i(),l("div",null,n)}const R=r(s,[["render",p]]);export{S as __pageData,R as default};
