import{_ as s,c as i,o as a,ab as e}from"./chunks/framework.CUflZczI.js";const F=JSON.parse('{"title":"Відтворення усієї системи","description":"","frontmatter":{},"headers":[],"relativePath":"uk/debug/system_wide_replay.md","filePath":"uk/debug/system_wide_replay.md"}'),t={name:"uk/debug/system_wide_replay.md"},l=e(`<h1 id="відтворення-усієі-системи" tabindex="-1">Відтворення усієї системи <a class="header-anchor" href="#відтворення-усієі-системи" aria-label="Permalink to &quot;Відтворення усієї системи&quot;">​</a></h1><p>Можливо записувати та відтворювати довільні частини системи на основі повідомлень ORB.</p><p>Перегравання корисне для тестування ефекту різних значень параметрів на основі реальних даних, порівняння різних оцінювачів тощо.</p><h2 id="передумови" tabindex="-1">Передумови <a class="header-anchor" href="#передумови" aria-label="Permalink to &quot;Передумови&quot;">​</a></h2><p>Перший крок - визначити модуль або модулі, які слід відтворити. Потім визначте всі вхідні дані для цих модулів, тобто підписані теми ORB. Для системного відтворення це включає в себе всі апаратні вхідні дані: сенсори, вхід RC, команди MAVLink та файлову систему.</p><p>Всі виявлені теми потрібно реєструвати з повною швидкістю (див. <a href="./../dev_log/logging.html">журналювання</a>). Для <code>ekf2</code> це вже є випадок зі стандартним набором залогованих тем.</p><p>Важливо, щоб усі повторені теми містили лише один абсолютний відмітковий час, який є автоматично створеним полем <code>timestamp</code>. Якщо потрібно додати більше відміток часу, вони повинні бути відносно основної відмітки. Наприклад, див. <a href="https://github.com/PX4/PX4-Autopilot/blob/release/1.15/msg/SensorCombined.msg" target="_blank" rel="noreferrer">SensorCombined.msg</a>. Причини цього наведено нижче.</p><h2 id="використання" tabindex="-1">Використання <a class="header-anchor" href="#використання" aria-label="Permalink to &quot;Використання&quot;">​</a></h2><ul><li><p>Спочатку виберіть файл для відтворення та побудуйте ціль (з каталогу PX4-Autopilot):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> replay</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">absolute_path_to_log_file.ulg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span></span></code></pre></div><p>Це створить вихід збірки/результат у окремому каталозі збірки <code>build/px4_sitl_default_replay</code> (щоб параметри не втручалися в звичайні збірки). Можна вибрати будь-яку ціль побудови posix SITL для відтворення, оскільки система побудови знає через змінну середовища <code>replay</code>, що вона знаходиться в режимі відтворення.</p></li><li><p>Додайте правила видавця ORB у файл <code>build/px4_sitl_default_replay/rootfs/orb_publisher.rules</code>. Цей файл визначає модулі, які мають право публікувати певні повідомлення. Має наступний формат:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">restrict_topics:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">topic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">1&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">topic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">topic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">modul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ignore_others:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/fals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Це означає, що заданий список тем повинен бути опублікований лише за допомогою <code>&lt;module&gt;</code> (яке є ім&#39;ям команди). Публікації з будь-якої з цих тем з іншого модуля мовчки ігноруються. Якщо <code>ignore_others</code> встановлено в <code>true</code>, публікації в інші теми від <code>&lt;module&gt;</code> ігноруються.</p><p>Для відтворення ми хочемо, щоб модуль <code>replay</code> міг публікувати раніше визначений список тем. Отже, для повторення <code>ekf2</code> файл правил повинен виглядати так:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">restrict_topics:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sensor_combined,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vehicle_gps_position,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vehicle_land_detected</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> replay</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ignore_others:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div><p>З цим модулями, які зазвичай публікують ці теми, не потрібно вимикати для повторення.</p></li><li><p><em>(Опціонально)</em> Налаштуйте заміщення параметрів (див. <a href="#overriding-parameters-in-the-original-log">інструкції нижче</a>).</p></li><li><p><em>(Необов&#39;язково)</em> Скопіюйте файл місії <code>dataman</code> з SD-карти в каталог збірки. Це потрібно лише у випадку, якщо місію слід переграти.</p></li><li><p>Почніть відтворення:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl_default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmavsim</span></span></code></pre></div><p>Це автоматично відкриє файл журналу, застосує параметри та почне відтворення. Після завершення буде повідомляти про результат і вихід. Новостворений файл журналу можна потім проаналізувати. Це можна знайти в <code>rootfs/fs/microsd/log</code>, у підкаталогах, організованих за датою. Імена файлів журналу повторення матимуть суфікс <code>_replayed</code>.</p><p>Зверніть увагу, що вищезазначена команда також покаже симулятор, але - в залежності від того, що відтворюється - вона не покаже, що насправді відбувається. Ще завжди можна підключитися через QGC та, наприклад, переглянути зміну ставлення під час відтворення.</p></li><li><p>Нарешті, скасуйте змінну середовища, щоб знову використовувалися звичайні цілі збирання:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> replay</span></span></code></pre></div></li></ul><h3 id="перевизначення-параметрів-у-вихідному-журналі" tabindex="-1">Перевизначення параметрів у вихідному журналі <a class="header-anchor" href="#перевизначення-параметрів-у-вихідному-журналі" aria-label="Permalink to &quot;Перевизначення параметрів у вихідному журналі&quot;">​</a></h3><p>За замовчуванням, під час відтворення застосовуються всі параметри зі стартового файлу журналу. Якщо параметр змінюється під час запису, він буде змінений у відповідний час під час відтворення.</p><p>Параметри можуть бути замінені під час повторного відтворення двома способами: <em>фіксований</em> та <em>динамічний</em>. Коли параметри перевизначаються, відповідні зміни параметрів в журналі не застосовуються під час повторного відтворення.</p><ul><li><p><strong>Фіксовані заміщення параметрів</strong> замінять параметри з початку відтворення. Вони визначені у файлі <code>build/px4_sitl_default_replay/rootfs/replay_params.txt</code>, де кожний рядок повинен мати формат <code>&lt;param_name&gt; &lt;value&gt;</code>. Наприклад:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EKF2_RNG_NOISE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span></span></code></pre></div></li><li><p><strong>Заміщення динамічних параметрів</strong> оновить значення параметрів у вказані часи. Ці параметри все ще будуть ініціалізовані до значень у журналі або в зафіксованих замінах. Події оновлення параметрів повинні бути визначені у файлі <code>build/px4_sitl_default_replay/rootfs/replay_params_dynamic.txt</code>, де кожний рядок має формат <code>&lt;param_name&gt; &lt;value&gt; &lt;timestamp&gt;</code>. Відмітка часу - це час у секундах з моменту початку журналу. Наприклад:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EKF2_RNG_NOISE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.15</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 23.4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EKF2_RNG_NOISE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 56.7</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EKF2_RNG_DELAY</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4.5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30.0</span></span></code></pre></div></li></ul><h3 id="важливе-зауваження" tabindex="-1">Важливе зауваження <a class="header-anchor" href="#важливе-зауваження" aria-label="Permalink to &quot;Важливе зауваження&quot;">​</a></h3><ul><li>Під час відтворення всі відключення в журналі звітуються. Вони мають негативний вплив на повторення, тому слід уникати втрат під час запису.</li><li>Наразі можливо лише відтворення в &#39;реальному часі&#39;: так швидко, як було зроблено запис. Це планується розширити у майбутньому.</li><li>Повідомлення з міткою часу 0 буде вважатися недійсним і не буде відтворено.</li></ul><h2 id="ekf2-повтор" tabindex="-1">EKF2 Повтор <a class="header-anchor" href="#ekf2-повтор" aria-label="Permalink to &quot;EKF2 Повтор&quot;">​</a></h2><p>Це спеціалізація системного повторення для швидкого відтворення EKF2.</p><div class="info custom-block"><p class="custom-block-title">Запис і відтворення журналів польоту з <a href="./../advanced_config/tuning_the_ecl_ekf.html#running-multiple-ekf-instances">декількома екземплярами EKF</a> не підтримується. Щоб увімкнути запис для відтворення EKF, ви повинні встановити параметри для увімкнення <a href="./../advanced_config/tuning_the_ecl_ekf.html#running-a-single-ekf-instance">одного екземпляра EKF</a>.</p></div><p>У режимі EKF2 відтворення автоматично створить правила публікації ORB, описані вище.</p><p>Для виконання повторення EKF2:</p><ul><li><p>Запишіть оригінальний журнал. Необов&#39;язково встановіть <code>SDLOG_MODE</code> на <code>1</code>, щоб вести журнал з завантаження.</p></li><li><p>Крім змінної середовища <code>replay</code>, встановіть <code>replay_mode</code> на <code>ekf2</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> replay_mode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ekf2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> replay</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">absolute_path_to_log.ulg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p>Виконайте відтворення з метою <code>none</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> none</span></span></code></pre></div></li><li><p>Після завершення скиньте як <code>replay</code>, так і <code>replay_mode</code>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> replay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> replay_mode</span></span></code></pre></div></li></ul><h3 id="налаштування-конкретних-параметрів-ekf2-для-відтворення" tabindex="-1">Налаштування конкретних параметрів EKF2 для відтворення <a class="header-anchor" href="#налаштування-конкретних-параметрів-ekf2-для-відтворення" aria-label="Permalink to &quot;Налаштування конкретних параметрів EKF2 для відтворення&quot;">​</a></h3><p>Спочатку встановіть <code>pyulog</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyulog</span></span></code></pre></div><p>Видобути параметри початкового журналу в <code>replay_params.txt</code>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ulog_params</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$replay</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39; &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;^EKF2&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/px4_sitl_default_replay/rootfs/replay_params.txt</span></span></code></pre></div><p>Настроїть їх за потребою та додайте динамічні заміни параметрів у <code>replay_params_dynamic.txt</code>, якщо необхідно.</p><h2 id="позаду-кадру" tabindex="-1">Позаду кадру <a class="header-anchor" href="#позаду-кадру" aria-label="Permalink to &quot;Позаду кадру&quot;">​</a></h2><p>Перегравання розділено на 3 компоненти:</p><ul><li>Модуль повторення Вони мають негативний вплив на повторення, тому слід уникати втрат під час запису.</li><li>Наразі можливо лише відтворення в &#39;реальному часі&#39;: так швидко, як було зроблено запис.</li></ul><p>Модуль відтворення читає журнал та публікує повідомлення з тією самою швидкістю, з якою вони були записані. До часового позначення кожного повідомлення додається постійний зсув, щоб відповідати поточному часу системи (це причина, чому всі інші часові позначення повинні бути відносними). Команда <code>replay tryapplyparams</code> виконується перед завантаженням усіх інших модулів та застосовує параметри з журналу та параметри, встановлені користувачем. Потім як остання команда, <code>replay trystart</code> знову застосує параметри та розпочне фактичне відтворення. Обидва команди нічого не роблять, якщо змінна середовища <code>replay</code> не встановлена.</p><p>Правила видавця ORB дозволяють вибрати, яка частина системи повторюється, як описано вище. Вони компілюються лише для цільових posix SITL.</p><p><strong>Обробка часу</strong> все ще є <strong>відкритою точкою</strong>, і її потрібно реалізувати.</p>`,33),p=[l];function h(n,k,d,o,r,c){return a(),i("div",null,p)}const y=s(t,[["render",h]]);export{F as __pageData,y as default};
