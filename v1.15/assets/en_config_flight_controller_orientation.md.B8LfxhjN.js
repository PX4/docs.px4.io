import{_ as e}from"./chunks/frame_heading.BVXpPGlI.js";import{_ as t}from"./chunks/fc_orientation_1.D8ee5fZQ.js";import{_ as o,a,b as n}from"./chunks/sensor_orientation_selector_values.yWM1i6rF.js";import{_ as r,c as i,o as l,ab as s}from"./chunks/framework.CUflZczI.js";const S=JSON.parse('{"title":"Flight Controller/Sensor Orientation","description":"","frontmatter":{},"headers":[],"relativePath":"en/config/flight_controller_orientation.md","filePath":"en/config/flight_controller_orientation.md"}'),c={name:"en/config/flight_controller_orientation.md"},h=s('<h1 id="flight-controller-sensor-orientation" tabindex="-1">Flight Controller/Sensor Orientation <a class="header-anchor" href="#flight-controller-sensor-orientation" aria-label="Permalink to &quot;Flight Controller/Sensor Orientation&quot;">​</a></h1><p>By default the flight controller and external compass(es) (if present) should be placed on the frame top-side up, oriented so that the arrow points towards the front of the vehicle. If the board or any external compasses are mounted in any other orientation then you will need configure this in the firmware.</p><h2 id="calculating-orientation" tabindex="-1">Calculating Orientation <a class="header-anchor" href="#calculating-orientation" aria-label="Permalink to &quot;Calculating Orientation&quot;">​</a></h2><p>ROLL, PITCH and/or YAW offsets of the flight controller are calculated relative to the vehicle around the forward (x), right (y), down (z) axes.</p><p><img src="'+e+'" alt="Frame Heading"></p><p>The axes to rotate around stay the same from one rotation step to the next one. So the frame to perform the rotation in stays fixed. This is also known as <em>extrinsic rotation</em>.</p><p><img src="'+t+'" alt="Vehicle orientation"></p><p>For example, the vehicles shown below have rotations around the z-axis (i.e. yaw only) corresponding to: <code>ROTATION_NONE</code>, <code>ROTATION_YAW_90</code>,<code>ROTATION_YAW_180</code>,<code>ROTATION_YAW_270</code>.</p><p><img src="'+o+'" alt="Yaw Rotation"></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>For a VTOL Tailsitter airframe set the vehicle orientation according to its multirotor configuration (i.e. relative to the vehicle during, takeoff, hovering, landing) for all sensor calibrations.</p><p>The axis are normally relative to the orientation of the vehicle during steady forward flight. For more information see <a href="./../getting_started/px4_basic_concepts.html#heading-and-directions">Basic Concepts</a>.</p></div><h2 id="setting-the-flight-controller-orientation" tabindex="-1">Setting the Flight Controller Orientation <a class="header-anchor" href="#setting-the-flight-controller-orientation" aria-label="Permalink to &quot;Setting the Flight Controller Orientation&quot;">​</a></h2><p>To set the orientations:</p><ol><li><p>Start <em>QGroundControl</em> and connect the vehicle.</p></li><li><p>Select <strong>&quot;Q&quot; icon &gt; Vehicle Setup &gt; Sensors</strong> (sidebar) to open <em>Sensor Setup</em>.</p></li><li><p>Select the <strong>Orientations</strong> button.</p><p><img src="'+a+'" alt="Set sensor orientations"></p></li><li><p>Select the <strong>AutoPilot Orientation</strong> (as <a href="#calculating-orientation">calculated above</a>).</p><p><img src="'+n+'" alt="Orientation options"></p></li><li><p>Press <strong>OK</strong>.</p></li></ol><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You can use <a href="./../config/level_horizon_calibration.html">Level Horizon Calibration</a> to compensate for small miss-alignments in controller orientation and to level the horizon in flight view.</p></div><h2 id="setting-the-compass-orientation" tabindex="-1">Setting the Compass Orientation <a class="header-anchor" href="#setting-the-compass-orientation" aria-label="Permalink to &quot;Setting the Compass Orientation&quot;">​</a></h2><p>PX4 will automatically detect the compass orientation as part of <a href="./../config/compass.html">compass calibration</a> (<a href="./../advanced_config/parameter_reference.html#SENS_MAG_AUTOROT">by default</a>) for any of the <a href="https://mavlink.io/en/messages/common.html#MAV_SENSOR_ORIENTATION" target="_blank" rel="noreferrer">standard MAVLink orientations</a> (upright and facing forward, or any multiple of 45° offset in any axis) .</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You can confirm that auto detection worked by looking at the <a href="./../advanced_config/parameter_reference.html#CAL_MAG0_ROT">CAL_MAGn_ROT</a> parameters.</p></div><p>If a non-standard orientation has been used you will need to set the <a href="./../advanced_config/parameter_reference.html#CAL_MAG0_ROLL">CAL_MAGx_ROLL</a>, <a href="./../advanced_config/parameter_reference.html#CAL_MAG0_PITCH">CAL_MAGx_PITCH</a>, and <a href="./../advanced_config/parameter_reference.html#CAL_MAG0_YAW">CAL_MAGx_YAW</a> parameters for each compass to the angles that were used.</p><p>This will automatically set <a href="./../advanced_config/parameter_reference.html#CAL_MAG0_ROT">CAL_MAGn_ROT</a> to &quot;custom euler angle&quot; and prevents automatic calibration for the selected compass (even if <a href="./../advanced_config/parameter_reference.html#SENS_MAG_AUTOROT">SENS_MAG_AUTOROT</a> is set).</p><h2 id="further-information" tabindex="-1">Further Information <a class="header-anchor" href="#further-information" aria-label="Permalink to &quot;Further Information&quot;">​</a></h2><ul><li><a href="./../advanced_config/advanced_flight_controller_orientation_leveling.html">Advanced Orientation Tuning</a> (advanced users only).</li><li><a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/setup_view/sensors_px4.html#flight_controller_orientation" target="_blank" rel="noreferrer">QGroundControl User Guide &gt; Sensors</a></li></ul>',21),d=[h];function f(p,_,m,g,u,A){return l(),i("div",null,d)}const C=r(c,[["render",f]]);export{S as __pageData,C as default};
