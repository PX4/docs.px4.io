import{_ as e}from"./chunks/qgc_mavlink_console_listener_command.BeZ-0uhk.js";import{_ as o,c as t,o as s,ab as a}from"./chunks/framework.CUflZczI.js";const g=JSON.parse('{"title":"使用侦听器命令进行传感器/主题调试","description":"","frontmatter":{},"headers":[],"relativePath":"zh/debug/sensor_uorb_topic_debugging.md","filePath":"zh/debug/sensor_uorb_topic_debugging.md"}'),i={name:"zh/debug/sensor_uorb_topic_debugging.md"},n=a('<h1 id="使用侦听器命令进行传感器-主题调试" tabindex="-1">使用侦听器命令进行传感器/主题调试 <a class="header-anchor" href="#使用侦听器命令进行传感器-主题调试" aria-label="Permalink to &quot;使用侦听器命令进行传感器/主题调试&quot;">​</a></h1><p>uORB 是用于进程间通信的异步 <code>publish()</code>/<code>subscribe()</code> 消息传递 API。 The <code>listener</code> command can be used from the <em>QGroundControl MAVLink Console</em> to inspect topic (message) values, including the current values published by sensors.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This is a powerful debugging tool because it can be used even when QGC is connected over a wireless link (e.g. when the vehicle is flying).</p></div><div class="info custom-block"><p class="custom-block-title">The <code>listener</code> command is also available through the <a href="./../debug/system_console.html">System Console</a> and the <a href="./../debug/mavlink_shell.html">MAVLink Shell</a>.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To check what topics are available at what rate, just use the <code>uorb top</code> command.</p></div><p>The image below demonstrates <em>QGroundControl</em> being used to get the value of the acceleration sensor.</p><p><img src="'+e+'" alt="QGC MAVLink Console"></p><p>For more information about how to determine what topics are available and how to call <code>listener</code> see: <a href="./../middleware/uorb.html#listing-topics-and-listening-in">uORB Messaging &gt; Listing Topics and Listening in</a>.</p>',8),c=[n];function l(r,d,u,h,p,m){return s(),t("div",null,c)}const f=o(i,[["render",l]]);export{g as __pageData,f as default};
