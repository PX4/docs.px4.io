import{_ as a,a as e}from"./chunks/gimbal-simulation.BEN-KceN.js";import{_ as i,c as t,o as l,ab as o}from"./chunks/framework.CUflZczI.js";const b=JSON.parse('{"title":"Конфігурація Gimbal(стабілізатора)","description":"","frontmatter":{},"headers":[],"relativePath":"uk/advanced/gimbal_control.md","filePath":"uk/advanced/gimbal_control.md"}'),s={name:"uk/advanced/gimbal_control.md"},n=o('<h1 id="конфігурація-gimbal-стабілізатора" tabindex="-1">Конфігурація Gimbal(стабілізатора) <a class="header-anchor" href="#конфігурація-gimbal-стабілізатора" aria-label="Permalink to &quot;Конфігурація Gimbal(стабілізатора)&quot;">​</a></h1><p>Ця сторінка пояснює, як налаштувати та контролювати стабілізатор, що має приєднану камеру (або будь-який інший вантаж).</p><h2 id="загальнии-огляд" tabindex="-1">Загальний огляд <a class="header-anchor" href="#загальнии-огляд" aria-label="Permalink to &quot;Загальний огляд&quot;">​</a></h2><p>PX4 містить універсальний драйвер керування кріпленням/гімбалем, який підтримує різні методи введення та виведення:</p><ul><li>Метод введення визначає протокол, який використовується для керування gimbal mount який керується PX4. Це може бути контролер RC, команда MAVLink, надіслана GCS, або обидва — автоматичне перемикання між ними.</li><li>Метод виведення визначає, як PX4 взаємодіє з підключеним гімбалем. Рекомендований протокол — MAVLink v2, але ви також можете підключитися безпосередньо до виходного порту шим контролера польоту.</li></ul><p>PX4 приймає вхідний сигнал і маршрутизує/перекладає його для відправлення на вивід. Будь-який метод введення може бути обраний для керування будь-яким виводом.</p><p>Як вхід, так і вихід налаштовуються за допомогою параметрів. Вхід встановлюється за допомогою параметра <a href="./../advanced_config/parameter_reference.html#MNT_MODE_IN">MNT_MODE_IN</a>. За замовчуванням це встановлено як <code>Вимкнено (-1)</code>, і драйвер не запускається. Після вибору режиму введення перезавантажте транспортний засіб, щоб запустити драйвер кріплення.</p><p>Ви повинні встановити <code>MNT_MODE_IN</code> одним із наступних: <code>RC (1)</code>, <code>Протокол гімбала MAVLink v2 (4)</code> або <code>Авто (0)</code> (інші варіанти застарілі). Якщо ви виберете <code>Авто (0)</code>, гімбал автоматично вибере вхід RC або MAVLink відповідно до останнього введення. Зверніть увагу, що для автоматичного перемикання з MAVLink на RC потрібен великий рух ручкою!</p><p>Вихід налаштовується за допомогою параметра <a href="./../advanced_config/parameter_reference.html#MNT_MODE_OUT">MNT_MODE_OUT</a>. Усталеним налаштування виходу PXM є (<code>AUX (0)</code>). Якщо ваш гімбал підтримує <a href="https://mavlink.io/en/services/gimbal_v2.html" target="_blank" rel="noreferrer">Протокол гімбала MAVLink v2</a>, ви повинні замість цього вибрати <code>Протокол гімбала MAVLink v2 (2)</code>.</p><p>Повний список параметрів для налаштування драйвера кріплення можна знайти в <a href="./../advanced_config/parameter_reference.html#mount">Довідці параметрів &gt; Кріплення</a>. Нижче наведено відповідні налаштування для декількох поширених конфігурацій гімбалів.</p><h2 id="mavlink-gimbal-mnt-mode-out-mavlink" tabindex="-1">MAVLink Gimbal (MNT_MODE_OUT=MAVLINK) <a class="header-anchor" href="#mavlink-gimbal-mnt-mode-out-mavlink" aria-label="Permalink to &quot;MAVLink Gimbal (MNT_MODE_OUT=MAVLINK)&quot;">​</a></h2><p>Кожен фізичний пристрій гімбала в системі повинен мати свій власний високорівневий менеджер гімбала, який може бути виявлений наземною станцією за допомогою протоколу MAVLink для гімбалів. Наземна станція надсилає високорівневі команди <a href="https://mavlink.io/en/services/gimbal_v2.html#gimbal-manager-messages" target="_blank" rel="noreferrer">MAVLink Gimbal Manager</a> менеджеру гімбала, який вона хоче керувати, а менеджер, в свою чергу, надсилає відповідні команди нижчого рівня &quot;пристрою гімбала&quot;, щоб керувати гімбалом.</p><p>PX4 може бути налаштований як менеджер гімбала для керування одним пристроєм гімбала (який може бути або фізично підключений, або бути гімбалом MAVLink, який реалізує інтерфейс пристрою гімбала).</p><p>Щоб увімкнути гімбал по протоколу MAVLink, спочатку встановіть параметр <a href="./../advanced_config/parameter_reference.html#MNT_MODE_IN">MNT_MODE_IN</a> на <code>Протокол гімбала MAVLink v2</code> і <a href="./../advanced_config/parameter_reference.html#MNT_MODE_OUT">MNT_MODE_OUT</a> на <code>Протокол гімбала MAVLink v2</code>.</p><p>Гімбал можна підключити до <em>будь-якого вільного послідовного порту</em>, використовуючи інструкції у розділі <a href="./../peripherals/mavlink_peripherals.html">Послідовні пристрої MAVLink (GCS/OSD/Компаньйон)</a> (див. також <a href="./../peripherals/serial_configuration.html#serial-port-configuration">Конфігурація послідовного порту</a>). Наприклад, якщо порт <code>TELEM2</code> на контролері польоту не використовується, ви можете підключити його до гімбала і встановити наступні параметри PX4:</p><ul><li><a href="./../advanced_config/parameter_reference.html#MAV_1_CONFIG">MAV_1_CONFIG</a> на <strong>TELEM2</strong> (якщо <code>MAV_1_CONFIG</code> вже використовується для компаньйонного комп&#39;ютера (скажімо), використовуйте <code>MAV_2_CONFIG</code>).</li><li><a href="./../advanced_config/parameter_reference.html#MAV_1_MODE">MAV_1_MODE</a> до <strong>NORMAL</strong></li><li><a href="./../advanced_config/parameter_reference.html#SER_TEL2_BAUD">SER_TEL2_BAUD</a> на рекомендовану виробником швидкість передачі даних.</li></ul><h3 id="підтримка-декількох-gimbal" tabindex="-1">Підтримка декількох Gimbal <a class="header-anchor" href="#підтримка-декількох-gimbal" aria-label="Permalink to &quot;Підтримка декількох Gimbal&quot;">​</a></h3><p>PX4 може автоматично створити менеджер гімбала для підключеного гімбала з PWM або першого пристрою гімбала MAVLink з тим самим ідентифікатором системи, який виявляється на будь-якому інтерфейсі. Він не автоматично створює менеджер гімбала для будь-яких інших пристроїв гімбала MAVLink, які виявляються.</p><p>Ви можете підтримувати додаткові гімбали, забезпечивши, що вони:</p><ul><li>реалізувати протокол gimbal <em>manager</em></li><li>Становлять видимими для наземної станції та PX4 у мережі MAVLink. Це може вимагати налаштування пересилання трафіку між PX4, НЗП та гімбалем.</li><li>Кожен гімбал повинен мати унікальний ідентифікатор компонента. Для гімбала, підключеного за допомогою PWM, це буде ідентифікатор компонента автопілота.</li></ul><h2 id="gimbal-з-fc-pwm-output-mnt-mode-out-aux" tabindex="-1">Gimbal з FC PWM Output (MNT_MODE_OUT=AUX) <a class="header-anchor" href="#gimbal-з-fc-pwm-output-mnt-mode-out-aux" aria-label="Permalink to &quot;Gimbal з FC PWM Output (MNT_MODE_OUT=AUX)&quot;">​</a></h2><p>Gimbal також можна контролювати шляхом підключення до трьох портів польоту контролера польоту і налаштування режиму виводу в <code>MNT_MODE_OUT=AUX</code>.</p><p>Вихідні піни, які використовуються для керування гімбалем, встановлюються в <a href="./../config/actuators.html#actuator-outputs">Конфігурація приводів &gt; Виведення</a>, вибравши будь-які три невикористані виводи приводів та призначивши їм наступні функції виводу:</p><ul><li><code>Gimbal Roll</code>: вихід керує поворотом gimbal.</li><li><code>Gimbal pitch</code>: вихід контролює крок підвісу.</li><li><code>Gimbal Yaw</code>: Output controls Gimbal yaw.</li></ul><p>Наприклад, у вас можуть бути наступні налаштування для призначення кочення, тангажу та рида гімбала на виведення AUX1-3.</p><p><img src="'+a+'" alt="Gimbal Actuator config"></p><p>PWM значення для використання при відблокованому, максимальному та мінімальному значеннях можна визначити так само, як і для інших сервоприводів, використовуючи <a href="./../config/actuators.html#actuator-testing">повзунки тесту приводу</a>, щоб підтвердити, що кожний повзунок переміщує відповідну вісь, і змінюючи значення так, щоб гімбал знаходився у відповідному положенні при відблокованому стані, низькому і високому положенні повзунка. Значення також можуть бути наведені у документації гімбала.</p><h2 id="sitl" tabindex="-1">SITL <a class="header-anchor" href="#sitl" aria-label="Permalink to &quot;SITL&quot;">​</a></h2><p>Симуляція <a href="./../sim_gazebo_classic/README.html">Gazebo Classic</a> моделі <a href="./../sim_gazebo_classic/vehicles.html#typhoon-h480-hexrotor">Typhoon H480</a> поставляється з передконфігурованим симульованим гімбалем.</p><p>Щоб запустити, використовуйте:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_typhoon_h480</span></span></code></pre></div><p>Щоб просто перевірити роботу драйвера <a href="./../modules/modules_driver.html#gimbal">гімбала</a> на інших моделях або симуляторах, переконайтеся, що драйвер працює (за допомогою <code>gimbal start</code>), а потім налаштуйте його параметри.</p><h2 id="тестування" tabindex="-1">Тестування <a class="header-anchor" href="#тестування" aria-label="Permalink to &quot;Тестування&quot;">​</a></h2><p>Водій забезпечує просту тестову команду. Наступне описує тестування в SITL, але команди також працюють на реальних пристроях.</p><p>Почніть симуляцію з (для цього не потрібно змінювати параметри):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px4_sitl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gazebo-classic_typhoon_h480</span></span></code></pre></div><p>Переконайтеся, що він зброєний, наприклад, за допомогою <code>команди commander takeoff</code>, а потім використовуйте наступну команду для керування гімбалем (наприклад):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gimbal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yaw</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span></code></pre></div><p>Зверніть увагу, що симульований гімбал стабілізується самостійно, тому якщо ви надсилаєте команди MAVLink, встановіть прапори <code>стабілізації</code> на значення <code>false</code>.</p><p><img src="'+e+'" alt="Gazebo Gimbal Simulation"></p>',40),r=[n];function c(p,h,d,m,_,k){return l(),t("div",null,r)}const M=i(s,[["render",c]]);export{b as __pageData,M as default};
