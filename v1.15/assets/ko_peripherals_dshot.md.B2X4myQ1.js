import{_ as e,c as a,o as t,ab as s}from"./chunks/framework.CUflZczI.js";const b=JSON.parse('{"title":"DShot ESC","description":"","frontmatter":{},"headers":[],"relativePath":"ko/peripherals/dshot.md","filePath":"ko/peripherals/dshot.md"}'),o={name:"ko/peripherals/dshot.md"},i=s(`<h1 id="dshot-esc" tabindex="-1">DShot ESC <a class="header-anchor" href="#dshot-esc" aria-label="Permalink to &quot;DShot ESC&quot;">​</a></h1><p>DShot은 PWM 또는 OneShot에 비해 여러 가지 장점을 가진 ESC 대체 프로토콜입니다.</p><ul><li>지연 시간 감소</li><li>체크섬을 통해 안정성이 향상되었습니다.</li><li>프로토콜이 디지털 인코딩을 사용하므로, ESC 보정이 필요하지 않습니다.</li><li>텔레메트리 피드백은 일부 ESC에서 사용 가능합니다.</li><li>필요시 명령어로 모터 회전 방향을 병경할 수 있습니다 (물리적으로 와이어를 이동/재 납땜하는 대신).</li><li>다른 유용한 명령어들이 지원됩니다.</li></ul><p>이 항목에서는 DShot ESC 연결과 설정 방법을 설명합니다.</p><p><a id="wiring"></a></p><h2 id="배선" tabindex="-1">배선 <a class="header-anchor" href="#배선" aria-label="Permalink to &quot;배선&quot;">​</a></h2><p>DShot ESC are wired the same way as <a href="./pwm_escs_and_servo.html">PWM ESCs</a>. The only difference is that they can only be connected to the FMU, and usually only to some subset of pins.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You may want to check the actuator configuration screen to see what pins are available for DShot on your controller before wiring up!</p></div><p>Pixhawk controllers with both an FMU and an IO board usually label them as <code>AUX</code> (FMU) and <code>MAIN</code> (IO), respectively. These match the <code>PWM AUX</code> and <code>PWM MAIN</code> output tabs on the actuator configuration screen. For these controllers connect the DShot ESC to the <code>AUX</code> port.</p><p>Controllers that don&#39;t have an IO board usually label the (single) output port as <code>MAIN</code>, and this is where you will connect your DShot ESC. If the controller without IO has its own firmware, the actuator assignment will be to the matching <code>PWM MAIN</code> outputs. However if the same firmware is used for hardware with/without the IO board, such as for the Pixhawk 4 and Pixhawk 4 Mini, then actuator assignment tab used is the same in both cases: <code>PWM AUX</code> (i.e. not matching the port label <code>MAIN</code> in the &quot;mini&quot; case).</p><h2 id="설정" tabindex="-1">설정 <a class="header-anchor" href="#설정" aria-label="Permalink to &quot;설정&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>ESC 설정 매개변수를 변경하기 전에 프로펠러를 제거하십시오!</p></div><p>Enable DShot for your required outputs in the <a href="./../config/actuators.html">Actuator Configuration</a>.</p><p>DShot comes with different speed options: <em>DShot150</em>, <em>DShot300</em>, <em>DShot600</em> and <em>DShot1200</em>, where the number indicates the speed in kilo-bits/second. You should set the parameter to the highest speed supported by your ESC (according to its datasheet).</p><p>그런 다음 배터리를 연결하고 기체의 시동을 켭니다. ESC가 초기화되고 모터가 올바른 방향으로 회전하여야 합니다.</p><ul><li>If the motors do not spin in the correct direction (for the <a href="./../airframes/airframe_reference.html">selected airframe</a>) you can reverse them in the UI using the <strong>Set Spin Direction</strong> option (this option appears after you select DShot and assign motors). You can also reverse motors by sending an <a href="#commands">ESC Command</a>.</li></ul><p><a id="commands"></a></p><h2 id="esc-명령어" tabindex="-1">ESC 명령어 <a class="header-anchor" href="#esc-명령어" aria-label="Permalink to &quot;ESC 명령어&quot;">​</a></h2><p>명령은 <a href="./../debug/mavlink_shell.html">MAVLink 쉘</a>을 통하여 ESC로 전송됩니다. 지원되는 전체 명령어는 <a href="./../modules/modules_driver.html#dshot">여기</a>를 참고하십시오.</p><p>가장 중요한 것은 다음과 같습니다.</p><ul><li><p>첫 번째 모터 신호음 만들기(모터 식별에 도움이 됨) :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dshot beep1 -m 1</span></span></code></pre></div></li><li><p>첫 번째 모터의 회전 방향을 영구적으로 반전:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dshot reverse -m 1</span></span>
<span class="line"><span>dshot save -m 1</span></span></code></pre></div><ul><li>Permanently reverse the spin direction of the first motor:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dshot reverse -m 1</span></span>
<span class="line"><span>dshot save -m 1</span></span></code></pre></div><p>Retrieving ESC information after the <code>dshot reverse -m 1</code> command without the <code>dshot save -m 1</code> command will show:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Rotation Direction: reversed</span></span></code></pre></div><p>after saving it with <code>dshot save -m 1</code> command, reversed direction will become new normal direction:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Rotation Direction: normal</span></span></code></pre></div><p>To change direction again new <code>dshot reverse -m 1</code> command needs to be sent.</p></li></ul><h2 id="텔레메트리" tabindex="-1">텔레메트리 <a class="header-anchor" href="#텔레메트리" aria-label="Permalink to &quot;텔레메트리&quot;">​</a></h2><p>일부 ESC는 다음을 포함하여 텔레메트리 측정데이터를 비행 콘트롤러로 재전송할 수 있습니다.</p><ul><li>온도</li><li>전압</li><li>전류</li><li>누적 전류 소비</li><li>RPM 값</li></ul><p>이러한 DShot ESC에는 추가 텔레메트리 와이어가 있습니다.</p><p>이 기능을 활성화하려면(지원 ESC에서) :</p><ol><li>모든 ESC의 모든 원격 측정 와이어를 함께 연결한 다음, 사용하지 않는 비행 콘트롤러 직렬 포트의 RX핀 중 하나에 연결합니다.</li><li><a href="./../advanced_config/parameter_reference.html#DSHOT_TEL_CFG">DSHOT_TEL_CFG</a>를 사용하여 해당 직렬 포트에서 텔레메트리를 활성화합니다.</li></ol><p>재부팅 후 다음을 사용하여 텔레메트리 작동 여부를 확인할 수 있습니다 (배터리가 연결되어 있는 지 확인).</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dshot esc_info -m 1</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>올바른 RPM 값을 얻으려면 <a href="./../advanced_config/parameter_reference.html#MOT_POLE_COUNT">MOT_POLE_COUNT</a>를 설정하여야 합니다.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>원격 분석이 지원되고 활성화된 경우에도, 모든 DSHOT 가능 ESC가 <code>[esc_info]</code> (예 : APD 80F3x)를 지원하지 않을 수도 있습니다. 결과 오류는 다음과 같습니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ERROR [dshot] No data received. 텔레메트리가 올바르게 설정되어 있으면, 다시 시도하십시오.</span></span></code></pre></div><p>세부 사항은 제조업체 문서를 확인하십시오.</p></div>`,31),n=[i];function l(c,p,h,r,d,u){return t(),a("div",null,n)}const v=e(o,[["render",l]]);export{b as __pageData,v as default};
