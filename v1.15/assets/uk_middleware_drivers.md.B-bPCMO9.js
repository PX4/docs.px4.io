import{_ as s,c as a,o as i,ab as n}from"./chunks/framework.CUflZczI.js";const y=JSON.parse('{"title":"Розробка драйверів","description":"","frontmatter":{},"headers":[],"relativePath":"uk/middleware/drivers.md","filePath":"uk/middleware/drivers.md"}'),e={name:"uk/middleware/drivers.md"},p=n(`<h1 id="розробка-драиверів" tabindex="-1">Розробка драйверів <a class="header-anchor" href="#розробка-драиверів" aria-label="Permalink to &quot;Розробка драйверів&quot;">​</a></h1><p>Драйвери пристроїв PX4 базуються на <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/lib/drivers/device" target="_blank" rel="noreferrer">Device</a> фреймворку.</p><h2 id="створення-драивера" tabindex="-1">Створення драйвера <a class="header-anchor" href="#створення-драивера" aria-label="Permalink to &quot;Створення драйвера&quot;">​</a></h2><p>PX4 майже виключно використовує дані з <a href="./../middleware/uorb.html">uORB</a>. Драйвери для поширених типів периферійних пристроїв повинні публікувати правильні повідомлення uORB (наприклад: гіроскоп, акселерометр, датчики тиску тощо).</p><p>Найкращий підхід до створення нового драйвера - почати з аналогічного драйвера як шаблону (див. <a href="https://github.com/PX4/PX4-Autopilot/tree/release/1.15/src/drivers" target="_blank" rel="noreferrer">src/drivers</a>).</p><div class="info custom-block"><p class="custom-block-title">Більш детальну інформацію про роботу з конкретними шинами вводу/виводу та датчиками можна знайти у розділі <a href="./../sensor_bus/">Шини датчиків та приводів</a>.</p></div><div class="info custom-block"><p class="custom-block-title">Публікація правильних тем uORB є єдиним патерном, якого повинні <em>повинні</em> дотримуватися драйвери.</p></div><h2 id="архітектура-ядра" tabindex="-1">Архітектура ядра <a class="header-anchor" href="#архітектура-ядра" aria-label="Permalink to &quot;Архітектура ядра&quot;">​</a></h2><p>PX4 є <a href="./../concept/architecture.html">реактивною системою</a> і використовує <a href="./../middleware/uorb.html">uORB</a> для публікації/підписки на комунікаційні повідомлення. Файлові дескриптори не потрібні або не використовуються для основної роботи системи. Використовуються дві основні API:</p><ul><li>Система публікації/підписки, яка має файлову, мережеву або загальну пам&#39;ять, залежно від системи, на якій працює PX4.</li><li>Глобальний реєстр пристроїв, який можна використовувати для переліку пристроїв та отримання/налаштування їх конфігурації. Це може бути простий зв&#39;язаний список або схема файлової системи.</li></ul><h2 id="ідентифікатори-пристрою-id" tabindex="-1">Ідентифікатори пристрою(ID) <a class="header-anchor" href="#ідентифікатори-пристрою-id" aria-label="Permalink to &quot;Ідентифікатори пристрою(ID)&quot;">​</a></h2><p>PX4 використовує ідентифікатори пристроїв для постійної ідентифікації окремих сенсорів у всій системі. Ці ідентифікатори зберігаються в параметрах конфігурації та використовуються для відповідності значень калібрування сенсора, а також для визначення того, який сенсор зареєстрований в якому записі журналу.</p><p>Порядок датчиків (наприклад, якщо є <code>/dev/mag0</code> і альтернативний <code>/dev/mag1</code>) не визначає пріоритет - пріоритет зберігається як частина опублікованої теми uORB.</p><h3 id="приклад-декодування" tabindex="-1">Приклад декодування <a class="header-anchor" href="#приклад-декодування" aria-label="Permalink to &quot;Приклад декодування&quot;">​</a></h3><p>Для прикладу трьох магнітометрів у системі використовуйте журнал польотів (.px4log) для вивантаження параметрів. Три параметри кодують ідентифікатори датчиків, а <code>MAG_PRIME</code> визначає, який магнітометр вибрано основним датчиком. Кожен MAGx_ID є 24-бітним числом і повинен бути доповнений зліва нулями для ручного декодування.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>CAL_MAG0_ID = 73225.0</span></span>
<span class="line"><span>CAL_MAG1_ID = 66826.0</span></span>
<span class="line"><span>CAL_MAG2_ID = 263178.0</span></span>
<span class="line"><span>CAL_MAG_PRIME = 73225.0</span></span></code></pre></div><p>Це зовнішній HMC5983, підключений через I2C, шину 1 за адресою <code>0x1E</code>: він буде показаний у файлі журналу як <code>IMU.MagX</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># device ID 73225 in 24-bit binary:</span></span>
<span class="line"><span>00000001  00011110  00001 001</span></span>
<span class="line"><span></span></span>
<span class="line"><span># decodes to:</span></span>
<span class="line"><span>HMC5883   0x1E    bus 1 I2C</span></span></code></pre></div><p>Це внутрішній HMC5983, підключений через SPI, шина 1, слот вибору slave 5. У файлі журналу це буде показано як <code>IMU1.MagX</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># device ID 66826 in 24-bit binary:</span></span>
<span class="line"><span>00000001  00000101  00001 010</span></span>
<span class="line"><span></span></span>
<span class="line"><span># decodes to:</span></span>
<span class="line"><span>HMC5883   dev 5   bus 1 SPI</span></span></code></pre></div><p>І це внутрішній магнітометр MPU9250, підключений через SPI, шина 1, слот вибору slave 4. У файлі журналу це буде показано як <code>IMU2.MagX</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># device ID 263178 in 24-bit binary:</span></span>
<span class="line"><span>00000100  00000100  00001 010</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#decodes to:</span></span>
<span class="line"><span>MPU9250   dev 4   bus 1 SPI</span></span></code></pre></div><h3 id="кодування-id-пристрою" tabindex="-1">Кодування ID пристрою <a class="header-anchor" href="#кодування-id-пристрою" aria-label="Permalink to &quot;Кодування ID пристрою&quot;">​</a></h3><p>Ідентифікатор пристрою - це 24-бітове число відповідно до цього формату. Зверніть увагу, що перші поля - це молодші біти у наведеному вище прикладі декодування.</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DeviceStructure {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  enum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DeviceBusType bus_type : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bus: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // which instance of the bus type</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> address;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // address on the bus (eg. I2C address)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> devtype;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // device class specific device type</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p><code>bus_type</code> декодується відповідно до:</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DeviceBusType {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  DeviceBusType_UNKNOWN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  DeviceBusType_I2C     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  DeviceBusType_SPI     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  DeviceBusType_UAVCAN  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>і <code>devtype</code> декодується відповідно до:</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_MAG_DEVTYPE_HMC5883</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">01</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_MAG_DEVTYPE_LSM303D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">02</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_MAG_DEVTYPE_ACCELSIM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">03</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_MAG_DEVTYPE_MPU9250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">04</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_ACC_DEVTYPE_LSM303D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_ACC_DEVTYPE_BMA180</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_ACC_DEVTYPE_MPU6000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_ACC_DEVTYPE_ACCELSIM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_ACC_DEVTYPE_GYROSIM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_ACC_DEVTYPE_MPU9250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_GYR_DEVTYPE_MPU6000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_GYR_DEVTYPE_L3GD20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_GYR_DEVTYPE_GYROSIM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">23</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_GYR_DEVTYPE_MPU9250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_RNG_DEVTYPE_MB12XX</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">31</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRV_RNG_DEVTYPE_LL40LS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span></span></code></pre></div><h2 id="відлагодження" tabindex="-1">Відлагодження <a class="header-anchor" href="#відлагодження" aria-label="Permalink to &quot;Відлагодження&quot;">​</a></h2><p>Для загальних тем відладки див. : <a href="./../debug/">Debugging/Logging</a>.</p><h3 id="докладне-ведення-журналу" tabindex="-1">Докладне ведення журналу <a class="header-anchor" href="#докладне-ведення-журналу" aria-label="Permalink to &quot;Докладне ведення журналу&quot;">​</a></h3><p>Драйвери (та інші модулі) за замовчуванням виводять мінімально докладні рядки логів (наприклад, для <code>PX4_DEBUG</code>, <code>PX4_WARN</code>, <code>PX4_ERR</code> і т.д.).</p><p>Докладність логів визначається під час збирання за допомогою макросів <code>RELEASE_BUILD</code> (за замовчуванням), <code>DEBUG_BUILD</code> (докладно) або <code>TRACE_BUILD</code> (дуже докладно).</p><p>Змініть рівень протоколювання за допомогою <code>COMPILE_FLAGS</code> у функції драйвера <code>px4_add_module</code> (<strong>CMakeLists.txt</strong>). У наведеному нижче фрагменті коду показано необхідну зміну, щоб увімкнути налагодження на рівні DEBUG_BUILD для окремого модуля або драйвера.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>px4_add_module(</span></span>
<span class="line"><span>    MODULE templates__module</span></span>
<span class="line"><span>    MAIN module</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    COMPILE_FLAGS</span></span>
<span class="line"><span>        -DDEBUG_BUILD</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    SRCS</span></span>
<span class="line"><span>        module.cpp</span></span>
<span class="line"><span>    DEPENDS</span></span>
<span class="line"><span>        modules__uORB</span></span>
<span class="line"><span>    )</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Докладний лог також можна увімкнути для кожного файлу, додавши <code>#define DEBUG_BUILD</code> у самому верху .cpp-файлу (перед будь-якими модулями).</p></div>`,39),l=[p];function t(h,k,d,c,r,o){return i(),a("div",null,l)}const E=s(e,[["render",t]]);export{y as __pageData,E as default};
