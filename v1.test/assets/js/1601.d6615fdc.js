(window.webpackJsonp=window.webpackJsonp||[]).push([[1601],{3425:function(t,s,a){"use strict";a.r(s);var e=a(19),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"docker-контеинери-для-px4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-контеинери-для-px4"}},[t._v("#")]),t._v(" Docker контейнери для PX4")]),t._v(" "),a("p",[t._v("Для повного "),a("RouterLink",{attrs:{to:"/uk/dev_setup/dev_env.html#supported-targets"}},[t._v("інструментарію розробника PX4")]),t._v("надаються Docker контейнери, включаючи апаратне забезпечення, основане на NuttX та Linux, симуляція "),a("RouterLink",{attrs:{to:"/uk/sim_gazebo_classic/"}},[t._v("Gazebo Classic")]),t._v(" та "),a("RouterLink",{attrs:{to:"/uk/simulation/ros_interface.html"}},[t._v("ROS")]),t._v(".")],1),t._v(" "),a("p",[t._v("Цей розділ розповідає як використовувати "),a("a",{attrs:{href:"#px4_containers"}},[t._v("Наявні docker контейнери")]),t._v(", щоб отримати доступ до середовища збірки на локальному Linux комп'ютері.")]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Ви можете знайти Dockerfile та README на "),a("a",{attrs:{href:"https://github.com/PX4/containers/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),a("OutboundLink")],1),t._v(". Вони автоматично збираються на "),a("a",{attrs:{href:"https://hub.docker.com/u/px4io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Hub"),a("OutboundLink")],1),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"необхідні-умови"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#необхідні-умови"}},[t._v("#")]),t._v(" Необхідні умови")]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("На цей момент контейнери для PX4 підтримуються лише для Linux (якщо немає Linux ви можете запустити контейнер "),a("a",{attrs:{href:"#virtual_machine"}},[t._v("всередині віртуальної машини")]),t._v("). Не використовуйте "),a("code",[t._v("boot2docker")]),t._v(" із образом за замовчуванням, тому що він не містить X-Server.")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.docker.com/installation/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Встановіть Docker"),a("OutboundLink")],1),t._v(" для Linux, бажано використовувати один з репозиторіїв пакетів, які підтримуються Docker, щоб отримати останню стабільну версію. Ви можете використовувати або "),a("em",[t._v("Enterprise Edition")]),t._v(" або (безплатну) "),a("em",[t._v("Community Edition")]),t._v(".")]),t._v(" "),a("p",[t._v("Для локального встановлення для позавиробничих установок на "),a("em",[t._v("Ubuntu")]),t._v(", найшвидший і найпростіший спосіб встановити Docker - це скористатися "),a("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-using-the-convenience-script",target:"_blank",rel:"noopener noreferrer"}},[t._v(" зручним скриптом"),a("OutboundLink")],1),t._v(" як показано нижче (альтернативні методи встановлення вказані там же):")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL get.docker.com -o get-docker.sh\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" get-docker.sh\n")])])]),a("p",[t._v("Встановлення за замовчуванням потребує використання root користувача для запуску "),a("em",[t._v("Docker")]),t._v(" (тобто за допомогою "),a("code",[t._v("sudo")]),t._v("). Однак для збірки прошивок PX4 пропонуємо "),a("a",{attrs:{href:"https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user",target:"_blank",rel:"noopener noreferrer"}},[t._v("використовувати docker від імені непривілейованого користувача"),a("OutboundLink")],1),t._v(". Таким чином, директорія для збірки не буде належати користувачу root після використання docker.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Створіть групу docker (можливо не потрібно)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupadd")]),t._v(" docker\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Додайте вашого користувача в групу docker.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("usermod")]),t._v(" -aG docker "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Вийдіть та увійдіть перед використанням docker!")]),t._v("\n")])])]),a("p",[a("a",{attrs:{id:"px4_containers"}})]),t._v(" "),a("h2",{attrs:{id:"ієрархія-контеинерів"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ієрархія-контеинерів"}},[t._v("#")]),t._v(" Ієрархія контейнерів")]),t._v(" "),a("p",[t._v("Усі доступні контейнери можна знайти на "),a("a",{attrs:{href:"https://github.com/PX4/PX4-containers/blob/master/README.md#container-hierarchy",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Вони дозволяють тестувати різні цілі збірки та конфігурації (включені інструменти можна зрозуміти з їх назв). Контейнери є ієрархічними, тобто такими, що мають функціональність вихідних контейнерів. Наприклад, часткова ієрархія нижче показує, що docker контейнер з  інструментами збірки nuttx ("),a("code",[t._v("px4-dev-nuttx-focal")]),t._v(") не містить ROS 2, на відміну від контейнерів симуляції:")]),t._v(" "),a("div",{staticClass:"language-plain extra-class"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[t._v("- px4io/px4-dev-base-focal\n  - px4io/px4-dev-nuttx-focal\n  - px4io/px4-dev-simulation-focal\n    - px4io/px4-dev-ros-noetic\n      - px4io/px4-dev-ros2-foxy\n  - px4io/px4-dev-ros2-rolling\n- px4io/px4-dev-base-jammy\n  - px4io/px4-dev-nuttx-jammy\n")])])]),a("p",[t._v("Найновіша версія доступна з використанням тегу "),a("code",[t._v("latest")]),t._v(": "),a("code",[t._v("px4io/px4-dev-nuttx-focal:latest")]),t._v(" (доступні теги перелічені для кожного контейнеру на "),a("em",[t._v("hub.docker.com")]),t._v(". Наприклад теги для "),a("code",[t._v("px4io/px4-dev-nuttx-focal")]),t._v(" можна знайти "),a("a",{attrs:{href:"https://hub.docker.com/r/px4io/px4-dev-nuttx-focal/tags?page=1&ordering=last_updated",target:"_blank",rel:"noopener noreferrer"}},[t._v("тут"),a("OutboundLink")],1),t._v(").")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Зазвичай потрібно використовувати свіжий контейнер, але не обов'язково "),a("code",[t._v("latest")]),t._v(" (т. як вони часто змінюються).")])]),t._v(" "),a("h2",{attrs:{id:"використання-docker-контеинера"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#використання-docker-контеинера"}},[t._v("#")]),t._v(" Використання Docker контейнера")]),t._v(" "),a("p",[t._v("Наступні інструкції показують, як зібрати вихідний код PX4 на основному комп'ютері за допомогою інструментарію, що працює у docker контейнері. Передбачається, що ви вже завантажили вихідний код PX4 в "),a("strong",[t._v("src/PX4-Autopilot")]),t._v(", як показано:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" src\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" src\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/PX4/PX4-Autopilot.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n")])])]),a("h3",{attrs:{id:"допоміжнии-скрипт-docker-run-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#допоміжнии-скрипт-docker-run-sh"}},[t._v("#")]),t._v(" Допоміжний скрипт (docker_run.sh)")]),t._v(" "),a("p",[t._v("Найпростіший спосіб використовувати контейнери - разом із допоміжним скриптом "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/Tools/docker_run.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker_run.sh"),a("OutboundLink")],1),t._v(". Цей скрипт приймає команду збірки PX4 як аргумент (наприклад, "),a("code",[t._v("make tests")]),t._v("). Він запускає docker із найновішою версією відповідного контейнера (вказано в коді) і слушними налаштуваннями середовища.")]),t._v(" "),a("p",[t._v("Наприклад, щоб зібрати SITL потрібно виконати (із директорії "),a("strong",[t._v("/PX4-Autopilot")]),t._v("):")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./Tools/docker_run.sh "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'make px4_sitl_default'")]),t._v("\n")])])]),a("p",[t._v("Або почати сеанс bash використовуючи інструментарій NuttX:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./Tools/docker_run.sh "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bash'")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Цей скрипт легко використовувати тому що вам не потрібно знати багато про "),a("em",[t._v("Docker")]),t._v(" або думати який контейнер взяти. Однак він не дуже надійний! Ручний підхід, що обговорюється в "),a("a",{attrs:{href:"#manual_start"}},[t._v("наступній частині")]),t._v(" більш гнучкий і повинен використовуватися якщо є якісь проблеми зі скриптом.")])]),t._v(" "),a("p",[a("a",{attrs:{id:"manual_start"}})]),t._v(" "),a("h3",{attrs:{id:"запуск-docker-вручну"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#запуск-docker-вручну"}},[t._v("#")]),t._v(" Запуск Docker вручну")]),t._v(" "),a("p",[t._v("Синтаксис типової команди показано нижче. Це запускає Docker контейнер з підтримкою переадресації X (що робить графічний інтерфейс симуляції доступним з середини контейнера). Каталог "),a("code",[t._v("<host_src>")]),t._v(" комп'ютера відображається на каталог "),a("code",[t._v("<container_src>")]),t._v(" всередині контейнера, а також переадресується UDP порт, потрібний для з'єднання з  "),a("em",[t._v("QGroundControl")]),t._v(". З параметром "),a("code",[t._v("-–privileged")]),t._v(" контейнер автоматично матиме доступ до апаратного забезпечення на вашому комп'ютері  (наприклад до джойстика або GPU). Якщо ви під'єднуєте/від'єднуєте пристрій, вам слід перезапустити контейнер.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# дозвольте доступ до xhost з контейнера")]),t._v("\nxhost +\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# запуск docker")]),t._v("\ndocker run -it --privileged "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --env"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LOCAL_USER_ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -u"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("host_src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container_src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":rw "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -v /tmp/.X11-unix:/tmp/.X11-unix:ro "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("DISPLAY")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(":0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14570")]),t._v(":14570/udp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("local_container_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("build_command"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("Де:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("<host_src>")]),t._v(": Директорія комп'ютера для відображення на директорію "),a("code",[t._v("<container_src>")]),t._v(" у контейнері. Зазвичай потрібно щоб це була директорія "),a("strong",[t._v("PX4-Autopilot")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("<container_src>")]),t._v(": Розташування спільної (вихідної) директорії всередині контейнера.")]),t._v(" "),a("li",[a("code",[t._v("<local_container_name>")]),t._v(": Ім'я docker контейнера, що створюється. Це потім можна використовувати, якщо потрібно посилатись на контейнер знову.")]),t._v(" "),a("li",[a("code",[t._v("<container>:<tag>")]),t._v(": Контейнер з тегом версії для запуску, наприклад: "),a("code",[t._v("px4io/px4-dev-ros:2017-10-23")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("<build_command>")]),t._v(": Команда яку потрібно виконати на новому контейнері. Наприклад, "),a("code",[t._v("bash")]),t._v(" для запуску оболонки bash у контейнері.")])]),t._v(" "),a("p",[t._v("Наведений нижче приклад показує як запустити консоль bash і розділити каталог "),a("strong",[t._v("~/src/PX4-Autopilot")]),t._v(" між контейнером і основним комп'ютером.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# дозвольте доступ до xhost з контейнера")]),t._v("\nxhost +\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# запуск docker та оболонки bash")]),t._v("\ndocker run -it --privileged "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--env"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LOCAL_USER_ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -u"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-v ~/src/PX4-Autopilot:/src/PX4-Autopilot/:rw "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-v /tmp/.X11-unix:/tmp/.X11-unix:ro "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("DISPLAY")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(":0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--network "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("px4-ros px4io/px4-dev-ros2-foxy:2022-07-31 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Ми використовуємо режим прямого доступу до мережі основного комп'ютера (host network), щоб уникнути конфліктів контролю доступу до UDP портів при використанні QGroundControl у тій самій системі, що і docker контейнер.")])]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v('Якщо ви зіткнулися з помилкою "Can\'t open display: :0", можливо змінній '),a("code",[t._v("DISPLAY")]),t._v(" потрібно встановити інше значення. На комп'ютерах з Linux (XWindow) ви можете змінити параметр "),a("code",[t._v("-e DISPLAY=:0")]),t._v(" на "),a("code",[t._v("-e DISPLAY=$DISPLAY")]),t._v(". На інших системах вам можливо знадобиться послідовно змінити "),a("code",[t._v("0")]),t._v(" в "),a("code",[t._v("-e DISPLAY=:0")]),t._v(' допоки помилка "Can\'t open display: :0" не зникне.')])]),t._v(" "),a("p",[t._v("Якщо все пройшло добре, ви повинні бути в новій оболонці bash. Перевірте, чи все працює запустивши, наприклад, SITL:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" src/PX4-Autopilot    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#це <container_src>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_sitl_default gazebo-classic\n")])])]),a("h3",{attrs:{id:"повторнии-вхід-в-контеинер"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#повторнии-вхід-в-контеинер"}},[t._v("#")]),t._v(" Повторний вхід в контейнер")]),t._v(" "),a("p",[t._v("Команда "),a("code",[t._v("docker run")]),t._v(" використовується тільки для створення нового контейнеру. Щоб повернутися у цей контейнер (що збереже ваші зміни) просто зробіть:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# запуск контейнера")]),t._v("\ndocker start container_name\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# запуск нової оболонки bash shell в цьому контейнері")]),t._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it container_name "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])]),a("p",[t._v("Якщо вам потрібні кілька консолей, підключених до контейнера, просто відкрийте нову оболонку і виконайте останню команду знову.")]),t._v(" "),a("h3",{attrs:{id:"видалення-контеинера"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#видалення-контеинера"}},[t._v("#")]),t._v(" Видалення контейнера")]),t._v(" "),a("p",[t._v("Іноді може знадобитися взагалі видалити контейнер. Це можна зробити, використовуючи його ім'я:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" mycontainer\n")])])]),a("p",[t._v("Якщо ви не можете згадати назву, ви можете знайти неактивні ідентифікатори контейнерів і видалити їх, як показано нижче:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -a -q\n45eeb98f1dd9\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" 45eeb98f1dd9\n")])])]),a("h3",{attrs:{id:"qgroundcontrol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qgroundcontrol"}},[t._v("#")]),t._v(" QGroundControl")]),t._v(" "),a("p",[t._v("При виконанні екземпляра симуляції, напр. SITL всередині контейнерів і керування ним через "),a("em",[t._v("QGroundControl")]),t._v(" з основного комп'ютера, канали зв'язку потрібно встановити вручну. Функція автопідключення "),a("em",[t._v("QGroundControl")]),t._v(" тут не працює.")]),t._v(" "),a("p",[t._v("В "),a("em",[t._v("QGroundControl")]),t._v(", перейдіть до "),a("a",{attrs:{href:"https://docs.qgroundcontrol.com/master/en/SettingsView/SettingsView.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Налаштувань"),a("OutboundLink")],1),t._v(" та оберіть Канали зв'язку. Створіть новий канал, що використовує UDP-протокол. Номер порту залежить від використаних "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/ROMFS/px4fmu_common/init.d-posix/rcS",target:"_blank",rel:"noopener noreferrer"}},[t._v("налаштувань"),a("OutboundLink")],1),t._v(", наприклад порт 14570 для конфігурації SITL. IP-адреса є адресою одного з ваших контейнерів, зазвичай це адреса з мережі 172.17.0.1/16 при використанні мережі за замовчуванням. IP-адресу Docker контейнера можна знайти за допомогою наступної команди (якщо припустити, що ім'я контейнера "),a("code",[t._v("mycontainer")]),t._v("):")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ docker inspect -f "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{ {range .NetworkSettings.Networks}}{ {.IPAddress}}{ {end}}'")]),t._v(" mycontainer\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Проміжки між подвійними фігурними дужками не повинні бути (вони потрібні для уникнення проблем з візуалізацією у gitbook).")])]),t._v(" "),a("h3",{attrs:{id:"усунення-проблем"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#усунення-проблем"}},[t._v("#")]),t._v(" Усунення проблем")]),t._v(" "),a("h4",{attrs:{id:"помилки-з-правами-доступу"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#помилки-з-правами-доступу"}},[t._v("#")]),t._v(" Помилки з правами доступу")]),t._v(" "),a("p",[t._v('Контейнер створює файли, необхідні для роботи від імені стандартного користувача, як правило, "root". Це може призвести до помилок прав доступу, коли користувач на основному комп\'ютері не має доступу до файлів, створених контейнером.')]),t._v(" "),a("p",[t._v("Приклад вище використовує рядок "),a("code",[t._v('--env=LOCAL_USER_ID="$(id -u)"')]),t._v(", щоб створити користувача в контейнері з тим же UID що і користувач на основній машині. Це гарантує, що всі файли, створені у контейнері, будуть доступні з основного комп'ютера.")]),t._v(" "),a("h4",{attrs:{id:"проблеми-з-драиверами-графіки"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#проблеми-з-драиверами-графіки"}},[t._v("#")]),t._v(" Проблеми з драйверами графіки")]),t._v(" "),a("p",[t._v("Можливо, що запуск Gazebo Classic призведе до подібного повідомлення про помилку:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("libGL error: failed to load driver: swrast\n")])])]),a("p",[t._v("У цьому випадку необхідно встановити нативний графічний драйвер для вашої системи. Завантажте відповідний драйвер і встановіть його всередині контейнера. Для драйверів Nvidia слід використовувати наступну команду (інакше встановлювач побачить завантажені модулі на головній машині та відмовиться продовжувати):")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./NVIDIA-DRIVER.run -a -N --ui"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("none --no-kernel-module\n")])])]),a("p",[t._v("Більше інформації можна знайти "),a("a",{attrs:{href:"http://gernotklingler.com/blog/howto-get-hardware-accelerated-opengl-support-docker/",target:"_blank",rel:"noopener noreferrer"}},[t._v("тут"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[a("a",{attrs:{id:"virtual_machine"}})]),t._v(" "),a("h2",{attrs:{id:"підтримка-віртуальних-машин"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#підтримка-віртуальних-машин"}},[t._v("#")]),t._v(" Підтримка віртуальних машин")]),t._v(" "),a("p",[t._v("Будь-який останній дистрибутив Linux повинен працювати.")]),t._v(" "),a("p",[t._v("Наступна конфігурація протестована:")]),t._v(" "),a("ul",[a("li",[t._v("OS X з підтримкою VMWare Fusion і Ubuntu 14.04 (Docker контейнер з підтримкою GUI в Parallels призводить до падіння X-Server).")])]),t._v(" "),a("p",[a("strong",[t._v("Оперативна Пам'ять")])]),t._v(" "),a("p",[t._v("Потрібно не менше 4 ГБ пам'яті для віртуальної машини.")]),t._v(" "),a("p",[a("strong",[t._v("Проблеми компіляції")])]),t._v(" "),a("p",[t._v("Якщо компіляція завершується з помилками на кшталт:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("The bug is not reproducible, so it is likely a hardware or OS problem.\nc++: internal compiler error: Killed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program cc1plus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Спробуйте вимкнути паралельну збірку.")]),t._v(" "),a("p",[a("strong",[t._v("Дозволити керувати Docker з основної машини для VM")])]),t._v(" "),a("p",[t._v("Змініть "),a("code",[t._v("/etc/defaults/docker")]),t._v(" і додайте наступний рядок:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DOCKER_OPTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DOCKER_OPTS}")]),t._v(' -H unix:///var/run/docker.sock -H 0.0.0.0:2375"')]),t._v("\n")])])]),a("p",[t._v("Тепер можна керувати docker на вашій основній ОС:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("експорт "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DOCKER_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tcp://"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ip of your VM"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":2375\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# запустіть якусь команду docker щоб подивитися, чи все працює, наприклад, ps")]),t._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);