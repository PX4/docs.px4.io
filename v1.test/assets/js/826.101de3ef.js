(window.webpackJsonp=window.webpackJsonp||[]).push([[826],{2272:function(t,e,a){"use strict";a.r(e);var s=a(19),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mavlink-messaging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mavlink-messaging"}},[t._v("#")]),t._v(" MAVLink Messaging")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mavlink.io/en/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAVLink"),a("OutboundLink")],1),t._v(" is a very lightweight messaging protocol that has been designed for the drone ecosystem.")]),t._v(" "),a("p",[t._v("PX4 uses "),a("em",[t._v("MAVLink")]),t._v(" to communicate with ground stations and MAVLink SDKs, such as "),a("em",[t._v("QGroundControl")]),t._v(" and "),a("a",{attrs:{href:"https://mavsdk.mavlink.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAVSDK"),a("OutboundLink")],1),t._v(", and as the integration mechanism for connecting to drone components outside of the flight controller: companion computers, MAVLink enabled cameras, and so on.")]),t._v(" "),a("p",[t._v("This topic provides a brief overview of fundamental MAVLink concepts, such as messages, commands, and microservices.\nIt also provides tutorial instructions for how you can add PX4 support for:")]),t._v(" "),a("ul",[a("li",[t._v("Streaming MAVLink messages")]),t._v(" "),a("li",[t._v("Handling incoming MAVLink messages and writing to a uORB topic.")])]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("The topic does not cover "),a("em",[t._v("command")]),t._v(" handling and sending, or how to implement your own microservices.")])]),t._v(" "),a("h2",{attrs:{id:"mavlink-overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mavlink-overview"}},[t._v("#")]),t._v(" MAVLink Overview")]),t._v(" "),a("p",[t._v("MAVLink is a lightweight protocol that was designed for efficiently sending messages over unreliable low-bandwidth radio links.")]),t._v(" "),a("p",[a("em",[t._v("Messages")]),t._v(' are simplest and most "fundamental" definition in MAVLink, consisting of a name (e.g. '),a("a",{attrs:{href:"https://mavlink.io/en/messages/common.html#ATTITUDE",target:"_blank",rel:"noopener noreferrer"}},[t._v("ATTITUDE"),a("OutboundLink")],1),t._v("), id, and fields containing relevant data.\nThey are deliberately lightweight, with a constrained size, and no semantics for resending and acknowledgement.\nStand-alone messages are commonly used for streaming telemetry or status information, and for sending commands where no acknowledgement is required - such as setpoint commands sent at high rate.")]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"https://mavlink.io/en/services/command.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Command Protocol"),a("OutboundLink")],1),t._v(" is a higher level protocol for sending commands that may need acknowledgement.\nSpecific commands are defined as values of the "),a("a",{attrs:{href:"https://mavlink.io/en/messages/common.html#mav_commands",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAV_CMD"),a("OutboundLink")],1),t._v(" enumeration, such as the takeoff command "),a("a",{attrs:{href:"https://mavlink.io/en/messages/common.html#MAV_CMD_NAV_TAKEOFF",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAV_CMD_NAV_TAKEOFF"),a("OutboundLink")],1),t._v(', and include up to 7 numeric "param" values.\nThe protocol sends a command by packaging the parameter values in a '),a("code",[t._v("COMMAND_INT")]),t._v(" or "),a("code",[t._v("COMMAND_LONG")]),t._v(" message, and waits for an acknowledgement with a result in a "),a("code",[t._v("COMMAND_ACK")]),t._v(".\nThe command is resent automatically if no acknowledgment is received.\nNote that "),a("a",{attrs:{href:"https://mavlink.io/en/messages/common.html#mav_commands",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAV_CMD"),a("OutboundLink")],1),t._v(" definitions are also used to define mission actions, and that not all definitions are supported for use in commands/missions on PX4.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mavlink.io/en/services/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microservices"),a("OutboundLink")],1),t._v(" are other higher level protocols built on top of MAVLink messages.\nThey are used to communicate information that cannot be sent in a single message, and to deliver features such as reliable communication.\nThe command protocol described above is one such service.\nOthers include the "),a("a",{attrs:{href:"https://mavlink.io/en/services/ftp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("File Transfer Protocol"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://mavlink.io/en/services/camera.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Camera Protocol"),a("OutboundLink")],1),t._v(" and "),a("a",{attrs:{href:"https://mavlink.io/en/services/mission.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mission Protocol"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("MAVLink messages, commands and enumerations are defined in "),a("a",{attrs:{href:"https://mavlink.io/en/guide/define_xml_element.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("XML definition files"),a("OutboundLink")],1),t._v(".\nThe MAVLink toolchain includes code generators that create programming-language-specific libraries from these definitions for sending and receiving messages.\nNote that most generated libraries do not create code to implement microservices.")]),t._v(" "),a("p",[t._v("The MAVLink project standardizes a number of messages, commands, enumerations, and microservices, for exchanging data using the following definition files (note that higher level files "),a("em",[t._v("include")]),t._v(" the definitions of the files below them):")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://mavlink.io/en/messages/development.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("development.xml"),a("OutboundLink")],1),t._v(" — Definitions that are proposed to be part of the standard.\nThe definitions move to "),a("code",[t._v("common.xml")]),t._v(" if accepted following testing.")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://mavlink.io/en/messages/common.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("common.xml"),a("OutboundLink")],1),t._v(' — A "library" of definitions meeting many common UAV use cases.\nThese are supported by many flight stacks, ground stations, and MAVLink peripherals.\nFlight stacks that use these definitions are more likely to interoperate.')]),t._v(" "),a("li",[a("a",{attrs:{href:"https://mavlink.io/en/messages/standard.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("standard.xml"),a("OutboundLink")],1),t._v(" — Definitions that are actually standard.\nThey are present on the vast majority of flight stacks and implemented in the same way.")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://mavlink.io/en/messages/minimal.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("minimal.xml"),a("OutboundLink")],1),t._v(" — Definitions required by a minimal MAVLink implementation.")])]),t._v(" "),a("p",[t._v("The project also hosts "),a("a",{attrs:{href:"https://mavlink.io/en/messages/#dialects",target:"_blank",rel:"noopener noreferrer"}},[t._v("dialect XML definitions"),a("OutboundLink")],1),t._v(", which contain MAVLink definitions that are specific to a flight stack or other stakeholder.")]),t._v(" "),a("p",[t._v("The protocol relies on each end of the communication having a shared definition of what messages are being sent.\nWhat this means is that in order to communicate both ends of the communication must use libraries generated from the same XML definition.")]),t._v(" "),a("h2",{attrs:{id:"px4-and-mavlink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#px4-and-mavlink"}},[t._v("#")]),t._v(" PX4 and MAVLink")]),t._v(" "),a("p",[t._v("PX4 releases build "),a("code",[t._v("common.xml")]),t._v(" MAVLink definitions by default, for the greatest compatibility with MAVLink ground stations, libraries, and external components such as MAVLink cameras.\nIn the "),a("code",[t._v("main")]),t._v(" branch, these are included from "),a("code",[t._v("development.xml")]),t._v(" on SITL, and "),a("code",[t._v("common.xml")]),t._v(" for other boards.")]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("To be part of a PX4 release, any MAVLink definitions that you use must be in "),a("code",[t._v("common.xml")]),t._v(" (or included files such as "),a("code",[t._v("standard.xml")]),t._v(" and "),a("code",[t._v("minimal.xml")]),t._v(").\nDuring development you can use definitions in "),a("code",[t._v("development.xml")]),t._v(".\nYou will need to work with the "),a("a",{attrs:{href:"https://mavlink.io/en/contributing/contributing.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAVLink team"),a("OutboundLink")],1),t._v(" to define and contribute these definitions.")])]),t._v(" "),a("p",[t._v("PX4 includes the "),a("a",{attrs:{href:"https://github.com/mavlink/mavlink",target:"_blank",rel:"noopener noreferrer"}},[t._v("mavlink/mavlink"),a("OutboundLink")],1),t._v(" repo as a submodule under "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/mavlink",target:"_blank",rel:"noopener noreferrer"}},[t._v("/src/modules/mavlink"),a("OutboundLink")],1),t._v(".\nThis contains XML definition files in "),a("a",{attrs:{href:"https://github.com/mavlink/mavlink/blob/master/message_definitions/v1.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("/mavlink/messages/1.0/"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("The build toolchain generates the MAVLink 2 C header files at build time.\nThe XML file for which headers files are generated may be defined in the "),a("RouterLink",{attrs:{to:"/en/hardware/porting_guide_config.html#px4-board-configuration-kconfig"}},[t._v("PX4 kconfig board configuration")]),t._v(" on a per-board basis, using the variable "),a("code",[t._v("CONFIG_MAVLINK_DIALECT")]),t._v(":")],1),t._v(" "),a("ul",[a("li",[t._v("For SITL "),a("code",[t._v("CONFIG_MAVLINK_DIALECT")]),t._v(" is set to "),a("code",[t._v("development")]),t._v(" in "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/boards/px4/sitl/default.px4board#L36",target:"_blank",rel:"noopener noreferrer"}},[t._v("boards/px4/sitl/default.px4board"),a("OutboundLink")],1),t._v(".\nYou can change this to any other definition file, but the file must include "),a("code",[t._v("common.xml")]),t._v(".")]),t._v(" "),a("li",[t._v("For other boards "),a("code",[t._v("CONFIG_MAVLINK_DIALECT")]),t._v(" is not set by default, and PX4 builds the definitions in "),a("code",[t._v("common.xml")]),t._v(" (these are build into the "),a("RouterLink",{attrs:{to:"/en/modules/modules_communication.html#mavlink"}},[t._v("mavlink module")]),t._v(" by default — search for "),a("code",[t._v("menuconfig MAVLINK_DIALECT")]),t._v(" in "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/Kconfig#L10",target:"_blank",rel:"noopener noreferrer"}},[t._v("src/modules/mavlink/Kconfig"),a("OutboundLink")],1),t._v(").")],1)]),t._v(" "),a("p",[t._v("The files are generated into the build directory: "),a("code",[t._v("/build/<build target>/mavlink/")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"custom-mavlink-messages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-mavlink-messages"}},[t._v("#")]),t._v(" Custom MAVLink Messages")]),t._v(" "),a("p",[t._v("A custom MAVLink message is one that isn't in the default definitions included into PX4.")]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("If you use a custom definition you will need maintain the definition in PX4, your ground station, and any other SDKs that communicate with it.\nGenerally you should use (or add to) the standard definitions if at all possible to reduce the maintenance burden.")])]),t._v(" "),a("p",[t._v("Custom definitions can be added in a new dialect file in the same directory as the standard XML definitions.\nFor example, create "),a("code",[t._v("PX4-Autopilot/src/modules/mavlink/mavlink/message_definitions/v1.0/custom_messages.xml")]),t._v(", and set "),a("code",[t._v("CONFIG_MAVLINK_DIALECT")]),t._v(" to build the new file for SITL.\nThis dialect file should include "),a("code",[t._v("development.xml")]),t._v(" so that all the standard definitions are also included.")]),t._v(" "),a("p",[t._v('For initial prototyping, or if you intend your message to be "standard", you can also add your messages to '),a("code",[t._v("common.xml")]),t._v(" (or "),a("code",[t._v("development.xml")]),t._v(").\nThis simplifies building, because you don't need to modify the dialect that is built.")]),t._v(" "),a("p",[t._v("The MAVLink developer guide explains how to define new messages in "),a("a",{attrs:{href:"https://mavlink.io/en/guide/define_xml_element.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to Define MAVLink Messages & Enums"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("You can check that your new messages are built by inspecting the headers generated in the build directory ("),a("code",[t._v("/build/<build target>/mavlink/")]),t._v(").\nIf your messages are not built they may be incorrectly formatted, or use clashing ids.\nInspect the build log for information.")]),t._v(" "),a("p",[t._v("Once the message is being built you can stream, receive, or otherwise use it, as described in the following sections.")]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"https://mavlink.io/en/getting_started/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAVLink Developer guide"),a("OutboundLink")],1),t._v(" has more information about using the MAVLink toolchain.")])]),t._v(" "),a("h2",{attrs:{id:"streaming-mavlink-messages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#streaming-mavlink-messages"}},[t._v("#")]),t._v(" Streaming MAVLink Messages")]),t._v(" "),a("p",[t._v("MAVLink messages are streamed using a streaming class, derived from "),a("code",[t._v("MavlinkStream")]),t._v(", that has been added to the PX4 stream list.\nThe class has framework methods that you implement so PX4 can get information it needs from the generated MAVLink message definition.\nIt also has a "),a("code",[t._v("send()")]),t._v(" method that is called each time the message needs to be sent — you override this to copy information from a uORB subscription to the MAVLink message object that is to be sent.")]),t._v(" "),a("p",[t._v("This tutorial demonstrates how to stream a uORB message as a MAVLink message, and applies to both standard and custom messages.")]),t._v(" "),a("h3",{attrs:{id:"preconditions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preconditions"}},[t._v("#")]),t._v(" Preconditions")]),t._v(" "),a("p",[t._v("Generally you will already have a "),a("RouterLink",{attrs:{to:"/en/middleware/uorb.html"}},[t._v("uORB")]),t._v(" message that contains information you'd like to stream and a definition of a MAVLink message that you'd like to stream it with.")],1),t._v(" "),a("p",[t._v("For this example we're going to assume that you want to stream the (existing) "),a("RouterLink",{attrs:{to:"/en/msg_docs/BatteryStatus.html"}},[t._v("BatteryStatus")]),t._v(" uORB message to a new MAVLink battery status message, which we will name "),a("code",[t._v("BATTERY_STATUS_DEMO")]),t._v(".")],1),t._v(" "),a("p",[t._v("Copy this "),a("code",[t._v("BATTERY_STATUS_DEMO")]),t._v(" message into the message section of "),a("code",[t._v("development.xml")]),t._v(" in your PX4 source code, which will be located at: "),a("code",[t._v("\\src\\modules\\mavlink\\mavlink\\message_definitions\\v1.0\\development.xml")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("11514"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("BATTERY_STATUS_DEMO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Simple demo battery."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("uint8_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("instance")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Battery ID"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("int16_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("temperature"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("units")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("cdegC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("invalid")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("INT16_MAX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Temperature of the whole battery pack (not internal electronics). INT16_MAX field not provided."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("uint8_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("percent_remaining"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("units")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("invalid")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("UINT8_MAX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Remaining battery energy. Values: [0-100], UINT8_MAX: field not provided."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Note that this is a cut-down version of the not-yet-implemented "),a("a",{attrs:{href:"https://mavlink.io/en/messages/development.html#BATTERY_STATUS_V2",target:"_blank",rel:"noopener noreferrer"}},[t._v("BATTERY_STATUS_V2"),a("OutboundLink")],1),t._v(" message with randomly chosen unused id of "),a("code",[t._v("11514")]),t._v(".\nHere we've put the message in "),a("code",[t._v("development.xml")]),t._v(", which is fine for testing and if the message is intended to eventually be part of the standard message set, but you might also put a "),a("a",{attrs:{href:"#custom-mavlink-messages"}},[t._v("custom message")]),t._v(" in its own dialect file.")])]),t._v(" "),a("p",[t._v("Build PX4 for SITL and confirm that the associated message is generated in "),a("code",[t._v("/build/px4_sitl_default/mavlink/common/mavlink_msg_battery_status_demo.h")]),t._v(".")]),t._v(" "),a("p",[t._v("Because "),a("code",[t._v("BatteryStatus")]),t._v(" already exists you will not need to do anything to create or build it.")]),t._v(" "),a("h3",{attrs:{id:"define-the-streaming-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#define-the-streaming-class"}},[t._v("#")]),t._v(" Define the Streaming Class")]),t._v(" "),a("p",[t._v("First create a file named "),a("code",[t._v("BATTERY_STATUS_DEMO.hpp")]),t._v(" for your streaming class (named after the message to stream) inside the "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/mavlink/streams",target:"_blank",rel:"noopener noreferrer"}},[t._v("/src/modules/mavlink/streams"),a("OutboundLink")],1),t._v(" directory.")]),t._v(" "),a("p",[t._v("Add the headers for the uORB message(s) to the top of the file (the required MAVLink headers should already be available):")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<uORB/topics/battery_status.h>")])]),t._v("\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("The uORB topic's snake-case header file is generated from the CamelCase uORB filename at build time.")])]),t._v(" "),a("p",[t._v("Then copy the streaming class definition below into the file:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MavlinkStreamBatteryStatusDemo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MavlinkStream")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" MavlinkStream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("new_instance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Mavlink "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mavlink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MavlinkStreamBatteryStatusDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mavlink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MavlinkStreamBatteryStatusDemo")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_name_static")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_name_static")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BATTERY_STATUS_DEMO"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("uint16_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_id_static")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" MAVLINK_MSG_ID_BATTERY_STATUS_DEMO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("uint16_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_id_static")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" MAVLINK_MSG_ID_BATTERY_STATUS_DEMO_LEN "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" MAVLINK_NUM_NON_PAYLOAD_BYTES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Subscription to array of uORB battery status instances")]),t._v("\n    uORB"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("SubscriptionMultiArray"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("battery_status_s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" battery_status_s"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("MAX_INSTANCES"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _battery_status_subs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ORB_ID"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SubscriptionMultiArray subscription is needed because battery has multiple instances.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// uORB::Subscription is used to subscribe to a single-instance topic")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* do not allow top copying this class */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MavlinkStreamBatteryStatusDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MavlinkStreamBatteryStatusDemo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    MavlinkStreamBatteryStatusDemo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" MavlinkStreamBatteryStatusDemo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explicit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MavlinkStreamBatteryStatusDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Mavlink "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mavlink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MavlinkStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mavlink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" updated "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Loop through _battery_status_subs (subscription to array of BatteryStatus instances)")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("battery_sub "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" _battery_status_subs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// battery_status_s is a struct that can hold the battery object topic")]),t._v("\n\t\t\tbattery_status_s battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Update battery_status and publish only if the status has changed")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("battery_sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mavlink_battery_status_demo_t is the MAVLink message object")]),t._v("\n\t\t\t\tmavlink_battery_status_demo_t bat_msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t\tbat_msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tbat_msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("battery_remaining "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("roundf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remaining "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// check if temperature valid")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connected "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PX4_ISFINITE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tbat_msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tbat_msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" INT16_MAX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Send the message")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mavlink_msg_battery_status_demo_send_struct")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_mavlink"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_channel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("bat_msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tupdated "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" updated"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Most streaming classes are very similar (see examples in "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/tree/main/src/modules/mavlink/streams",target:"_blank",rel:"noopener noreferrer"}},[t._v("/src/modules/mavlink/streams"),a("OutboundLink")],1),t._v("):")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("The streaming class derives from "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/mavlink_stream.h",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("MavlinkStream")]),a("OutboundLink")],1),t._v(" and is named using the pattern "),a("code",[t._v("MavlinkStream<CamelCaseMessageName>")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("The "),a("code",[t._v("public")]),t._v(' definitions are "near-boilerplate", allowing PX4 to get an instance of the class ('),a("code",[t._v("new_instance()")]),t._v("), and then to use it to fetch the name, id, and size of the message from the MAVLink headers ("),a("code",[t._v("get_name()")]),t._v(", "),a("code",[t._v("get_name_static()")]),t._v(", "),a("code",[t._v("get_id_static()")]),t._v(", "),a("code",[t._v("get_id()")]),t._v(", "),a("code",[t._v("get_size()")]),t._v(").\nFor your own streaming classes these can just be copied and modified to match the values for your MAVLink message.")])]),t._v(" "),a("li",[a("p",[t._v("The "),a("code",[t._v("private")]),t._v(" definitions subscribe to the uORB topics that need to be published.\nIn this case the uORB topic has multiple instances: one for each battery.\nWe use "),a("code",[t._v("uORB::SubscriptionMultiArray")]),t._v(" to get an array of battery status subscriptions.")]),t._v(" "),a("p",[t._v("Here we also define constructors to prevent the definition being copied.")])]),t._v(" "),a("li",[a("p",[t._v("The "),a("code",[t._v("protected")]),t._v(" section is where the important work takes place!")]),t._v(" "),a("p",[t._v("Here we override the "),a("code",[t._v("send()")]),t._v(" method, copying values from the subscribed uORB topic(s) into appropriate fields in the MAVLink message, and then send the message.")]),t._v(" "),a("p",[t._v("In this particular example we have an array of uORB instances "),a("code",[t._v("_battery_status_subs")]),t._v(" (because we have multiple batteries).\nWe iterate the array and use "),a("code",[t._v("update()")]),t._v(" on each subscription to check if the associated battery instance has changed (and update a structure with the current data).\nThis allows us to send the MAVLink message "),a("em",[t._v("only")]),t._v(" if the associated battery uORB topic has changed:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Struct to hold current topic data.")]),t._v("\nbattery_status_s battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update() populates battery_status and returns true if the status has changed")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("battery_sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use battery_status to populate message and send")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("If wanted to send a MAVLink message whether or not the data changed, we could instead use "),a("code",[t._v("copy()")]),t._v(" as shown:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("battery_status_s battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbattery_sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("For a single-instance topic like "),a("RouterLink",{attrs:{to:"/en/msg_docs/VehicleStatus.html"}},[t._v("VehicleStatus")]),t._v(" we would subscribe like this:")],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create subscription _vehicle_status_sub")]),t._v("\nuORB"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Subscription _vehicle_status_sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ORB_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehicle_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("And we could use the resulting subscription in the same way with update or copy.")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("vehicle_status_s vehicle_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vehicle_status_s is the definition of the uORB topic")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_vehicle_status_sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("vehicle_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use the vehicle_status as it has been updated.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),a("p",[t._v("Next we include our new class in "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/mavlink_messages.cpp#L2193",target:"_blank",rel:"noopener noreferrer"}},[t._v("mavlink_messages.cpp"),a("OutboundLink")],1),t._v(".\nAdd the line below to the part of the file where all the other streams are included:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"streams/BATTERY_STATUS_DEMO.hpp"')])]),t._v("\n")])])]),a("p",[t._v("Finally append the stream class to the "),a("code",[t._v("streams_list")]),t._v(" at the bottom of\n"),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/mavlink_messages.cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("mavlink_messages.cpp"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-C extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("StreamListItem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("streams_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BATTERY_STATUS_DEMO_HPP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n    create_stream_list_item"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MavlinkStreamBatteryStatusDemo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BATTERY_STATUS_DEMO_HPP")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The class is now available for streaming, but won't be streamed by default.\nWe cover that in the next sections.")]),t._v(" "),a("h3",{attrs:{id:"streaming-by-default"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#streaming-by-default"}},[t._v("#")]),t._v(" Streaming by Default")]),t._v(" "),a("p",[t._v("The easiest way to stream your messages by default (as part of a build) is to add them to "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/mavlink_main.cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("mavlink_main.cpp"),a("OutboundLink")],1),t._v(" in the appropriate message group.")]),t._v(" "),a("p",[t._v("If you search in the file you'll find groups of messages defined in a switch statement:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("MAVLINK_MODE_NORMAL")]),t._v(": Streamed to a GCS.")]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_ONBOARD")]),t._v(": Streamed to a companion computer on a fast link, such as Ethernet")]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_ONBOARD_LOW_BANDWIDTH")]),t._v(": Streamed to a companion computer for re-routing to a reduced-traffic link, such as a GCS.")]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_GIMBAL")]),t._v(": Streamed to a gimbal")]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_EXTVISION")]),t._v(": Streamed to an external vision system")]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_EXTVISIONMIN")]),t._v(": Streamed to an external vision system on a slower link")]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_OSD")]),t._v(": Streamed to an OSD, such as an FPV headset.")]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_CUSTOM")]),t._v(": Stream nothing by default. Used when configuring streaming using MAVLink.")]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_MAGIC")]),t._v(": Same as "),a("code",[t._v("MAVLINK_MODE_CUSTOM")])]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_CONFIG")]),t._v(": Streaming over USB with higher rates than "),a("code",[t._v("MAVLINK_MODE_NORMAL")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_MINIMAL")]),t._v(": Stream a minimal set of messages. Normally used for poor telemetry links.")]),t._v(" "),a("li",[a("code",[t._v("MAVLINK_MODE_IRIDIUM")]),t._v(": Streamed to an iridium satellite phone")])]),t._v(" "),a("p",[t._v("Normally you'll be testing on a GCS, so you could just add the message to the "),a("code",[t._v("MAVLINK_MODE_NORMAL")]),t._v(" case using the "),a("code",[t._v("configure_stream_local()")]),t._v(" method.\nFor example, to stream CA_TRAJECTORY at 5 Hz:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" MAVLINK_MODE_CONFIG"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// USB")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note: streams requiring low latency come first")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configure_stream_local")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BATTERY_STATUS_DEMO"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("It is also possible to add a stream by calling the "),a("RouterLink",{attrs:{to:"/en/modules/modules_communication.html#mavlink"}},[t._v("mavlink")]),t._v(" module with the "),a("code",[t._v("stream")]),t._v(" argument in a "),a("RouterLink",{attrs:{to:"/en/concept/system_startup.html"}},[t._v("startup script")]),t._v(".\nFor example, you might add the following line to "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink",target:"_blank",rel:"noopener noreferrer"}},[t._v("/ROMFS/px4fmu_common/init.d-posix/px4-rc.mavlink"),a("OutboundLink")],1),t._v(" in order to stream "),a("code",[t._v("BATTERY_STATUS_DEMO")]),t._v(" at 50Hz on UDP port "),a("code",[t._v("14556")]),t._v(" ("),a("code",[t._v("-r")]),t._v(" configures the streaming rate and "),a("code",[t._v("-u")]),t._v(" identifies the MAVLink channel on UDP port 14556).")],1),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("mavlink stream -r "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" -s BATTERY_STATUS_DEMO -u "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14556")]),t._v("\n")])])]),a("h3",{attrs:{id:"streaming-on-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#streaming-on-request"}},[t._v("#")]),t._v(" Streaming on Request")]),t._v(" "),a("p",[t._v("Some messages are only needed once, when particular hardware is connected, or under other circumstances.\nIn order to avoid clogging communications links with messages that aren't needed you may not stream all messages by default, even at low rate.")]),t._v(" "),a("p",[t._v("If you needed, a GCS or other MAVLink API can request that particular messages are streamed at a particular rate using "),a("a",{attrs:{href:"https://mavlink.io/en/messages/common.html#MAV_CMD_SET_MESSAGE_INTERVAL",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAV_CMD_SET_MESSAGE_INTERVAL"),a("OutboundLink")],1),t._v(".\nA particular message can be requested just once using "),a("a",{attrs:{href:"https://mavlink.io/en/messages/common.html#MAV_CMD_REQUEST_MESSAGE",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAV_CMD_REQUEST_MESSAGE"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"receiving-mavlink-messages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#receiving-mavlink-messages"}},[t._v("#")]),t._v(" Receiving MAVLink Messages")]),t._v(" "),a("p",[t._v("This section explains how to receive a message over MAVLink and publish it to uORB.")]),t._v(" "),a("p",[t._v("It assumes that we are receiving the "),a("code",[t._v("BATTERY_STATUS_DEMO")]),t._v(" message and we want to update the (existing) "),a("RouterLink",{attrs:{to:"/en/msg_docs/BatteryStatus.html"}},[t._v("BatteryStatus uORB message")]),t._v(" with the contained information.\nThis is the kind of implementation that you would provide to support a MAVLink battery integration with PX4.")],1),t._v(" "),a("p",[t._v("Add the headers for the uORB topic to publish to in "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/mavlink_receiver.h#L77",target:"_blank",rel:"noopener noreferrer"}},[t._v("mavlink_receiver.h"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<uORB/topics/battery_status.h>")])]),t._v("\n")])])]),a("p",[t._v("Add a function signature for a function that handles the incoming MAVLink message in the "),a("code",[t._v("MavlinkReceiver")]),t._v(" class in\n"),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/mavlink_receiver.h#L126",target:"_blank",rel:"noopener noreferrer"}},[t._v("mavlink_receiver.h"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle_message_battery_status_demo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mavlink_message_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Normally you would add a uORB publisher for the uORB topic to publish in the "),a("code",[t._v("MavlinkReceiver")]),t._v(" class in\n"),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/mavlink_receiver.h#L296",target:"_blank",rel:"noopener noreferrer"}},[t._v("mavlink_receiver.h"),a("OutboundLink")],1),t._v(".\nIn this case the "),a("RouterLink",{attrs:{to:"/en/msg_docs/BatteryStatus.html"}},[t._v("BatteryStatus")]),t._v(" uORB topic already exists:")],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("uORB"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Publication"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("battery_status_s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _battery_pub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ORB_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("This creates a publication to a single uORB topic instance, which by default will be the "),a("em",[t._v("first")]),t._v(" instance.")]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("This implementation won't work on multi-battery systems, because several batteries might be publishing data to the first instance of the topic, and there is no way to differentiate them.\nTo support multiple batteries we'd need to use "),a("code",[t._v("PublicationMulti")]),t._v(" and map the MAVLink message instance IDs to specific uORB topic instances.")])]),t._v(" "),a("p",[t._v("Implement the "),a("code",[t._v("handle_message_battery_status_demo")]),t._v(" function in "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/mavlink_receiver.cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("mavlink_receiver.cpp"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MavlinkReceiver")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle_message_battery_status_demo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mavlink_message_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("sysid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" mavlink_system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sysid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("compid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" mavlink_system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("compid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ignore battery status coming from other systems or from the autopilot itself")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// external battery measurements")]),t._v("\n\tmavlink_battery_status_t battery_mavlink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mavlink_msg_battery_status_decode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("battery_mavlink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tbattery_status_s battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tbattery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timestamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hrt_absolute_time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tbattery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remaining "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("battery_mavlink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("battery_remaining "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.0f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tbattery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("battery_mavlink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tbattery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connected "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t_battery_pub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("battery_status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("Above we only write to the battery fields that are defined in the topic.\nIn practice you'd update all fields with either valid or invalid values: this has been cut back for brevity.")])]),t._v(" "),a("p",[t._v("and finally make sure it is called in "),a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/main/src/modules/mavlink/mavlink_receiver.cpp#L228",target:"_blank",rel:"noopener noreferrer"}},[t._v("MavlinkReceiver::handle_message()"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MavlinkReceiver")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle_message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mavlink_message_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("msgid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" MAVLINK_MSG_ID_BATTERY_STATUS_DEMO"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle_message_battery_status_demo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"alternative-to-creating-custom-mavlink-messages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alternative-to-creating-custom-mavlink-messages"}},[t._v("#")]),t._v(" Alternative to Creating Custom MAVLink Messages")]),t._v(" "),a("p",[t._v("Sometimes there is the need for a custom MAVLink message with content that is not fully defined.")]),t._v(" "),a("p",[t._v("For example when using MAVLink to interface PX4 with an embedded device, the messages that are exchanged between the autopilot and the device may go through several iterations before they are stabilized.\nIn this case, it can be time-consuming and error-prone to regenerate the MAVLink headers, and make sure both devices use the same version of the protocol.")]),t._v(" "),a("p",[t._v("An alternative - and temporary - solution is to re-purpose debug messages.\nInstead of creating a custom MAVLink message "),a("code",[t._v("CA_TRAJECTORY")]),t._v(", you can send a message "),a("code",[t._v("DEBUG_VECT")]),t._v(" with the string key "),a("code",[t._v("CA_TRAJ")]),t._v(" and data in the "),a("code",[t._v("x")]),t._v(", "),a("code",[t._v("y")]),t._v(" and "),a("code",[t._v("z")]),t._v(" fields.\nSee "),a("RouterLink",{attrs:{to:"/en/debug/debug_values.html"}},[t._v("this tutorial")]),t._v(" for an example usage of debug messages.")],1),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("This solution is not efficient as it sends character string over the network and involves comparison of strings.\nIt should be used for development only!")])]),t._v(" "),a("h2",{attrs:{id:"testing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#testing"}},[t._v("#")]),t._v(" Testing")]),t._v(" "),a("p",[t._v("As a first step, and while debugging, commonly you'll just want to confirm that any messages you've created are being sent/received as you expect.")]),t._v(" "),a("p",[t._v("You should should first use the "),a("code",[t._v("uorb top [<message_name>]")]),t._v(" command to verify in real-time that your message is published and the rate (see "),a("RouterLink",{attrs:{to:"/en/middleware/uorb.html#uorb-top-command"}},[t._v("uORB Messaging")]),t._v(").\nThis approach can also be used to test incoming messages that publish a uORB topic (for other messages you might use "),a("code",[t._v("printf")]),t._v(" in your code and test in SITL).")],1),t._v(" "),a("p",[t._v("There are several approaches you can use to view MAVLink traffic:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Create a "),a("a",{attrs:{href:"https://mavlink.io/en/guide/wireshark.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wireshark MAVLink plugin"),a("OutboundLink")],1),t._v(" for your dialect.\nThis allows you to inspect MAVLink traffic on an IP interface - for example between "),a("em",[t._v("QGroundControl")]),t._v(" or MAVSDK and your real or simulated version of PX4.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("It is much easier to generate a wireshark plugin and inspect traffic in Wireshark, than to rebuild QGroundControl with your dialect and use MAVLink Inspector.")])])]),t._v(" "),a("li",[a("p",[a("RouterLink",{attrs:{to:"/en/dev_log/logging.html"}},[t._v("Log uORB topics")]),t._v(" associate with your MAVLink message.")],1)]),t._v(" "),a("li",[a("p",[t._v("View received messages in the QGroundControl "),a("a",{attrs:{href:"https://docs.qgroundcontrol.com/master/en/qgc-user-guide/analyze_view/mavlink_inspector.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAVLink Inspector"),a("OutboundLink")],1),t._v(".\nYou will need to rebuild QGroundControl with the custom message definitions, "),a("a",{attrs:{href:"h#updating-qgroundcontrol"}},[t._v("as described below")])])])]),t._v(" "),a("h3",{attrs:{id:"set-streaming-rate-using-a-shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-streaming-rate-using-a-shell"}},[t._v("#")]),t._v(" Set Streaming Rate using a Shell")]),t._v(" "),a("p",[t._v("For testing, it is sometimes useful to increase the streaming rate of individual topics at runtime (e.g. for inspection in QGC).\nThis can be achieved using by calling the "),a("RouterLink",{attrs:{to:"/en/modules/modules_communication.html#mavlink"}},[t._v("mavlink")]),t._v(" module through the "),a("a",{attrs:{href:"https://docs.qgroundcontrol.com/master/en/qgc-user-guide/analyze_view/mavlink_console.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("QGC MAVLink console"),a("OutboundLink")],1),t._v(" (or some other shell):")],1),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("mavlink stream -u "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("port number"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mavlink topic name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("rate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("You can get the port number with "),a("code",[t._v("mavlink status")]),t._v(" which will output (amongst others) "),a("code",[t._v("transport protocol: UDP (<port number>)")]),t._v(".\nAn example would be:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("mavlink stream -u "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14556")]),t._v(" -s CA_TRAJECTORY -r "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n")])])]),a("h2",{attrs:{id:"updating-ground-stations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updating-ground-stations"}},[t._v("#")]),t._v(" Updating Ground Stations")]),t._v(" "),a("p",[t._v("Ultimately you'll want to use your new MAVLink interface by providing the corresponding ground station or MAVSDK implementation.")]),t._v(" "),a("p",[t._v("The important thing to remember here is that MAVLink requires that you use a version of the library that is built to the same definition (XML file).\nSo if you have created a custom message in PX4 you won't be able to use it unless you build QGC or MAVSDK with that same definition.")]),t._v(" "),a("h3",{attrs:{id:"updating-qgroundcontrol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updating-qgroundcontrol"}},[t._v("#")]),t._v(" Updating QGroundControl")]),t._v(" "),a("p",[t._v("You will need to "),a("a",{attrs:{href:"https://docs.qgroundcontrol.com/master/en/qgc-dev-guide/getting_started/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Build QGroundControl"),a("OutboundLink")],1),t._v(" including a pre-built C library that contains your custom messages.")]),t._v(" "),a("p",[t._v("QGC uses a pre-built C library that must be located at "),a("a",{attrs:{href:"https://github.com/mavlink/qgroundcontrol/tree/master/libs/mavlink/include/mavlink",target:"_blank",rel:"noopener noreferrer"}},[t._v("/qgroundcontrol/libs/mavlink/include/mavlink"),a("OutboundLink")],1),t._v(" in the QGC source.")]),t._v(" "),a("p",[t._v("By default this is pre-included as a submodule from "),a("a",{attrs:{href:"https://github.com/mavlink/c_library_v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/mavlink/c_library_v2"),a("OutboundLink")],1),t._v(" but you can "),a("a",{attrs:{href:"https://mavlink.io/en/getting_started/generate_libraries.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("generate your own MAVLink Libraries"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("QGC uses the all.xml dialect by default, which includes "),a("strong",[t._v("common.xml")]),t._v(".\nYou can include your messages in either file or in your own dialect.\nHowever if you use your own dialect then it should include ArduPilotMega.xml (or it will miss all the existing messages), and you will need to change the dialect used by setting it in "),a("a",{attrs:{href:"https://github.com/mavlink/qgroundcontrol/blob/master/QGCExternalLibs.pri#L52",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("MAVLINK_CONF")]),a("OutboundLink")],1),t._v(" when running "),a("em",[t._v("qmake")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"updating-mavsdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updating-mavsdk"}},[t._v("#")]),t._v(" Updating MAVSDK")]),t._v(" "),a("p",[t._v("See the MAVSDK docs for information about how to work with "),a("a",{attrs:{href:"https://mavsdk.mavlink.io/main/en/cpp/guide/build.html#mavlink-headers-and-dialects",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAVLink headers and dialects"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);