(window.webpackJsonp=window.webpackJsonp||[]).push([[1596],{2932:function(s,t,a){"use strict";a.r(t);var e=a(19),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"pilotpi-使用-ubuntu-server-操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pilotpi-使用-ubuntu-server-操作系统"}},[s._v("#")]),s._v(" PilotPi 使用 Ubuntu Server 操作系统")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("Ubuntu Server on RPi 4B consumes a lot of current and generates a lot of heat. Design for better heat dissipation and high power consumption when using this hardware.")])]),s._v(" "),a("h2",{attrs:{id:"开发者快速指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发者快速指南"}},[s._v("#")]),s._v(" 开发者快速指南")]),s._v(" "),a("h3",{attrs:{id:"操作系统镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统镜像"}},[s._v("#")]),s._v(" 操作系统镜像")]),s._v(" "),a("p",[s._v("请从官方 "),a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/",target:"_blank",rel:"noopener noreferrer"}},[s._v("cdimage"),a("OutboundLink")],1),s._v(" 页面获取最新更新的操作系统。")]),s._v(" "),a("h4",{attrs:{id:"armhf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#armhf"}},[s._v("#")]),s._v(" armhf")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/18.04.5/release/ubuntu-18.04.5-preinstalled-server-armhf+raspi2.img.xz",target:"_blank",rel:"noopener noreferrer"}},[s._v("Ubuntu Server 18.04.5 for RPi2"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/18.04.5/release/ubuntu-18.04.5-preinstalled-server-armhf+raspi3.img.xz.zsync",target:"_blank",rel:"noopener noreferrer"}},[s._v("Ubuntu Server 18.04.5 for RPi3"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/18.04.5/release/ubuntu-18.04.5-preinstalled-server-armhf+raspi4.img.xz",target:"_blank",rel:"noopener noreferrer"}},[s._v("Ubuntu Server 18.04.5 for RPi4"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/20.04.1/release/ubuntu-20.04.1-preinstalled-server-armhf+raspi.img.xz",target:"_blank",rel:"noopener noreferrer"}},[s._v("Ubuntu Server 20.04.1 for RPi 2/3/4"),a("OutboundLink")],1)])]),s._v(" "),a("h4",{attrs:{id:"arm64"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arm64"}},[s._v("#")]),s._v(" arm64")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/18.04.5/release/ubuntu-18.04.5-preinstalled-server-arm64+raspi3.img.xz",target:"_blank",rel:"noopener noreferrer"}},[s._v("Ubuntu Server 18.04.5 for RPi3"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/18.04.5/release/ubuntu-18.04.5-preinstalled-server-arm64+raspi4.img.xz",target:"_blank",rel:"noopener noreferrer"}},[s._v("Ubuntu Server 18.04.5 for RPi4"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://cdimage.ubuntu.com/releases/20.04.1/release/ubuntu-20.04.1-preinstalled-server-arm64+raspi.img.xz",target:"_blank",rel:"noopener noreferrer"}},[s._v("Ubuntu Server 20.04.1 for RPi 3/4"),a("OutboundLink")],1)])]),s._v(" "),a("h4",{attrs:{id:"最新操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最新操作系统"}},[s._v("#")]),s._v(" 最新操作系统")]),s._v(" "),a("p",[s._v("当首次设置树莓派的 WiFi 时，我们建议先使用有线网络连接你的路由器与树莓派，并使用显示器和键盘。")]),s._v(" "),a("h3",{attrs:{id:"首次启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首次启动"}},[s._v("#")]),s._v(" 首次启动")]),s._v(" "),a("p",[s._v("When setting up RaPi's WiFi for the first time we recommended using a wired Ethernet connection between your home router and RPi, and a monitor and keyboard.")]),s._v(" "),a("h4",{attrs:{id:"启动前"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动前"}},[s._v("#")]),s._v(" 启动前")]),s._v(" "),a("p",[s._v("现在将 SD 卡插入您的 Pi 并首次开机。 请确认您可以获得树莓派的 shell —— 通过有线以太网连接 SSH ，或直接通过键盘和显示器。")]),s._v(" "),a("p",[s._v("Now plug the SD card onto your Pi and boot for the first time. Make sure you have shell access to the RPi - either SSH connection over wired Ethernet, or direct accessing with keyboard and monitor.")]),s._v(" "),a("h4",{attrs:{id:"wifi-区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wifi-区域"}},[s._v("#")]),s._v(" WiFi 区域")]),s._v(" "),a("p",[s._v("First install required package:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" crda\n")])])]),a("p",[s._v("Edit the file "),a("code",[s._v("/etc/default/crda")]),s._v(" to change the correct WiFi region. "),a("a",{attrs:{href:"https://www.arubanetworks.com/techdocs/InstantWenger_Mobile/Advanced/Content/Instant%20User%20Guide%20-%20volumes/Country_Codes_List.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("Reference List"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /etc/default/crda\n")])])]),a("p",[s._v("让我们先设置主机名。")]),s._v(" "),a("h4",{attrs:{id:"主机名和-mdns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主机名和-mdns"}},[s._v("#")]),s._v(" 主机名和 mDNS")]),s._v(" "),a("p",[s._v("Let's set up hostname at first.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /etc/hostname\n")])])]),a("p",[s._v("Change the hostname to whatever you like. Then install the package required by mDNS:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" avahi-daemon\n")])])]),a("p",[s._v("在上述操作后通过无线网络重新连回树莓派。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n")])])]),a("p",[s._v("您也可能想要设置 "),a("a",{attrs:{href:"https://www.raspberrypi.org/documentation/remote-access/ssh/passwordless.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("无密码认证"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" ubuntu@pi_hostname.local\n")])])]),a("h4",{attrs:{id:"无密码认证-可选"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无密码认证-可选"}},[s._v("#")]),s._v(" 无密码认证(可选)")]),s._v(" "),a("p",[s._v("在 Ubuntu 中的相应文件是 "),a("code",[s._v("/boot/firmware/usercfg.txt")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"配置操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置操作系统"}},[s._v("#")]),s._v(" 配置操作系统")]),s._v(" "),a("h4",{attrs:{id:"config-txt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config-txt"}},[s._v("#")]),s._v(" config.txt")]),s._v(" "),a("p",[s._v("将文件内容替换为：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /boot/firmware/usercfg.txt\n")])])]),a("p",[s._v("Ubuntu Server 20.04：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enable sc16is752 overlay")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dtoverlay")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sc16is752-spi1\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enable I2C-1 and set the frequency to 400KHz")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dtparam")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("i2c_arm"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on,i2c_arm_baudrate"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("400000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enable spidev0.0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dtparam")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("spi"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enable RC input")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enable_uart")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enable I2C-0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dtparam")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("i2c_vc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# switch Bluetooth to miniuart")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dtoverlay")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("miniuart-bt\n")])])]),a("h4",{attrs:{id:"cmdline-txt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmdline-txt"}},[s._v("#")]),s._v(" cmdline.txt")]),s._v(" "),a("p",[s._v("在Ubuntu Server 18.04 或更早版本，"),a("code",[s._v("nobtcmd.txt")]),s._v(" 和 "),a("code",[s._v("btcmd.txt")]),s._v(" 都需要修改。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /boot/firmware/cmdline.txt\n")])])]),a("p",[s._v("找到 "),a("code",[s._v("console=/dev/ttyAMA0,115200")]),s._v(" 并删除该部分以禁用串口上的登录shell。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /boot/firmware/nobtcmd.txt\n")])])]),a("p",[s._v("Find "),a("code",[s._v("console=/dev/ttyAMA0,115200")]),s._v(" and remove that part to disable the login shell on serial interface.")]),s._v(" "),a("p",[s._v("这告诉Linux内核不要在 CPU 核心2 上调度任何进程。 我们将在稍后手动在该核心运行PX4。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("net.ifnames"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" dwc_otg.lpm_enable"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("console")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tty1 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("root")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("LABEL"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("writable "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rootfstype")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ext4 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("elevator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("deadline rootwait fixrtc "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("isolcpus")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])])]),a("p",[s._v("The above line tells the Linux kernel do not schedule any process on CPU core 2. We will manually run PX4 onto that core later.")]),s._v(" "),a("p",[s._v("检查串口：")]),s._v(" "),a("p",[s._v("应该有 "),a("code",[s._v("/dev/ttyAMA0")]),s._v(", "),a("code",[s._v("/dev/ttySC0")]),s._v(" 和 "),a("code",[s._v("/dev/ttySC1")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /dev/tty*\n")])])]),a("p",[s._v("检查 I2C：")]),s._v(" "),a("p",[s._v("应该有 "),a("code",[s._v("/dev/i2c-0")]),s._v(" 和 "),a("code",[s._v("/dev/i2c-1")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /dev/i2c*\n")])])]),a("p",[s._v("检查SPI：:")]),s._v(" "),a("p",[s._v("应该有 "),a("code",[s._v("/dev/spidev0.0")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /dev/spidev*\n")])])]),a("p",[s._v("There should be "),a("code",[s._v("/dev/spidev0.0")]),s._v(".")]),s._v(" "),a("h4",{attrs:{id:"rc-local"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rc-local"}},[s._v("#")]),s._v(" rc.local")]),s._v(" "),a("p",[s._v("In this section we will configure the auto-start script in "),a("strong",[s._v("rc.local")]),s._v(". Note that we need to create this file, as it is not present on a fresh Ubuntu OS.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /etc/rc.local\n")])])]),a("p",[s._v("Append the content below to the file:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"25"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /sys/class/gpio/export\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"in"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /sys/class/gpio/gpio25/direction\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /sys/class/gpio/gpio25/value"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Launching PX4"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /home/ubuntu/px4 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" taskset -c "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" ./bin/px4 -d -s pilotpi_mc.config "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /home/ubuntu/px4/px4.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"25"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /sys/class/gpio/unexport\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),a("p",[s._v("Save and exit. Then set the correct permissions:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /etc/rc.local\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("注解")]),s._v(" "),a("p",[s._v("Don't forget to turn off the switch when it is not needed!")])]),s._v(" "),a("h4",{attrs:{id:"csi-相机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csi-相机"}},[s._v("#")]),s._v(" CSI 相机")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("Enable CSI camera will stop anything works on I2C-0.")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /boot/firmware/usercfg.txt\n")])])]),a("p",[s._v("或")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("start_x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("h3",{attrs:{id:"构建代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建代码"}},[s._v("#")]),s._v(" 构建代码")]),s._v(" "),a("p",[s._v("此外，我们需要设置用户名：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/PX4/PX4-Autopilot.git --recursive\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("注解")]),s._v(" "),a("p",[s._v("This is all you need to do just to build the latest code.")])]),s._v(" "),a("h4",{attrs:{id:"配置上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置上传"}},[s._v("#")]),s._v(" 配置上传")]),s._v(" "),a("p",[s._v("然后上传：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("AUTOPILOT_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".X.X\n")])])]),a("p",[s._v("如果您是首次使用 Docker 进行编译，请参考"),a("a",{attrs:{href:"https://dev.px4.io/master/en/test_and_ci/docker.html#prerequisites",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方说明"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("AUTOPILOT_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("pi_hostname.local\n")])])]),a("p",[s._v("在 PX4-Autopilot 文件夹下执行：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("AUTOPILOT_USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ubuntu\n")])])]),a("h4",{attrs:{id:"为-armhf-目标交叉编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为-armhf-目标交叉编译"}},[s._v("#")]),s._v(" 为 armhf 目标交叉编译")]),s._v(" "),a("p",[s._v("只是为了编译代码，则可以执行：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" Firmware\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" scumaker_pilotpi_default\n")])])]),a("p",[s._v("构建可执行程序：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" scumaker_pilotpi_default upload\n")])])]),a("h4",{attrs:{id:"备选armhf构建方法-使用-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#备选armhf构建方法-使用-docker"}},[s._v("#")]),s._v(" 备选armhf构建方法 (使用 docker)")]),s._v(" "),a("p",[s._v("然后上传：")]),s._v(" "),a("p",[s._v("如果您是首次使用 Docker 进行编译，请参考"),a("a",{attrs:{href:"https://dev.px4.io/master/en/test_and_ci/docker.html#prerequisites",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方说明"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("./Tools/docker_run.sh "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export AUTOPILOT_HOST=192.168.X.X; export AUTOPILOT_USER=ubuntu; export NO_NINJA_BUILD=1; make scumaker_pilotpi_default upload"')]),s._v("\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("注解")]),s._v(" "),a("p",[s._v("mDNS is not supported within docker. You must specify the correct IP address every time when uploading.")])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("注解")]),s._v(" "),a("p",[s._v("If your IDE doesn't support ninja build, "),a("code",[s._v("NO_NINJA_BUILD=1")]),s._v(" option will help. You can compile without uploading too. Just remove "),a("code",[s._v("upload")]),s._v(" target.")])]),s._v(" "),a("p",[s._v("通过 ssh 连接并运行它：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("./Tools/docker_run.sh "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"make scumaker_pilotpi_default"')]),s._v("\n")])])]),a("h4",{attrs:{id:"为arm64交叉编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为arm64交叉编译"}},[s._v("#")]),s._v(" 为arm64交叉编译")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("注解")]),s._v(" "),a("p",[s._v("This step requires "),a("code",[s._v("aarch64-linux-gnu")]),s._v(" tool-chain to be installed.")])]),s._v(" "),a("p",[s._v("如果在树莓派上运行PX4时遇到了以下问题：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" PX4-Autopilot\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" scumaker_pilotpi_arm64\n")])])]),a("p",[s._v("这时应当使用基于 Docker 的编译。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" scumaker_pilotpi_arm64 upload\n")])])]),a("h4",{attrs:{id:"备选-arm64-构建方法-使用-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#备选-arm64-构建方法-使用-docker"}},[s._v("#")]),s._v(" 备选 arm64 构建方法 (使用 docker)")]),s._v(" "),a("p",[s._v("在执行下一步之前，先清除现有构建目录：")]),s._v(" "),a("p",[s._v("然后回到上面相应的章节。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("./Tools/docker_run.sh "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export AUTOPILOT_HOST=192.168.X.X; export AUTOPILOT_USER=ubuntu; export NO_NINJA_BUILD=1; make scumaker_pilotpi_arm64 upload"')]),s._v("\n")])])]),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("注解")]),s._v(" "),a("p",[s._v("mDNS is not supported within docker. You must specify the correct IP address everytime when uploading.")])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("注解")]),s._v(" "),a("p",[s._v("If your IDE doesn't support ninja build, "),a("code",[s._v("NO_NINJA_BUILD=1")]),s._v(" option will help. You can compile without uploading too - just remove the "),a("code",[s._v("upload")]),s._v(" target.")])]),s._v(" "),a("p",[s._v("It is also possible to just compile the code with command:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("./Tools/docker_run.sh "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"make scumaker_pilotpi_arm64"')]),s._v("\n")])])]),a("h4",{attrs:{id:"手动运行-px4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手动运行-px4"}},[s._v("#")]),s._v(" 手动运行 PX4")]),s._v(" "),a("p",[s._v("Connect over SSH and run it with:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" px4\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" taskset -c "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" ./bin/px4 -s pilotpi_mc.config\n")])])]),a("p",[s._v("Now PX4 is started with multi-rotor configuration.")]),s._v(" "),a("p",[s._v("If you encountered the similar problem executing "),a("code",[s._v("bin/px4")]),s._v(" on your Pi as following:")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("bin/px4: /lib/xxxx/xxxx: version `GLIBC_2.29' not found (required by bin/px4)\n")])])]),a("p",[s._v("Then you should compile with docker instead.")]),s._v(" "),a("p",[s._v("Before proceeding to next step, clear the existing building at first:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf build/scumaker_pilotpi_*\n")])])]),a("p",[s._v("Then go back to the corresponding chapter above.")]),s._v(" "),a("h3",{attrs:{id:"后期配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后期配置"}},[s._v("#")]),s._v(" 后期配置")]),s._v(" "),a("p",[s._v("Please refer to the instructions "),a("RouterLink",{attrs:{to:"/zh/flight_controller/raspberry_pi_pilotpi_rpios.html"}},[s._v("here")])],1)])}),[],!1,null,null,null);t.default=r.exports}}]);