(window.webpackJsonp=window.webpackJsonp||[]).push([[991],{2135:function(t,a,s){"use strict";s.r(a);var e=s(19),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"embedded-debugging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#embedded-debugging"}},[t._v("#")]),t._v(" Embedded Debugging")]),t._v(" "),s("h2",{attrs:{id:"handy-console-commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#handy-console-commands"}},[t._v("#")]),t._v(" Handy console commands")]),t._v(" "),s("p",[t._v("Below are a couple of commands which can be used in the "),s("a",{attrs:{href:"https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=139629410",target:"_blank",rel:"noopener noreferrer"}},[t._v("NuttShell"),s("OutboundLink")],1),t._v(" to get insights of the system.")]),t._v(" "),s("p",[t._v("This NSH command provides the remaining free memory:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("\n")])])]),s("p",[t._v("And the top command shows the stack usage per application:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("top\n")])])]),s("p",[t._v("Stack usage is calculated with stack coloring and thus is not the current usage, but the maximum since the start of the task.")]),t._v(" "),s("p",[t._v("To see what is running in the work queues and at what rate, use:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("work_queue status\n")])])]),s("p",[t._v("And to debug uORB topics:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("uorb top\n")])])]),s("p",[t._v("And to inspect a specific uORB topic:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("listener <topic_name>\n")])])]),s("h2",{attrs:{id:"hard-fault-debugging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hard-fault-debugging"}},[t._v("#")]),t._v(" Hard Fault Debugging")]),t._v(" "),s("p",[t._v("A hard fault is a state when a CPU executes an invalid instruction or accesses an invalid memory address. This might occur when key areas in RAM have been corrupted.")]),t._v(" "),s("h3",{attrs:{id:"video"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#video"}},[t._v("#")]),t._v(" Video")]),t._v(" "),s("p",[t._v("The following video demonstrates hardfault debugging on PX4 using Eclipse and a JTAG debugger. It was presented at the PX4 Developer Conference 2019.")]),t._v(" "),s("p"),s("div",{staticClass:"embed-responsive embed-responsive-16by9"},[s("iframe",{staticClass:"embed-responsive-item youtube-player",attrs:{type:"text/html",width:"640",height:"390",src:"https://www.youtube.com/embed/KZkAM_PVOi0",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:""}})]),s("p"),t._v(" "),s("h3",{attrs:{id:"debugging-hard-faults-in-nuttx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#debugging-hard-faults-in-nuttx"}},[t._v("#")]),t._v(" Debugging Hard Faults in NuttX")]),t._v(" "),s("p",[t._v("A typical scenario that can cause a hard fault is when the processor overwrites the stack and then the processor returns to an invalid address from the stack. This may be caused by a bug in code were a wild pointer corrupts the stack, or another task overwrites this task's stack.")]),t._v(" "),s("ul",[s("li",[t._v("NuttX maintains two stacks: The IRQ stack for interrupt processing and the user stack")]),t._v(" "),s("li",[t._v("The stack grows downward. So the highest address in the example below is 0x20021060, the size is 0x11f4 (4596 bytes) and consequently the lowest address is 0x2001fe6c.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" build/px4_sitl_default/tmp\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("HEAPPROFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/tmp/heapprofile.hprof\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("HEAP_PROFILE_TIME_INTERVAL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n")])])]),s("p",[t._v("To decode the hard fault, load the "),s("em",[t._v("exact")]),t._v(" binary into the debugger:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LD_PRELOAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/lib64/libtcmalloc.so "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/src/firmware/posix/px4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/posix-configs/SITL/init/lpe/iris\npprof --pdf "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/src/firmware/posix/px4 /tmp/heapprofile.hprof.0001.heap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" heap.pdf\n")])])]),s("p",[t._v("Then in the GDB prompt, start with the last instructions in R8, with the first address in flash (recognizable because it starts with "),s("code",[t._v("0x080")]),t._v(", the first is "),s("code",[t._v("0x0808439f")]),t._v("). This is typically the case when key areas in RAM have been corrupted. So one of the last steps before the hard fault was when "),s("code",[t._v("mavlink_log.c")]),t._v(" tried to publish something,")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LD_PRELOAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/lib/libtcmalloc.so "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/src/firmware/posix/px4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/posix-configs/SITL/init/lpe/iris\ngoogle-pprof --pdf "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/src/firmware/posix/px4 /tmp/heapprofile.hprof.0001.heap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" heap.pdf\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gdb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" info line *0x08087c4e\nLine "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("311")]),t._v(" of "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../src/modules/uORB/uORBDevices_nuttx.cpp"')]),t._v("\n   starts at address 0x8087c4e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("uORB::DeviceNode::publish"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("orb_metadata const*, void*, void const*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("+"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("\n   and ends at 0x8087c52 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("uORB::DeviceNode::publish"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("orb_metadata const*, void*, void const*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("+"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("6")]),t._v(">")]),t._v(".\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);