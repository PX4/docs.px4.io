(window.webpackJsonp=window.webpackJsonp||[]).push([[940],{1840:function(t,s,a){"use strict";a.r(s);var e=a(19),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"manual-control-setpoint-uorb-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manual-control-setpoint-uorb-message"}},[t._v("#")]),t._v(" manual_control_setpoint (UORB message)")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/msg/manual_control_setpoint.msg",target:"_blank",rel:"noopener noreferrer"}},[t._v("source file"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("uint64 timestamp\t\t\t# time since system "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("microseconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nuint64 timestamp_sample                # the timestamp of the raw "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("microseconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nuint8 SOURCE_RC "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\t\t\t# radio control\nuint8 SOURCE_MAVLINK_0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\t\t# mavlink instance "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nuint8 SOURCE_MAVLINK_1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\t\t# mavlink instance "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nuint8 SOURCE_MAVLINK_2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\t\t# mavlink instance "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nuint8 SOURCE_MAVLINK_3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\t\t# mavlink instance "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\nuint8 data_source\t\t # where this input is coming from\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("Any of the channels may not be available and be set to NaN")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("to")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("indicate that it does not contain valid data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("The variable names follow the definition of the")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("MANUAL_CONTROL mavlink message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("The "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" range is from "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mavlink message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("The range "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the z variable is defined from "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("The z field of")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("the")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("MANUAL_CONTROL mavlink message is defined from "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\nfloat32 x\t\t\t # stick position in x direction "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("general corresponds to forward"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("back motion or pitch of vehicle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])])]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("general a positive value means forward or negative pitch and")])]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("negative value means backward or positive pitch")])]),t._v("\n\nfloat32 y\t\t\t # stick position in y direction "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("general corresponds to right"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("left motion or roll of vehicle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])])]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("general a positive value means right or positive roll and")])]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("negative value means left or negative roll")])]),t._v("\n\nfloat32 z\t\t\t # throttle stick position "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("general corresponds to up"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("down motion or thrust of vehicle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])])]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("general the value corresponds to the demanded throttle by the user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])])]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("the input is used "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" setting the setpoint of a vertical position")])]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("controller")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("any value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" means up and any value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" means down")])]),t._v("\n\nfloat32 r\t\t\t # yaw stick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("twist position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("general corresponds to the righthand rotation around the vertical")])]),t._v("\n\t\t\t\t # "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("downwards"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" axis of the vehicle\n\nfloat32 flaps\t\t\t # flap position\n\nfloat32 aux1\t\t\t # "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" camera yaw "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" azimuth\nfloat32 aux2\t\t\t # "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" camera pitch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" tilt\nfloat32 aux3\t\t\t # "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" camera trigger\nfloat32 aux4\t\t\t # "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" camera roll\nfloat32 aux5\t\t\t # "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" payload drop\nfloat32 aux6\n\n\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);