(window.webpackJsonp=window.webpackJsonp||[]).push([[1797],{3212:function(a,e,t){"use strict";t.r(e);var s=t(19),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"uavcan-parameter-value-uorb-message"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uavcan-parameter-value-uorb-message"}},[a._v("#")]),a._v(" uavcan_parameter_value (UORB message)")]),a._v(" "),t("p",[a._v("UAVCAN-MAVLink parameter bridge response type")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/msg/uavcan_parameter_value.msg",target:"_blank",rel:"noopener noreferrer"}},[a._v("source file"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[a._v("UAVCAN"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("MAVLink parameter bridge response type")])]),a._v("\nuint64 timestamp        # time since system "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("microseconds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nuint8 node_id           # UAVCAN node ID mapped from MAVLink component ID\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("17")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" param_id       # MAVLink"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("UAVCAN parameter name\nint16 param_index       # parameter index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" known\nuint16 param_count      # number of parameters exposed by the node\nuint8 param_type        # MAVLink parameter type\nint64 int_value         # current value "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" param_type is "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("like\nfloat32 real_value      # current value "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" param_type is "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("like\n\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);